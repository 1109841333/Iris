// ["ChangeLog.txt" version=14.0.6 encoding="UTF-8" 2020.07.30 05:20:22]
// DO NOT EDIT THIS FILE. You need it to interpret exception stack traces.


Package: com	NameNotChanged
Package: com.google	=>	com.a
Package: com.google.gson	=>	com.a.a
Package: com.google.gson.annotations	=>	com.a.a.d
Package: com.google.gson.internal	=>	com.a.a.b
Package: com.google.gson.internal.bind	=>	com.a.a.b.b
Package: com.google.gson.internal.bind.util	=>	com.a.a.b.b.a
Package: com.google.gson.internal.reflect	=>	com.a.a.b.a
Package: com.google.gson.reflect	=>	com.a.a.a
Package: com.google.gson.stream	=>	com.a.a.c
Package: com.volmit	NameNotChanged
Package: com.volmit.iris	NameNotChanged
Package: com.volmit.iris.generator	=>	com.volmit.iris.d
Package: com.volmit.iris.layer	=>	com.volmit.iris.a
Package: com.volmit.iris.layer.post	=>	com.volmit.iris.a.a
Package: com.volmit.iris.object	=>	com.volmit.iris.b
Package: com.volmit.iris.object.atomics	=>	com.volmit.iris.b.a
Package: com.volmit.iris.tetris	=>	com.volmit.iris.e
Package: com.volmit.iris.util	=>	com.volmit.iris.f
Package: com.volmit.iris.wand	=>	com.volmit.iris.c
Package: javax	=>	a
Package: javax.vecmath	=>	a.a
Package: org	=>	b
Package: org.slf4j	=>	b.a
Package: org.slf4j.helpers	=>	b.a.a
Package: org.slf4j.spi	=>	b.a.b
Package: org.zeroturnaround	=>	b.b
Package: org.zeroturnaround.zip	=>	b.b.a
Package: org.zeroturnaround.zip.commons	=>	b.b.a.d
Package: org.zeroturnaround.zip.extra	=>	b.b.a.c
Package: org.zeroturnaround.zip.timestamps	=>	b.b.a.a
Package: org.zeroturnaround.zip.transform	=>	b.b.a.b

Class: final com.google.gson.DefaultDateTypeAdapter	=>	com.a.a.q
	Source: "DefaultDateTypeAdapter.java"
	FieldsOf: com.google.gson.DefaultDateTypeAdapter
		private final java.util.List dateFormats	=>	a
		private final java.lang.Class dateType	=>	c
	MethodsOf: com.google.gson.DefaultDateTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(java.lang.Class, int, int) 	SignatureNotChanged
		void <init>(java.lang.Class, java.lang.String) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.util.Date deserializeToDate(java.lang.String)	=>	b(java.lang.String)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Date read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public java.lang.String toString() 	SignatureNotChanged
		private static java.lang.Class verifyDateType(java.lang.Class)	=>	a(java.lang.Class)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Date)	=>	a(com.a.a.c.d, java.util.Date)
	LineNumbersOf: com.google.gson.DefaultDateTypeAdapter
		44	=>	7 and 20
		54	=>	32 and 33
		67	=>	43
		68	=>	12
		69	=>	15
		70	=>	24
		71	=>	52
		73	=>	26
		87	=>	29
		88	=>	11
		90	=>	47
		91	=>	16
		92	=>	6
		93	=>	13
		94	=>	1
		96	=>	22
		97	=>	53
		99	=>	34
		102	=>	2
		103	=>	50
		105	=>	42
		112	=>	8
		113	=>	54
		114	=>	48
		116	=>	49
		117	=>	41
		118	=>	3
		119	=>	36
		120	=>	21
		124	=>	35
		125	=>	40
		126	=>	18
		128	=>	37
		129	=>	39
		130	=>	28
		131	=>	44
		132	=>	5
		133	=>	46
		134	=>	10
		137	=>	30
		142	=>	19
		143	=>	55
		145	=>	38
		146	=>	9
		147	=>	14
		149	=>	27
		150	=>	17
		151	=>	51
		153	=>	31
		158	=>	25
		159	=>	45
		160	=>	23
		162	=>	4

Class: public abstract com.google.gson.ExclusionStrategy	=>	com.a.a.l
	Source: "ExclusionStrategy.java"
	FieldsOf: com.google.gson.ExclusionStrategy
	MethodsOf: com.google.gson.ExclusionStrategy
		public abstract boolean shouldSkipClass(java.lang.Class)	=>	a(java.lang.Class)
		public abstract boolean shouldSkipField(com.google.gson.FieldAttributes)	=>	a(com.a.a.B)
	LineNumbersOf: com.google.gson.ExclusionStrategy

Class: public final com.google.gson.FieldAttributes	=>	com.a.a.B
	Source: "FieldAttributes.java"
	FieldsOf: com.google.gson.FieldAttributes
		private final java.lang.reflect.Field field	=>	a
	MethodsOf: com.google.gson.FieldAttributes
		public void <init>(java.lang.reflect.Field) 	SignatureNotChanged
		public java.lang.annotation.Annotation getAnnotation(java.lang.Class)	=>	a(java.lang.Class)
		public java.util.Collection getAnnotations()	=>	e()
		public java.lang.Class getDeclaredClass()	=>	c()
		public java.lang.reflect.Type getDeclaredType()	=>	a()
		public java.lang.Class getDeclaringClass()	=>	b()
		public java.lang.String getName()	=>	d()
		public boolean hasModifier(int)	=>	a(int)
	LineNumbersOf: com.google.gson.FieldAttributes
		44	=>	1
		45	=>	10
		46	=>	6
		47	=>	8
		53	=>	9
		60	=>	11
		80	=>	5
		100	=>	2
		111	=>	7
		121	=>	3
		135	=>	4

Class: public abstract enum com.google.gson.FieldNamingPolicy	=>	com.a.a.v
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy
		private static final synthetic com.google.gson.FieldNamingPolicy[] $VALUES	=>	a
		public static final enum com.google.gson.FieldNamingPolicy IDENTITY	NameNotChanged
		public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES	NameNotChanged
		public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS	NameNotChanged
		public static final enum com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES	NameNotChanged
		public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE	NameNotChanged
		public static final enum com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES	NameNotChanged
	MethodsOf: com.google.gson.FieldNamingPolicy
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		synthetic void <init>(java.lang.String, int, com.google.gson.FieldNamingPolicy$1) 	SignatureNotChanged
		private static com.google.gson.JsonParseException a(com.google.gson.JsonParseException) 	SignatureNotChanged
		private static java.lang.String modifyString(char, java.lang.String, int)	=>	a(char, java.lang.String, int)
		static java.lang.String separateCamelCase(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		static java.lang.String upperCaseFirstLetter(java.lang.String)	=>	a(java.lang.String)
		public static com.google.gson.FieldNamingPolicy valueOf(java.lang.String) 	SignatureNotChanged
		public static com.google.gson.FieldNamingPolicy[] values() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.FieldNamingPolicy
		31	=>	1, 19, 25, 27 and 28
		37	=>	32
		53	=>	18
		72	=>	8
		90	=>	17
		113	=>	10
		136	=>	29
		147	=>	7
		148	=>	9 and 21
		149	=>	24
		150	=>	13
		151	=>	36
		153	=>	30
		155	=>	5
		162	=>	2
		163	=>	15
		164	=>	31
		165	=>	22
		167	=>	12
		168	=>	34
		169	=>	35
		172	=>	33
		173	=>	4
		176	=>	20
		177	=>	11
		178	=>	3
		180	=>	6
		185	=>	16 and 26
		186	=>	23
		187	=>	14

Class: final enum com.google.gson.FieldNamingPolicy$1	=>	com.a.a.v$a
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$1
	MethodsOf: com.google.gson.FieldNamingPolicy$1
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$1
		37	=>	1
		39	=>	2

Class: final enum com.google.gson.FieldNamingPolicy$2	=>	com.a.a.v$b
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$2
	MethodsOf: com.google.gson.FieldNamingPolicy$2
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$2
		53	=>	1
		55	=>	2

Class: final enum com.google.gson.FieldNamingPolicy$3	=>	com.a.a.v$c
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$3
	MethodsOf: com.google.gson.FieldNamingPolicy$3
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$3
		72	=>	1
		74	=>	2

Class: final enum com.google.gson.FieldNamingPolicy$4	=>	com.a.a.v$d
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$4
	MethodsOf: com.google.gson.FieldNamingPolicy$4
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$4
		90	=>	1
		92	=>	2

Class: final enum com.google.gson.FieldNamingPolicy$5	=>	com.a.a.v$e
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$5
	MethodsOf: com.google.gson.FieldNamingPolicy$5
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$5
		113	=>	1
		115	=>	2

Class: final enum com.google.gson.FieldNamingPolicy$6	=>	com.a.a.v$f
	Source: "FieldNamingPolicy.java"
	FieldsOf: com.google.gson.FieldNamingPolicy$6
	MethodsOf: com.google.gson.FieldNamingPolicy$6
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingPolicy$6
		136	=>	1
		138	=>	2

Class: public abstract com.google.gson.FieldNamingStrategy	=>	com.a.a.t
	Source: "FieldNamingStrategy.java"
	FieldsOf: com.google.gson.FieldNamingStrategy
	MethodsOf: com.google.gson.FieldNamingStrategy
		public abstract java.lang.String translateName(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.FieldNamingStrategy

Class: public final com.google.gson.Gson	=>	com.a.a.y
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson
		private static final com.google.gson.reflect.TypeToken NULL_KEY_SURROGATE	=>	h
		final java.util.List builderFactories	=>	e
		final java.util.List builderHierarchyFactories	=>	n
		private final java.lang.ThreadLocal calls	=>	k
		final boolean complexMapKeySerialization	=>	r
		private final com.google.gson.internal.ConstructorConstructor constructorConstructor	=>	m
		final java.lang.String datePattern	=>	b
		final int dateStyle	=>	j
		final com.google.gson.internal.Excluder excluder	=>	c
		final java.util.List factories	=>	v
		final com.google.gson.FieldNamingStrategy fieldNamingStrategy	=>	l
		final boolean generateNonExecutableJson	=>	q
		final boolean htmlSafe	=>	g
		final java.util.Map instanceCreators	=>	i
		private final com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory	=>	d
		final boolean lenient	=>	a
		final com.google.gson.LongSerializationPolicy longSerializationPolicy	=>	t
		final boolean prettyPrinting	=>	o
		final boolean serializeNulls	=>	f
		final boolean serializeSpecialFloatingPointValues	=>	s
		final int timeStyle	=>	u
		private final java.util.Map typeTokenCache	=>	p
	MethodsOf: com.google.gson.Gson
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.Excluder, com.google.gson.FieldNamingStrategy, java.util.Map, boolean, boolean, boolean, boolean, boolean, boolean, boolean, com.google.gson.LongSerializationPolicy, java.lang.String, int, int, java.util.List, java.util.List, java.util.List) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private static void assertFullConsumption(java.lang.Object, com.google.gson.stream.JsonReader)	=>	a(java.lang.Object, com.a.a.c.e)
		private static com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter)	=>	b(com.a.a.p)
		private static com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter)	=>	a(com.a.a.p)
		static void checkValidFloatingPoint(double)	=>	a(double)
		private com.google.gson.TypeAdapter doubleAdapter(boolean)	=>	b(boolean)
		public com.google.gson.internal.Excluder excluder()	=>	e()
		public com.google.gson.FieldNamingStrategy fieldNamingStrategy()	=>	d()
		private com.google.gson.TypeAdapter floatAdapter(boolean)	=>	a(boolean)
		public java.lang.Object fromJson(com.google.gson.JsonElement, java.lang.Class)	=>	a(com.a.a.g, java.lang.Class)
		public java.lang.Object fromJson(com.google.gson.JsonElement, java.lang.reflect.Type)	=>	a(com.a.a.g, java.lang.reflect.Type)
		public java.lang.Object fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type)	=>	a(com.a.a.c.e, java.lang.reflect.Type)
		public java.lang.Object fromJson(java.io.Reader, java.lang.Class)	=>	a(java.io.Reader, java.lang.Class)
		public java.lang.Object fromJson(java.io.Reader, java.lang.reflect.Type)	=>	a(java.io.Reader, java.lang.reflect.Type)
		public java.lang.Object fromJson(java.lang.String, java.lang.Class)	=>	a(java.lang.String, java.lang.Class)
		public java.lang.Object fromJson(java.lang.String, java.lang.reflect.Type)	=>	a(java.lang.String, java.lang.reflect.Type)
		public com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)	=>	a(com.a.a.a.a)
		public com.google.gson.TypeAdapter getAdapter(java.lang.Class)	=>	a(java.lang.Class)
		public com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.s, com.a.a.a.a)
		public boolean htmlSafe()	=>	c()
		private static com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy)	=>	a(com.a.a.C)
		public com.google.gson.GsonBuilder newBuilder()	=>	b()
		public com.google.gson.stream.JsonReader newJsonReader(java.io.Reader)	=>	a(java.io.Reader)
		public com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)	=>	a(java.io.Writer)
		public boolean serializeNulls()	=>	a()
		public java.lang.String toJson(com.google.gson.JsonElement)	=>	a(com.a.a.g)
		public void toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)	=>	a(com.a.a.g, com.a.a.c.d)
		public void toJson(com.google.gson.JsonElement, java.lang.Appendable)	=>	a(com.a.a.g, java.lang.Appendable)
		public java.lang.String toJson(java.lang.Object)	=>	b(java.lang.Object)
		public void toJson(java.lang.Object, java.lang.Appendable)	=>	a(java.lang.Object, java.lang.Appendable)
		public java.lang.String toJson(java.lang.Object, java.lang.reflect.Type)	=>	b(java.lang.Object, java.lang.reflect.Type)
		public void toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter)	=>	a(java.lang.Object, java.lang.reflect.Type, com.a.a.c.d)
		public void toJson(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)	=>	a(java.lang.Object, java.lang.reflect.Type, java.lang.Appendable)
		public com.google.gson.JsonElement toJsonTree(java.lang.Object)	=>	a(java.lang.Object)
		public com.google.gson.JsonElement toJsonTree(java.lang.Object, java.lang.reflect.Type)	=>	a(java.lang.Object, java.lang.reflect.Type)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.Gson
		114	=>	265
		124	=>	136
		127	=>	116
		186	=>	14 and 148
		187	=>	149
		191	=>	110
		192	=>	139
		193	=>	175
		202	=>	273
		203	=>	140
		204	=>	144
		205	=>	234
		206	=>	84
		207	=>	4
		208	=>	112
		209	=>	40
		210	=>	1
		211	=>	123
		212	=>	133
		213	=>	250
		214	=>	115
		215	=>	64
		216	=>	119
		217	=>	189
		218	=>	276
		219	=>	62
		221	=>	233
		224	=>	212
		225	=>	69
		228	=>	51
		231	=>	166
		234	=>	191
		235	=>	177
		236	=>	256
		237	=>	237
		238	=>	240
		239	=>	258
		240	=>	244
		241	=>	100 and 170
		242	=>	122
		243	=>	151 and 279
		244	=>	35
		245	=>	26
		246	=>	241
		247	=>	217
		248	=>	260
		249	=>	83
		250	=>	266
		251	=>	155
		252	=>	90
		253	=>	58
		254	=>	55
		255	=>	134
		256	=>	106
		257	=>	190
		258	=>	152
		259	=>	232
		260	=>	52
		261	=>	25
		262	=>	222
		263	=>	239
		264	=>	216
		265	=>	132
		266	=>	24
		267	=>	154
		268	=>	30
		269	=>	153
		272	=>	128
		273	=>	259
		274	=>	81
		275	=>	49
		276	=>	85
		277	=>	65
		280	=>	41
		281	=>	137
		290	=>	28
		294	=>	172
		298	=>	6
		302	=>	93
		306	=>	33
		310	=>	275
		311	=>	73
		313	=>	29
		334	=>	56
		335	=>	243
		337	=>	143
		358	=>	236
		359	=>	159
		363	=>	53
		366	=>	223
		367	=>	211
		369	=>	96
		388	=>	201 and 264
		396	=>	181
		400	=>	108 and 124
		423	=>	185
		434	=>	105
		435	=>	199
		436	=>	251
		439	=>	215
		440	=>	282
		441	=>	78
		442	=>	267
		443	=>	168
		444	=>	130
		448	=>	60
		449	=>	193
		450	=>	88
		454	=>	150
		455	=>	46
		457	=>	117
		458	=>	158
		459	=>	173
		460	=>	255
		461	=>	270
		462	=>	68 and 146
		464	=>	262
		465	=>	198
		467	=>	95 and 206
		469	=>	209 and 277
		470	=>	23 and 101
		528	=>	171
		529	=>	221
		532	=>	203
		533	=>	142
		534	=>	138
		535	=>	141
		536	=>	121
		541	=>	31
		542	=>	160
		543	=>	281
		545	=>	195
		546	=>	208
		556	=>	10
		573	=>	178
		574	=>	91
		576	=>	87
		596	=>	94
		597	=>	66
		598	=>	145
		615	=>	89
		616	=>	247
		618	=>	230
		637	=>	42
		638	=>	218
		639	=>	125
		657	=>	197
		658	=>	15
		660	=>	280
		662	=>	227
		682	=>	131
		683	=>	27
		684	=>	147
		685	=>	200
		686	=>	180
		687	=>	194
		696	=>	272
		697	=>	278
		698	=>	274
		699	=>	161
		700	=>	17
		701	=>	37
		702	=>	135
		704	=>	187
		705	=>	235
		706	=>	253
		707	=>	242
		708	=>	38
		710	=>	192 and 205
		711	=>	82 and 169
		712	=>	47 and 226
		713	=>	127
		714	=>	45
		724	=>	156
		725	=>	224
		726	=>	228
		739	=>	79
		740	=>	54
		741	=>	113
		742	=>	188
		743	=>	59
		744	=>	70
		750	=>	18
		751	=>	57
		753	=>	75
		754	=>	22
		755	=>	176
		757	=>	20
		758	=>	120
		765	=>	50
		766	=>	157
		767	=>	179
		775	=>	163
		776	=>	80
		777	=>	72
		778	=>	214
		779	=>	229
		780	=>	109
		782	=>	165
		783	=>	103
		784	=>	36
		785	=>	183
		786	=>	21
		788	=>	44 and 261
		789	=>	13 and 184
		790	=>	12 and 245
		791	=>	254
		792	=>	225
		813	=>	48
		814	=>	39
		837	=>	252
		838	=>	204
		840	=>	19
		841	=>	162
		842	=>	246
		864	=>	71
		865	=>	249
		866	=>	186
		867	=>	219
		891	=>	118
		892	=>	174
		893	=>	43
		894	=>	167
		899	=>	263
		900	=>	2
		902	=>	67
		903	=>	207
		904	=>	210
		905	=>	11
		906	=>	98
		907	=>	182
		919	=>	114
		920	=>	257
		921	=>	92
		923	=>	231
		924	=>	3
		925	=>	5
		926	=>	99
		927	=>	74
		928	=>	16 and 269
		929	=>	129
		934	=>	107
		935	=>	7 and 271
		937	=>	63
		938	=>	248
		939	=>	104
		940	=>	111
		942	=>	196
		943	=>	32
		944	=>	164
		946	=>	8, 61 and 268
		967	=>	102
		968	=>	220
		991	=>	97
		992	=>	86
		994	=>	213
		1024	=>	202 and 238
		1025	=>	76
		1026	=>	34
		1027	=>	126
		1028	=>	9
		1029	=>	77

Class: com.google.gson.Gson$1	=>	com.a.a.y$d
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$1
		final synthetic com.google.gson.Gson this$0	NameNotChanged
	MethodsOf: com.google.gson.Gson$1
		void <init>(com.google.gson.Gson) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Double read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.Gson$1
		313	=>	10, 11 and 13
		315	=>	7
		316	=>	8
		317	=>	2
		319	=>	12
		322	=>	4
		323	=>	1
		324	=>	5
		326	=>	9
		327	=>	6
		328	=>	3
		329	=>	14

Class: com.google.gson.Gson$2	=>	com.a.a.y$e
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$2
		final synthetic com.google.gson.Gson this$0	NameNotChanged
	MethodsOf: com.google.gson.Gson$2
		void <init>(com.google.gson.Gson) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Float read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.Gson$2
		337	=>	6, 7 and 11
		339	=>	8
		340	=>	1
		341	=>	3
		343	=>	14
		346	=>	4
		347	=>	13
		348	=>	10
		350	=>	2
		351	=>	9
		352	=>	5
		353	=>	12

Class: final com.google.gson.Gson$3	=>	com.a.a.y$b
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$3
	MethodsOf: com.google.gson.Gson$3
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.Gson$3
		369	=>	1, 4 and 12
		371	=>	10
		372	=>	7
		373	=>	8
		375	=>	6
		378	=>	3
		379	=>	2
		380	=>	9
		382	=>	11
		383	=>	5

Class: final com.google.gson.Gson$4	=>	com.a.a.y$c
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$4
		final synthetic com.google.gson.TypeAdapter val$longAdapter	NameNotChanged
	MethodsOf: com.google.gson.Gson$4
		void <init>(com.google.gson.TypeAdapter) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.concurrent.atomic.AtomicLong)	=>	a(com.a.a.c.d, java.util.concurrent.atomic.AtomicLong)
	LineNumbersOf: com.google.gson.Gson$4
		388	=>	3, 6 and 7
		390	=>	5
		391	=>	1
		393	=>	2
		394	=>	4

Class: final com.google.gson.Gson$5	=>	com.a.a.y$a
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$5
		final synthetic com.google.gson.TypeAdapter val$longAdapter	NameNotChanged
	MethodsOf: com.google.gson.Gson$5
		void <init>(com.google.gson.TypeAdapter) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.concurrent.atomic.AtomicLongArray)	=>	a(com.a.a.c.d, java.util.concurrent.atomic.AtomicLongArray)
	LineNumbersOf: com.google.gson.Gson$5
		400	=>	2, 5 and 15
		402	=>	1
		403	=>	3 and 17
		404	=>	13
		406	=>	21
		407	=>	18
		409	=>	22
		410	=>	6
		411	=>	20
		412	=>	16
		413	=>	12
		414	=>	10
		415	=>	11
		416	=>	14
		417	=>	9
		418	=>	8 and 19
		419	=>	7
		421	=>	4

Class: com.google.gson.Gson$FutureTypeAdapter	=>	com.a.a.y$f
	Source: "Gson.java"
	FieldsOf: com.google.gson.Gson$FutureTypeAdapter
		private com.google.gson.TypeAdapter delegate	=>	a
	MethodsOf: com.google.gson.Gson$FutureTypeAdapter
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void setDelegate(com.google.gson.TypeAdapter)	=>	a(com.a.a.p)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.Gson$FutureTypeAdapter
		997	=>	12
		1001	=>	7
		1002	=>	6
		1004	=>	10
		1005	=>	9
		1008	=>	5
		1009	=>	4
		1011	=>	8
		1015	=>	3
		1016	=>	11
		1018	=>	1
		1019	=>	2

Class: public final com.google.gson.GsonBuilder	=>	com.a.a.f
	Source: "GsonBuilder.java"
	FieldsOf: com.google.gson.GsonBuilder
		private boolean complexMapKeySerialization	=>	f
		private java.lang.String datePattern	=>	b
		private int dateStyle	=>	l
		private boolean escapeHtmlChars	=>	p
		private com.google.gson.internal.Excluder excluder	=>	o
		private final java.util.List factories	=>	a
		private com.google.gson.FieldNamingStrategy fieldNamingPolicy	=>	n
		private boolean generateNonExecutableJson	=>	c
		private final java.util.List hierarchyFactories	=>	e
		private final java.util.Map instanceCreators	=>	i
		private boolean lenient	=>	m
		private com.google.gson.LongSerializationPolicy longSerializationPolicy	=>	d
		private boolean prettyPrinting	=>	k
		private boolean serializeNulls	=>	j
		private boolean serializeSpecialFloatingPointValues	=>	g
		private int timeStyle	=>	h
	MethodsOf: com.google.gson.GsonBuilder
		public void <init>() 	SignatureNotChanged
		void <init>(com.google.gson.Gson) 	SignatureNotChanged
		private static com.google.gson.JsonParseException a(com.google.gson.JsonParseException) 	SignatureNotChanged
		public com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)	=>	b(com.a.a.l)
		public com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)	=>	a(com.a.a.l)
		private void addTypeAdaptersForDate(java.lang.String, int, int, java.util.List)	=>	a(java.lang.String, int, int, java.util.List)
		public com.google.gson.Gson create()	=>	d()
		public com.google.gson.GsonBuilder disableHtmlEscaping()	=>	g()
		public com.google.gson.GsonBuilder disableInnerClassSerialization()	=>	b()
		public com.google.gson.GsonBuilder enableComplexMapKeySerialization()	=>	j()
		public com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])	=>	a(int[])
		public com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()	=>	a()
		public com.google.gson.GsonBuilder generateNonExecutableJson()	=>	e()
		public com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type, java.lang.Object)	=>	a(java.lang.reflect.Type, java.lang.Object)
		public com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)	=>	a(com.a.a.s)
		public com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class, java.lang.Object)	=>	a(java.lang.Class, java.lang.Object)
		public com.google.gson.GsonBuilder serializeNulls()	=>	i()
		public com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()	=>	f()
		public com.google.gson.GsonBuilder setDateFormat(int)	=>	a(int)
		public com.google.gson.GsonBuilder setDateFormat(int, int)	=>	a(int, int)
		public com.google.gson.GsonBuilder setDateFormat(java.lang.String)	=>	a(java.lang.String)
		public com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])	=>	a(com.a.a.l[])
		public com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)	=>	a(com.a.a.v)
		public com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)	=>	a(com.a.a.t)
		public com.google.gson.GsonBuilder setLenient()	=>	c()
		public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)	=>	a(com.a.a.C)
		public com.google.gson.GsonBuilder setPrettyPrinting()	=>	h()
		public com.google.gson.GsonBuilder setVersion(double)	=>	a(double)
	LineNumbersOf: com.google.gson.GsonBuilder
		79	=>	30 and 48
		80	=>	25 and 66
		81	=>	11 and 112
		82	=>	76 and 118
		84	=>	31 and 83
		86	=>	22 and 108
		87	=>	52 and 123
		89	=>	41 and 70
		90	=>	14 and 62
		91	=>	93 and 117
		92	=>	12 and 124
		93	=>	15 and 102
		94	=>	6 and 110
		95	=>	26 and 111
		96	=>	21 and 82
		104	=>	97
		105	=>	120
		113	=>	104
		114	=>	40
		115	=>	27
		116	=>	64
		117	=>	18
		118	=>	51
		119	=>	128
		120	=>	90
		121	=>	46
		122	=>	68
		123	=>	42
		124	=>	84
		125	=>	61
		126	=>	55
		127	=>	29
		128	=>	133
		129	=>	33
		130	=>	35
		140	=>	75
		141	=>	49
		156	=>	74
		157	=>	131
		170	=>	5
		171	=>	95
		181	=>	54
		182	=>	58
		193	=>	113
		194	=>	44
		274	=>	127
		275	=>	119
		285	=>	63
		286	=>	17
		298	=>	72
		299	=>	19
		311	=>	89
		312	=>	24
		324	=>	1
		325	=>	13
		339	=>	39 and 87
		340	=>	69
		342	=>	32
		358	=>	8
		359	=>	57
		375	=>	115
		376	=>	7
		386	=>	10
		387	=>	4
		399	=>	125
		400	=>	59
		411	=>	2
		412	=>	36
		433	=>	81
		434	=>	45
		452	=>	71
		453	=>	116
		454	=>	94
		473	=>	121
		474	=>	67
		475	=>	129
		476	=>	9
		497	=>	107
		501	=>	38
		502	=>	92
		504	=>	114
		505	=>	34
		506	=>	47
		508	=>	88
		509	=>	99
		511	=>	100
		523	=>	91
		524	=>	23
		543	=>	53
		546	=>	65
		547	=>	130
		549	=>	80
		550	=>	16
		552	=>	103
		576	=>	105
		577	=>	37
		587	=>	20
		588	=>	73
		589	=>	132
		591	=>	85
		592	=>	50
		593	=>	56
		595	=>	106
		597	=>	122
		611	=>	43
		612	=>	28
		613	=>	101
		614	=>	86
		615	=>	77
		616	=>	60
		617	=>	3
		618	=>	126
		620	=>	79
		623	=>	96
		624	=>	98
		625	=>	109
		626	=>	78

Class: public abstract com.google.gson.InstanceCreator	=>	com.a.a.z
	Source: "InstanceCreator.java"
	FieldsOf: com.google.gson.InstanceCreator
	MethodsOf: com.google.gson.InstanceCreator
		public abstract java.lang.Object createInstance(java.lang.reflect.Type)	=>	a(java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.InstanceCreator

Class: public final com.google.gson.JsonArray	=>	com.a.a.h
	Source: "JsonArray.java"
	FieldsOf: com.google.gson.JsonArray
		private final java.util.List elements	=>	a
	MethodsOf: com.google.gson.JsonArray
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void add(com.google.gson.JsonElement)	=>	a(com.a.a.g)
		public void add(java.lang.Boolean)	=>	a(java.lang.Boolean)
		public void add(java.lang.Character)	=>	a(java.lang.Character)
		public void add(java.lang.Number)	=>	a(java.lang.Number)
		public void add(java.lang.String)	=>	a(java.lang.String)
		public void addAll(com.google.gson.JsonArray)	=>	a(com.a.a.h)
		private static java.lang.IllegalStateException b(java.lang.IllegalStateException) 	SignatureNotChanged
		public boolean contains(com.google.gson.JsonElement)	=>	b(com.a.a.g)
		public com.google.gson.JsonArray deepCopy()	=>	w()
		public bridge synthetic com.google.gson.JsonElement deepCopy()	=>	c()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.google.gson.JsonElement get(int)	=>	a(int)
		public java.math.BigDecimal getAsBigDecimal()	=>	i()
		public java.math.BigInteger getAsBigInteger()	=>	j()
		public boolean getAsBoolean()	=>	o()
		public byte getAsByte()	=>	d()
		public char getAsCharacter()	=>	h()
		public double getAsDouble()	=>	k()
		public float getAsFloat()	=>	s()
		public int getAsInt()	=>	t()
		public long getAsLong()	=>	q()
		public java.lang.Number getAsNumber()	=>	e()
		public short getAsShort()	=>	v()
		public java.lang.String getAsString()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public boolean remove(com.google.gson.JsonElement)	=>	c(com.a.a.g)
		public com.google.gson.JsonElement remove(int)	=>	b(int)
		public com.google.gson.JsonElement set(int, com.google.gson.JsonElement)	=>	a(int, com.a.a.g)
		public int size()	=>	x()
	LineNumbersOf: com.google.gson.JsonArray
		33	=>	24
		39	=>	51
		40	=>	17
		41	=>	21
		43	=>	27
		44	=>	4
		45	=>	37
		53	=>	58
		54	=>	40
		55	=>	69
		56	=>	25
		57	=>	53
		58	=>	44
		60	=>	41
		69	=>	12
		70	=>	29
		78	=>	32
		79	=>	56
		87	=>	73
		88	=>	57
		96	=>	72
		97	=>	8
		105	=>	55
		106	=>	13
		108	=>	47
		109	=>	28
		117	=>	38
		118	=>	67
		129	=>	18
		140	=>	42
		153	=>	60
		163	=>	49
		172	=>	2
		182	=>	50
		194	=>	33
		207	=>	61
		208	=>	64
		210	=>	19
		223	=>	16
		224	=>	26
		226	=>	10
		239	=>	7
		240	=>	22
		242	=>	71
		256	=>	70
		257	=>	68
		259	=>	46
		273	=>	54
		274	=>	39
		276	=>	11
		289	=>	14
		290	=>	66
		292	=>	20
		305	=>	36
		306	=>	45
		308	=>	9
		321	=>	35
		322	=>	65
		324	=>	1
		329	=>	31
		330	=>	15
		332	=>	5
		337	=>	23
		338	=>	6
		340	=>	62
		353	=>	63
		354	=>	52
		356	=>	34
		369	=>	43
		370	=>	30
		372	=>	59
		377	=>	48
		382	=>	3

Class: public abstract com.google.gson.JsonDeserializationContext	=>	com.a.a.A
	Source: "JsonDeserializationContext.java"
	FieldsOf: com.google.gson.JsonDeserializationContext
	MethodsOf: com.google.gson.JsonDeserializationContext
		public abstract java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)	=>	a(com.a.a.g, java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.JsonDeserializationContext

Class: public abstract com.google.gson.JsonDeserializer	=>	com.a.a.w
	Source: "JsonDeserializer.java"
	FieldsOf: com.google.gson.JsonDeserializer
	MethodsOf: com.google.gson.JsonDeserializer
		public abstract java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)	=>	a(com.a.a.g, java.lang.reflect.Type, com.a.a.A)
	LineNumbersOf: com.google.gson.JsonDeserializer

Class: public abstract com.google.gson.JsonElement	=>	com.a.a.g
	Source: "JsonElement.java"
	FieldsOf: com.google.gson.JsonElement
	MethodsOf: com.google.gson.JsonElement
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalStateException a(java.lang.IllegalStateException) 	SignatureNotChanged
		public abstract com.google.gson.JsonElement deepCopy()	=>	c()
		public java.math.BigDecimal getAsBigDecimal()	=>	i()
		public java.math.BigInteger getAsBigInteger()	=>	j()
		public boolean getAsBoolean()	=>	o()
		java.lang.Boolean getAsBooleanWrapper()	=>	m()
		public byte getAsByte()	=>	d()
		public char getAsCharacter()	=>	h()
		public double getAsDouble()	=>	k()
		public float getAsFloat()	=>	s()
		public int getAsInt()	=>	t()
		public com.google.gson.JsonArray getAsJsonArray()	=>	n()
		public com.google.gson.JsonNull getAsJsonNull()	=>	l()
		public com.google.gson.JsonObject getAsJsonObject()	=>	b()
		public com.google.gson.JsonPrimitive getAsJsonPrimitive()	=>	u()
		public long getAsLong()	=>	q()
		public java.lang.Number getAsNumber()	=>	e()
		public short getAsShort()	=>	v()
		public java.lang.String getAsString()	=>	a()
		public boolean isJsonArray()	=>	f()
		public boolean isJsonNull()	=>	p()
		public boolean isJsonObject()	=>	r()
		public boolean isJsonPrimitive()	=>	g()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.JsonElement
		33	=>	6
		47	=>	33
		56	=>	35
		65	=>	2
		75	=>	37
		88	=>	18
		89	=>	9
		91	=>	12
		104	=>	22
		105	=>	30
		107	=>	34
		120	=>	32
		121	=>	16
		123	=>	23
		137	=>	3
		138	=>	14
		140	=>	4
		153	=>	8
		166	=>	19
		179	=>	10
		192	=>	29
		205	=>	26
		218	=>	25
		231	=>	21
		244	=>	7
		258	=>	28
		272	=>	5
		286	=>	20
		300	=>	24
		313	=>	1
		322	=>	31
		323	=>	27
		324	=>	15
		325	=>	13
		326	=>	36
		327	=>	11
		328	=>	17

Class: public final com.google.gson.JsonIOException	=>	com.a.a.n
	Source: "JsonIOException.java"
	FieldsOf: com.google.gson.JsonIOException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.google.gson.JsonIOException
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.JsonIOException
		29	=>	1
		30	=>	6
		33	=>	4
		34	=>	3
		43	=>	2
		44	=>	5

Class: public final com.google.gson.JsonNull	=>	com.a.a.i
	Source: "JsonNull.java"
	FieldsOf: com.google.gson.JsonNull
		public static final com.google.gson.JsonNull INSTANCE	=>	a
	MethodsOf: com.google.gson.JsonNull
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public bridge synthetic com.google.gson.JsonElement deepCopy()	=>	c()
		public com.google.gson.JsonNull deepCopy()	=>	w()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.JsonNull
		26	=>	6
		32	=>	5
		39	=>	1
		41	=>	2
		49	=>	4
		57	=>	7
		65	=>	3

Class: public final com.google.gson.JsonObject	=>	com.a.a.j
	Source: "JsonObject.java"
	FieldsOf: com.google.gson.JsonObject
		private final com.google.gson.internal.LinkedTreeMap members	=>	a
	MethodsOf: com.google.gson.JsonObject
		public void <init>() 	SignatureNotChanged
		private static com.google.gson.JsonParseException a(com.google.gson.JsonParseException) 	SignatureNotChanged
		public void add(java.lang.String, com.google.gson.JsonElement)	=>	a(java.lang.String, com.a.a.g)
		public void addProperty(java.lang.String, java.lang.Boolean)	=>	a(java.lang.String, java.lang.Boolean)
		public void addProperty(java.lang.String, java.lang.Character)	=>	a(java.lang.String, java.lang.Character)
		public void addProperty(java.lang.String, java.lang.Number)	=>	a(java.lang.String, java.lang.Number)
		public void addProperty(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		private com.google.gson.JsonElement createJsonElement(java.lang.Object)	=>	a(java.lang.Object)
		public bridge synthetic com.google.gson.JsonElement deepCopy()	=>	c()
		public com.google.gson.JsonObject deepCopy()	=>	y()
		public java.util.Set entrySet()	=>	w()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.google.gson.JsonElement get(java.lang.String)	=>	b(java.lang.String)
		public com.google.gson.JsonArray getAsJsonArray(java.lang.String)	=>	c(java.lang.String)
		public com.google.gson.JsonObject getAsJsonObject(java.lang.String)	=>	e(java.lang.String)
		public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)	=>	f(java.lang.String)
		public boolean has(java.lang.String)	=>	d(java.lang.String)
		public int hashCode() 	SignatureNotChanged
		public java.util.Set keySet()	=>	z()
		public com.google.gson.JsonElement remove(java.lang.String)	=>	a(java.lang.String)
		public int size()	=>	x()
	LineNumbersOf: com.google.gson.JsonObject
		32	=>	21 and 30
		33	=>	23
		42	=>	22
		43	=>	13
		44	=>	33
		45	=>	15
		46	=>	5
		58	=>	8
		59	=>	18
		61	=>	17
		62	=>	9
		72	=>	6
		83	=>	3
		84	=>	16
		94	=>	12
		95	=>	4
		105	=>	19
		106	=>	7
		116	=>	20
		117	=>	11
		126	=>	14
		136	=>	25
		146	=>	24
		155	=>	31
		165	=>	29
		175	=>	10
		185	=>	28
		195	=>	34
		205	=>	32
		210	=>	1 and 27
		211	=>	26
		216	=>	2

Class: public com.google.gson.JsonParseException	=>	com.a.a.m
	Source: "JsonParseException.java"
	FieldsOf: com.google.gson.JsonParseException
		private static java.lang.String a	=>	b
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.google.gson.JsonParseException
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
		public static java.lang.String a()	=>	b()
		public static void a(java.lang.String)	=>	b(java.lang.String)
	LineNumbersOf: com.google.gson.JsonParseException
		42	=>	5
		43	=>	3
		52	=>	4
		53	=>	6
		62	=>	2
		63	=>	1

Class: public final com.google.gson.JsonParser	=>	com.a.a.x
	Source: "JsonParser.java"
	FieldsOf: com.google.gson.JsonParser
	MethodsOf: com.google.gson.JsonParser
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static com.google.gson.stream.MalformedJsonException a(com.google.gson.stream.MalformedJsonException) 	SignatureNotChanged
		public com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public com.google.gson.JsonElement parse(java.io.Reader)	=>	a(java.io.Reader)
		public com.google.gson.JsonElement parse(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: com.google.gson.JsonParser
		34	=>	8
		45	=>	20
		58	=>	5
		59	=>	10
		60	=>	12
		61	=>	23
		63	=>	19
		64	=>	3
		65	=>	1
		66	=>	7
		67	=>	2
		68	=>	21
		69	=>	11
		81	=>	14
		82	=>	9
		84	=>	6 and 13
		85	=>	17
		86	=>	18
		87	=>	16
		88	=>	4
		90	=>	15 and 22

Class: public final com.google.gson.JsonPrimitive	=>	com.a.a.k
	Source: "JsonPrimitive.java"
	FieldsOf: com.google.gson.JsonPrimitive
		private static final java.lang.Class[] PRIMITIVE_TYPES	=>	a
		private java.lang.Object value	=>	b
	MethodsOf: com.google.gson.JsonPrimitive
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.Boolean) 	SignatureNotChanged
		public void <init>(java.lang.Character) 	SignatureNotChanged
		public void <init>(java.lang.Number) 	SignatureNotChanged
		void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public bridge synthetic com.google.gson.JsonElement deepCopy()	=>	c()
		public com.google.gson.JsonPrimitive deepCopy()	=>	x()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.math.BigDecimal getAsBigDecimal()	=>	i()
		public java.math.BigInteger getAsBigInteger()	=>	j()
		public boolean getAsBoolean()	=>	o()
		java.lang.Boolean getAsBooleanWrapper()	=>	m()
		public byte getAsByte()	=>	d()
		public char getAsCharacter()	=>	h()
		public double getAsDouble()	=>	k()
		public float getAsFloat()	=>	s()
		public int getAsInt()	=>	t()
		public long getAsLong()	=>	q()
		public java.lang.Number getAsNumber()	=>	e()
		public short getAsShort()	=>	v()
		public java.lang.String getAsString()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public boolean isBoolean()	=>	z()
		private static boolean isIntegral(com.google.gson.JsonPrimitive)	=>	a(com.a.a.k)
		public boolean isNumber()	=>	w()
		private static boolean isPrimitiveOrString(java.lang.Object)	=>	a(java.lang.Object)
		public boolean isString()	=>	y()
		void setValue(java.lang.Object)	=>	b(java.lang.Object)
	LineNumbersOf: com.google.gson.JsonPrimitive
		33	=>	14
		35	=>	84
		46	=>	47
		47	=>	72
		48	=>	68
		55	=>	27
		56	=>	74
		57	=>	77
		64	=>	22
		65	=>	49
		66	=>	54
		74	=>	38
		75	=>	26
		76	=>	66
		84	=>	29
		85	=>	24
		86	=>	48
		94	=>	3
		98	=>	42
		101	=>	10
		102	=>	28
		103	=>	56
		104	=>	8 and 12
		105	=>	63
		106	=>	73
		108	=>	45
		116	=>	52
		126	=>	44
		136	=>	2
		137	=>	51
		140	=>	17
		150	=>	39
		161	=>	21
		170	=>	36
		180	=>	43
		181	=>	67
		182	=>	55
		183	=>	78
		185	=>	86
		197	=>	11
		208	=>	5
		219	=>	40 and 70
		220	=>	64
		231	=>	32
		242	=>	81
		253	=>	34
		264	=>	13
		269	=>	61
		274	=>	79
		278	=>	20
		279	=>	65
		282	=>	6
		283	=>	4 and 57
		284	=>	82
		285	=>	25
		288	=>	69
		293	=>	7
		294	=>	75
		297	=>	58
		298	=>	31
		299	=>	80
		301	=>	35
		302	=>	16
		303	=>	18
		305	=>	59
		310	=>	53
		311	=>	41
		313	=>	19
		314	=>	23
		316	=>	85
		317	=>	9
		318	=>	30
		320	=>	71
		321	=>	15
		323	=>	33
		324	=>	76
		327	=>	62
		328	=>	37
		330	=>	46
		338	=>	83
		339	=>	60
		340	=>	50
		343	=>	1

Class: public abstract com.google.gson.JsonSerializationContext	=>	com.a.a.r
	Source: "JsonSerializationContext.java"
	FieldsOf: com.google.gson.JsonSerializationContext
	MethodsOf: com.google.gson.JsonSerializationContext
		public abstract com.google.gson.JsonElement serialize(java.lang.Object)	=>	a(java.lang.Object)
		public abstract com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type)	=>	a(java.lang.Object, java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.JsonSerializationContext

Class: public abstract com.google.gson.JsonSerializer	=>	com.a.a.e
	Source: "JsonSerializer.java"
	FieldsOf: com.google.gson.JsonSerializer
	MethodsOf: com.google.gson.JsonSerializer
		public abstract com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)	=>	a(java.lang.Object, java.lang.reflect.Type, com.a.a.r)
	LineNumbersOf: com.google.gson.JsonSerializer

Class: public final com.google.gson.JsonStreamParser	=>	com.a.a.u
	Source: "JsonStreamParser.java"
	FieldsOf: com.google.gson.JsonStreamParser
		private final java.lang.Object lock	=>	b
		private final com.google.gson.stream.JsonReader parser	=>	a
	MethodsOf: com.google.gson.JsonStreamParser
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.Reader) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.StackOverflowError a(java.lang.StackOverflowError) 	SignatureNotChanged
		public boolean hasNext() 	SignatureNotChanged
		public com.google.gson.JsonElement next()	=>	a()
		public bridge synthetic java.lang.Object next() 	SignatureNotChanged
		public void remove() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.JsonStreamParser
		52	=>	4
		61	=>	17
		62	=>	19
		68	=>	5
		69	=>	1
		70	=>	22
		71	=>	7
		72	=>	10
		82	=>	11
		83	=>	18
		87	=>	20
		88	=>	23
		89	=>	3
		90	=>	6
		91	=>	8
		92	=>	9
		93	=>	12
		103	=>	24
		105	=>	13
		106	=>	25
		107	=>	14
		108	=>	2
		109	=>	15
		111	=>	21
		120	=>	16

Class: public final com.google.gson.JsonSyntaxException	=>	com.a.a.o
	Source: "JsonSyntaxException.java"
	FieldsOf: com.google.gson.JsonSyntaxException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.google.gson.JsonSyntaxException
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.JsonSyntaxException
		30	=>	6
		31	=>	2
		34	=>	1
		35	=>	5
		45	=>	3
		46	=>	4

Class: public abstract enum com.google.gson.LongSerializationPolicy	=>	com.a.a.C
	Source: "LongSerializationPolicy.java"
	FieldsOf: com.google.gson.LongSerializationPolicy
		private static final synthetic com.google.gson.LongSerializationPolicy[] $VALUES	=>	a
		public static final enum com.google.gson.LongSerializationPolicy DEFAULT	NameNotChanged
		public static final enum com.google.gson.LongSerializationPolicy STRING	NameNotChanged
	MethodsOf: com.google.gson.LongSerializationPolicy
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		synthetic void <init>(java.lang.String, int, com.google.gson.LongSerializationPolicy$1) 	SignatureNotChanged
		public abstract com.google.gson.JsonElement serialize(java.lang.Long)	=>	a(java.lang.Long)
		public static com.google.gson.LongSerializationPolicy valueOf(java.lang.String) 	SignatureNotChanged
		public static com.google.gson.LongSerializationPolicy[] values() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.LongSerializationPolicy
		27	=>	1, 3, 4, 6 and 7
		34	=>	2
		45	=>	5

Class: final enum com.google.gson.LongSerializationPolicy$1	=>	com.a.a.C$a
	Source: "LongSerializationPolicy.java"
	FieldsOf: com.google.gson.LongSerializationPolicy$1
	MethodsOf: com.google.gson.LongSerializationPolicy$1
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public com.google.gson.JsonElement serialize(java.lang.Long)	=>	a(java.lang.Long)
	LineNumbersOf: com.google.gson.LongSerializationPolicy$1
		34	=>	1
		36	=>	2

Class: final enum com.google.gson.LongSerializationPolicy$2	=>	com.a.a.C$b
	Source: "LongSerializationPolicy.java"
	FieldsOf: com.google.gson.LongSerializationPolicy$2
	MethodsOf: com.google.gson.LongSerializationPolicy$2
		void <init>(java.lang.String, int) 	SignatureNotChanged
		public com.google.gson.JsonElement serialize(java.lang.Long)	=>	a(java.lang.Long)
	LineNumbersOf: com.google.gson.LongSerializationPolicy$2
		45	=>	1
		47	=>	2

Class: public abstract com.google.gson.TypeAdapter	=>	com.a.a.p
	Source: "TypeAdapter.java"
	FieldsOf: com.google.gson.TypeAdapter
		private static java.lang.String[] a	=>	b
	MethodsOf: com.google.gson.TypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String[] a()	=>	b()
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		public final java.lang.Object fromJson(java.io.Reader)	=>	a(java.io.Reader)
		public final java.lang.Object fromJson(java.lang.String)	=>	a(java.lang.String)
		public final java.lang.Object fromJsonTree(com.google.gson.JsonElement)	=>	a(com.a.a.g)
		public final com.google.gson.TypeAdapter nullSafe()	=>	c()
		public abstract java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public final void toJson(java.io.Writer, java.lang.Object)	=>	a(java.io.Writer, java.lang.Object)
		public final java.lang.String toJson(java.lang.Object)	=>	b(java.lang.Object)
		public final com.google.gson.JsonElement toJsonTree(java.lang.Object)	=>	a(java.lang.Object)
		public abstract void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.TypeAdapter
		119	=>	13
		141	=>	20
		142	=>	12
		143	=>	1
		186	=>	6
		215	=>	9
		217	=>	2
		218	=>	8
		219	=>	16
		220	=>	21
		221	=>	17
		233	=>	15
		234	=>	11
		235	=>	14
		236	=>	18
		237	=>	23
		259	=>	10
		260	=>	7
		273	=>	3
		284	=>	5
		285	=>	19
		286	=>	4
		287	=>	22

Class: com.google.gson.TypeAdapter$1	=>	com.a.a.p$a
	Source: "TypeAdapter.java"
	FieldsOf: com.google.gson.TypeAdapter$1
		final synthetic com.google.gson.TypeAdapter this$0	NameNotChanged
	MethodsOf: com.google.gson.TypeAdapter$1
		void <init>(com.google.gson.TypeAdapter) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.TypeAdapter$1
		186	=>	9
		188	=>	2
		189	=>	4
		191	=>	7
		193	=>	3
		195	=>	8
		196	=>	6
		197	=>	1
		199	=>	5

Class: public abstract com.google.gson.TypeAdapterFactory	=>	com.a.a.s
	Source: "TypeAdapterFactory.java"
	FieldsOf: com.google.gson.TypeAdapterFactory
	MethodsOf: com.google.gson.TypeAdapterFactory
		public abstract com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.TypeAdapterFactory

Class: public abstract annotation com.google.gson.annotations.Expose	=>	com.a.a.d.d
	Source: "Expose.java"
	FieldsOf: com.google.gson.annotations.Expose
	MethodsOf: com.google.gson.annotations.Expose
		public abstract boolean deserialize()	=>	a()
		public abstract boolean serialize()	=>	b()
	LineNumbersOf: com.google.gson.annotations.Expose

Class: public abstract annotation com.google.gson.annotations.JsonAdapter	=>	com.a.a.d.a
	Source: "JsonAdapter.java"
	FieldsOf: com.google.gson.annotations.JsonAdapter
	MethodsOf: com.google.gson.annotations.JsonAdapter
		public abstract boolean nullSafe()	=>	a()
		public abstract java.lang.Class value() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.annotations.JsonAdapter

Class: public abstract annotation com.google.gson.annotations.SerializedName	=>	com.a.a.d.e
	Source: "SerializedName.java"
	FieldsOf: com.google.gson.annotations.SerializedName
	MethodsOf: com.google.gson.annotations.SerializedName
		public abstract java.lang.String[] alternate()	=>	a()
		public abstract java.lang.String value() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.annotations.SerializedName

Class: public abstract annotation com.google.gson.annotations.Since	=>	com.a.a.d.b
	Source: "Since.java"
	FieldsOf: com.google.gson.annotations.Since
	MethodsOf: com.google.gson.annotations.Since
		public abstract double value() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.annotations.Since

Class: public abstract annotation com.google.gson.annotations.Until	=>	com.a.a.d.c
	Source: "Until.java"
	FieldsOf: com.google.gson.annotations.Until
	MethodsOf: com.google.gson.annotations.Until
		public abstract double value() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.annotations.Until

Class: public final com.google.gson.internal.$Gson$Preconditions	=>	com.a.a.b.l
	Source: "$Gson$Preconditions.java"
	FieldsOf: com.google.gson.internal.$Gson$Preconditions
	MethodsOf: com.google.gson.internal.$Gson$Preconditions
		private void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		public static void checkArgument(boolean)	=>	a(boolean)
		public static java.lang.Object checkNotNull(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.google.gson.internal.$Gson$Preconditions
		33	=>	3
		34	=>	7
		38	=>	5
		39	=>	6
		41	=>	4
		45	=>	1
		46	=>	8
		48	=>	2

Class: public final com.google.gson.internal.$Gson$Types	=>	com.a.a.b.k
	Source: "$Gson$Types.java"
	FieldsOf: com.google.gson.internal.$Gson$Types
		static final java.lang.reflect.Type[] EMPTY_TYPE_ARRAY	=>	a
	MethodsOf: com.google.gson.internal.$Gson$Types
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)	=>	f(java.lang.reflect.Type)
		public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type)	=>	b(java.lang.reflect.Type)
		static void checkNotPrimitive(java.lang.reflect.Type)	=>	e(java.lang.reflect.Type)
		private static java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)	=>	a(java.lang.reflect.TypeVariable)
		static boolean equal(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		public static boolean equals(java.lang.reflect.Type, java.lang.reflect.Type)	=>	a(java.lang.reflect.Type, java.lang.reflect.Type)
		public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)	=>	a(java.lang.reflect.Type)
		public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type, java.lang.Class)	=>	a(java.lang.reflect.Type, java.lang.Class)
		static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)	=>	a(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
		public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type, java.lang.Class)	=>	b(java.lang.reflect.Type, java.lang.Class)
		public static java.lang.Class getRawType(java.lang.reflect.Type)	=>	g(java.lang.reflect.Type)
		static java.lang.reflect.Type getSupertype(java.lang.reflect.Type, java.lang.Class, java.lang.Class)	=>	b(java.lang.reflect.Type, java.lang.Class, java.lang.Class)
		static int hashCodeOrZero(java.lang.Object)	=>	a(java.lang.Object)
		private static int indexOf(java.lang.Object[], java.lang.Object)	=>	a(java.lang.Object[], java.lang.Object)
		public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])	=>	a(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[])
		public static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)	=>	a(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type)
		private static java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, java.util.Collection)	=>	a(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type, java.util.Collection)
		static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.TypeVariable)	=>	a(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.TypeVariable)
		public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)	=>	d(java.lang.reflect.Type)
		public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)	=>	h(java.lang.reflect.Type)
		public static java.lang.String typeToString(java.lang.reflect.Type)	=>	c(java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.internal.$Gson$Types
		40	=>	114
		42	=>	52
		43	=>	168
		54	=>	139
		64	=>	62
		75	=>	194
		76	=>	60
		78	=>	175
		80	=>	170
		90	=>	160
		91	=>	99
		93	=>	169
		95	=>	51
		104	=>	22
		105	=>	115
		106	=>	140
		108	=>	56
		109	=>	162
		110	=>	106 and 109
		111	=>	93
		113	=>	34
		114	=>	42
		115	=>	122
		117	=>	17
		118	=>	167
		119	=>	2
		123	=>	161
		128	=>	30
		130	=>	81
		132	=>	31
		133	=>	39
		138	=>	131
		139	=>	150
		140	=>	190
		142	=>	178
		143	=>	64
		144	=>	33
		146	=>	171
		149	=>	94
		151	=>	165
		152	=>	35
		155	=>	105
		156	=>	174
		162	=>	126
		169	=>	145
		171	=>	83
		173	=>	4
		175	=>	135
		177	=>	137
		178	=>	172
		179	=>	189
		183	=>	46
		184	=>	192
		185	=>	50 and 181
		186	=>	96
		187	=>	3
		189	=>	177
		190	=>	18
		191	=>	136
		194	=>	28
		195	=>	91
		196	=>	142
		198	=>	133
		199	=>	123
		200	=>	180
		203	=>	157
		204	=>	176
		205	=>	98 and 121
		206	=>	86
		208	=>	185
		209	=>	78
		210	=>	108
		212	=>	41
		213	=>	102
		214	=>	84 and 191
		215	=>	128
		219	=>	193
		224	=>	164
		228	=>	80
		237	=>	125
		238	=>	74
		242	=>	82
		243	=>	141
		244	=>	72 and 149
		245	=>	19
		246	=>	85
		247	=>	113
		248	=>	118
		254	=>	53
		255	=>	66
		256	=>	116
		257	=>	15
		258	=>	48
		259	=>	88
		260	=>	101
		262	=>	156
		263	=>	117
		267	=>	58
		278	=>	77
		280	=>	44
		282	=>	155
		283	=>	27 and 112
		284	=>	1
		292	=>	24 and 182
		293	=>	7
		294	=>	12
		302	=>	151
		304	=>	10
		305	=>	188
		307	=>	75
		308	=>	54
		310	=>	23
		323	=>	124
		324	=>	159
		327	=>	119
		329	=>	25
		330	=>	89
		331	=>	179
		333	=>	97
		337	=>	166
		344	=>	146
		345	=>	71
		346	=>	32
		348	=>	197
		350	=>	87
		352	=>	38
		353	=>	152
		354	=>	55
		357	=>	16
		358	=>	129
		359	=>	59
		360	=>	120
		361	=>	79 and 110
		363	=>	49
		365	=>	63
		366	=>	153
		367	=>	134
		368	=>	95
		369	=>	61 and 92
		371	=>	195
		373	=>	196
		374	=>	132
		375	=>	69
		376	=>	127
		377	=>	5
		379	=>	90
		380	=>	65 and 163
		381	=>	143
		382	=>	43
		383	=>	29
		384	=>	76
		385	=>	14
		387	=>	104
		391	=>	67 and 70
		392	=>	111
		395	=>	154
		396	=>	147
		397	=>	8
		398	=>	138
		400	=>	183
		401	=>	40
		402	=>	100
		403	=>	187
		405	=>	68
		406	=>	20
		407	=>	47
		408	=>	158
		411	=>	73
		414	=>	36
		420	=>	103
		423	=>	45
		424	=>	148
		427	=>	37
		428	=>	130
		429	=>	13
		430	=>	186
		433	=>	173
		437	=>	21 and 57
		438	=>	184
		439	=>	6
		442	=>	26
		450	=>	107
		451	=>	144
		457	=>	11
		458	=>	9

Class: final com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl	=>	com.a.a.b.k$c
	Source: "$Gson$Types.java"
	FieldsOf: com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
		private final java.lang.reflect.Type componentType	=>	a
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.reflect.Type) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.reflect.Type getGenericComponentType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
		527	=>	4
		528	=>	9
		529	=>	2
		532	=>	5
		536	=>	3 and 6
		537	=>	7
		541	=>	8
		545	=>	1

Class: final com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl	=>	com.a.a.b.k$a
	Source: "$Gson$Types.java"
	FieldsOf: com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
		private final java.lang.reflect.Type ownerType	=>	b
		private final java.lang.reflect.Type rawType	=>	c
		private static final long serialVersionUID	NameNotChanged
		private final java.lang.reflect.Type[] typeArguments	=>	a
	MethodsOf: com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.reflect.Type, java.lang.reflect.Type, java.lang.reflect.Type[]) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.reflect.Type[] getActualTypeArguments() 	SignatureNotChanged
		public java.lang.reflect.Type getOwnerType() 	SignatureNotChanged
		public java.lang.reflect.Type getRawType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
		465	=>	34
		467	=>	5
		468	=>	12
		469	=>	6
		470	=>	4
		471	=>	19
		474	=>	11
		475	=>	20
		476	=>	32
		477	=>	1 and 3
		478	=>	31
		479	=>	14
		480	=>	8
		482	=>	33
		485	=>	27
		489	=>	16
		493	=>	28
		497	=>	23 and 29
		498	=>	15
		502	=>	7 and 9
		503	=>	10
		504	=>	2
		508	=>	18
		509	=>	26
		510	=>	30
		513	=>	17
		514	=>	24
		515	=>	13 and 21
		516	=>	22
		518	=>	25

Class: final com.google.gson.internal.$Gson$Types$WildcardTypeImpl	=>	com.a.a.b.k$b
	Source: "$Gson$Types.java"
	FieldsOf: com.google.gson.internal.$Gson$Types$WildcardTypeImpl
		private final java.lang.reflect.Type lowerBound	=>	a
		private static final long serialVersionUID	NameNotChanged
		private final java.lang.reflect.Type upperBound	=>	b
	MethodsOf: com.google.gson.internal.$Gson$Types$WildcardTypeImpl
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.reflect.Type[], java.lang.reflect.Type[]) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.reflect.Type[] getLowerBounds() 	SignatureNotChanged
		public java.lang.reflect.Type[] getUpperBounds() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.$Gson$Types$WildcardTypeImpl
		560	=>	17
		561	=>	11
		562	=>	23
		564	=>	14
		565	=>	13
		566	=>	20
		567	=>	21
		568	=>	9
		569	=>	2
		572	=>	27
		573	=>	18
		574	=>	7
		575	=>	25
		577	=>	10
		580	=>	1
		584	=>	16
		588	=>	6 and 15
		589	=>	26
		594	=>	8 and 24
		595	=>	4
		599	=>	19
		600	=>	3
		601	=>	5
		602	=>	12
		604	=>	22

Class: public final com.google.gson.internal.ConstructorConstructor	=>	com.a.a.b.j
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor
		private static java.lang.String[] a	=>	b
		private final com.google.gson.internal.reflect.ReflectionAccessor accessor	=>	c
		private final java.util.Map instanceCreators	=>	d
	MethodsOf: com.google.gson.internal.ConstructorConstructor
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.util.Map) 	SignatureNotChanged
		public static java.lang.String[] a()	=>	b()
		private static java.lang.NoSuchMethodException a(java.lang.NoSuchMethodException) 	SignatureNotChanged
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		public com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken)	=>	a(com.a.a.a.a)
		private com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class)	=>	a(java.lang.Class)
		private com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type, java.lang.Class)	=>	b(java.lang.reflect.Type, java.lang.Class)
		private com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type, java.lang.Class)	=>	a(java.lang.reflect.Type, java.lang.Class)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor
		51	=>	39
		53	=>	30
		54	=>	7
		55	=>	10
		58	=>	12
		59	=>	25
		64	=>	26
		65	=>	45
		66	=>	4
		75	=>	11
		76	=>	19
		77	=>	20
		78	=>	16
		85	=>	47
		86	=>	50
		87	=>	32
		90	=>	43
		91	=>	9
		92	=>	28
		96	=>	42
		101	=>	3
		102	=>	13
		103	=>	38
		105	=>	8
		124	=>	41
		125	=>	51
		136	=>	35
		137	=>	2
		138	=>	6
		143	=>	5
		144	=>	22
		159	=>	34
		160	=>	24
		165	=>	44
		166	=>	15
		172	=>	40
		180	=>	31
		181	=>	36
		182	=>	1
		187	=>	33
		188	=>	48
		193	=>	18
		194	=>	23
		199	=>	17 and 27
		200	=>	37
		201	=>	21
		207	=>	49
		215	=>	29
		220	=>	14
		236	=>	46

Class: com.google.gson.internal.ConstructorConstructor$1	=>	com.a.a.b.j$e
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$1
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
		final synthetic java.lang.reflect.Type val$type	NameNotChanged
		final synthetic com.google.gson.InstanceCreator val$typeCreator	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$1
		void <init>(com.google.gson.internal.ConstructorConstructor, com.google.gson.InstanceCreator, java.lang.reflect.Type) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$1
		66	=>	2
		68	=>	1

Class: com.google.gson.internal.ConstructorConstructor$10	=>	com.a.a.b.j$n
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$10
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$10
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$10
		188	=>	2
		190	=>	1

Class: com.google.gson.internal.ConstructorConstructor$11	=>	com.a.a.b.j$d
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$11
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$11
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$11
		194	=>	1
		196	=>	2

Class: com.google.gson.internal.ConstructorConstructor$12	=>	com.a.a.b.j$k
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$12
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$12
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$12
		201	=>	1
		203	=>	2

Class: com.google.gson.internal.ConstructorConstructor$13	=>	com.a.a.b.j$g
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$13
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$13
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$13
		207	=>	2
		209	=>	1

Class: com.google.gson.internal.ConstructorConstructor$14	=>	com.a.a.b.j$h
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$14
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
		private final com.google.gson.internal.UnsafeAllocator unsafeAllocator	=>	a
		final synthetic java.lang.Class val$rawType	NameNotChanged
		final synthetic java.lang.reflect.Type val$type	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$14
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.ConstructorConstructor, java.lang.Class, java.lang.reflect.Type) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$14
		220	=>	2
		221	=>	3
		225	=>	6
		226	=>	1
		227	=>	5
		228	=>	4

Class: com.google.gson.internal.ConstructorConstructor$2	=>	com.a.a.b.j$f
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$2
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
		final synthetic com.google.gson.InstanceCreator val$rawTypeCreator	NameNotChanged
		final synthetic java.lang.reflect.Type val$type	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$2
		void <init>(com.google.gson.internal.ConstructorConstructor, com.google.gson.InstanceCreator, java.lang.reflect.Type) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$2
		78	=>	1
		80	=>	2

Class: com.google.gson.internal.ConstructorConstructor$3	=>	com.a.a.b.j$o
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$3
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
		final synthetic java.lang.reflect.Constructor val$constructor	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$3
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.ConstructorConstructor, java.lang.reflect.Constructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$3
		105	=>	8
		109	=>	7
		110	=>	5
		111	=>	3
		113	=>	4
		114	=>	2
		117	=>	1
		118	=>	6
		119	=>	9
		120	=>	10

Class: com.google.gson.internal.ConstructorConstructor$4	=>	com.a.a.b.j$b
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$4
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$4
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$4
		138	=>	2
		140	=>	1

Class: com.google.gson.internal.ConstructorConstructor$5	=>	com.a.a.b.j$a
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$5
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
		final synthetic java.lang.reflect.Type val$type	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$5
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.ConstructorConstructor, java.lang.reflect.Type) 	SignatureNotChanged
		private static com.google.gson.JsonIOException a(com.google.gson.JsonIOException) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$5
		144	=>	6
		147	=>	1
		148	=>	4
		149	=>	3
		150	=>	5
		152	=>	7
		155	=>	2

Class: com.google.gson.internal.ConstructorConstructor$6	=>	com.a.a.b.j$m
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$6
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$6
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$6
		160	=>	1
		162	=>	2

Class: com.google.gson.internal.ConstructorConstructor$7	=>	com.a.a.b.j$l
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$7
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$7
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$7
		166	=>	1
		168	=>	2

Class: com.google.gson.internal.ConstructorConstructor$8	=>	com.a.a.b.j$c
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$8
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$8
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$8
		172	=>	2
		174	=>	1

Class: com.google.gson.internal.ConstructorConstructor$9	=>	com.a.a.b.j$i
	Source: "ConstructorConstructor.java"
	FieldsOf: com.google.gson.internal.ConstructorConstructor$9
		final synthetic com.google.gson.internal.ConstructorConstructor this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.ConstructorConstructor$9
		void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ConstructorConstructor$9
		182	=>	1
		184	=>	2

Class: public final com.google.gson.internal.Excluder	=>	com.a.a.b.f
	Source: "Excluder.java"
	FieldsOf: com.google.gson.internal.Excluder
		public static final com.google.gson.internal.Excluder DEFAULT	=>	e
		private java.util.List deserializationStrategies	=>	b
		private int modifiers	=>	d
		private boolean requireExpose	=>	g
		private java.util.List serializationStrategies	=>	c
		private boolean serializeInnerClasses	=>	f
		private double version	=>	a
	MethodsOf: com.google.gson.internal.Excluder
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected com.google.gson.internal.Excluder clone()	=>	c()
		protected bridge synthetic java.lang.Object clone() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		public com.google.gson.internal.Excluder disableInnerClassSerialization()	=>	b()
		public boolean excludeClass(java.lang.Class, boolean)	=>	b(java.lang.Class, boolean)
		private boolean excludeClassChecks(java.lang.Class)	=>	b(java.lang.Class)
		private boolean excludeClassInStrategy(java.lang.Class, boolean)	=>	a(java.lang.Class, boolean)
		public boolean excludeField(java.lang.reflect.Field, boolean)	=>	a(java.lang.reflect.Field, boolean)
		public com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()	=>	a()
		private boolean isAnonymousOrLocal(java.lang.Class)	=>	c(java.lang.Class)
		private boolean isInnerClass(java.lang.Class)	=>	a(java.lang.Class)
		private boolean isStatic(java.lang.Class)	=>	d(java.lang.Class)
		private boolean isValidSince(com.google.gson.annotations.Since)	=>	a(com.a.a.d.b)
		private boolean isValidUntil(com.google.gson.annotations.Until)	=>	a(com.a.a.d.c)
		private boolean isValidVersion(com.google.gson.annotations.Since, com.google.gson.annotations.Until)	=>	a(com.a.a.d.b, com.a.a.d.c)
		public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy, boolean, boolean)	=>	a(com.a.a.l, boolean, boolean)
		public com.google.gson.internal.Excluder withModifiers(int[])	=>	a(int[])
		public com.google.gson.internal.Excluder withVersion(double)	=>	a(double)
	LineNumbersOf: com.google.gson.internal.Excluder
		50	=>	5 and 48
		52	=>	31
		54	=>	79
		55	=>	82
		56	=>	12
		58	=>	67
		59	=>	25
		63	=>	54
		64	=>	61
		65	=>	24
		70	=>	36
		71	=>	95
		72	=>	85
		76	=>	9
		77	=>	52
		78	=>	30 and 76
		79	=>	90
		81	=>	60
		85	=>	96
		86	=>	7
		87	=>	78
		91	=>	11
		92	=>	88
		93	=>	84
		98	=>	86
		99	=>	66
		100	=>	65
		101	=>	3
		103	=>	49
		104	=>	32
		106	=>	28
		108	=>	53
		112	=>	74
		113	=>	19
		115	=>	83
		116	=>	20
		118	=>	10
		119	=>	43
		122	=>	62
		152	=>	59
		153	=>	64
		156	=>	44
		157	=>	2
		158	=>	38
		161	=>	72
		162	=>	27
		165	=>	14
		166	=>	17
		167	=>	33
		168	=>	41
		172	=>	21
		173	=>	35
		176	=>	69
		177	=>	50
		180	=>	6
		181	=>	77
		182	=>	47
		183	=>	89
		184	=>	71
		185	=>	34
		187	=>	51
		190	=>	81
		194	=>	22
		195	=>	23
		198	=>	39
		199	=>	92
		202	=>	4
		203	=>	18
		206	=>	26
		210	=>	55 and 57
		211	=>	68
		215	=>	42
		216	=>	91
		217	=>	8
		218	=>	63
		220	=>	93
		221	=>	46
		225	=>	29 and 56
		226	=>	73
		230	=>	15
		234	=>	40
		238	=>	45
		242	=>	70
		243	=>	37
		244	=>	1
		245	=>	75
		248	=>	58
		252	=>	94
		253	=>	80
		254	=>	87
		255	=>	13
		258	=>	16

Class: com.google.gson.internal.Excluder$1	=>	com.a.a.b.f$a
	Source: "Excluder.java"
	FieldsOf: com.google.gson.internal.Excluder$1
		private com.google.gson.TypeAdapter delegate	=>	a
		final synthetic com.google.gson.internal.Excluder this$0	NameNotChanged
		final synthetic com.google.gson.Gson val$gson	NameNotChanged
		final synthetic boolean val$skipDeserialize	NameNotChanged
		final synthetic boolean val$skipSerialize	NameNotChanged
		final synthetic com.google.gson.reflect.TypeToken val$type	NameNotChanged
	MethodsOf: com.google.gson.internal.Excluder$1
		void <init>(com.google.gson.internal.Excluder, boolean, boolean, com.google.gson.Gson, com.google.gson.reflect.TypeToken) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		private com.google.gson.TypeAdapter delegate()	=>	a()
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.Excluder$1
		122	=>	10
		127	=>	2
		128	=>	12
		129	=>	14
		131	=>	1
		135	=>	13
		136	=>	6
		137	=>	11
		139	=>	3
		140	=>	7
		143	=>	9
		144	=>	4 and 5
		146	=>	8

Class: public final com.google.gson.internal.GsonBuildConfig	=>	com.a.a.b.n
	Source: "GsonBuildConfig.java"
	FieldsOf: com.google.gson.internal.GsonBuildConfig
		public static final java.lang.String VERSION	=>	a
	MethodsOf: com.google.gson.internal.GsonBuildConfig
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.GsonBuildConfig
		31	=>	1

Class: public final com.google.gson.internal.JavaVersion	=>	com.a.a.b.h
	Source: "JavaVersion.java"
	FieldsOf: com.google.gson.internal.JavaVersion
		private static final int majorJavaVersion	=>	a
	MethodsOf: com.google.gson.internal.JavaVersion
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		private static int determineMajorJavaVersion()	=>	c()
		private static int extractBeginningInt(java.lang.String)	=>	a(java.lang.String)
		public static int getMajorJavaVersion()	=>	b()
		static int getMajorJavaVersion(java.lang.String)	=>	b(java.lang.String)
		public static boolean isJava9OrLater()	=>	a()
		private static int parseDotted(java.lang.String)	=>	c(java.lang.String)
	LineNumbersOf: com.google.gson.internal.JavaVersion
		26	=>	22
		29	=>	2
		30	=>	9
		35	=>	28
		36	=>	1
		37	=>	6
		39	=>	10
		40	=>	14
		42	=>	16
		48	=>	5
		49	=>	4
		50	=>	25
		51	=>	12
		53	=>	26
		55	=>	8
		56	=>	20
		62	=>	24
		63	=>	3 and 18
		64	=>	13
		65	=>	15
		66	=>	27
		71	=>	7
		72	=>	21
		73	=>	17
		81	=>	11
		88	=>	23
		91	=>	19

Class: public abstract com.google.gson.internal.JsonReaderInternalAccess	=>	com.a.a.b.g
	Source: "JsonReaderInternalAccess.java"
	FieldsOf: com.google.gson.internal.JsonReaderInternalAccess
		public static com.google.gson.internal.JsonReaderInternalAccess INSTANCE	=>	a
	MethodsOf: com.google.gson.internal.JsonReaderInternalAccess
		public void <init>() 	SignatureNotChanged
		public abstract void promoteNameToValue(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
	LineNumbersOf: com.google.gson.internal.JsonReaderInternalAccess
		25	=>	1

Class: public final com.google.gson.internal.LazilyParsedNumber	=>	com.a.a.b.c
	Source: "LazilyParsedNumber.java"
	FieldsOf: com.google.gson.internal.LazilyParsedNumber
		private final java.lang.String value	=>	a
	MethodsOf: com.google.gson.internal.LazilyParsedNumber
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public double doubleValue() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public float floatValue() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public int intValue() 	SignatureNotChanged
		public long longValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		private java.lang.Object writeReplace() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LazilyParsedNumber
		30	=>	16
		31	=>	12
		32	=>	8
		37	=>	3
		38	=>	9
		40	=>	5
		41	=>	10
		42	=>	2
		50	=>	11
		51	=>	7
		52	=>	18
		58	=>	17
		63	=>	6
		68	=>	21
		77	=>	20
		82	=>	22
		87	=>	1
		88	=>	15
		90	=>	14
		91	=>	4
		92	=>	19
		94	=>	13

Class: public final com.google.gson.internal.LinkedHashTreeMap	=>	com.a.a.b.d
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap
		static final synthetic boolean $assertionsDisabled	=>	b
		private static final java.util.Comparator NATURAL_ORDER	=>	i
		java.util.Comparator comparator	=>	a
		private com.google.gson.internal.LinkedHashTreeMap$EntrySet entrySet	=>	f
		final com.google.gson.internal.LinkedHashTreeMap$Node header	=>	c
		private com.google.gson.internal.LinkedHashTreeMap$KeySet keySet	=>	g
		int modCount	=>	e
		int size	=>	h
		com.google.gson.internal.LinkedHashTreeMap$Node[] table	=>	d
		int threshold	=>	j
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.util.Comparator) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean containsKey(java.lang.Object) 	SignatureNotChanged
		private void doubleCapacity()	=>	a()
		static com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])	=>	a(com.a.a.b.d$a[])
		public java.util.Set entrySet() 	SignatureNotChanged
		private boolean equal(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		com.google.gson.internal.LinkedHashTreeMap$Node find(java.lang.Object, boolean)	=>	a(java.lang.Object, boolean)
		com.google.gson.internal.LinkedHashTreeMap$Node findByEntry(java.util.Map$Entry)	=>	a(java.util.Map$Entry)
		com.google.gson.internal.LinkedHashTreeMap$Node findByObject(java.lang.Object)	=>	b(java.lang.Object)
		public java.lang.Object get(java.lang.Object) 	SignatureNotChanged
		public java.util.Set keySet() 	SignatureNotChanged
		public java.lang.Object put(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		private void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node, boolean)	=>	a(com.a.a.b.d$a, boolean)
		public java.lang.Object remove(java.lang.Object) 	SignatureNotChanged
		void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node, boolean)	=>	b(com.a.a.b.d$a, boolean)
		com.google.gson.internal.LinkedHashTreeMap$Node removeInternalByKey(java.lang.Object)	=>	a(java.lang.Object)
		private void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node, com.google.gson.internal.LinkedHashTreeMap$Node)	=>	a(com.a.a.b.d$a, com.a.a.b.d$a)
		private void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)	=>	a(com.a.a.b.d$a)
		private void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)	=>	b(com.a.a.b.d$a)
		private static int secondaryHash(int)	=>	a(int)
		public int size() 	SignatureNotChanged
		private java.lang.Object writeReplace() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap
		40	=>	46
		42	=>	174
		51	=>	176
		52	=>	170
		61	=>	199
		62	=>	96
		72	=>	28
		73	=>	73
		76	=>	196
		77	=>	137
		78	=>	78
		79	=>	133
		82	=>	115
		86	=>	225
		87	=>	214
		91	=>	66
		95	=>	162
		96	=>	172
		98	=>	4
		99	=>	187
		100	=>	215
		101	=>	111
		105	=>	173
		106	=>	17
		107	=>	161
		110	=>	79
		111	=>	31
		112	=>	1
		113	=>	130
		114	=>	15
		115	=>	220
		117	=>	32
		118	=>	235
		121	=>	59
		122	=>	69
		132	=>	118
		133	=>	165
		134	=>	119
		135	=>	48
		136	=>	16
		137	=>	182
		139	=>	54
		142	=>	88
		147	=>	188
		148	=>	146
		149	=>	167
		152	=>	86
		153	=>	234
		157	=>	141
		158	=>	93
		159	=>	127
		162	=>	159
		163	=>	50
		167	=>	216
		168	=>	80
		172	=>	13
		174	=>	144
		176	=>	64
		177	=>	34
		179	=>	138
		180	=>	228
		182	=>	41
		183	=>	157
		184	=>	136
		186	=>	143
		188	=>	168
		191	=>	206
		192	=>	42
		194	=>	208
		196	=>	68
		202	=>	37
		203	=>	10
		204	=>	184
		218	=>	131
		219	=>	135
		220	=>	231
		224	=>	24
		235	=>	43
		236	=>	21
		246	=>	178
		247	=>	103
		248	=>	90
		249	=>	212
		252	=>	229
		253	=>	72
		254	=>	142
		255	=>	124
		266	=>	230
		267	=>	74
		269	=>	7
		270	=>	201
		271	=>	166
		272	=>	156
		273	=>	194
		274	=>	122
		275	=>	197
		277	=>	26
		278	=>	3
		279	=>	98
		280	=>	154
		281	=>	99
		282	=>	180
		283	=>	195
		285	=>	83
		286	=>	107
		287	=>	51
		288	=>	52
		289	=>	5
		290	=>	20
		291	=>	205
		292	=>	23
		293	=>	169
		295	=>	149
		298	=>	45
		299	=>	36
		300	=>	25
		301	=>	213
		304	=>	92
		305	=>	33
		306	=>	129
		308	=>	2
		312	=>	82
		313	=>	153
		314	=>	35
		315	=>	211
		318	=>	210
		319	=>	44
		320	=>	12
		322	=>	109
		323	=>	87
		326	=>	132
		327	=>	61
		329	=>	6
		339	=>	76 and 207
		340	=>	56
		341	=>	186
		342	=>	75
		343	=>	102
		345	=>	113
		346	=>	217
		347	=>	89
		348	=>	9
		349	=>	128
		350	=>	140
		352	=>	164
		353	=>	58
		354	=>	236
		356	=>	106
		357	=>	70
		358	=>	94
		360	=>	155
		361	=>	190
		364	=>	60
		365	=>	100
		366	=>	163
		367	=>	18
		368	=>	85
		370	=>	53
		371	=>	49
		372	=>	193
		374	=>	152
		375	=>	84
		376	=>	202
		378	=>	39
		379	=>	177
		382	=>	123
		383	=>	139
		384	=>	47
		385	=>	29
		389	=>	120
		390	=>	62
		391	=>	108
		392	=>	22
		396	=>	158
		402	=>	95
		403	=>	200
		404	=>	27
		405	=>	224
		408	=>	147
		409	=>	19
		410	=>	226
		413	=>	91
		416	=>	150
		417	=>	181
		420	=>	191
		422	=>	55
		424	=>	185
		430	=>	189
		431	=>	125
		432	=>	232
		433	=>	77
		436	=>	204
		437	=>	38
		438	=>	233
		441	=>	11
		444	=>	67
		445	=>	209
		448	=>	148
		450	=>	198
		452	=>	97
		458	=>	126
		459	=>	71
		463	=>	81
		464	=>	222
		558	=>	223
		559	=>	117
		560	=>	183
		568	=>	171
		570	=>	112
		571	=>	110
		572	=>	179
		573	=>	175
		576	=>	57 and 160
		577	=>	145
		578	=>	121
		579	=>	65
		583	=>	40
		584	=>	151
		585	=>	203
		586	=>	218
		587	=>	221
		588	=>	134
		590	=>	105
		595	=>	63
		596	=>	227
		597	=>	30
		598	=>	101
		599	=>	114
		600	=>	8
		602	=>	104
		607	=>	192
		608	=>	14
		610	=>	116
		862	=>	219

Class: final com.google.gson.internal.LinkedHashTreeMap$1	=>	com.a.a.b.d$c
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$1
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$1
		void <init>() 	SignatureNotChanged
		public int compare(java.lang.Comparable, java.lang.Comparable)	=>	a(java.lang.Comparable, java.lang.Comparable)
		public bridge synthetic int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$1
		42	=>	1 and 3
		44	=>	2

Class: final com.google.gson.internal.LinkedHashTreeMap$AvlBuilder	=>	com.a.a.b.d$f
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
		private int leavesSkipped	=>	d
		private int leavesToSkip	=>	a
		private int size	=>	c
		private com.google.gson.internal.LinkedHashTreeMap$Node stack	=>	b
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
		void <init>() 	SignatureNotChanged
		private static java.lang.IllegalStateException a(java.lang.IllegalStateException) 	SignatureNotChanged
		void add(com.google.gson.internal.LinkedHashTreeMap$Node)	=>	a(com.a.a.b.d$a)
		void reset(int)	=>	a(int)
		com.google.gson.internal.LinkedHashTreeMap$Node root()	=>	a()
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
		670	=>	45
		679	=>	38
		680	=>	44
		681	=>	4
		682	=>	7
		683	=>	3
		684	=>	29
		687	=>	37
		688	=>	13
		691	=>	40
		692	=>	16
		693	=>	6
		694	=>	19
		697	=>	22
		698	=>	46
		699	=>	5
		702	=>	1
		703	=>	9
		704	=>	43
		705	=>	39
		721	=>	8 and 17
		722	=>	26
		724	=>	12
		725	=>	24
		726	=>	31
		727	=>	34
		728	=>	20
		730	=>	2
		731	=>	42
		732	=>	25
		733	=>	41
		734	=>	47
		735	=>	36
		737	=>	27
		738	=>	35
		739	=>	21
		741	=>	14
		742	=>	48
		743	=>	23
		744	=>	10
		745	=>	11
		746	=>	15
		749	=>	18
		752	=>	33
		753	=>	30
		754	=>	28
		756	=>	32

Class: com.google.gson.internal.LinkedHashTreeMap$AvlIterator	=>	com.a.a.b.d$h
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$AvlIterator
		private com.google.gson.internal.LinkedHashTreeMap$Node stackTop	=>	a
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$AvlIterator
		void <init>() 	SignatureNotChanged
		public com.google.gson.internal.LinkedHashTreeMap$Node next()	=>	a()
		void reset(com.google.gson.internal.LinkedHashTreeMap$Node)	=>	a(com.a.a.b.d$a)
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$AvlIterator
		622	=>	8
		627	=>	12
		628	=>	7 and 19
		629	=>	17
		630	=>	4
		632	=>	14
		633	=>	11
		636	=>	1
		637	=>	13
		638	=>	20
		640	=>	10
		641	=>	6
		642	=>	3
		643	=>	9 and 15
		644	=>	18
		645	=>	16
		647	=>	2
		648	=>	5

Class: final com.google.gson.internal.LinkedHashTreeMap$EntrySet	=>	com.a.a.b.d$e
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet
		final synthetic com.google.gson.internal.LinkedHashTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet
		void <init>(com.google.gson.internal.LinkedHashTreeMap) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean contains(java.lang.Object) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public boolean remove(java.lang.Object) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet
		794	=>	13
		796	=>	1
		800	=>	11
		808	=>	4
		812	=>	8
		813	=>	2
		816	=>	6
		817	=>	10
		818	=>	5
		820	=>	12
		821	=>	3
		825	=>	9
		826	=>	7

Class: com.google.gson.internal.LinkedHashTreeMap$EntrySet$1	=>	com.a.a.b.d$e$a
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
		final synthetic com.google.gson.internal.LinkedHashTreeMap$EntrySet this$1	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
		void <init>(com.google.gson.internal.LinkedHashTreeMap$EntrySet) 	SignatureNotChanged
		public bridge synthetic java.lang.Object next() 	SignatureNotChanged
		public java.util.Map$Entry next()	=>	b()
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
		800	=>	1 and 2
		802	=>	3

Class: final com.google.gson.internal.LinkedHashTreeMap$KeySet	=>	com.a.a.b.d$g
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$KeySet
		final synthetic com.google.gson.internal.LinkedHashTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$KeySet
		void <init>(com.google.gson.internal.LinkedHashTreeMap) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean contains(java.lang.Object) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public boolean remove(java.lang.Object) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$KeySet
		829	=>	4
		831	=>	6
		835	=>	5
		843	=>	3
		847	=>	2
		851	=>	1
		852	=>	7

Class: com.google.gson.internal.LinkedHashTreeMap$KeySet$1	=>	com.a.a.b.d$g$a
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$KeySet$1
		final synthetic com.google.gson.internal.LinkedHashTreeMap$KeySet this$1	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$KeySet$1
		void <init>(com.google.gson.internal.LinkedHashTreeMap$KeySet) 	SignatureNotChanged
		public java.lang.Object next() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$KeySet$1
		835	=>	2
		837	=>	1

Class: abstract com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator	=>	com.a.a.b.d$b
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
		int expectedModCount	=>	a
		com.google.gson.internal.LinkedHashTreeMap$Node lastReturned	=>	c
		com.google.gson.internal.LinkedHashTreeMap$Node next	=>	b
		final synthetic com.google.gson.internal.LinkedHashTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
		void <init>(com.google.gson.internal.LinkedHashTreeMap) 	SignatureNotChanged
		private static java.util.NoSuchElementException a(java.util.NoSuchElementException) 	SignatureNotChanged
		public final boolean hasNext() 	SignatureNotChanged
		final com.google.gson.internal.LinkedHashTreeMap$Node nextNode()	=>	a()
		public final void remove() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
		761	=>	17
		762	=>	6
		763	=>	13
		765	=>	15
		766	=>	4
		769	=>	14
		773	=>	10
		774	=>	2
		775	=>	5
		777	=>	7
		778	=>	8
		780	=>	16
		781	=>	9
		785	=>	12
		786	=>	19
		788	=>	3
		789	=>	18
		790	=>	1
		791	=>	11

Class: final com.google.gson.internal.LinkedHashTreeMap$Node	=>	com.a.a.b.d$a
	Source: "LinkedHashTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedHashTreeMap$Node
		final int hash	=>	c
		int height	=>	h
		final java.lang.Object key	=>	i
		com.google.gson.internal.LinkedHashTreeMap$Node left	=>	d
		com.google.gson.internal.LinkedHashTreeMap$Node next	=>	e
		com.google.gson.internal.LinkedHashTreeMap$Node parent	=>	g
		com.google.gson.internal.LinkedHashTreeMap$Node prev	=>	b
		com.google.gson.internal.LinkedHashTreeMap$Node right	=>	a
		java.lang.Object value	=>	f
	MethodsOf: com.google.gson.internal.LinkedHashTreeMap$Node
		void <init>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.LinkedHashTreeMap$Node, java.lang.Object, int, com.google.gson.internal.LinkedHashTreeMap$Node, com.google.gson.internal.LinkedHashTreeMap$Node) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.google.gson.internal.LinkedHashTreeMap$Node first()	=>	a()
		public java.lang.Object getKey() 	SignatureNotChanged
		public java.lang.Object getValue() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public com.google.gson.internal.LinkedHashTreeMap$Node last()	=>	b()
		public java.lang.Object setValue(java.lang.Object) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedHashTreeMap$Node
		479	=>	32
		480	=>	27
		481	=>	33
		482	=>	29
		483	=>	12
		486	=>	13
		487	=>	18
		488	=>	2
		489	=>	24
		490	=>	3
		491	=>	1
		492	=>	25
		493	=>	34
		494	=>	6
		495	=>	40
		498	=>	5
		502	=>	36
		506	=>	37
		507	=>	42
		508	=>	10
		513	=>	19
		514	=>	38
		515	=>	16 and 28
		516	=>	17
		518	=>	7
		522	=>	26 and 35
		523	=>	9
		527	=>	20
		534	=>	15
		535	=>	30
		536	=>	14
		537	=>	21
		538	=>	4
		540	=>	8
		547	=>	22
		548	=>	39
		549	=>	11
		550	=>	23
		551	=>	31
		553	=>	41

Class: public final com.google.gson.internal.LinkedTreeMap	=>	com.a.a.b.o
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap
		static final synthetic boolean $assertionsDisabled	=>	a
		private static final java.util.Comparator NATURAL_ORDER	=>	e
		java.util.Comparator comparator	=>	f
		private com.google.gson.internal.LinkedTreeMap$EntrySet entrySet	=>	d
		final com.google.gson.internal.LinkedTreeMap$Node header	=>	b
		private com.google.gson.internal.LinkedTreeMap$KeySet keySet	=>	c
		int modCount	=>	h
		com.google.gson.internal.LinkedTreeMap$Node root	=>	g
		int size	=>	i
	MethodsOf: com.google.gson.internal.LinkedTreeMap
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.util.Comparator) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean containsKey(java.lang.Object) 	SignatureNotChanged
		public java.util.Set entrySet() 	SignatureNotChanged
		private boolean equal(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object, boolean)	=>	a(java.lang.Object, boolean)
		com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry)	=>	a(java.util.Map$Entry)
		com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object)	=>	b(java.lang.Object)
		public java.lang.Object get(java.lang.Object) 	SignatureNotChanged
		public java.util.Set keySet() 	SignatureNotChanged
		public java.lang.Object put(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		private void rebalance(com.google.gson.internal.LinkedTreeMap$Node, boolean)	=>	b(com.a.a.b.o$d, boolean)
		public java.lang.Object remove(java.lang.Object) 	SignatureNotChanged
		void removeInternal(com.google.gson.internal.LinkedTreeMap$Node, boolean)	=>	a(com.a.a.b.o$d, boolean)
		com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)	=>	a(java.lang.Object)
		private void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node)	=>	a(com.a.a.b.o$d, com.a.a.b.o$d)
		private void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)	=>	a(com.a.a.b.o$d)
		private void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)	=>	b(com.a.a.b.o$d)
		public int size() 	SignatureNotChanged
		private java.lang.Object writeReplace() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap
		38	=>	108
		40	=>	9
		48	=>	59
		49	=>	106
		52	=>	41
		60	=>	159
		61	=>	144
		71	=>	82
		72	=>	39
		75	=>	67
		78	=>	181
		82	=>	74
		83	=>	145
		87	=>	79
		91	=>	77
		92	=>	136
		94	=>	44
		95	=>	72
		96	=>	162
		97	=>	160
		101	=>	147
		102	=>	10
		103	=>	175
		106	=>	14
		107	=>	61
		108	=>	164
		111	=>	179
		112	=>	187
		122	=>	157
		123	=>	69
		124	=>	38
		126	=>	174
		129	=>	25
		134	=>	80
		135	=>	134
		136	=>	86
		139	=>	8
		140	=>	104
		144	=>	140
		145	=>	161
		146	=>	182
		149	=>	57
		150	=>	95
		154	=>	191
		155	=>	177
		159	=>	178
		161	=>	154
		163	=>	139
		164	=>	27
		166	=>	75
		167	=>	12
		169	=>	156
		170	=>	24
		171	=>	149
		173	=>	124
		175	=>	102
		177	=>	143
		178	=>	16
		180	=>	114
		186	=>	91
		187	=>	19
		188	=>	98
		202	=>	101
		203	=>	112
		204	=>	94
		208	=>	109
		218	=>	70
		219	=>	37
		220	=>	55
		223	=>	36
		224	=>	151
		225	=>	2
		226	=>	119
		237	=>	22
		238	=>	138
		240	=>	51
		241	=>	172
		242	=>	34
		243	=>	88
		244	=>	47
		245	=>	26
		246	=>	30
		249	=>	65
		250	=>	171
		251	=>	90
		252	=>	100
		253	=>	85
		254	=>	50
		255	=>	93
		258	=>	81
		259	=>	15
		260	=>	52
		261	=>	125
		262	=>	17
		263	=>	23
		264	=>	133
		265	=>	66
		266	=>	32
		268	=>	188
		271	=>	6
		272	=>	62
		273	=>	60
		274	=>	150
		277	=>	76
		278	=>	190
		279	=>	116
		281	=>	131
		285	=>	45
		286	=>	107
		287	=>	111
		288	=>	58
		291	=>	173
		292	=>	185
		293	=>	68
		295	=>	103
		296	=>	99
		299	=>	115
		301	=>	110
		311	=>	7 and 54
		312	=>	1
		313	=>	117
		314	=>	169
		315	=>	97
		317	=>	118
		318	=>	126
		319	=>	120
		320	=>	163
		321	=>	71
		322	=>	152
		324	=>	78
		325	=>	141
		326	=>	18
		328	=>	42
		329	=>	11
		330	=>	155
		332	=>	64
		333	=>	43
		336	=>	132
		337	=>	20
		338	=>	166
		339	=>	189
		340	=>	165
		342	=>	122
		343	=>	167
		344	=>	35
		346	=>	183
		347	=>	29
		348	=>	48
		350	=>	105
		351	=>	113
		354	=>	3
		355	=>	176
		356	=>	83
		357	=>	49
		361	=>	129
		362	=>	146
		363	=>	96
		364	=>	84
		368	=>	40
		374	=>	56
		375	=>	121
		376	=>	158
		377	=>	73
		380	=>	89
		381	=>	33
		382	=>	153
		385	=>	186
		388	=>	148
		389	=>	128
		392	=>	46
		394	=>	13
		396	=>	184
		402	=>	123
		403	=>	168
		404	=>	130
		405	=>	4
		408	=>	127
		409	=>	53
		410	=>	170
		413	=>	92
		416	=>	28
		417	=>	31
		420	=>	87
		422	=>	5
		424	=>	180
		430	=>	135
		431	=>	63
		435	=>	21
		436	=>	137
		628	=>	142

Class: final com.google.gson.internal.LinkedTreeMap$1	=>	com.a.a.b.o$b
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$1
	MethodsOf: com.google.gson.internal.LinkedTreeMap$1
		void <init>() 	SignatureNotChanged
		public int compare(java.lang.Comparable, java.lang.Comparable)	=>	a(java.lang.Comparable, java.lang.Comparable)
		public bridge synthetic int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$1
		40	=>	1 and 2
		42	=>	3

Class: com.google.gson.internal.LinkedTreeMap$EntrySet	=>	com.a.a.b.o$e
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$EntrySet
		final synthetic com.google.gson.internal.LinkedTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedTreeMap$EntrySet
		void <init>(com.google.gson.internal.LinkedTreeMap) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean contains(java.lang.Object) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public boolean remove(java.lang.Object) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$EntrySet
		560	=>	10
		562	=>	13
		566	=>	7
		574	=>	12
		578	=>	1
		579	=>	11
		582	=>	4
		583	=>	2
		584	=>	5
		586	=>	8
		587	=>	9
		591	=>	6
		592	=>	3

Class: com.google.gson.internal.LinkedTreeMap$EntrySet$1	=>	com.a.a.b.o$e$a
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$EntrySet$1
		final synthetic com.google.gson.internal.LinkedTreeMap$EntrySet this$1	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedTreeMap$EntrySet$1
		void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) 	SignatureNotChanged
		public bridge synthetic java.lang.Object next() 	SignatureNotChanged
		public java.util.Map$Entry next()	=>	b()
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$EntrySet$1
		566	=>	1 and 3
		568	=>	2

Class: final com.google.gson.internal.LinkedTreeMap$KeySet	=>	com.a.a.b.o$c
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$KeySet
		final synthetic com.google.gson.internal.LinkedTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedTreeMap$KeySet
		void <init>(com.google.gson.internal.LinkedTreeMap) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public boolean contains(java.lang.Object) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public boolean remove(java.lang.Object) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$KeySet
		595	=>	4
		597	=>	7
		601	=>	6
		609	=>	5
		613	=>	2
		617	=>	1
		618	=>	3

Class: com.google.gson.internal.LinkedTreeMap$KeySet$1	=>	com.a.a.b.o$c$a
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$KeySet$1
		final synthetic com.google.gson.internal.LinkedTreeMap$KeySet this$1	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedTreeMap$KeySet$1
		void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) 	SignatureNotChanged
		public java.lang.Object next() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$KeySet$1
		601	=>	2
		603	=>	1

Class: abstract com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator	=>	com.a.a.b.o$a
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator
		int expectedModCount	=>	c
		com.google.gson.internal.LinkedTreeMap$Node lastReturned	=>	b
		com.google.gson.internal.LinkedTreeMap$Node next	=>	a
		final synthetic com.google.gson.internal.LinkedTreeMap this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator
		void <init>(com.google.gson.internal.LinkedTreeMap) 	SignatureNotChanged
		private static java.util.NoSuchElementException a(java.util.NoSuchElementException) 	SignatureNotChanged
		public final boolean hasNext() 	SignatureNotChanged
		final com.google.gson.internal.LinkedTreeMap$Node nextNode()	=>	a()
		public final void remove() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator
		527	=>	18
		528	=>	15
		529	=>	12
		531	=>	11
		532	=>	8
		535	=>	7
		539	=>	3
		540	=>	4
		541	=>	2
		543	=>	5
		544	=>	14
		546	=>	13
		547	=>	6
		551	=>	9
		552	=>	19
		554	=>	1
		555	=>	10
		556	=>	16
		557	=>	17

Class: final com.google.gson.internal.LinkedTreeMap$Node	=>	com.a.a.b.o$d
	Source: "LinkedTreeMap.java"
	FieldsOf: com.google.gson.internal.LinkedTreeMap$Node
		int height	=>	d
		final java.lang.Object key	=>	e
		com.google.gson.internal.LinkedTreeMap$Node left	=>	c
		com.google.gson.internal.LinkedTreeMap$Node next	=>	b
		com.google.gson.internal.LinkedTreeMap$Node parent	=>	f
		com.google.gson.internal.LinkedTreeMap$Node prev	=>	h
		com.google.gson.internal.LinkedTreeMap$Node right	=>	g
		java.lang.Object value	=>	a
	MethodsOf: com.google.gson.internal.LinkedTreeMap$Node
		void <init>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.LinkedTreeMap$Node, java.lang.Object, com.google.gson.internal.LinkedTreeMap$Node, com.google.gson.internal.LinkedTreeMap$Node) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.google.gson.internal.LinkedTreeMap$Node first()	=>	b()
		public java.lang.Object getKey() 	SignatureNotChanged
		public java.lang.Object getValue() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public com.google.gson.internal.LinkedTreeMap$Node last()	=>	a()
		public java.lang.Object setValue(java.lang.Object) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.LinkedTreeMap$Node
		450	=>	30
		451	=>	39
		452	=>	25
		453	=>	34
		456	=>	23
		457	=>	2
		458	=>	1
		459	=>	8
		460	=>	36
		461	=>	11
		462	=>	29
		463	=>	40
		464	=>	24
		467	=>	13
		471	=>	37
		475	=>	14
		476	=>	31
		477	=>	12
		482	=>	6
		483	=>	19
		484	=>	3 and 15
		485	=>	32
		487	=>	17
		491	=>	7 and 9
		492	=>	28
		496	=>	10
		503	=>	35
		504	=>	18
		505	=>	4
		506	=>	20
		507	=>	26
		509	=>	38
		516	=>	16
		517	=>	5
		518	=>	22
		519	=>	27
		520	=>	21
		522	=>	33

Class: public abstract com.google.gson.internal.ObjectConstructor	=>	com.a.a.b.e
	Source: "ObjectConstructor.java"
	FieldsOf: com.google.gson.internal.ObjectConstructor
	MethodsOf: com.google.gson.internal.ObjectConstructor
		public abstract java.lang.Object construct()	=>	a()
	LineNumbersOf: com.google.gson.internal.ObjectConstructor

Class: public com.google.gson.internal.PreJava9DateFormatProvider	=>	com.a.a.b.m
	Source: "PreJava9DateFormatProvider.java"
	FieldsOf: com.google.gson.internal.PreJava9DateFormatProvider
	MethodsOf: com.google.gson.internal.PreJava9DateFormatProvider
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		private static java.lang.String getDateFormatPattern(int)	=>	d(int)
		private static java.lang.String getDatePartOfDateTimePattern(int)	=>	a(int)
		private static java.lang.String getTimePartOfDateTimePattern(int)	=>	c(int)
		public static java.text.DateFormat getUSDateFormat(int)	=>	b(int)
		public static java.text.DateFormat getUSDateTimeFormat(int, int)	=>	a(int, int)
	LineNumbersOf: com.google.gson.internal.PreJava9DateFormatProvider
		25	=>	12
		31	=>	10
		39	=>	13
		40	=>	6
		44	=>	21
		46	=>	3
		48	=>	7
		50	=>	9
		52	=>	2
		54	=>	20
		59	=>	4
		61	=>	5
		63	=>	1
		65	=>	8
		67	=>	18
		69	=>	16
		74	=>	14
		76	=>	19
		78	=>	17
		81	=>	11
		83	=>	15

Class: public final com.google.gson.internal.Primitives	=>	com.a.a.b.q
	Source: "Primitives.java"
	FieldsOf: com.google.gson.internal.Primitives
		private static final java.util.Map PRIMITIVE_TO_WRAPPER_TYPE	=>	b
		private static final java.util.Map WRAPPER_TO_PRIMITIVE_TYPE	=>	a
	MethodsOf: com.google.gson.internal.Primitives
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		private static void add(java.util.Map, java.util.Map, java.lang.Class, java.lang.Class)	=>	a(java.util.Map, java.util.Map, java.lang.Class, java.lang.Class)
		public static boolean isPrimitive(java.lang.reflect.Type)	=>	a(java.lang.reflect.Type)
		public static boolean isWrapperType(java.lang.reflect.Type)	=>	b(java.lang.reflect.Type)
		public static java.lang.Class unwrap(java.lang.Class)	=>	a(java.lang.Class)
		public static java.lang.Class wrap(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.Primitives
		32	=>	25
		33	=>	1
		45	=>	20
		46	=>	6
		48	=>	7
		49	=>	2
		50	=>	13
		51	=>	12
		52	=>	27
		53	=>	3
		54	=>	4
		55	=>	23
		56	=>	18
		58	=>	5
		59	=>	26
		60	=>	14
		64	=>	29
		65	=>	31
		66	=>	8
		72	=>	28
		82	=>	9 and 10
		83	=>	22
		98	=>	11 and 17
		99	=>	21
		100	=>	19
		115	=>	24 and 30
		116	=>	16
		117	=>	15

Class: public final com.google.gson.internal.Streams	=>	com.a.a.b.i
	Source: "Streams.java"
	FieldsOf: com.google.gson.internal.Streams
	MethodsOf: com.google.gson.internal.Streams
		private void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public static void write(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)	=>	a(com.a.a.g, com.a.a.c.d)
		public static java.io.Writer writerForAppendable(java.lang.Appendable)	=>	a(java.lang.Appendable)
	LineNumbersOf: com.google.gson.internal.Streams
		36	=>	12
		37	=>	19
		44	=>	14
		46	=>	15
		47	=>	8
		48	=>	2
		49	=>	18
		54	=>	6
		55	=>	17
		58	=>	5
		59	=>	1
		60	=>	7
		61	=>	3
		62	=>	4
		63	=>	10
		64	=>	11
		72	=>	9
		73	=>	16
		76	=>	13

Class: final com.google.gson.internal.Streams$AppendableWriter	=>	com.a.a.b.i$a
	Source: "Streams.java"
	FieldsOf: com.google.gson.internal.Streams$AppendableWriter
		private final java.lang.Appendable appendable	=>	a
		private final com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite	=>	b
	MethodsOf: com.google.gson.internal.Streams$AppendableWriter
		void <init>(java.lang.Appendable) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void flush() 	SignatureNotChanged
		public void write(char[], int, int) 	SignatureNotChanged
		public void write(int) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.Streams$AppendableWriter
		85	=>	6
		87	=>	2
		88	=>	11
		89	=>	7
		92	=>	8
		93	=>	5
		94	=>	9
		97	=>	10
		98	=>	4
		100	=>	1
		101	=>	3

Class: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite	=>	com.a.a.b.i$a$b
	Source: "Streams.java"
	FieldsOf: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
		char[] chars	=>	a
	MethodsOf: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
		void <init>() 	SignatureNotChanged
		public char charAt(int) 	SignatureNotChanged
		public int length() 	SignatureNotChanged
		public java.lang.CharSequence subSequence(int, int) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
		106	=>	4
		109	=>	3
		112	=>	1
		115	=>	2

Class: public abstract com.google.gson.internal.UnsafeAllocator	=>	com.a.a.b.p
	Source: "UnsafeAllocator.java"
	FieldsOf: com.google.gson.internal.UnsafeAllocator
	MethodsOf: com.google.gson.internal.UnsafeAllocator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		static void assertInstantiable(java.lang.Class)	=>	a(java.lang.Class)
		public static com.google.gson.internal.UnsafeAllocator create()	=>	a()
		public abstract java.lang.Object newInstance(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.UnsafeAllocator
		31	=>	5
		40	=>	11
		41	=>	15
		42	=>	10
		43	=>	18
		44	=>	1
		45	=>	23
		53	=>	12
		62	=>	27
		63	=>	7
		64	=>	25
		65	=>	17
		66	=>	16
		67	=>	24
		68	=>	28
		69	=>	14
		77	=>	3
		86	=>	4
		87	=>	9
		88	=>	22
		89	=>	19
		97	=>	2
		101	=>	6
		115	=>	29
		116	=>	21
		117	=>	8
		119	=>	13
		120	=>	20
		122	=>	26

Class: final com.google.gson.internal.UnsafeAllocator$1	=>	com.a.a.b.p$a
	Source: "UnsafeAllocator.java"
	FieldsOf: com.google.gson.internal.UnsafeAllocator$1
		final synthetic java.lang.reflect.Method val$allocateInstance	NameNotChanged
		final synthetic java.lang.Object val$unsafe	NameNotChanged
	MethodsOf: com.google.gson.internal.UnsafeAllocator$1
		void <init>(java.lang.reflect.Method, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object newInstance(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.UnsafeAllocator$1
		45	=>	2
		49	=>	3
		50	=>	1

Class: final com.google.gson.internal.UnsafeAllocator$2	=>	com.a.a.b.p$b
	Source: "UnsafeAllocator.java"
	FieldsOf: com.google.gson.internal.UnsafeAllocator$2
		final synthetic int val$constructorId	NameNotChanged
		final synthetic java.lang.reflect.Method val$newInstance	NameNotChanged
	MethodsOf: com.google.gson.internal.UnsafeAllocator$2
		void <init>(java.lang.reflect.Method, int) 	SignatureNotChanged
		public java.lang.Object newInstance(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.UnsafeAllocator$2
		69	=>	1
		73	=>	2
		74	=>	3

Class: final com.google.gson.internal.UnsafeAllocator$3	=>	com.a.a.b.p$c
	Source: "UnsafeAllocator.java"
	FieldsOf: com.google.gson.internal.UnsafeAllocator$3
		final synthetic java.lang.reflect.Method val$newInstance	NameNotChanged
	MethodsOf: com.google.gson.internal.UnsafeAllocator$3
		void <init>(java.lang.reflect.Method) 	SignatureNotChanged
		public java.lang.Object newInstance(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.UnsafeAllocator$3
		89	=>	1
		93	=>	2
		94	=>	3

Class: final com.google.gson.internal.UnsafeAllocator$4	=>	com.a.a.b.p$d
	Source: "UnsafeAllocator.java"
	FieldsOf: com.google.gson.internal.UnsafeAllocator$4
	MethodsOf: com.google.gson.internal.UnsafeAllocator$4
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		public java.lang.Object newInstance(java.lang.Class)	=>	b(java.lang.Class)
	LineNumbersOf: com.google.gson.internal.UnsafeAllocator$4
		101	=>	2
		104	=>	1

Class: public final com.google.gson.internal.bind.ArrayTypeAdapter	=>	com.a.a.b.b.d
	Source: "ArrayTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.ArrayTypeAdapter
		public static final com.google.gson.TypeAdapterFactory FACTORY	=>	d
		private final java.lang.Class componentType	=>	a
		private final com.google.gson.TypeAdapter componentTypeAdapter	=>	c
	MethodsOf: com.google.gson.internal.bind.ArrayTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.google.gson.Gson, com.google.gson.TypeAdapter, java.lang.Class) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.ArrayTypeAdapter
		39	=>	5
		57	=>	9
		58	=>	21
		60	=>	4
		61	=>	1
		64	=>	25
		65	=>	18
		66	=>	10
		69	=>	3
		70	=>	13
		71	=>	17
		72	=>	22
		73	=>	23
		74	=>	6
		75	=>	28
		77	=>	31
		78	=>	27
		79	=>	2 and 20
		80	=>	7
		82	=>	19
		87	=>	16
		88	=>	29
		89	=>	26
		92	=>	14
		93	=>	8 and 12
		94	=>	15
		95	=>	11
		97	=>	30
		98	=>	24

Class: final com.google.gson.internal.bind.ArrayTypeAdapter$1	=>	com.a.a.b.b.d$a
	Source: "ArrayTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.ArrayTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.ArrayTypeAdapter$1
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.ArrayTypeAdapter$1
		39	=>	1
		42	=>	6
		43	=>	3
		44	=>	4
		47	=>	7
		48	=>	2
		49	=>	8 and 9
		50	=>	5

Class: public final com.google.gson.internal.bind.CollectionTypeAdapterFactory	=>	com.a.a.b.b.m
	Source: "CollectionTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory
		private final com.google.gson.internal.ConstructorConstructor constructorConstructor	=>	a
	MethodsOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory
		public void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory
		39	=>	9
		40	=>	3
		41	=>	7
		45	=>	11
		47	=>	5
		48	=>	8
		49	=>	1
		52	=>	6
		53	=>	10
		54	=>	12
		57	=>	4
		58	=>	2

Class: final com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter	=>	com.a.a.b.b.m$a
	Source: "CollectionTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
		private final com.google.gson.internal.ObjectConstructor constructor	=>	a
		private final com.google.gson.TypeAdapter elementTypeAdapter	=>	c
	MethodsOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
		public void <init>(com.google.gson.Gson, java.lang.reflect.Type, com.google.gson.TypeAdapter, com.google.gson.internal.ObjectConstructor) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Collection read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Collection)	=>	a(com.a.a.c.d, java.util.Collection)
	LineNumbersOf: com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
		61	=>	21 and 22
		67	=>	8
		68	=>	26
		70	=>	24
		71	=>	4
		74	=>	23
		75	=>	3
		76	=>	9
		79	=>	16
		80	=>	1
		81	=>	18
		82	=>	2
		83	=>	19
		84	=>	14
		85	=>	20
		86	=>	5
		90	=>	12
		91	=>	6
		92	=>	11
		95	=>	25
		96	=>	17
		97	=>	13
		98	=>	7
		99	=>	15
		100	=>	10

Class: public final com.google.gson.internal.bind.DateTypeAdapter	=>	com.a.a.b.b.e
	Source: "DateTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.DateTypeAdapter
		public static final com.google.gson.TypeAdapterFactory FACTORY	=>	c
		private final java.util.List dateFormats	=>	a
	MethodsOf: com.google.gson.internal.bind.DateTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private synchronized java.util.Date deserializeToDate(java.lang.String)	=>	b(java.lang.String)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Date read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public synchronized void write(com.google.gson.stream.JsonWriter, java.util.Date)	=>	a(com.a.a.c.d, java.util.Date)
	LineNumbersOf: com.google.gson.internal.bind.DateTypeAdapter
		46	=>	15 and 22
		47	=>	26
		58	=>	16
		60	=>	11
		61	=>	28
		62	=>	14
		63	=>	24
		65	=>	21
		66	=>	8
		68	=>	25
		71	=>	3
		72	=>	5
		73	=>	12
		75	=>	18
		79	=>	2
		81	=>	23
		82	=>	7
		83	=>	9
		85	=>	6
		86	=>	19
		87	=>	20
		92	=>	17
		93	=>	27
		94	=>	1
		96	=>	4
		97	=>	10
		98	=>	13

Class: final com.google.gson.internal.bind.DateTypeAdapter$1	=>	com.a.a.b.b.e$a
	Source: "DateTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.DateTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.DateTypeAdapter$1
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.DateTypeAdapter$1
		47	=>	2
		50	=>	1

Class: public final com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory	=>	com.a.a.b.b.c
	Source: "JsonAdapterAnnotationTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
		private final com.google.gson.internal.ConstructorConstructor constructorConstructor	=>	a
	MethodsOf: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.google.gson.internal.ConstructorConstructor) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor, com.google.gson.Gson, com.google.gson.reflect.TypeToken, com.google.gson.annotations.JsonAdapter)	=>	a(com.a.a.b.j, com.a.a.y, com.a.a.a.a, com.a.a.d.a)
	LineNumbersOf: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
		37	=>	19
		38	=>	7
		39	=>	5
		44	=>	22
		45	=>	12
		46	=>	13
		47	=>	11
		49	=>	6
		55	=>	8
		58	=>	20
		59	=>	10
		60	=>	14
		61	=>	21
		62	=>	2
		63	=>	23
		66	=>	15
		69	=>	18
		70	=>	4
		71	=>	17
		72	=>	3
		77	=>	16
		78	=>	1
		81	=>	9

Class: public final com.google.gson.internal.bind.JsonTreeReader	=>	com.a.a.b.b.n
	Source: "JsonTreeReader.java"
	FieldsOf: com.google.gson.internal.bind.JsonTreeReader
		private static final java.lang.Object SENTINEL_CLOSED	=>	t
		private static final java.io.Reader UNREADABLE_READER	=>	v
		private int[] pathIndices	=>	r
		private java.lang.String[] pathNames	=>	u
		private java.lang.Object[] stack	=>	w
		private int stackSize	=>	s
	MethodsOf: com.google.gson.internal.bind.JsonTreeReader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.google.gson.JsonElement) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void beginArray()	=>	x()
		public void beginObject()	=>	n()
		public void close() 	SignatureNotChanged
		public void endArray()	=>	a()
		public void endObject()	=>	z()
		private void expect(com.google.gson.stream.JsonToken)	=>	a(com.a.a.c.a)
		public java.lang.String getPath()	=>	k()
		public boolean hasNext()	=>	j()
		private java.lang.String locationString()	=>	C()
		public boolean nextBoolean()	=>	A()
		public double nextDouble()	=>	f()
		public int nextInt()	=>	h()
		public long nextLong()	=>	e()
		public java.lang.String nextName()	=>	o()
		public void nextNull()	=>	y()
		public java.lang.String nextString()	=>	v()
		public com.google.gson.stream.JsonToken peek()	=>	c()
		private java.lang.Object peekStack()	=>	B()
		private java.lang.Object popStack()	=>	D()
		public void promoteNameToValue()	=>	E()
		private void push(java.lang.Object)	=>	a(java.lang.Object)
		public void skipValue()	=>	u()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.JsonTreeReader
		38	=>	155
		46	=>	67
		51	=>	19
		52	=>	149
		62	=>	90
		63	=>	129
		66	=>	27
		67	=>	164
		68	=>	70
		71	=>	76
		72	=>	6
		73	=>	24
		74	=>	115
		75	=>	100
		78	=>	145
		79	=>	160
		80	=>	126
		81	=>	88
		82	=>	85
		84	=>	55
		87	=>	131
		88	=>	109
		89	=>	137
		90	=>	21
		93	=>	29
		94	=>	103
		95	=>	114
		96	=>	17
		97	=>	97
		99	=>	16
		102	=>	119
		103	=>	31
		107	=>	69
		108	=>	51
		111	=>	122
		112	=>	5
		113	=>	73
		114	=>	166
		115	=>	117
		116	=>	142
		117	=>	12
		119	=>	140
		120	=>	105
		123	=>	162
		125	=>	153
		126	=>	72
		127	=>	94
		128	=>	157
		129	=>	156
		130	=>	71
		131	=>	141
		132	=>	74
		133	=>	75
		134	=>	4
		135	=>	68
		136	=>	63
		138	=>	44
		140	=>	48
		141	=>	112
		142	=>	2
		143	=>	66
		145	=>	25
		150	=>	54
		154	=>	15
		155	=>	45
		156	=>	34
		160	=>	107
		161	=>	161
		162	=>	79
		164	=>	80
		167	=>	50
		168	=>	64
		169	=>	165
		170	=>	151
		171	=>	96
		172	=>	26
		173	=>	57
		177	=>	152
		178	=>	32
		179	=>	14
		180	=>	102
		182	=>	56
		183	=>	92
		184	=>	87
		186	=>	7
		190	=>	106
		191	=>	11
		192	=>	20
		193	=>	13
		195	=>	10
		199	=>	53
		200	=>	65
		201	=>	168
		202	=>	82
		204	=>	143
		207	=>	116
		208	=>	22
		209	=>	144
		210	=>	42
		212	=>	99
		213	=>	113
		214	=>	101
		216	=>	148
		217	=>	136
		218	=>	78
		220	=>	30
		224	=>	154
		225	=>	104
		226	=>	128
		227	=>	135
		229	=>	159
		230	=>	147
		231	=>	43
		232	=>	35
		234	=>	139
		238	=>	18
		239	=>	33
		240	=>	62
		241	=>	47
		243	=>	108
		244	=>	93
		245	=>	91
		246	=>	110
		248	=>	41
		252	=>	23
		253	=>	39
		254	=>	121
		257	=>	60
		258	=>	127
		259	=>	81
		261	=>	49
		262	=>	150
		263	=>	125
		266	=>	84
		267	=>	59
		269	=>	123
		272	=>	163
		276	=>	38
		277	=>	134
		278	=>	138
		279	=>	95
		280	=>	158
		281	=>	1
		284	=>	167
		285	=>	118
		286	=>	36
		287	=>	89
		288	=>	9
		289	=>	37
		290	=>	40
		291	=>	111
		292	=>	3
		293	=>	124
		295	=>	133
		296	=>	98
		299	=>	28
		300	=>	77 and 130
		301	=>	86
		302	=>	8
		303	=>	61
		305	=>	83
		306	=>	120
		307	=>	146
		308	=>	132
		309	=>	58
		314	=>	52
		318	=>	46

Class: final com.google.gson.internal.bind.JsonTreeReader$1	=>	com.a.a.b.b.n$a
	Source: "JsonTreeReader.java"
	FieldsOf: com.google.gson.internal.bind.JsonTreeReader$1
	MethodsOf: com.google.gson.internal.bind.JsonTreeReader$1
		void <init>() 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public int read(char[], int, int) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.JsonTreeReader$1
		38	=>	2
		40	=>	1
		43	=>	3

Class: public final com.google.gson.internal.bind.JsonTreeWriter	=>	com.a.a.b.b.k
	Source: "JsonTreeWriter.java"
	FieldsOf: com.google.gson.internal.bind.JsonTreeWriter
		private static final com.google.gson.JsonPrimitive SENTINEL_CLOSED	=>	o
		private static final java.io.Writer UNWRITABLE_WRITER	=>	p
		private java.lang.String pendingName	=>	m
		private com.google.gson.JsonElement product	=>	n
		private final java.util.List stack	=>	q
	MethodsOf: com.google.gson.internal.bind.JsonTreeWriter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception b(java.lang.Exception) 	SignatureNotChanged
		public com.google.gson.stream.JsonWriter beginArray()	=>	n()
		public com.google.gson.stream.JsonWriter beginObject()	=>	k()
		public void close() 	SignatureNotChanged
		public com.google.gson.stream.JsonWriter endArray()	=>	a()
		public com.google.gson.stream.JsonWriter endObject()	=>	e()
		public void flush() 	SignatureNotChanged
		public com.google.gson.JsonElement get()	=>	p()
		public com.google.gson.stream.JsonWriter name(java.lang.String)	=>	b(java.lang.String)
		public com.google.gson.stream.JsonWriter nullValue()	=>	c()
		private com.google.gson.JsonElement peek()	=>	o()
		private void put(com.google.gson.JsonElement)	=>	a(com.a.a.g)
		public com.google.gson.stream.JsonWriter value(boolean)	=>	b(boolean)
		public com.google.gson.stream.JsonWriter value(double)	=>	a(double)
		public com.google.gson.stream.JsonWriter value(java.lang.Boolean)	=>	a(java.lang.Boolean)
		public com.google.gson.stream.JsonWriter value(java.lang.Number)	=>	a(java.lang.Number)
		public com.google.gson.stream.JsonWriter value(java.lang.String)	=>	e(java.lang.String)
		public com.google.gson.stream.JsonWriter value(long)	=>	a(long)
	LineNumbersOf: com.google.gson.internal.bind.JsonTreeWriter
		34	=>	11
		46	=>	10
		49	=>	28
		55	=>	41
		58	=>	7
		59	=>	30
		65	=>	67
		66	=>	34
		68	=>	5
		72	=>	55
		76	=>	14
		77	=>	78
		78	=>	61
		79	=>	71
		81	=>	29
		82	=>	68
		83	=>	32
		85	=>	47
		86	=>	63
		87	=>	82
		89	=>	9
		92	=>	60
		95	=>	40
		96	=>	21
		97	=>	48
		98	=>	53
		102	=>	62
		103	=>	1
		105	=>	79
		106	=>	17
		107	=>	66
		108	=>	75
		110	=>	2
		114	=>	35
		115	=>	37
		116	=>	76
		117	=>	13
		121	=>	46
		122	=>	16
		124	=>	73
		125	=>	23
		126	=>	33
		127	=>	44
		129	=>	12
		133	=>	54
		134	=>	18
		136	=>	64
		137	=>	4
		138	=>	59
		139	=>	74
		141	=>	51
		145	=>	24
		146	=>	45
		148	=>	8
		149	=>	72
		153	=>	81
		154	=>	27
		158	=>	69
		159	=>	42
		163	=>	20
		164	=>	26
		166	=>	36
		167	=>	49
		171	=>	56
		172	=>	57
		174	=>	80
		175	=>	3
		179	=>	31
		180	=>	70
		184	=>	15
		185	=>	22
		188	=>	25
		189	=>	58
		190	=>	19
		191	=>	65
		195	=>	43
		196	=>	39
		200	=>	50
		203	=>	77
		204	=>	52
		206	=>	38
		207	=>	6

Class: final com.google.gson.internal.bind.JsonTreeWriter$1	=>	com.a.a.b.b.k$a
	Source: "JsonTreeWriter.java"
	FieldsOf: com.google.gson.internal.bind.JsonTreeWriter$1
	MethodsOf: com.google.gson.internal.bind.JsonTreeWriter$1
		void <init>() 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void flush() 	SignatureNotChanged
		public void write(char[], int, int) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.JsonTreeWriter$1
		34	=>	2
		36	=>	1
		39	=>	3
		42	=>	4

Class: public final com.google.gson.internal.bind.MapTypeAdapterFactory	=>	com.a.a.b.b.l
	Source: "MapTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.MapTypeAdapterFactory
		final boolean complexMapKeySerialization	=>	b
		private final com.google.gson.internal.ConstructorConstructor constructorConstructor	=>	a
	MethodsOf: com.google.gson.internal.bind.MapTypeAdapterFactory
		public void <init>(com.google.gson.internal.ConstructorConstructor, boolean) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		private com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson, java.lang.reflect.Type)	=>	a(com.a.a.y, java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.internal.bind.MapTypeAdapterFactory
		110	=>	11
		111	=>	13
		112	=>	12
		113	=>	2
		116	=>	4
		118	=>	17
		119	=>	1
		120	=>	6
		123	=>	14
		124	=>	10
		125	=>	15
		126	=>	7
		127	=>	3
		131	=>	9
		133	=>	8
		140	=>	16 and 18
		142	=>	5

Class: final com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter	=>	com.a.a.b.b.l$a
	Source: "MapTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
		private final com.google.gson.internal.ObjectConstructor constructor	=>	d
		private final com.google.gson.TypeAdapter keyTypeAdapter	=>	c
		final synthetic com.google.gson.internal.bind.MapTypeAdapterFactory this$0	NameNotChanged
		private final com.google.gson.TypeAdapter valueTypeAdapter	=>	a
	MethodsOf: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory, com.google.gson.Gson, java.lang.reflect.Type, com.google.gson.TypeAdapter, java.lang.reflect.Type, com.google.gson.TypeAdapter, com.google.gson.internal.ObjectConstructor) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.lang.String keyToString(com.google.gson.JsonElement)	=>	b(com.a.a.g)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Map read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Map)	=>	a(com.a.a.c.d, java.util.Map)
	LineNumbersOf: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
		145	=>	60 and 80
		152	=>	38
		153	=>	44
		155	=>	22
		157	=>	66
		158	=>	50
		161	=>	62
		162	=>	58
		163	=>	46
		164	=>	43
		167	=>	12
		169	=>	5
		170	=>	61
		171	=>	34
		172	=>	2
		173	=>	67
		174	=>	70
		175	=>	59
		176	=>	72
		177	=>	29
		179	=>	3
		180	=>	23
		181	=>	6
		183	=>	82
		184	=>	53
		185	=>	9
		186	=>	32
		187	=>	37
		188	=>	41
		189	=>	57
		190	=>	4
		192	=>	40
		193	=>	13
		195	=>	42
		199	=>	25
		200	=>	45
		201	=>	73
		204	=>	15
		205	=>	76
		206	=>	48
		207	=>	39
		208	=>	84
		209	=>	47
		210	=>	21
		211	=>	24
		214	=>	7
		215	=>	79
		217	=>	78
		218	=>	56
		219	=>	63
		220	=>	49
		221	=>	28
		222	=>	10
		223	=>	31
		225	=>	52
		226	=>	8
		227	=>	26 and 65
		228	=>	35
		229	=>	27
		230	=>	77
		231	=>	83
		233	=>	81
		235	=>	71
		236	=>	16 and 20
		237	=>	14
		238	=>	68
		239	=>	51
		241	=>	74
		243	=>	11
		246	=>	36
		247	=>	64
		248	=>	75
		249	=>	69
		250	=>	1
		251	=>	19
		252	=>	33
		253	=>	17
		255	=>	18
		257	=>	55
		258	=>	30
		260	=>	54

Class: public final com.google.gson.internal.bind.ObjectTypeAdapter	=>	com.a.a.b.b.f
	Source: "ObjectTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.ObjectTypeAdapter
		public static final com.google.gson.TypeAdapterFactory FACTORY	=>	a
		private final com.google.gson.Gson gson	=>	c
	MethodsOf: com.google.gson.internal.bind.ObjectTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.google.gson.Gson) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.ObjectTypeAdapter
		38	=>	15
		50	=>	27
		51	=>	25
		52	=>	10
		55	=>	9
		56	=>	34
		58	=>	16
		59	=>	1
		60	=>	3
		61	=>	29
		63	=>	21
		64	=>	5
		67	=>	18
		68	=>	8
		69	=>	11
		70	=>	19
		72	=>	23
		73	=>	26
		76	=>	4
		79	=>	30
		82	=>	22
		85	=>	24
		86	=>	28
		89	=>	33
		95	=>	20
		96	=>	6
		97	=>	2
		100	=>	12
		101	=>	7
		102	=>	31
		103	=>	13
		104	=>	32
		107	=>	17
		108	=>	14

Class: final com.google.gson.internal.bind.ObjectTypeAdapter$1	=>	com.a.a.b.b.f$a
	Source: "ObjectTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.ObjectTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.ObjectTypeAdapter$1
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.ObjectTypeAdapter$1
		38	=>	4
		41	=>	1
		42	=>	3
		44	=>	2

Class: synthetic com.google.gson.internal.bind.ObjectTypeAdapter$2	=>	com.a.a.b.b.f$b
	Source: "ObjectTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.ObjectTypeAdapter$2
		static final synthetic int[] $SwitchMap$com$google$gson$stream$JsonToken	=>	a
	MethodsOf: com.google.gson.internal.bind.ObjectTypeAdapter$2
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.ObjectTypeAdapter$2
		56	=>	1

Class: public final com.google.gson.internal.bind.ReflectiveTypeAdapterFactory	=>	com.a.a.b.b.o
	Source: "ReflectiveTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
		private final com.google.gson.internal.reflect.ReflectionAccessor accessor	=>	c
		private final com.google.gson.internal.ConstructorConstructor constructorConstructor	=>	a
		private final com.google.gson.internal.Excluder excluder	=>	b
		private final com.google.gson.FieldNamingStrategy fieldNamingPolicy	=>	d
		private final com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory	=>	e
	MethodsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.google.gson.internal.ConstructorConstructor, com.google.gson.FieldNamingStrategy, com.google.gson.internal.Excluder, com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson, java.lang.reflect.Field, java.lang.String, com.google.gson.reflect.TypeToken, boolean, boolean)	=>	a(com.a.a.y, java.lang.reflect.Field, java.lang.String, com.a.a.a.a, boolean, boolean)
		public boolean excludeField(java.lang.reflect.Field, boolean)	=>	a(java.lang.reflect.Field, boolean)
		static boolean excludeField(java.lang.reflect.Field, boolean, com.google.gson.internal.Excluder)	=>	a(java.lang.reflect.Field, boolean, com.a.a.b.f)
		private java.util.Map getBoundFields(com.google.gson.Gson, com.google.gson.reflect.TypeToken, java.lang.Class)	=>	a(com.a.a.y, com.a.a.a.a, java.lang.Class)
		private java.util.List getFieldNames(java.lang.reflect.Field)	=>	a(java.lang.reflect.Field)
	LineNumbersOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
		53	=>	68
		57	=>	26
		58	=>	20
		59	=>	1
		60	=>	22
		61	=>	48
		62	=>	17
		65	=>	24
		69	=>	2
		74	=>	12
		75	=>	57
		76	=>	27
		77	=>	51
		80	=>	65
		81	=>	32
		82	=>	59
		83	=>	39
		86	=>	43
		87	=>	60
		88	=>	5 and 41
		89	=>	37
		91	=>	52
		95	=>	9
		97	=>	18
		98	=>	4
		101	=>	55
		102	=>	44
		108	=>	45
		110	=>	34
		111	=>	49
		112	=>	54
		113	=>	62
		116	=>	30
		117	=>	64
		119	=>	3
		120	=>	16
		145	=>	11
		146	=>	10
		147	=>	25
		150	=>	35
		151	=>	15
		152	=>	42
		153	=>	14 and 21
		154	=>	36
		155	=>	31
		156	=>	38
		157	=>	33
		159	=>	53
		160	=>	58
		161	=>	6
		162	=>	50
		163	=>	13 and 19
		164	=>	23
		165	=>	67
		166	=>	40 and 56
		167	=>	46
		168	=>	29
		169	=>	28
		171	=>	8
		172	=>	63
		176	=>	47
		177	=>	66
		178	=>	61
		179	=>	7

Class: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1	=>	com.a.a.b.b.o$a
	Source: "ReflectiveTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1
		final synthetic com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0	NameNotChanged
		final synthetic com.google.gson.Gson val$context	NameNotChanged
		final synthetic java.lang.reflect.Field val$field	NameNotChanged
		final synthetic com.google.gson.reflect.TypeToken val$fieldType	NameNotChanged
		final synthetic boolean val$isPrimitive	NameNotChanged
		final synthetic boolean val$jsonAdapterPresent	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1
		void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory, java.lang.String, boolean, boolean, java.lang.reflect.Field, boolean, com.google.gson.TypeAdapter, com.google.gson.Gson, com.google.gson.reflect.TypeToken, boolean) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		void read(com.google.gson.stream.JsonReader, java.lang.Object)	=>	a(com.a.a.c.e, java.lang.Object)
		void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public boolean writeField(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1
		120	=>	3
		124	=>	11
		125	=>	13
		126	=>	5
		127	=>	2
		128	=>	1
		131	=>	7
		132	=>	12
		133	=>	10
		135	=>	8
		137	=>	9
		138	=>	6
		139	=>	4

Class: public final com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter	=>	com.a.a.b.b.o$b
	Source: "ReflectiveTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
		private final java.util.Map boundFields	=>	c
		private final com.google.gson.internal.ObjectConstructor constructor	=>	a
	MethodsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
		void <init>(com.google.gson.internal.ObjectConstructor, java.util.Map) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
		201	=>	25
		202	=>	18
		203	=>	4
		204	=>	8
		207	=>	22
		208	=>	34
		209	=>	30
		212	=>	16
		215	=>	31
		216	=>	32
		217	=>	17
		218	=>	7
		219	=>	24
		220	=>	6
		222	=>	37
		224	=>	28
		225	=>	2
		226	=>	13
		227	=>	20
		228	=>	14
		229	=>	36
		230	=>	19
		231	=>	33
		235	=>	29
		236	=>	23
		237	=>	12
		240	=>	26
		242	=>	15
		243	=>	1
		244	=>	27
		245	=>	10
		247	=>	35
		248	=>	11
		249	=>	3
		250	=>	21
		251	=>	9
		252	=>	5

Class: abstract com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField	=>	com.a.a.b.b.o$c
	Source: "ReflectiveTypeAdapterFactory.java"
	FieldsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField
		final boolean deserialized	=>	a
		final java.lang.String name	=>	c
		final boolean serialized	=>	b
	MethodsOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField
		protected void <init>(java.lang.String, boolean, boolean) 	SignatureNotChanged
		abstract void read(com.google.gson.stream.JsonReader, java.lang.Object)	=>	a(com.a.a.c.e, java.lang.Object)
		abstract void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		abstract boolean writeField(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField
		187	=>	4
		188	=>	1
		189	=>	3
		190	=>	2
		191	=>	5

Class: public final com.google.gson.internal.bind.SqlDateTypeAdapter	=>	com.a.a.b.b.g
	Source: "SqlDateTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.SqlDateTypeAdapter
		public static final com.google.gson.TypeAdapterFactory FACTORY	=>	a
		private final java.text.DateFormat format	=>	c
	MethodsOf: com.google.gson.internal.bind.SqlDateTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public synchronized java.sql.Date read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public synchronized void write(com.google.gson.stream.JsonWriter, java.sql.Date)	=>	a(com.a.a.c.d, java.sql.Date)
	LineNumbersOf: com.google.gson.internal.bind.SqlDateTypeAdapter
		38	=>	2, 6 and 10
		39	=>	12
		47	=>	7
		51	=>	14
		52	=>	3
		53	=>	13
		56	=>	5
		57	=>	9
		58	=>	4
		59	=>	11
		65	=>	1
		66	=>	8

Class: final com.google.gson.internal.bind.SqlDateTypeAdapter$1	=>	com.a.a.b.b.g$a
	Source: "SqlDateTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.SqlDateTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.SqlDateTypeAdapter$1
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.SqlDateTypeAdapter$1
		39	=>	1
		42	=>	2

Class: public final com.google.gson.internal.bind.TimeTypeAdapter	=>	com.a.a.b.b.h
	Source: "TimeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TimeTypeAdapter
		public static final com.google.gson.TypeAdapterFactory FACTORY	=>	a
		private final java.text.DateFormat format	=>	c
	MethodsOf: com.google.gson.internal.bind.TimeTypeAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public synchronized java.sql.Time read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public synchronized void write(com.google.gson.stream.JsonWriter, java.sql.Time)	=>	a(com.a.a.c.d, java.sql.Time)
	LineNumbersOf: com.google.gson.internal.bind.TimeTypeAdapter
		40	=>	3, 10 and 13
		41	=>	9
		48	=>	11
		51	=>	14
		52	=>	6
		53	=>	1
		56	=>	12
		57	=>	2
		58	=>	4
		59	=>	7
		64	=>	8
		65	=>	5

Class: final com.google.gson.internal.bind.TimeTypeAdapter$1	=>	com.a.a.b.b.h$a
	Source: "TimeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TimeTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.TimeTypeAdapter$1
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.TimeTypeAdapter$1
		41	=>	1
		44	=>	2

Class: public final com.google.gson.internal.bind.TreeTypeAdapter	=>	com.a.a.b.b.i
	Source: "TreeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TreeTypeAdapter
		private final com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context	=>	a
		private com.google.gson.TypeAdapter delegate	=>	d
		private final com.google.gson.JsonDeserializer deserializer	=>	f
		final com.google.gson.Gson gson	=>	e
		private final com.google.gson.JsonSerializer serializer	=>	c
		private final com.google.gson.TypeAdapterFactory skipPast	=>	g
		private final com.google.gson.reflect.TypeToken typeToken	=>	h
	MethodsOf: com.google.gson.internal.bind.TreeTypeAdapter
		public void <init>(com.google.gson.JsonSerializer, com.google.gson.JsonDeserializer, com.google.gson.Gson, com.google.gson.reflect.TypeToken, com.google.gson.TypeAdapterFactory) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		private com.google.gson.TypeAdapter delegate()	=>	a()
		public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken, java.lang.Object)	=>	b(com.a.a.a.a, java.lang.Object)
		public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken, java.lang.Object)	=>	a(com.a.a.a.a, java.lang.Object)
		public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class, java.lang.Object)	=>	a(java.lang.Class, java.lang.Object)
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TreeTypeAdapter
		47	=>	7
		53	=>	6
		54	=>	21
		55	=>	4
		56	=>	13
		57	=>	19
		58	=>	5
		59	=>	23
		62	=>	14
		63	=>	10
		65	=>	12
		66	=>	16
		67	=>	15
		69	=>	20
		73	=>	3
		74	=>	1
		75	=>	27
		77	=>	17
		78	=>	18
		79	=>	26
		81	=>	2
		82	=>	25
		83	=>	31
		86	=>	11
		87	=>	8 and 30
		89	=>	9
		96	=>	24
		106	=>	29
		107	=>	28
		116	=>	22

Class: synthetic com.google.gson.internal.bind.TreeTypeAdapter$1	=>	com.a.a.b.b.i$a
	Source: "TreeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TreeTypeAdapter$1
	MethodsOf: com.google.gson.internal.bind.TreeTypeAdapter$1
	LineNumbersOf: com.google.gson.internal.bind.TreeTypeAdapter$1

Class: final com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl	=>	com.a.a.b.b.i$c
	Source: "TreeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl
		final synthetic com.google.gson.internal.bind.TreeTypeAdapter this$0	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl
		private void <init>(com.google.gson.internal.bind.TreeTypeAdapter) 	SignatureNotChanged
		synthetic void <init>(com.google.gson.internal.bind.TreeTypeAdapter, com.google.gson.internal.bind.TreeTypeAdapter$1) 	SignatureNotChanged
		public java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type)	=>	a(com.a.a.g, java.lang.reflect.Type)
		public com.google.gson.JsonElement serialize(java.lang.Object)	=>	a(java.lang.Object)
		public com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type)	=>	a(java.lang.Object, java.lang.reflect.Type)
	LineNumbersOf: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl
		153	=>	1 and 5
		155	=>	4
		158	=>	3
		162	=>	2

Class: final com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory	=>	com.a.a.b.b.i$b
	Source: "TreeTypeAdapter.java"
	FieldsOf: com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
		private final com.google.gson.JsonDeserializer deserializer	=>	c
		private final com.google.gson.reflect.TypeToken exactType	=>	e
		private final java.lang.Class hierarchyType	=>	d
		private final boolean matchRawType	=>	b
		private final com.google.gson.JsonSerializer serializer	=>	a
	MethodsOf: com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
		void <init>(java.lang.Object, com.google.gson.reflect.TypeToken, boolean, java.lang.Class) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
		127	=>	2
		128	=>	5
		131	=>	12
		134	=>	11
		135	=>	4
		136	=>	10
		137	=>	8
		138	=>	7
		143	=>	3
		144	=>	1
		145	=>	9
		146	=>	6

Class: final com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper	=>	com.a.a.b.b.j
	Source: "TypeAdapterRuntimeTypeWrapper.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
		private final com.google.gson.Gson context	=>	a
		private final com.google.gson.TypeAdapter delegate	=>	d
		private final java.lang.reflect.Type type	=>	c
	MethodsOf: com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
		void <init>(com.google.gson.Gson, com.google.gson.TypeAdapter, java.lang.reflect.Type) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, java.lang.Object)	=>	a(java.lang.reflect.Type, java.lang.Object)
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
		33	=>	19
		34	=>	20
		35	=>	11
		36	=>	3
		37	=>	12
		41	=>	13
		53	=>	8
		54	=>	10
		55	=>	16
		56	=>	2
		57	=>	5
		59	=>	7
		60	=>	15
		63	=>	14
		66	=>	18
		69	=>	4
		70	=>	6
		76	=>	17
		78	=>	1
		80	=>	9

Class: public final com.google.gson.internal.bind.TypeAdapters	=>	com.a.a.b.b.b
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters
		public static final com.google.gson.TypeAdapter ATOMIC_BOOLEAN	=>	I
		public static final com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY	=>	y
		public static final com.google.gson.TypeAdapter ATOMIC_INTEGER	=>	c
		public static final com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY	=>	a
		public static final com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY	=>	O
		public static final com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY	=>	i
		public static final com.google.gson.TypeAdapter BIG_DECIMAL	=>	w
		public static final com.google.gson.TypeAdapter BIG_INTEGER	=>	A
		public static final com.google.gson.TypeAdapter BIT_SET	=>	n
		public static final com.google.gson.TypeAdapterFactory BIT_SET_FACTORY	=>	K
		public static final com.google.gson.TypeAdapter BOOLEAN	=>	E
		public static final com.google.gson.TypeAdapter BOOLEAN_AS_STRING	=>	d
		public static final com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY	=>	L
		public static final com.google.gson.TypeAdapter BYTE	=>	f
		public static final com.google.gson.TypeAdapterFactory BYTE_FACTORY	=>	M
		public static final com.google.gson.TypeAdapter CALENDAR	=>	x
		public static final com.google.gson.TypeAdapterFactory CALENDAR_FACTORY	=>	Y
		public static final com.google.gson.TypeAdapter CHARACTER	=>	H
		public static final com.google.gson.TypeAdapterFactory CHARACTER_FACTORY	=>	q
		public static final com.google.gson.TypeAdapter CLASS	=>	W
		public static final com.google.gson.TypeAdapterFactory CLASS_FACTORY	=>	e
		public static final com.google.gson.TypeAdapter CURRENCY	=>	v
		public static final com.google.gson.TypeAdapterFactory CURRENCY_FACTORY	=>	U
		public static final com.google.gson.TypeAdapter DOUBLE	=>	Q
		public static final com.google.gson.TypeAdapterFactory ENUM_FACTORY	=>	N
		public static final com.google.gson.TypeAdapter FLOAT	=>	S
		public static final com.google.gson.TypeAdapter INET_ADDRESS	=>	z
		public static final com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY	=>	t
		public static final com.google.gson.TypeAdapter INTEGER	=>	l
		public static final com.google.gson.TypeAdapterFactory INTEGER_FACTORY	=>	G
		public static final com.google.gson.TypeAdapter JSON_ELEMENT	=>	C
		public static final com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY	=>	m
		public static final com.google.gson.TypeAdapter LOCALE	=>	g
		public static final com.google.gson.TypeAdapterFactory LOCALE_FACTORY	=>	p
		public static final com.google.gson.TypeAdapter LONG	=>	aa
		public static final com.google.gson.TypeAdapter NUMBER	=>	X
		public static final com.google.gson.TypeAdapterFactory NUMBER_FACTORY	=>	B
		public static final com.google.gson.TypeAdapter SHORT	=>	o
		public static final com.google.gson.TypeAdapterFactory SHORT_FACTORY	=>	R
		public static final com.google.gson.TypeAdapter STRING	=>	k
		public static final com.google.gson.TypeAdapter STRING_BUFFER	=>	h
		public static final com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY	=>	u
		public static final com.google.gson.TypeAdapter STRING_BUILDER	=>	T
		public static final com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY	=>	F
		public static final com.google.gson.TypeAdapterFactory STRING_FACTORY	=>	j
		public static final com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY	=>	V
		public static final com.google.gson.TypeAdapter URI	=>	Z
		public static final com.google.gson.TypeAdapterFactory URI_FACTORY	=>	J
		public static final com.google.gson.TypeAdapter URL	=>	D
		public static final com.google.gson.TypeAdapterFactory URL_FACTORY	=>	s
		public static final com.google.gson.TypeAdapter UUID	=>	P
		public static final com.google.gson.TypeAdapterFactory UUID_FACTORY	=>	r
		private static com.google.gson.TypeAdapter[] a	=>	b
	MethodsOf: com.google.gson.internal.bind.TypeAdapters
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	b()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
		public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken, com.google.gson.TypeAdapter)	=>	a(com.a.a.a.a, com.a.a.p)
		public static com.google.gson.TypeAdapterFactory newFactory(java.lang.Class, com.google.gson.TypeAdapter)	=>	b(java.lang.Class, com.a.a.p)
		public static com.google.gson.TypeAdapterFactory newFactory(java.lang.Class, java.lang.Class, com.google.gson.TypeAdapter)	=>	b(java.lang.Class, java.lang.Class, com.a.a.p)
		public static com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class, java.lang.Class, com.google.gson.TypeAdapter)	=>	a(java.lang.Class, java.lang.Class, com.a.a.p)
		public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class, com.google.gson.TypeAdapter)	=>	a(java.lang.Class, com.a.a.p)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters
		64	=>	21
		65	=>	29
		69	=>	73
		80	=>	44
		82	=>	6
		84	=>	77
		129	=>	58
		131	=>	57
		133	=>	63
		156	=>	70
		170	=>	5
		171	=>	16
		173	=>	17
		193	=>	14
		194	=>	43
		196	=>	33
		215	=>	1
		216	=>	74
		218	=>	72
		236	=>	64
		237	=>	50
		239	=>	75
		250	=>	48
		251	=>	38
		252	=>	19
		254	=>	32
		261	=>	22
		262	=>	67
		263	=>	52
		265	=>	4
		292	=>	78
		293	=>	7
		294	=>	9
		296	=>	69
		315	=>	24
		330	=>	23
		345	=>	56
		366	=>	15
		368	=>	61
		387	=>	40
		388	=>	66
		390	=>	42
		410	=>	34
		428	=>	27
		446	=>	53
		448	=>	18
		463	=>	51
		464	=>	25
		466	=>	62
		481	=>	68
		482	=>	12
		484	=>	54
		500	=>	60
		502	=>	35
		522	=>	76
		524	=>	65
		540	=>	45
		541	=>	55
		543	=>	71
		558	=>	47
		560	=>	30
		569	=>	13
		570	=>	3
		572	=>	49
		593	=>	46
		658	=>	26
		659	=>	41
		661	=>	59
		696	=>	37
		698	=>	28
		770	=>	20
		771	=>	8
		808	=>	36
		824	=>	39
		834	=>	11
		847	=>	2
		862	=>	31
		881	=>	10

Class: final com.google.gson.internal.bind.TypeAdapters$1	=>	com.a.a.b.b.b$c
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$1
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$1
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		public java.lang.Class read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Class)	=>	a(com.a.a.c.d, java.lang.Class)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$1
		69	=>	1, 2 and 6
		72	=>	5
		73	=>	3
		77	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$10	=>	com.a.a.b.b.b$d
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$10
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$10
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.concurrent.atomic.AtomicIntegerArray)	=>	a(com.a.a.c.d, java.util.concurrent.atomic.AtomicIntegerArray)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$10
		265	=>	15, 18 and 21
		267	=>	1
		268	=>	24
		269	=>	5
		271	=>	22
		272	=>	2
		273	=>	14
		274	=>	9
		275	=>	16
		277	=>	17
		278	=>	3
		279	=>	20
		280	=>	11 and 13
		281	=>	8
		283	=>	23
		286	=>	4
		287	=>	6 and 19
		288	=>	10
		290	=>	12
		291	=>	7

Class: final com.google.gson.internal.bind.TypeAdapters$11	=>	com.a.a.b.b.b$e
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$11
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$11
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$11
		296	=>	2, 3 and 7
		299	=>	8
		300	=>	10
		301	=>	4
		304	=>	9
		305	=>	11
		306	=>	1
		311	=>	5
		312	=>	6

Class: final com.google.gson.internal.bind.TypeAdapters$12	=>	com.a.a.b.b.b$f
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$12
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$12
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$12
		315	=>	5, 6 and 7
		318	=>	8
		319	=>	3
		320	=>	9
		322	=>	1
		326	=>	4
		327	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$13	=>	com.a.a.b.b.b$g
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$13
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$13
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$13
		330	=>	5, 6 and 8
		333	=>	1
		334	=>	2
		335	=>	9
		337	=>	4
		341	=>	7
		342	=>	3

Class: final com.google.gson.internal.bind.TypeAdapters$14	=>	com.a.a.b.b.b$h
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$14
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$14
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$14
		345	=>	4, 6 and 7
		348	=>	11
		349	=>	1
		351	=>	2
		352	=>	3
		355	=>	5
		357	=>	9
		362	=>	8
		363	=>	10

Class: final com.google.gson.internal.bind.TypeAdapters$15	=>	com.a.a.b.b.b$i
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$15
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$15
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Character read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Character)	=>	a(com.a.a.c.d, java.lang.Character)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$15
		368	=>	8, 10 and 11
		371	=>	5
		372	=>	9
		373	=>	2
		375	=>	7
		376	=>	3
		377	=>	6
		379	=>	12
		383	=>	1
		384	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$16	=>	com.a.a.b.b.b$j
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$16
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$16
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.lang.String read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.lang.String)	=>	a(com.a.a.c.d, java.lang.String)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$16
		390	=>	1, 4 and 11
		393	=>	3
		394	=>	9
		395	=>	8
		396	=>	6
		399	=>	5
		400	=>	7
		402	=>	2
		406	=>	12
		407	=>	10

Class: final com.google.gson.internal.bind.TypeAdapters$17	=>	com.a.a.b.b.b$k
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$17
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$17
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.math.BigDecimal read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.math.BigDecimal)	=>	a(com.a.a.c.d, java.math.BigDecimal)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$17
		410	=>	6, 10 and 11
		412	=>	7
		413	=>	8
		414	=>	5
		417	=>	1
		418	=>	9
		419	=>	3
		424	=>	4
		425	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$18	=>	com.a.a.b.b.b$l
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$18
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$18
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.math.BigInteger read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.math.BigInteger)	=>	a(com.a.a.c.d, java.math.BigInteger)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$18
		428	=>	1, 2 and 3
		430	=>	10
		431	=>	7
		432	=>	5
		435	=>	8
		436	=>	4
		437	=>	11
		442	=>	6
		443	=>	9

Class: final com.google.gson.internal.bind.TypeAdapters$19	=>	com.a.a.b.b.b$m
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$19
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$19
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.lang.StringBuilder read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.lang.StringBuilder)	=>	a(com.a.a.c.d, java.lang.StringBuilder)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$19
		448	=>	1, 6 and 9
		451	=>	3
		452	=>	7
		453	=>	8
		455	=>	2
		459	=>	5
		460	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$2	=>	com.a.a.b.b.b$n
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$2
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$2
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.BitSet read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.BitSet)	=>	a(com.a.a.c.d, java.util.BitSet)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$2
		84	=>	7, 21 and 26
		86	=>	5
		87	=>	32
		88	=>	13
		89	=>	33
		90	=>	24
		92	=>	11
		94	=>	15
		95	=>	25
		97	=>	18
		98	=>	20
		100	=>	8
		102	=>	30
		103	=>	27
		104	=>	3
		106	=>	1
		109	=>	9
		111	=>	14
		112	=>	2
		114	=>	29
		115	=>	10
		116	=>	4
		117	=>	31
		118	=>	23
		122	=>	12
		123	=>	16 and 22
		124	=>	19
		125	=>	6
		127	=>	28
		128	=>	17

Class: final com.google.gson.internal.bind.TypeAdapters$20	=>	com.a.a.b.b.b$o
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$20
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$20
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.lang.StringBuffer read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.lang.StringBuffer)	=>	a(com.a.a.c.d, java.lang.StringBuffer)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$20
		466	=>	1, 8 and 9
		469	=>	3
		470	=>	4
		471	=>	7
		473	=>	2
		477	=>	6
		478	=>	5

Class: final com.google.gson.internal.bind.TypeAdapters$21	=>	com.a.a.b.b.b$p
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$21
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$21
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.net.URL read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.net.URL)	=>	a(com.a.a.c.d, java.net.URL)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$21
		484	=>	2, 4 and 6
		487	=>	1
		488	=>	8
		489	=>	5
		491	=>	3
		492	=>	10
		496	=>	7
		497	=>	9

Class: final com.google.gson.internal.bind.TypeAdapters$22	=>	com.a.a.b.b.b$q
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$22
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$22
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.net.URI read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.net.URI)	=>	a(com.a.a.c.d, java.net.URI)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$22
		502	=>	1, 6 and 8
		505	=>	4
		506	=>	10
		507	=>	12
		510	=>	7
		511	=>	5
		512	=>	3
		513	=>	2
		518	=>	11
		519	=>	9

Class: final com.google.gson.internal.bind.TypeAdapters$23	=>	com.a.a.b.b.b$r
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$23
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$23
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.net.InetAddress read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.net.InetAddress)	=>	a(com.a.a.c.d, java.net.InetAddress)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$23
		524	=>	2, 3 and 9
		527	=>	4
		528	=>	1
		529	=>	6
		532	=>	7
		536	=>	8
		537	=>	5

Class: final com.google.gson.internal.bind.TypeAdapters$24	=>	com.a.a.b.b.b$s
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$24
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$24
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.UUID read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.UUID)	=>	a(com.a.a.c.d, java.util.UUID)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$24
		543	=>	1, 8 and 9
		546	=>	7
		547	=>	2
		548	=>	5
		550	=>	6
		554	=>	3
		555	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$25	=>	com.a.a.b.b.b$t
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$25
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$25
		void <init>() 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Currency read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Currency)	=>	a(com.a.a.c.d, java.util.Currency)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$25
		560	=>	2, 3 and 6
		563	=>	1
		567	=>	5
		568	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$26	=>	com.a.a.b.b.b$a
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$26
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$26
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$26
		572	=>	1
		575	=>	4
		576	=>	2
		579	=>	3
		580	=>	5

Class: com.google.gson.internal.bind.TypeAdapters$26$1	=>	com.a.a.b.b.b$a$c
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$26$1
		final synthetic com.google.gson.internal.bind.TypeAdapters$26 this$0	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$dateTypeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$26$1
		void <init>(com.google.gson.internal.bind.TypeAdapters$26, com.google.gson.TypeAdapter) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.sql.Timestamp read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.sql.Timestamp)	=>	a(com.a.a.c.d, java.sql.Timestamp)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$26$1
		580	=>	1, 3 and 6
		582	=>	4
		583	=>	2
		587	=>	5
		588	=>	7

Class: final com.google.gson.internal.bind.TypeAdapters$27	=>	com.a.a.b.b.b$u
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$27
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$27
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Calendar read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Calendar)	=>	a(com.a.a.c.d, java.util.Calendar)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$27
		593	=>	15, 26 and 42
		603	=>	24
		604	=>	32
		605	=>	31
		607	=>	10
		608	=>	36
		609	=>	37
		610	=>	27
		611	=>	14
		612	=>	40
		613	=>	13
		614	=>	17
		615	=>	29
		616	=>	4
		617	=>	46
		618	=>	7
		619	=>	30
		620	=>	38
		621	=>	45
		622	=>	25
		623	=>	9
		624	=>	16
		625	=>	6
		626	=>	23
		627	=>	21
		628	=>	2
		630	=>	3
		631	=>	44
		632	=>	39
		637	=>	28
		638	=>	19
		639	=>	35
		641	=>	22
		642	=>	11
		643	=>	43
		644	=>	49
		645	=>	12
		646	=>	18
		647	=>	1
		648	=>	5
		649	=>	34
		650	=>	47
		651	=>	48
		652	=>	20
		653	=>	41
		654	=>	8
		655	=>	33

Class: final com.google.gson.internal.bind.TypeAdapters$28	=>	com.a.a.b.b.b$v
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$28
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$28
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.Locale read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.Locale)	=>	a(com.a.a.c.d, java.util.Locale)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$28
		661	=>	5, 6 and 22
		664	=>	23
		665	=>	3
		666	=>	8
		668	=>	1
		669	=>	12
		670	=>	21
		671	=>	18
		672	=>	20
		673	=>	14
		674	=>	2
		676	=>	10
		677	=>	11
		679	=>	4
		680	=>	17
		682	=>	15
		683	=>	16
		684	=>	24
		685	=>	9
		687	=>	19
		692	=>	13
		693	=>	7

Class: final com.google.gson.internal.bind.TypeAdapters$29	=>	com.a.a.b.b.b$w
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$29
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$29
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public com.google.gson.JsonElement read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, com.google.gson.JsonElement)	=>	a(com.a.a.c.d, com.a.a.g)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$29
		698	=>	1, 17 and 38
		700	=>	14
		702	=>	6
		704	=>	31
		705	=>	11
		707	=>	3
		709	=>	34
		710	=>	28
		712	=>	10
		713	=>	35
		714	=>	20
		715	=>	19
		717	=>	5
		718	=>	22
		720	=>	24
		721	=>	32
		722	=>	46
		723	=>	12
		725	=>	18
		726	=>	16
		732	=>	4
		737	=>	8
		738	=>	9
		739	=>	45
		740	=>	30
		741	=>	21
		742	=>	39
		743	=>	15
		744	=>	7
		746	=>	25
		749	=>	36
		750	=>	26
		751	=>	33
		752	=>	42
		753	=>	47
		754	=>	29
		756	=>	27
		757	=>	13
		758	=>	43
		759	=>	37
		760	=>	44
		761	=>	23
		762	=>	41
		765	=>	40
		767	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$3	=>	com.a.a.b.b.b$x
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$3
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$3
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Boolean read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Boolean)	=>	a(com.a.a.c.d, java.lang.Boolean)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$3
		133	=>	2, 4 and 6
		136	=>	12
		137	=>	11
		138	=>	3
		139	=>	8
		140	=>	10
		142	=>	5
		144	=>	1
		148	=>	7
		149	=>	9

Class: final com.google.gson.internal.bind.TypeAdapters$30	=>	com.a.a.b.b.b$I
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$30
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$30
		void <init>() 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$30
		808	=>	1
		811	=>	6
		812	=>	5
		813	=>	4
		815	=>	7
		816	=>	2
		818	=>	3

Class: final com.google.gson.internal.bind.TypeAdapters$31	=>	com.a.a.b.b.b$J
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$31
		final synthetic com.google.gson.reflect.TypeToken val$type	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$31
		void <init>(com.google.gson.reflect.TypeToken, com.google.gson.TypeAdapter) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$31
		824	=>	2
		827	=>	1

Class: final com.google.gson.internal.bind.TypeAdapters$32	=>	com.a.a.b.b.b$L
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$32
		final synthetic java.lang.Class val$type	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$32
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.Class, com.google.gson.TypeAdapter) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$32
		834	=>	3
		837	=>	1
		840	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$33	=>	com.a.a.b.b.b$H
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$33
		final synthetic java.lang.Class val$boxed	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
		final synthetic java.lang.Class val$unboxed	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$33
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.Class, java.lang.Class, com.google.gson.TypeAdapter) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$33
		847	=>	1
		850	=>	3
		851	=>	5
		854	=>	2 and 6
		855	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$34	=>	com.a.a.b.b.b$K
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$34
		final synthetic java.lang.Class val$base	NameNotChanged
		final synthetic java.lang.Class val$sub	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$34
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.Class, java.lang.Class, com.google.gson.TypeAdapter) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$34
		862	=>	3
		865	=>	5
		866	=>	4
		869	=>	1 and 2
		870	=>	6

Class: final com.google.gson.internal.bind.TypeAdapters$35	=>	com.a.a.b.b.b$F
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$35
		final synthetic java.lang.Class val$clazz	NameNotChanged
		final synthetic com.google.gson.TypeAdapter val$typeAdapter	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$35
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.Class, com.google.gson.TypeAdapter) 	SignatureNotChanged
		public com.google.gson.TypeAdapter create(com.google.gson.Gson, com.google.gson.reflect.TypeToken)	=>	a(com.a.a.y, com.a.a.a.a)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$35
		881	=>	4
		884	=>	3
		885	=>	6
		886	=>	5
		888	=>	2
		904	=>	1

Class: com.google.gson.internal.bind.TypeAdapters$35$1	=>	com.a.a.b.b.b$F$a
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$35$1
		final synthetic com.google.gson.internal.bind.TypeAdapters$35 this$0	NameNotChanged
		final synthetic java.lang.Class val$requestedType	NameNotChanged
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$35$1
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.google.gson.internal.bind.TypeAdapters$35, java.lang.Class) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$35$1
		888	=>	7
		890	=>	1
		891	=>	5
		894	=>	4
		895	=>	2
		896	=>	8
		897	=>	6
		899	=>	3

Class: synthetic com.google.gson.internal.bind.TypeAdapters$36	=>	com.a.a.b.b.b$G
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$36
		static final synthetic int[] $SwitchMap$com$google$gson$stream$JsonToken	=>	a
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$36
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$36
		92	=>	1

Class: final com.google.gson.internal.bind.TypeAdapters$4	=>	com.a.a.b.b.b$y
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$4
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$4
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Boolean read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Boolean)	=>	a(com.a.a.c.d, java.lang.Boolean)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$4
		156	=>	6, 8 and 9
		158	=>	7
		159	=>	3
		160	=>	1
		162	=>	5
		166	=>	2
		167	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$5	=>	com.a.a.b.b.b$z
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$5
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$5
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$5
		173	=>	1, 4 and 10
		176	=>	8
		177	=>	7
		178	=>	3
		181	=>	11
		182	=>	9
		183	=>	12
		184	=>	5
		189	=>	6
		190	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$6	=>	com.a.a.b.b.b$A
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$6
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$6
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$6
		196	=>	1, 5 and 8
		199	=>	10
		200	=>	9
		201	=>	3
		204	=>	11
		205	=>	2
		206	=>	6
		211	=>	7
		212	=>	4

Class: final com.google.gson.internal.bind.TypeAdapters$7	=>	com.a.a.b.b.b$B
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$7
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$7
		void <init>() 	SignatureNotChanged
		private static java.lang.NumberFormatException a(java.lang.NumberFormatException) 	SignatureNotChanged
		public java.lang.Number read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Number)	=>	a(com.a.a.c.d, java.lang.Number)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$7
		218	=>	5, 7 and 8
		221	=>	9
		222	=>	10
		223	=>	3
		226	=>	4
		227	=>	11
		228	=>	2
		233	=>	1
		234	=>	6

Class: final com.google.gson.internal.bind.TypeAdapters$8	=>	com.a.a.b.b.b$C
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$8
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$8
		void <init>() 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.concurrent.atomic.AtomicInteger)	=>	a(com.a.a.c.d, java.util.concurrent.atomic.AtomicInteger)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$8
		239	=>	3, 4 and 8
		242	=>	2
		243	=>	6
		244	=>	5
		248	=>	1
		249	=>	7

Class: final com.google.gson.internal.bind.TypeAdapters$9	=>	com.a.a.b.b.b$D
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$9
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$9
		void <init>() 	SignatureNotChanged
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
		public void write(com.google.gson.stream.JsonWriter, java.util.concurrent.atomic.AtomicBoolean)	=>	a(com.a.a.c.d, java.util.concurrent.atomic.AtomicBoolean)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$9
		254	=>	1, 4 and 5
		256	=>	3
		259	=>	6
		260	=>	2

Class: final com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter	=>	com.a.a.b.b.b$E
	Source: "TypeAdapters.java"
	FieldsOf: com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
		private final java.util.Map constantToName	=>	a
		private final java.util.Map nameToConstant	=>	c
	MethodsOf: com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
		public void <init>(java.lang.Class) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public java.lang.Enum read(com.google.gson.stream.JsonReader)	=>	b(com.a.a.c.e)
		public bridge synthetic java.lang.Object read(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
		public void write(com.google.gson.stream.JsonWriter, java.lang.Enum)	=>	a(com.a.a.c.d, java.lang.Enum)
		public bridge synthetic void write(com.google.gson.stream.JsonWriter, java.lang.Object)	=>	a(com.a.a.c.d, java.lang.Object)
	LineNumbersOf: com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
		773	=>	15 and 22
		774	=>	19
		775	=>	7
		777	=>	20
		779	=>	1 and 18
		780	=>	26
		781	=>	16
		782	=>	10
		783	=>	17
		784	=>	5 and 9
		785	=>	24
		788	=>	4
		789	=>	23
		791	=>	11
		792	=>	14
		793	=>	6
		794	=>	25
		796	=>	13
		797	=>	2
		798	=>	21
		800	=>	3
		804	=>	12
		805	=>	8

Class: public com.google.gson.internal.bind.util.ISO8601Utils	=>	com.a.a.b.b.a.a
	Source: "ISO8601Utils.java"
	FieldsOf: com.google.gson.internal.bind.util.ISO8601Utils
		private static final java.util.TimeZone TIMEZONE_UTC	=>	c
		private static boolean a	=>	b
	MethodsOf: com.google.gson.internal.bind.util.ISO8601Utils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static boolean a()	=>	b()
		public static void a(boolean)	=>	b(boolean)
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public static boolean b()	=>	c()
		private static boolean checkOffset(java.lang.String, int, char)	=>	a(java.lang.String, int, char)
		public static java.lang.String format(java.util.Date)	=>	a(java.util.Date)
		public static java.lang.String format(java.util.Date, boolean)	=>	a(java.util.Date, boolean)
		public static java.lang.String format(java.util.Date, boolean, java.util.TimeZone)	=>	a(java.util.Date, boolean, java.util.TimeZone)
		private static int indexOfNonDigit(java.lang.String, int)	=>	a(java.lang.String, int)
		private static void padInt(java.lang.StringBuilder, int, int)	=>	a(java.lang.StringBuilder, int, int)
		public static java.util.Date parse(java.lang.String, java.text.ParsePosition)	=>	a(java.lang.String, java.text.ParsePosition)
		private static int parseInt(java.lang.String, int, int)	=>	a(java.lang.String, int, int)
	LineNumbersOf: com.google.gson.internal.bind.util.ISO8601Utils
		17	=>	118
		30	=>	116
		45	=>	122
		56	=>	27
		68	=>	96
		69	=>	86
		72	=>	71
		73	=>	41
		74	=>	24
		75	=>	92
		77	=>	5
		78	=>	30
		79	=>	105
		80	=>	73
		81	=>	95
		82	=>	69
		83	=>	38
		84	=>	138
		85	=>	43
		86	=>	58
		87	=>	59
		88	=>	67
		89	=>	52
		90	=>	151
		93	=>	141
		94	=>	129
		95	=>	145
		96	=>	53
		97	=>	127
		98	=>	143
		99	=>	128
		100	=>	112
		101	=>	131
		102	=>	10
		105	=>	70
		124	=>	88
		126	=>	15
		129	=>	91
		130	=>	9
		131	=>	85
		135	=>	150
		136	=>	45
		137	=>	6
		141	=>	61
		143	=>	32
		144	=>	133
		145	=>	63
		146	=>	84
		149	=>	130
		151	=>	132
		152	=>	125
		154	=>	50
		155	=>	137
		158	=>	14
		161	=>	28
		162	=>	154
		163	=>	139
		166	=>	114
		167	=>	110
		168	=>	89
		171	=>	49
		172	=>	16
		173	=>	101
		174	=>	23
		175	=>	3
		177	=>	108
		178	=>	66
		179	=>	42
		180	=>	11
		181	=>	7
		183	=>	102
		185	=>	47
		186	=>	142
		188	=>	17
		189	=>	136
		191	=>	134
		193	=>	124
		200	=>	146
		201	=>	81
		204	=>	36
		205	=>	97
		207	=>	94
		208	=>	54
		209	=>	123
		210	=>	37
		211	=>	51
		214	=>	46
		216	=>	153
		218	=>	62
		219	=>	149
		225	=>	106
		228	=>	115
		230	=>	80
		231	=>	117
		237	=>	26
		238	=>	31
		239	=>	113
		240	=>	104
		244	=>	103
		245	=>	147
		248	=>	22
		249	=>	65
		250	=>	35
		251	=>	87
		252	=>	40
		253	=>	13
		254	=>	39
		255	=>	55
		256	=>	57
		258	=>	2
		259	=>	19
		262	=>	100
		263	=>	68
		264	=>	77
		265	=>	8
		266	=>	29
		267	=>	140
		268	=>	4 and 25
		269	=>	48
		270	=>	78
		271	=>	33
		272	=>	126
		274	=>	56
		275	=>	72
		276	=>	99
		288	=>	120
		301	=>	144
		302	=>	60
		305	=>	1
		306	=>	93
		308	=>	79
		309	=>	64
		310	=>	44
		311	=>	76
		313	=>	109
		315	=>	83
		316	=>	82
		317	=>	152
		318	=>	90
		320	=>	20
		321	=>	74
		323	=>	135
		334	=>	98
		335	=>	12 and 107
		336	=>	121
		338	=>	119
		339	=>	75
		345	=>	21 and 111
		346	=>	34
		347	=>	18
		349	=>	148

Class: final com.google.gson.internal.reflect.PreJava9ReflectionAccessor	=>	com.a.a.b.a.b
	Source: "PreJava9ReflectionAccessor.java"
	FieldsOf: com.google.gson.internal.reflect.PreJava9ReflectionAccessor
	MethodsOf: com.google.gson.internal.reflect.PreJava9ReflectionAccessor
		void <init>() 	SignatureNotChanged
		public void makeAccessible(java.lang.reflect.AccessibleObject)	=>	a(java.lang.reflect.AccessibleObject)
	LineNumbersOf: com.google.gson.internal.reflect.PreJava9ReflectionAccessor
		26	=>	1
		31	=>	3
		32	=>	2

Class: public abstract com.google.gson.internal.reflect.ReflectionAccessor	=>	com.a.a.b.a.a
	Source: "ReflectionAccessor.java"
	FieldsOf: com.google.gson.internal.reflect.ReflectionAccessor
		private static final com.google.gson.internal.reflect.ReflectionAccessor instance	=>	a
	MethodsOf: com.google.gson.internal.reflect.ReflectionAccessor
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.google.gson.internal.reflect.ReflectionAccessor getInstance()	=>	a()
		public abstract void makeAccessible(java.lang.reflect.AccessibleObject)	=>	a(java.lang.reflect.AccessibleObject)
	LineNumbersOf: com.google.gson.internal.reflect.ReflectionAccessor
		33	=>	3
		36	=>	1
		52	=>	2

Class: final com.google.gson.internal.reflect.UnsafeReflectionAccessor	=>	com.a.a.b.a.c
	Source: "UnsafeReflectionAccessor.java"
	FieldsOf: com.google.gson.internal.reflect.UnsafeReflectionAccessor
		private final java.lang.reflect.Field overrideField	=>	c
		private final java.lang.Object theUnsafe	=>	d
		private static java.lang.Class unsafeClass	=>	b
	MethodsOf: com.google.gson.internal.reflect.UnsafeReflectionAccessor
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private static java.lang.reflect.Field getOverrideField()	=>	c()
		private static java.lang.Object getUnsafeInstance()	=>	b()
		public void makeAccessible(java.lang.reflect.AccessibleObject)	=>	a(java.lang.reflect.AccessibleObject)
		boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)	=>	b(java.lang.reflect.AccessibleObject)
	LineNumbersOf: com.google.gson.internal.reflect.UnsafeReflectionAccessor
		31	=>	16
		34	=>	10
		35	=>	17
		40	=>	7
		41	=>	18
		44	=>	26
		45	=>	5
		46	=>	27
		49	=>	3
		51	=>	9
		55	=>	25
		57	=>	8
		58	=>	24
		59	=>	22
		60	=>	20
		61	=>	12
		62	=>	21
		65	=>	11
		70	=>	2
		71	=>	13
		72	=>	19
		73	=>	15
		74	=>	4
		75	=>	23
		81	=>	6
		82	=>	14
		83	=>	1

Class: public com.google.gson.reflect.TypeToken	=>	com.a.a.a.a
	Source: "TypeToken.java"
	FieldsOf: com.google.gson.reflect.TypeToken
		private static com.google.gson.TypeAdapter[] a	=>	d
		final int hashCode	=>	b
		final java.lang.Class rawType	=>	a
		final java.lang.reflect.Type type	=>	c
	MethodsOf: com.google.gson.reflect.TypeToken
		static void <clinit>() 	SignatureNotChanged
		protected void <init>() 	SignatureNotChanged
		void <init>(java.lang.reflect.Type) 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	c()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class[])	=>	a(java.lang.reflect.Type, java.lang.Class[])
		public final boolean equals(java.lang.Object) 	SignatureNotChanged
		public static com.google.gson.reflect.TypeToken get(java.lang.Class)	=>	c(java.lang.Class)
		public static com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)	=>	c(java.lang.reflect.Type)
		public static com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)	=>	b(java.lang.reflect.Type)
		public static com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type, java.lang.reflect.Type[])	=>	a(java.lang.reflect.Type, java.lang.reflect.Type[])
		public final java.lang.Class getRawType()	=>	b()
		static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)	=>	a(java.lang.Class)
		public final java.lang.reflect.Type getType()	=>	a()
		public final int hashCode() 	SignatureNotChanged
		public boolean isAssignableFrom(com.google.gson.reflect.TypeToken)	=>	a(com.a.a.a.a)
		public boolean isAssignableFrom(java.lang.Class)	=>	b(java.lang.Class)
		public boolean isAssignableFrom(java.lang.reflect.Type)	=>	a(java.lang.reflect.Type)
		private static boolean isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)	=>	a(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)
		private static boolean isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, java.util.Map)	=>	a(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, java.util.Map)
		private static boolean matches(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map)	=>	a(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Map)
		public final java.lang.String toString() 	SignatureNotChanged
		private static boolean typeEquals(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType, java.util.Map)	=>	a(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType, java.util.Map)
	LineNumbersOf: com.google.gson.reflect.TypeToken
		61	=>	79
		62	=>	70
		63	=>	42
		64	=>	53
		65	=>	72
		71	=>	54
		72	=>	91
		73	=>	23
		74	=>	39
		75	=>	33
		82	=>	67
		83	=>	21
		84	=>	57
		86	=>	92
		87	=>	86
		94	=>	49
		101	=>	2
		112	=>	98
		123	=>	75
		124	=>	46
		127	=>	43
		128	=>	66
		131	=>	52
		132	=>	100
		133	=>	25
		134	=>	78
		136	=>	24
		137	=>	40 and 50
		138	=>	95
		140	=>	36
		153	=>	41
		161	=>	77
		162	=>	58
		163	=>	22
		164	=>	69
		165	=>	6
		166	=>	45
		167	=>	31
		168	=>	14
		169	=>	85
		171	=>	61
		173	=>	11
		178	=>	68
		188	=>	89
		189	=>	28
		192	=>	5
		193	=>	15
		197	=>	47
		198	=>	99
		199	=>	34
		200	=>	94
		204	=>	9
		205	=>	18
		206	=>	37
		207	=>	1 and 87
		208	=>	81
		209	=>	16
		210	=>	10
		211	=>	13
		212	=>	7
		213	=>	17
		214	=>	76
		218	=>	35
		219	=>	38
		223	=>	3 and 65
		224	=>	63
		225	=>	93
		230	=>	4
		231	=>	97
		240	=>	26
		241	=>	96
		242	=>	30
		243	=>	12 and 71
		244	=>	62
		245	=>	83
		248	=>	55
		250	=>	48
		257	=>	84
		259	=>	59 and 82
		260	=>	60
		262	=>	8
		263	=>	44
		265	=>	20
		273	=>	29 and 73
		275	=>	51
		280	=>	74
		284	=>	32 and 88
		285	=>	80
		289	=>	64
		296	=>	27
		303	=>	56
		311	=>	19
		318	=>	90

Class: public com.google.gson.stream.JsonReader	=>	com.a.a.c.e
	Source: "JsonReader.java"
	FieldsOf: com.google.gson.stream.JsonReader
		private static final char[] NON_EXECUTE_PREFIX	=>	e
		private static int[] a	=>	j
		private final char[] buffer	=>	n
		private final java.io.Reader in	=>	d
		private boolean lenient	=>	i
		private int limit	=>	p
		private int lineNumber	=>	k
		private int lineStart	=>	q
		private int[] pathIndices	=>	o
		private java.lang.String[] pathNames	=>	f
		int peeked	=>	b
		private long peekedLong	=>	l
		private int peekedNumberLength	=>	h
		private java.lang.String peekedString	=>	m
		private int pos	=>	g
		private int[] stack	=>	a
		private int stackSize	=>	c
	MethodsOf: com.google.gson.stream.JsonReader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.Reader) 	SignatureNotChanged
		public static int[] a()	=>	i()
		public static void a(int[])	=>	b(int[])
		private static java.lang.Exception b(java.lang.Exception) 	SignatureNotChanged
		public void beginArray()	=>	x()
		public void beginObject()	=>	n()
		private void checkLenient()	=>	t()
		public void close() 	SignatureNotChanged
		private void consumeNonExecutePrefix()	=>	m()
		int doPeek()	=>	q()
		public void endArray()	=>	a()
		public void endObject()	=>	z()
		private boolean fillBuffer(int)	=>	b(int)
		public java.lang.String getPath()	=>	k()
		public boolean hasNext()	=>	j()
		public final boolean isLenient()	=>	w()
		private boolean isLiteral(char)	=>	b(char)
		java.lang.String locationString()	=>	d()
		public boolean nextBoolean()	=>	A()
		public double nextDouble()	=>	f()
		public int nextInt()	=>	h()
		public long nextLong()	=>	e()
		public java.lang.String nextName()	=>	o()
		private int nextNonWhitespace(boolean)	=>	a(boolean)
		public void nextNull()	=>	y()
		private java.lang.String nextQuotedValue(char)	=>	c(char)
		public java.lang.String nextString()	=>	v()
		private java.lang.String nextUnquotedValue()	=>	r()
		public com.google.gson.stream.JsonToken peek()	=>	c()
		private int peekKeyword()	=>	s()
		private int peekNumber()	=>	g()
		private void push(int)	=>	a(int)
		private char readEscapeCharacter()	=>	b()
		public final void setLenient(boolean)	=>	b(boolean)
		private void skipQuotedValue(char)	=>	a(char)
		private boolean skipTo(java.lang.String)	=>	b(java.lang.String)
		private void skipToEndOfLine()	=>	p()
		private void skipUnquotedValue()	=>	l()
		public void skipValue()	=>	u()
		private java.io.IOException syntaxError(java.lang.String)	=>	a(java.lang.String)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.stream.JsonReader
		192	=>	72
		230	=>	101
		238	=>	409
		239	=>	119
		240	=>	338
		242	=>	493
		243	=>	191
		245	=>	136
		269	=>	639
		270	=>	127
		272	=>	585
		283	=>	283
		284	=>	652
		289	=>	584
		290	=>	469
		291	=>	515
		293	=>	491
		294	=>	575
		326	=>	665
		327	=>	399
		333	=>	250
		341	=>	582
		342	=>	178
		343	=>	352
		345	=>	419
		346	=>	512
		347	=>	188
		348	=>	363
		350	=>	547
		352	=>	131
		359	=>	60
		360	=>	567
		361	=>	649
		363	=>	2
		364	=>	79
		365	=>	376
		366	=>	391
		368	=>	616
		370	=>	126
		377	=>	397
		378	=>	331
		379	=>	343
		381	=>	65
		382	=>	423
		383	=>	121
		385	=>	182
		387	=>	439
		394	=>	46
		395	=>	609
		396	=>	476
		398	=>	156
		399	=>	289
		400	=>	329
		401	=>	577
		402	=>	633
		404	=>	494
		406	=>	669
		412	=>	367
		413	=>	86
		414	=>	205
		416	=>	321
		423	=>	349
		424	=>	596
		425	=>	507
		428	=>	353
		430	=>	357
		432	=>	158
		434	=>	562
		436	=>	147
		440	=>	608
		443	=>	172
		445	=>	282
		450	=>	572
		453	=>	495
		455	=>	293
		457	=>	402
		462	=>	104
		463	=>	320
		464	=>	434
		465	=>	157
		467	=>	159
		468	=>	255
		470	=>	305
		472	=>	125
		474	=>	232
		476	=>	309
		478	=>	70
		479	=>	90
		481	=>	322
		482	=>	614
		483	=>	267
		485	=>	474
		487	=>	526
		489	=>	272
		491	=>	271
		494	=>	421
		495	=>	315
		497	=>	454
		499	=>	635
		500	=>	661
		502	=>	388
		503	=>	549
		505	=>	115
		508	=>	416
		509	=>	260
		510	=>	382
		511	=>	50
		513	=>	462
		516	=>	253
		517	=>	266
		519	=>	219
		520	=>	486
		522	=>	174
		524	=>	33
		525	=>	496
		526	=>	514
		530	=>	25
		532	=>	8
		533	=>	77
		534	=>	247
		536	=>	368
		537	=>	464
		538	=>	106
		539	=>	523
		540	=>	200
		542	=>	258
		543	=>	355
		545	=>	485
		546	=>	47
		549	=>	87
		550	=>	276
		552	=>	659
		553	=>	361
		559	=>	460
		560	=>	194
		561	=>	651
		562	=>	552
		564	=>	364
		567	=>	262
		568	=>	66
		570	=>	565
		572	=>	497
		574	=>	274
		576	=>	629
		579	=>	231
		580	=>	175
		581	=>	468
		584	=>	195
		585	=>	398
		586	=>	214
		589	=>	472
		590	=>	111
		593	=>	160
		594	=>	489
		599	=>	566
		603	=>	385
		604	=>	26
		605	=>	530
		606	=>	59
		607	=>	28
		608	=>	447
		609	=>	344
		610	=>	264
		611	=>	645
		612	=>	392
		613	=>	31
		614	=>	220
		616	=>	375
		620	=>	75
		621	=>	91 and 667
		622	=>	341
		623	=>	412
		625	=>	647
		626	=>	133
		627	=>	92
		631	=>	166
		632	=>	13
		633	=>	222
		637	=>	407
		638	=>	94
		643	=>	488
		644	=>	6
		645	=>	543
		647	=>	184
		648	=>	153
		649	=>	152
		650	=>	240
		652	=>	441
		655	=>	380
		656	=>	487
		657	=>	298
		660	=>	155
		662	=>	395
		663	=>	16
		665	=>	211
		666	=>	600
		669	=>	644
		670	=>	415
		672	=>	168
		673	=>	658
		674	=>	118
		675	=>	199
		676	=>	631
		677	=>	326
		678	=>	290
		680	=>	642
		683	=>	634
		684	=>	95
		685	=>	11
		687	=>	482
		691	=>	217
		692	=>	598
		693	=>	663
		695	=>	71
		698	=>	517
		699	=>	303
		700	=>	636
		702	=>	637
		705	=>	177
		706	=>	569
		707	=>	612
		709	=>	532
		711	=>	617
		712	=>	654
		713	=>	206
		714	=>	202
		715	=>	620
		716	=>	216
		718	=>	578
		719	=>	545
		721	=>	7
		722	=>	243
		723	=>	32
		724	=>	1
		725	=>	234
		731	=>	135
		732	=>	387
		733	=>	213
		734	=>	410
		735	=>	427
		737	=>	278
		738	=>	268
		740	=>	433
		745	=>	281
		751	=>	300
		763	=>	9
		765	=>	568
		777	=>	384
		778	=>	229
		779	=>	208
		782	=>	498
		783	=>	137
		784	=>	522
		785	=>	623
		786	=>	360
		787	=>	295
		789	=>	424
		791	=>	342
		792	=>	128
		793	=>	533
		805	=>	369
		806	=>	44
		807	=>	55
		810	=>	553
		811	=>	124
		812	=>	537
		813	=>	503
		814	=>	438
		815	=>	20
		816	=>	287
		817	=>	57
		818	=>	249
		819	=>	573
		820	=>	165
		821	=>	248
		822	=>	334
		823	=>	10
		825	=>	583
		827	=>	362
		828	=>	108
		829	=>	285
		840	=>	581
		841	=>	451
		842	=>	145
		844	=>	299
		845	=>	241
		846	=>	14
		847	=>	442
		848	=>	167
		849	=>	551
		850	=>	377
		851	=>	607
		853	=>	481
		864	=>	148
		865	=>	340
		866	=>	501
		868	=>	592
		869	=>	88
		870	=>	64
		872	=>	288
		874	=>	328
		886	=>	110
		887	=>	555
		888	=>	109
		891	=>	595
		892	=>	624
		893	=>	619
		894	=>	535
		897	=>	347
		898	=>	641
		899	=>	146
		900	=>	606
		901	=>	68
		902	=>	35
		903	=>	263
		904	=>	621
		905	=>	89
		908	=>	668
		909	=>	151
		910	=>	22
		911	=>	599
		912	=>	223
		914	=>	625
		915	=>	440
		916	=>	570
		917	=>	443
		931	=>	316
		932	=>	510
		933	=>	548
		936	=>	589
		937	=>	327
		938	=>	302
		939	=>	311
		942	=>	550
		943	=>	129
		944	=>	563
		945	=>	504
		946	=>	83
		947	=>	116
		949	=>	396
		952	=>	655
		953	=>	43
		954	=>	403
		955	=>	672
		956	=>	58
		958	=>	383
		960	=>	356
		963	=>	134
		964	=>	544
		965	=>	112
		966	=>	12
		967	=>	378
		969	=>	270
		970	=>	389
		971	=>	138
		972	=>	653
		987	=>	630
		988	=>	171
		990	=>	48
		991	=>	404
		993	=>	183
		994	=>	556
		995	=>	4
		997	=>	37
		998	=>	467
		999	=>	499
		1000	=>	114
		1001	=>	176
		1003	=>	525
		1004	=>	310
		1006	=>	141
		1007	=>	246
		1008	=>	69
		1009	=>	508
		1010	=>	538
		1011	=>	463
		1013	=>	218
		1014	=>	17
		1015	=>	411
		1016	=>	420
		1017	=>	76
		1018	=>	640
		1019	=>	301
		1020	=>	531
		1022	=>	478
		1024	=>	408
		1025	=>	29
		1026	=>	332
		1028	=>	307
		1029	=>	259
		1030	=>	613
		1031	=>	564
		1033	=>	144
		1041	=>	456
		1042	=>	479
		1046	=>	450 and 579
		1047	=>	446
		1053	=>	280
		1065	=>	626
		1070	=>	313
		1071	=>	457
		1072	=>	354
		1079	=>	39
		1080	=>	611
		1082	=>	197
		1083	=>	120
		1084	=>	80
		1085	=>	405
		1086	=>	435
		1090	=>	93
		1091	=>	201
		1092	=>	643
		1097	=>	520
		1099	=>	390
		1100	=>	273
		1102	=>	215
		1103	=>	400
		1104	=>	81
		1105	=>	393
		1106	=>	130
		1107	=>	162
		1108	=>	233
		1109	=>	444
		1110	=>	237
		1111	=>	154
		1112	=>	235
		1113	=>	466
		1114	=>	519
		1116	=>	63
		1117	=>	345
		1118	=>	559
		1119	=>	251
		1124	=>	279
		1125	=>	304 and 351
		1126	=>	3
		1132	=>	524
		1144	=>	180
		1145	=>	123
		1148	=>	325
		1149	=>	312
		1150	=>	244
		1163	=>	323
		1164	=>	529
		1165	=>	431
		1169	=>	132
		1170	=>	333
		1171	=>	428
		1172	=>	36
		1174	=>	193
		1175	=>	318
		1176	=>	594
		1179	=>	506
		1180	=>	518
		1181	=>	74
		1182	=>	203
		1183	=>	593
		1184	=>	541
		1186	=>	590
		1189	=>	455
		1190	=>	401
		1191	=>	591
		1192	=>	426
		1193	=>	40
		1195	=>	618
		1197	=>	269
		1200	=>	210
		1201	=>	192
		1202	=>	418
		1203	=>	477
		1204	=>	24
		1206	=>	622
		1207	=>	429
		1208	=>	113
		1209	=>	430
		1216	=>	346
		1217	=>	149
		1218	=>	436
		1219	=>	204
		1220	=>	239
		1228	=>	471
		1230	=>	53
		1231	=>	179
		1232	=>	358
		1235	=>	628
		1236	=>	292
		1237	=>	142
		1238	=>	308
		1239	=>	291
		1240	=>	330
		1241	=>	54
		1242	=>	511
		1243	=>	19
		1244	=>	56
		1245	=>	574
		1246	=>	417
		1247	=>	534
		1248	=>	103
		1249	=>	638
		1250	=>	648
		1251	=>	480
		1252	=>	34
		1253	=>	181
		1254	=>	603
		1256	=>	337
		1257	=>	296
		1259	=>	139
		1260	=>	484
		1261	=>	527
		1264	=>	225
		1265	=>	117
		1266	=>	78
		1267	=>	186
		1268	=>	448
		1269	=>	212
		1270	=>	650
		1271	=>	224
		1272	=>	317
		1273	=>	185
		1275	=>	286
		1276	=>	173
		1284	=>	49
		1285	=>	542
		1286	=>	602
		1287	=>	306
		1288	=>	513
		1290	=>	314
		1293	=>	505
		1295	=>	528
		1296	=>	394
		1299	=>	366
		1300	=>	601
		1301	=>	557
		1302	=>	432
		1305	=>	105
		1306	=>	254
		1309	=>	610
		1327	=>	558
		1328	=>	656
		1329	=>	143
		1331	=>	473
		1332	=>	339
		1333	=>	319
		1334	=>	163
		1336	=>	161
		1337	=>	102
		1340	=>	5
		1341	=>	207
		1342	=>	671
		1343	=>	140
		1344	=>	42
		1345	=>	452
		1346	=>	662
		1349	=>	646
		1350	=>	587
		1351	=>	261
		1352	=>	406
		1353	=>	324
		1354	=>	470
		1355	=>	386
		1356	=>	490
		1360	=>	236
		1361	=>	666
		1362	=>	425
		1365	=>	437
		1366	=>	560
		1367	=>	521
		1369	=>	38
		1370	=>	189
		1371	=>	539
		1375	=>	45
		1376	=>	348
		1377	=>	458
		1378	=>	84
		1379	=>	18
		1382	=>	221
		1384	=>	23
		1385	=>	605
		1391	=>	209
		1392	=>	107
		1393	=>	453
		1394	=>	41
		1396	=>	297
		1397	=>	169
		1399	=>	85
		1400	=>	82
		1401	=>	475
		1403	=>	381
		1408	=>	465
		1409	=>	459
		1411	=>	150
		1419	=>	27
		1420	=>	277
		1421	=>	164
		1422	=>	657
		1423	=>	62
		1424	=>	245
		1425	=>	67
		1426	=>	664
		1428	=>	561
		1429	=>	379
		1435	=>	100
		1437	=>	413 and 509
		1438	=>	597
		1439	=>	660
		1440	=>	422
		1441	=>	30
		1443	=>	15 and 571
		1444	=>	238
		1445	=>	122
		1448	=>	187
		1450	=>	52
		1454	=>	604
		1458	=>	256
		1459	=>	359
		1460	=>	98
		1468	=>	586
		1469	=>	170 and 265
		1470	=>	445
		1473	=>	670
		1474	=>	576
		1479	=>	588
		1480	=>	615
		1481	=>	516
		1491	=>	242
		1504	=>	632
		1505	=>	61
		1508	=>	227
		1509	=>	372
		1511	=>	228
		1512	=>	536
		1515	=>	627
		1516	=>	284 and 336
		1517	=>	483
		1518	=>	99
		1519	=>	73
		1520	=>	414
		1521	=>	257
		1522	=>	294
		1523	=>	580
		1524	=>	373
		1526	=>	97
		1529	=>	500
		1530	=>	51
		1533	=>	226
		1536	=>	546
		1539	=>	365
		1542	=>	230
		1545	=>	371
		1548	=>	540
		1549	=>	350
		1556	=>	252
		1559	=>	502
		1568	=>	374
		1576	=>	461
		1577	=>	370
		1579	=>	190
		1580	=>	449
		1583	=>	96 and 198
		1584	=>	196
		1585	=>	492
		1590	=>	21
		1591	=>	275
		1594	=>	554
		1616	=>	335

Class: final com.google.gson.stream.JsonReader$1	=>	com.a.a.c.e$a
	Source: "JsonReader.java"
	FieldsOf: com.google.gson.stream.JsonReader$1
	MethodsOf: com.google.gson.stream.JsonReader$1
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void promoteNameToValue(com.google.gson.stream.JsonReader)	=>	a(com.a.a.c.e)
	LineNumbersOf: com.google.gson.stream.JsonReader$1
		1594	=>	4
		1596	=>	16
		1597	=>	3
		1598	=>	15
		1600	=>	6
		1601	=>	10
		1602	=>	1
		1604	=>	12
		1605	=>	5
		1606	=>	9
		1607	=>	11
		1608	=>	8
		1609	=>	13
		1611	=>	2
		1612	=>	7
		1614	=>	14

Class: final com.google.gson.stream.JsonScope	=>	com.a.a.c.b
	Source: "JsonScope.java"
	FieldsOf: com.google.gson.stream.JsonScope
	MethodsOf: com.google.gson.stream.JsonScope
		void <init>() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.stream.JsonScope
		25	=>	1

Class: public final enum com.google.gson.stream.JsonToken	=>	com.a.a.c.a
	Source: "JsonToken.java"
	FieldsOf: com.google.gson.stream.JsonToken
		private static final synthetic com.google.gson.stream.JsonToken[] $VALUES	=>	a
		public static final enum com.google.gson.stream.JsonToken BEGIN_ARRAY	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken BEGIN_OBJECT	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken BOOLEAN	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken END_ARRAY	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken END_DOCUMENT	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken END_OBJECT	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken NAME	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken NULL	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken NUMBER	NameNotChanged
		public static final enum com.google.gson.stream.JsonToken STRING	NameNotChanged
	MethodsOf: com.google.gson.stream.JsonToken
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.google.gson.stream.JsonToken valueOf(java.lang.String) 	SignatureNotChanged
		public static com.google.gson.stream.JsonToken[] values() 	SignatureNotChanged
	LineNumbersOf: com.google.gson.stream.JsonToken
		25	=>	1, 3, 8 and 10
		31	=>	12
		37	=>	14
		43	=>	7
		49	=>	2
		56	=>	11
		61	=>	13
		67	=>	5
		72	=>	6
		77	=>	4
		84	=>	9

Class: public com.google.gson.stream.JsonWriter	=>	com.a.a.c.d
	Source: "JsonWriter.java"
	FieldsOf: com.google.gson.stream.JsonWriter
		private static final java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS	=>	l
		private static final java.lang.String[] REPLACEMENT_CHARS	=>	e
		private static java.lang.String[] a	=>	h
		private java.lang.String deferredName	=>	i
		private boolean htmlSafe	=>	j
		private java.lang.String indent	=>	a
		private boolean lenient	=>	k
		private final java.io.Writer out	=>	d
		private java.lang.String separator	=>	b
		private boolean serializeNulls	=>	f
		private int[] stack	=>	c
		private int stackSize	=>	g
	MethodsOf: com.google.gson.stream.JsonWriter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.Writer) 	SignatureNotChanged
		public static java.lang.String[] a()	=>	g()
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		private void beforeName()	=>	l()
		private void beforeValue()	=>	m()
		public com.google.gson.stream.JsonWriter beginArray()	=>	n()
		public com.google.gson.stream.JsonWriter beginObject()	=>	k()
		public void close() 	SignatureNotChanged
		private com.google.gson.stream.JsonWriter close(int, int, java.lang.String)	=>	a(int, int, java.lang.String)
		public com.google.gson.stream.JsonWriter endArray()	=>	a()
		public com.google.gson.stream.JsonWriter endObject()	=>	e()
		public void flush() 	SignatureNotChanged
		public final boolean getSerializeNulls()	=>	j()
		public final boolean isHtmlSafe()	=>	i()
		public boolean isLenient()	=>	h()
		public com.google.gson.stream.JsonWriter jsonValue(java.lang.String)	=>	c(java.lang.String)
		public com.google.gson.stream.JsonWriter name(java.lang.String)	=>	b(java.lang.String)
		private void newline()	=>	f()
		public com.google.gson.stream.JsonWriter nullValue()	=>	c()
		private com.google.gson.stream.JsonWriter open(int, java.lang.String)	=>	a(int, java.lang.String)
		private int peek()	=>	d()
		private void push(int)	=>	b(int)
		private void replaceTop(int)	=>	a(int)
		public final void setHtmlSafe(boolean)	=>	d(boolean)
		public final void setIndent(java.lang.String)	=>	a(java.lang.String)
		public final void setLenient(boolean)	=>	c(boolean)
		public final void setSerializeNulls(boolean)	=>	a(boolean)
		private void string(java.lang.String)	=>	d(java.lang.String)
		public com.google.gson.stream.JsonWriter value(boolean)	=>	b(boolean)
		public com.google.gson.stream.JsonWriter value(double)	=>	a(double)
		public com.google.gson.stream.JsonWriter value(java.lang.Boolean)	=>	a(java.lang.Boolean)
		public com.google.gson.stream.JsonWriter value(java.lang.Number)	=>	a(java.lang.Number)
		public com.google.gson.stream.JsonWriter value(java.lang.String)	=>	e(java.lang.String)
		public com.google.gson.stream.JsonWriter value(long)	=>	a(long)
		private void writeDeferredName()	=>	b()
	LineNumbersOf: com.google.gson.stream.JsonWriter
		145	=>	61
		146	=>	104 and 155
		147	=>	58
		149	=>	21
		150	=>	53
		151	=>	187
		152	=>	176
		153	=>	154
		154	=>	62
		155	=>	22
		156	=>	120
		157	=>	41
		158	=>	79
		159	=>	98
		160	=>	196
		161	=>	126
		162	=>	93
		167	=>	47
		168	=>	8
		170	=>	1
		182	=>	150
		190	=>	17
		197	=>	161
		198	=>	68
		199	=>	15
		201	=>	7
		202	=>	186
		213	=>	105
		214	=>	55
		215	=>	174
		217	=>	184
		218	=>	183
		220	=>	110
		235	=>	135
		236	=>	194
		242	=>	14
		253	=>	26
		254	=>	9
		261	=>	78
		269	=>	87
		270	=>	19
		277	=>	138
		287	=>	136
		288	=>	38
		297	=>	128
		307	=>	153
		308	=>	3
		317	=>	96
		325	=>	56
		326	=>	99
		327	=>	139
		328	=>	25
		337	=>	181
		338	=>	115
		339	=>	147
		341	=>	37
		342	=>	32
		345	=>	89
		346	=>	101
		347	=>	36
		349	=>	95
		350	=>	74
		354	=>	69
		355	=>	111
		356	=>	35
		357	=>	29
		359	=>	168
		360	=>	73
		366	=>	40
		367	=>	200
		369	=>	123
		376	=>	107
		377	=>	141
		386	=>	102
		387	=>	191
		389	=>	149
		390	=>	133
		392	=>	59
		393	=>	2
		395	=>	50
		396	=>	42
		400	=>	124
		401	=>	4
		402	=>	156
		403	=>	195
		405	=>	80
		414	=>	92
		415	=>	44
		417	=>	81
		418	=>	170
		419	=>	163
		420	=>	143
		431	=>	31
		432	=>	88
		434	=>	13
		435	=>	94
		436	=>	6
		437	=>	84
		446	=>	106
		447	=>	75
		448	=>	70
		450	=>	10
		451	=>	82
		454	=>	97
		455	=>	109
		456	=>	198
		465	=>	67
		466	=>	5
		467	=>	140
		468	=>	130
		477	=>	33
		478	=>	48
		480	=>	64
		481	=>	189
		482	=>	145
		483	=>	117
		494	=>	125
		495	=>	151
		496	=>	65
		498	=>	11
		499	=>	180
		500	=>	72
		509	=>	146
		510	=>	45
		511	=>	172
		512	=>	129
		523	=>	28
		524	=>	134
		527	=>	54
		528	=>	116
		529	=>	34
		530	=>	39
		531	=>	52
		533	=>	18
		534	=>	108
		535	=>	190
		543	=>	201
		544	=>	91
		546	=>	148
		547	=>	20
		555	=>	166
		557	=>	177
		558	=>	71
		559	=>	158
		561	=>	144
		562	=>	122
		565	=>	114
		566	=>	165
		567	=>	57
		568	=>	49
		569	=>	112 and 178
		570	=>	167
		572	=>	182
		573	=>	157
		574	=>	132
		575	=>	118
		577	=>	27
		578	=>	193
		579	=>	51
		580	=>	77
		584	=>	159
		585	=>	100
		587	=>	127
		588	=>	60
		590	=>	121
		591	=>	169
		593	=>	192
		594	=>	164
		597	=>	142
		598	=>	66
		601	=>	83
		602	=>	43 and 90
		603	=>	185
		605	=>	24
		612	=>	160
		613	=>	16
		614	=>	12
		615	=>	131
		616	=>	162
		618	=>	188
		619	=>	199
		620	=>	76
		629	=>	137
		631	=>	23
		632	=>	86
		637	=>	171
		638	=>	175
		641	=>	103
		642	=>	46
		643	=>	113
		646	=>	119
		647	=>	179
		648	=>	173
		651	=>	63
		652	=>	30
		653	=>	197
		656	=>	152
		658	=>	85

Class: public final com.google.gson.stream.MalformedJsonException	=>	com.a.a.c.c
	Source: "MalformedJsonException.java"
	FieldsOf: com.google.gson.stream.MalformedJsonException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.google.gson.stream.MalformedJsonException
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
	LineNumbersOf: com.google.gson.stream.MalformedJsonException
		29	=>	6
		30	=>	8
		33	=>	5
		36	=>	1
		37	=>	3
		39	=>	2
		42	=>	7
		43	=>	4

Class: public com.volmit.iris.GeneratedChunk	=>	com.volmit.iris.h
	Source: "GeneratedChunk.java"
	FieldsOf: com.volmit.iris.GeneratedChunk
		private org.bukkit.generator.ChunkGenerator$ChunkData data	=>	a
		private org.bukkit.generator.ChunkGenerator$BiomeGrid grid	=>	b
		private com.volmit.iris.util.ChunkPosition pos	=>	c
	MethodsOf: com.volmit.iris.GeneratedChunk
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$ChunkData getData()	=>	a()
		public org.bukkit.generator.ChunkGenerator$BiomeGrid getGrid()	=>	c()
		public com.volmit.iris.util.ChunkPosition getPos()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setData(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData)
		public void setGrid(org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void setPos(com.volmit.iris.util.ChunkPosition)	=>	a(com.volmit.iris.f.V)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.GeneratedChunk
		10	=>	1, 4, 5, 6, 8, 9 and 12
		13	=>	2
		14	=>	3
		15	=>	13
		18	=>	10
		19	=>	11
		20	=>	7

Class: public com.volmit.iris.Iris	NameNotChanged
	Source: "Iris.java"
	FieldsOf: com.volmit.iris.Iris
		private static int[] a	=>	b
		public static com.volmit.iris.IrisDataManager data	=>	f
		public static com.volmit.iris.util.KList executors	=>	i
		public com.volmit.iris.util.RollingSequence hits	=>	a
		public static com.volmit.iris.IrisHotloadManager hotloader	=>	j
		public static com.volmit.iris.Iris instance	=>	k
		private static java.lang.String last	=>	d
		private com.volmit.iris.util.BoardManager manager	=>	c
		public static com.volmit.iris.util.KList postProcessors	=>	h
		public com.volmit.iris.util.RollingSequence tp	=>	e
		public static com.volmit.iris.wand.WandController wand	=>	g
	MethodsOf: com.volmit.iris.Iris
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int[] a()	=>	b()
		public static void a(int[])	=>	b(int[])
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static void error(java.lang.String)	=>	a(java.lang.String)
		public org.bukkit.generator.ChunkGenerator getDefaultWorldGenerator(java.lang.String, java.lang.String) 	SignatureNotChanged
		public java.util.List getLines(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		public java.lang.String getTitle(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		public void hit(long)	=>	a(long)
		public void imsg(org.bukkit.command.CommandSender, java.lang.String)	=>	a(org.bukkit.command.CommandSender, java.lang.String)
		public static void info(java.lang.String)	=>	e(java.lang.String)
		private synthetic void lambda$0() 	SignatureNotChanged
		private static synthetic void lambda$1(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private synthetic void lambda$10(org.bukkit.entity.Player) 	SignatureNotChanged
		private static synthetic void lambda$2(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		private static synthetic void lambda$3(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$4(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiomeGeneratorLink) 	SignatureNotChanged
		private static synthetic void lambda$5(com.volmit.iris.util.KMap, java.io.File, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$6(com.volmit.iris.util.KMap, java.io.File, com.volmit.iris.object.IrisObjectPlacement) 	SignatureNotChanged
		private static synthetic void lambda$7(com.volmit.iris.util.KMap, java.io.File, java.lang.String) 	SignatureNotChanged
		private synthetic void lambda$8(java.lang.String, org.bukkit.command.CommandSender) 	SignatureNotChanged
		private synthetic void lambda$9(com.volmit.iris.util.O, com.volmit.iris.generator.IrisChunkGenerator) 	SignatureNotChanged
		private static com.volmit.iris.util.KList loadPostProcessors()	=>	c()
		public static void msg(java.lang.String)	=>	d(java.lang.String)
		public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]) 	SignatureNotChanged
		public void onDisable() 	SignatureNotChanged
		public void onEnable() 	SignatureNotChanged
		public static void success(java.lang.String)	=>	f(java.lang.String)
		public static void verbose(java.lang.String)	=>	c(java.lang.String)
		public static void warn(java.lang.String)	=>	b(java.lang.String)
		public void writeDocs()	=>	d()
	LineNumbersOf: com.volmit.iris.Iris
		76	=>	213
		81	=>	231
		83	=>	80
		84	=>	85
		85	=>	239
		87	=>	194
		89	=>	496
		90	=>	73
		94	=>	300
		95	=>	164
		96	=>	504
		97	=>	301
		98	=>	374
		99	=>	11
		101	=>	138
		105	=>	486
		106	=>	200
		108	=>	220
		110	=>	404
		112	=>	270
		113	=>	81
		118	=>	237
		124	=>	380
		125	=>	405
		127	=>	480
		129	=>	500
		130	=>	317
		131	=>	45
		132	=>	17
		133	=>	64
		134	=>	90
		135	=>	229
		136	=>	287
		137	=>	227
		138	=>	479
		139	=>	189
		140	=>	477
		141	=>	324
		142	=>	378
		143	=>	204
		144	=>	219
		145	=>	403
		146	=>	461
		148	=>	290
		150	=>	256
		151	=>	94
		154	=>	13
		155	=>	225
		159	=>	103
		162	=>	327
		167	=>	512
		169	=>	522
		170	=>	55
		171	=>	43
		172	=>	269
		173	=>	52
		174	=>	148
		176	=>	410
		181	=>	28
		182	=>	205
		183	=>	36
		184	=>	499
		185	=>	393
		187	=>	140 and 426
		189	=>	98
		191	=>	508
		192	=>	215
		193	=>	401
		194	=>	70
		196	=>	372
		197	=>	29
		198	=>	105
		200	=>	165
		201	=>	368 and 383
		203	=>	423
		205	=>	248
		206	=>	21
		207	=>	420
		211	=>	210
		212	=>	195
		216	=>	179 and 406
		218	=>	455
		220	=>	334
		224	=>	10 and 417
		226	=>	275
		229	=>	108 and 230
		231	=>	139
		233	=>	422
		237	=>	157
		238	=>	203
		239	=>	315
		240	=>	443
		241	=>	260
		247	=>	459
		249	=>	320
		251	=>	263
		252	=>	60
		253	=>	482
		254	=>	407
		255	=>	493
		256	=>	309
		259	=>	352
		261	=>	169
		263	=>	135
		265	=>	53
		266	=>	26
		267	=>	296
		268	=>	130
		269	=>	271
		270	=>	294
		271	=>	463
		273	=>	338
		275	=>	174
		276	=>	109
		280	=>	427
		282	=>	514
		284	=>	241
		285	=>	485
		290	=>	2 and 308
		292	=>	382
		294	=>	69
		298	=>	396
		300	=>	172
		302	=>	418
		303	=>	199
		306	=>	238
		308	=>	365
		310	=>	379
		311	=>	61
		312	=>	277
		314	=>	188
		316	=>	33 and 409
		318	=>	367
		319	=>	456
		321	=>	127
		323	=>	168
		324	=>	357
		325	=>	329
		326	=>	37
		329	=>	221
		333	=>	441
		334	=>	97
		335	=>	304
		340	=>	201
		342	=>	20
		346	=>	292
		348	=>	312
		350	=>	27
		351	=>	202
		352	=>	314
		353	=>	226
		355	=>	228
		356	=>	95
		357	=>	517
		358	=>	353
		359	=>	439
		361	=>	348
		365	=>	163
		367	=>	473
		369	=>	385
		370	=>	253
		373	=>	243
		377	=>	337
		379	=>	207
		380	=>	112
		384	=>	5
		387	=>	124
		389	=>	159
		394	=>	272
		396	=>	183
		397	=>	217
		400	=>	184
		401	=>	421
		403	=>	100
		406	=>	373
		408	=>	173
		410	=>	361
		411	=>	328
		413	=>	457
		415	=>	111
		417	=>	519
		419	=>	466
		420	=>	344
		422	=>	436
		423	=>	178
		424	=>	12
		425	=>	286
		426	=>	475
		427	=>	460
		429	=>	131 and 425
		431	=>	384
		432	=>	146
		433	=>	39
		436	=>	497
		437	=>	136
		438	=>	524
		439	=>	34
		440	=>	351
		441	=>	413
		442	=>	452
		443	=>	510
		444	=>	262
		445	=>	377
		446	=>	278
		447	=>	321
		448	=>	481
		449	=>	281
		450	=>	191
		452	=>	104
		454	=>	30
		456	=>	525
		458	=>	6
		459	=>	258
		462	=>	363
		463	=>	167
		464	=>	325
		465	=>	342
		466	=>	147
		467	=>	303
		468	=>	74
		470	=>	99 and 276
		472	=>	330
		473	=>	415
		474	=>	116
		477	=>	299
		478	=>	297
		480	=>	161 and 218
		482	=>	376
		483	=>	48
		484	=>	110
		487	=>	434
		488	=>	336
		489	=>	16
		490	=>	494
		491	=>	54
		492	=>	75
		493	=>	395
		494	=>	19
		495	=>	523
		496	=>	433
		497	=>	392
		498	=>	489
		499	=>	360
		500	=>	429
		501	=>	505
		503	=>	82
		505	=>	369
		507	=>	114
		509	=>	181
		510	=>	358
		513	=>	366
		514	=>	513
		515	=>	440
		516	=>	435
		517	=>	462
		518	=>	470
		519	=>	144
		520	=>	503
		521	=>	208
		522	=>	483
		523	=>	89
		524	=>	23
		525	=>	240
		526	=>	67
		528	=>	119
		530	=>	25
		532	=>	142
		534	=>	41
		535	=>	491
		538	=>	8
		539	=>	311
		540	=>	381
		541	=>	153
		542	=>	242
		543	=>	332
		544	=>	93
		545	=>	279
		546	=>	113
		547	=>	151
		548	=>	291
		549	=>	341
		550	=>	255
		552	=>	35
		554	=>	62
		556	=>	156
		558	=>	375
		559	=>	38
		562	=>	102
		563	=>	465
		564	=>	120
		565	=>	313
		566	=>	359
		567	=>	65
		568	=>	350
		569	=>	78
		570	=>	251
		571	=>	326
		572	=>	7
		573	=>	390
		574	=>	424
		576	=>	171
		578	=>	233
		579	=>	339
		581	=>	310
		582	=>	370
		583	=>	51
		585	=>	63
		587	=>	87
		589	=>	266
		590	=>	223
		592	=>	340
		593	=>	197
		594	=>	445
		596	=>	176
		598	=>	285
		600	=>	362
		601	=>	488
		603	=>	498
		604	=>	346
		605	=>	511
		607	=>	516
		609	=>	501
		611	=>	149
		612	=>	180
		614	=>	307
		615	=>	122
		616	=>	92
		618	=>	83
		622	=>	40
		623	=>	335
		624	=>	343
		625	=>	495
		626	=>	364
		627	=>	416
		628	=>	134
		629	=>	246
		630	=>	437
		634	=>	58
		636	=>	267
		637	=>	472
		640	=>	84
		641	=>	22
		642	=>	232
		643	=>	295
		645	=>	331
		647	=>	245
		649	=>	506
		653	=>	141
		655	=>	298
		656	=>	515
		658	=>	316 and 389
		660	=>	345
		662	=>	431
		666	=>	209
		668	=>	222
		671	=>	471
		672	=>	249
		676	=>	469
		677	=>	14
		679	=>	132
		680	=>	288
		682	=>	24
		684	=>	152
		685	=>	68
		686	=>	88
		689	=>	347
		690	=>	18
		691	=>	57
		693	=>	49
		695	=>	438
		696	=>	32
		700	=>	211
		702	=>	150
		704	=>	487
		706	=>	4
		709	=>	42
		710	=>	244
		711	=>	175
		712	=>	129
		713	=>	474
		714	=>	247
		715	=>	442
		716	=>	137
		717	=>	47 and 305
		718	=>	182 and 280
		719	=>	76, 206 and 274
		720	=>	521
		722	=>	192 and 398
		724	=>	224 and 282
		726	=>	198
		728	=>	252 and 322
		730	=>	419
		732	=>	72
		733	=>	478
		736	=>	273
		737	=>	71
		738	=>	155
		741	=>	196
		745	=>	333
		747	=>	56, 268 and 509
		751	=>	118
		752	=>	318
		753	=>	254
		755	=>	520
		759	=>	3, 464 and 490
		763	=>	236
		765	=>	125 and 476
		767	=>	289
		768	=>	492
		771	=>	355 and 468
		773	=>	319
		774	=>	187
		777	=>	79 and 453
		779	=>	160
		780	=>	526
		783	=>	447
		784	=>	446
		785	=>	106
		787	=>	59
		789	=>	354
		792	=>	432
		795	=>	414
		797	=>	162
		799	=>	96
		801	=>	193
		804	=>	450
		806	=>	323
		808	=>	212 and 371
		810	=>	399
		812	=>	121 and 185
		814	=>	283
		817	=>	412
		821	=>	265
		823	=>	50
		825	=>	408
		826	=>	190
		829	=>	44 and 397
		831	=>	9
		834	=>	306
		835	=>	394
		836	=>	234
		837	=>	216
		838	=>	145
		840	=>	154
		842	=>	448
		843	=>	186
		844	=>	107 and 261
		846	=>	507
		847	=>	257
		849	=>	284
		851	=>	128
		852	=>	467
		853	=>	293
		857	=>	400
		860	=>	117 and 387
		862	=>	91
		864	=>	518
		866	=>	166
		867	=>	502
		868	=>	133
		870	=>	214 and 349
		872	=>	31
		875	=>	259 and 402
		877	=>	158
		879	=>	391 and 430
		881	=>	123
		882	=>	177
		883	=>	46 and 101
		885	=>	235
		889	=>	250
		892	=>	77
		897	=>	444
		898	=>	388
		903	=>	302
		908	=>	449
		910	=>	428
		912	=>	356
		915	=>	386
		917	=>	454
		918	=>	143
		922	=>	451
		923	=>	66
		927	=>	126
		928	=>	458
		932	=>	411
		933	=>	86
		937	=>	264
		938	=>	15
		942	=>	170
		943	=>	115
		947	=>	484
		948	=>	1

Class: public abstract com.volmit.iris.IrisContext	=>	com.volmit.iris.i
	Source: "IrisContext.java"
	FieldsOf: com.volmit.iris.IrisContext
		public static final com.volmit.iris.util.KMap contexts	=>	a
	MethodsOf: com.volmit.iris.IrisContext
		static void <clinit>() 	SignatureNotChanged
		public abstract com.volmit.iris.util.BiomeResult getBiome(int, int)	=>	c(int, int)
		public abstract com.volmit.iris.object.IrisDimension getDimension()	=>	a()
		public abstract int getHeight(int, int)	=>	a(int, int)
		public abstract com.volmit.iris.IrisMetrics getMetrics()	=>	d()
		public abstract com.volmit.iris.object.IrisRegion getRegion(int, int)	=>	b(int, int)
		public abstract org.bukkit.World getWorld()	=>	c()
		public static com.volmit.iris.IrisContext of(org.bukkit.World)	=>	a(org.bukkit.World)
		public abstract void onHotloaded()	=>	b()
		public static void pushContext(com.volmit.iris.IrisContext)	=>	a(com.volmit.iris.i)
	LineNumbersOf: com.volmit.iris.IrisContext
		12	=>	1
		16	=>	4
		17	=>	2
		21	=>	3

Class: public com.volmit.iris.IrisDataManager	=>	com.volmit.iris.j
	Source: "IrisDataManager.java"
	FieldsOf: com.volmit.iris.IrisDataManager
		private com.volmit.iris.util.ResourceLoader biomeLoader	=>	e
		private java.io.File dataFolder	=>	a
		private com.volmit.iris.util.ResourceLoader dimensionLoader	=>	g
		private com.volmit.iris.util.ResourceLoader generatorLoader	=>	c
		private com.volmit.iris.util.ObjectResourceLoader objectLoader	=>	b
		private java.io.File packs	=>	d
		private com.volmit.iris.util.ResourceLoader regionLoader	=>	f
	MethodsOf: com.volmit.iris.IrisDataManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getBiomeLoader()	=>	a()
		public java.io.File getDataFolder()	=>	d()
		public com.volmit.iris.util.ResourceLoader getDimensionLoader()	=>	h()
		public com.volmit.iris.util.ResourceLoader getGeneratorLoader()	=>	b()
		public com.volmit.iris.util.ObjectResourceLoader getObjectLoader()	=>	i()
		public java.io.File getPacks()	=>	g()
		public com.volmit.iris.util.ResourceLoader getRegionLoader()	=>	f()
		public int hashCode() 	SignatureNotChanged
		public void hotloaded()	=>	c()
		public void setBiomeLoader(com.volmit.iris.util.ResourceLoader)	=>	b(com.volmit.iris.f.P)
		public void setDataFolder(java.io.File)	=>	b(java.io.File)
		public void setDimensionLoader(com.volmit.iris.util.ResourceLoader)	=>	c(com.volmit.iris.f.P)
		public void setGeneratorLoader(com.volmit.iris.util.ResourceLoader)	=>	d(com.volmit.iris.f.P)
		public void setObjectLoader(com.volmit.iris.util.ObjectResourceLoader)	=>	a(com.volmit.iris.f.Q)
		public void setPacks(java.io.File)	=>	a(java.io.File)
		public void setRegionLoader(com.volmit.iris.util.ResourceLoader)	=>	a(com.volmit.iris.f.P)
		public java.lang.String toString() 	SignatureNotChanged
		private void writeExamples()	=>	e()
	LineNumbersOf: com.volmit.iris.IrisDataManager
		23	=>	4, 20, 24, 26, 27, 29, 34, 50, 51, 63, 65, 69, 72, 74, 75, 76, 78 and 85
		36	=>	56
		37	=>	59
		38	=>	43
		39	=>	15
		40	=>	28
		41	=>	23
		42	=>	22
		43	=>	57
		45	=>	81
		47	=>	64
		48	=>	45
		49	=>	17
		50	=>	11
		54	=>	3
		55	=>	2
		56	=>	66
		57	=>	8
		59	=>	21 and 86
		61	=>	73
		64	=>	39 and 47
		66	=>	7
		71	=>	60
		72	=>	9
		73	=>	14
		74	=>	54
		75	=>	42
		76	=>	58
		78	=>	25
		79	=>	40
		80	=>	10
		81	=>	52
		82	=>	6
		83	=>	70
		84	=>	49
		85	=>	83
		86	=>	35
		87	=>	32
		88	=>	62
		89	=>	67
		90	=>	33
		91	=>	77
		92	=>	18
		93	=>	84
		94	=>	1
		95	=>	16
		97	=>	36
		99	=>	30
		100	=>	37
		101	=>	53
		102	=>	13
		103	=>	82
		104	=>	87
		105	=>	41
		107	=>	19
		108	=>	48
		109	=>	80
		111	=>	12
		112	=>	55
		113	=>	61
		114	=>	31
		116	=>	44
		117	=>	68
		118	=>	71
		119	=>	79
		120	=>	5
		122	=>	38
		126	=>	46

Class: public com.volmit.iris.IrisHotloadManager	=>	com.volmit.iris.g
	Source: "IrisHotloadManager.java"
	FieldsOf: com.volmit.iris.IrisHotloadManager
		private com.volmit.iris.util.ChronoLatch latch	=>	b
		private com.volmit.iris.util.KSet watchers	=>	a
	MethodsOf: com.volmit.iris.IrisHotloadManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void check(com.volmit.iris.IrisContext)	=>	a(com.volmit.iris.i)
		private synthetic void lambda$check$0(com.volmit.iris.IrisContext) 	SignatureNotChanged
		public void track(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: com.volmit.iris.IrisHotloadManager
		17	=>	6
		18	=>	4
		19	=>	21
		20	=>	9
		24	=>	13
		26	=>	22
		29	=>	1
		31	=>	18
		32	=>	17
		34	=>	14
		36	=>	23
		38	=>	11
		39	=>	2
		40	=>	12
		42	=>	16
		44	=>	24
		46	=>	8
		47	=>	7
		48	=>	3
		49	=>	19
		51	=>	5
		52	=>	20
		56	=>	10
		57	=>	15

Class: public com.volmit.iris.IrisMetrics	=>	com.volmit.iris.k
	Source: "IrisMetrics.java"
	FieldsOf: com.volmit.iris.IrisMetrics
		public int generators	=>	a
		private final com.volmit.iris.util.RollingSequence loss	=>	g
		public int noiseHits	=>	d
		private final com.volmit.iris.util.RollingSequence parallax	=>	h
		private final com.volmit.iris.util.RollingSequence perSecond	=>	f
		private final com.volmit.iris.util.RollingSequence post	=>	c
		private final com.volmit.iris.util.RollingSequence terrain	=>	b
		private final com.volmit.iris.util.RollingSequence total	=>	e
	MethodsOf: com.volmit.iris.IrisMetrics
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getGenerators()	=>	h()
		public com.volmit.iris.util.RollingSequence getLoss()	=>	a()
		public int getNoiseHits()	=>	f()
		public com.volmit.iris.util.RollingSequence getParallax()	=>	d()
		public com.volmit.iris.util.RollingSequence getPerSecond()	=>	i()
		public com.volmit.iris.util.RollingSequence getPost()	=>	e()
		public double getSpeed()	=>	c()
		public com.volmit.iris.util.RollingSequence getTerrain()	=>	g()
		public com.volmit.iris.util.RollingSequence getTotal()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setGenerators(int)	=>	b(int)
		public void setNoiseHits(int)	=>	a(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.IrisMetrics
		7	=>	2, 9, 15, 16, 19 and 20
		10	=>	17
		11	=>	18
		12	=>	25
		13	=>	22
		14	=>	10
		15	=>	6
		16	=>	3 and 14
		17	=>	12 and 13
		20	=>	4
		21	=>	7
		22	=>	24
		23	=>	8
		24	=>	23
		25	=>	11
		26	=>	1
		27	=>	5
		31	=>	21

Class: public abstract com.volmit.iris.generator.BiomeChunkGenerator	=>	com.volmit.iris.d.c
	Source: "BiomeChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.BiomeChunkGenerator
		private com.volmit.iris.object.IrisBiome[] biomeCache	=>	v
		private com.volmit.iris.util.KMap biomeHitCache	=>	s
		private com.volmit.iris.util.KMap ceilingBiomeHitCache	=>	w
		private com.volmit.iris.util.KMap ceilingGenerators	=>	x
		protected com.volmit.iris.util.ChronoLatch cwarn	=>	t
		private com.volmit.iris.util.KMap generators	=>	u
		protected com.volmit.iris.layer.GenLayerBiome glBiome	=>	z
		protected com.volmit.iris.util.CNG masterFracture	=>	y
		protected java.util.concurrent.locks.ReentrantLock regLock	=>	r
	MethodsOf: com.volmit.iris.generator.BiomeChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		protected void cacheInternalBiome(int, int, com.volmit.iris.object.IrisBiome)	=>	a(int, int, com.volmit.iris.b.n)
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome[] getBiomeCache()	=>	C()
		protected double getBiomeHeight(double, double)	=>	a(double, double)
		public com.volmit.iris.util.KMap getBiomeHitCache()	=>	G()
		protected com.volmit.iris.object.IrisBiome getCachedInternalBiome(int, int)	=>	k(int, int)
		public com.volmit.iris.util.KMap getCeilingBiomeHitCache()	=>	x()
		public com.volmit.iris.util.KMap getCeilingGenerators()	=>	y()
		public com.volmit.iris.util.ChronoLatch getCwarn()	=>	B()
		protected com.volmit.iris.util.KMap getGenerators()	=>	D()
		public com.volmit.iris.layer.GenLayerBiome getGlBiome()	=>	z()
		public com.volmit.iris.util.CNG getMasterFracture()	=>	A()
		public java.util.concurrent.locks.ReentrantLock getRegLock()	=>	E()
		public int hashCode() 	SignatureNotChanged
		protected double interpolateGenerator(double, double, com.volmit.iris.object.IrisGenerator)	=>	a(double, double, com.volmit.iris.b.p)
		private synthetic double lambda$0(com.volmit.iris.object.IrisGenerator, double, double) 	SignatureNotChanged
		private synthetic double lambda$1(com.volmit.iris.object.IrisGenerator, double, double) 	SignatureNotChanged
		private synthetic void lambda$2(com.volmit.iris.object.IrisDimension, com.volmit.iris.object.IrisBiomeGeneratorLink) 	SignatureNotChanged
		protected void loadGenerators()	=>	F()
		protected void loadGenerators(com.volmit.iris.object.IrisDimension)	=>	a(com.volmit.iris.b.o)
		public void onHotload()	=>	n()
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		public void registerGenerator(com.volmit.iris.object.IrisGenerator, com.volmit.iris.object.IrisDimension)	=>	a(com.volmit.iris.b.p, com.volmit.iris.b.o)
		public com.volmit.iris.util.BiomeResult sampleBiome(int, int)	=>	m(int, int)
		public com.volmit.iris.object.IrisRegion sampleRegion(int, int)	=>	l(int, int)
		public void setBiomeCache(com.volmit.iris.object.IrisBiome[])	=>	a(com.volmit.iris.b.n[])
		public void setBiomeHitCache(com.volmit.iris.util.KMap)	=>	d(com.volmit.iris.f.aR)
		public void setCeilingBiomeHitCache(com.volmit.iris.util.KMap)	=>	a(com.volmit.iris.f.aR)
		public void setCeilingGenerators(com.volmit.iris.util.KMap)	=>	c(com.volmit.iris.f.aR)
		public void setCwarn(com.volmit.iris.util.ChronoLatch)	=>	d(com.volmit.iris.f.aG)
		public void setGenerators(com.volmit.iris.util.KMap)	=>	b(com.volmit.iris.f.aR)
		public void setGlBiome(com.volmit.iris.layer.GenLayerBiome)	=>	a(com.volmit.iris.a.c)
		public void setMasterFracture(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setRegLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.BiomeChunkGenerator
		28	=>	4, 7, 19, 20, 21, 27, 33, 51, 52, 53, 54, 59, 76, 79, 92, 111 and 124
		29	=>	15, 50 and 77
		39	=>	99
		44	=>	9
		45	=>	117
		46	=>	36
		47	=>	80
		48	=>	39
		49	=>	83
		50	=>	125
		51	=>	8
		55	=>	13
		56	=>	45
		57	=>	78
		58	=>	104
		62	=>	89
		67	=>	57
		68	=>	65
		72	=>	62
		78	=>	64
		79	=>	107
		80	=>	48
		81	=>	102
		82	=>	82
		86	=>	70
		88	=>	30
		89	=>	29
		91	=>	75
		92	=>	98
		95	=>	26
		96	=>	24
		97	=>	100
		101	=>	38
		106	=>	49
		108	=>	58 and 87
		110	=>	3
		113	=>	28
		118	=>	37
		120	=>	95
		122	=>	86 and 119
		124	=>	101
		126	=>	93
		130	=>	12
		133	=>	16
		135	=>	109
		137	=>	35 and 67
		139	=>	22
		141	=>	69
		145	=>	66
		148	=>	110
		153	=>	5
		154	=>	122
		155	=>	94
		156	=>	41
		157	=>	14
		161	=>	126
		163	=>	31
		166	=>	73
		167	=>	88
		169	=>	85 and 90
		171	=>	74
		173	=>	103
		175	=>	105
		176	=>	18
		177	=>	68
		178	=>	116
		179	=>	71
		183	=>	1 and 2
		185	=>	6
		187	=>	56
		189	=>	17
		190	=>	43
		191	=>	46 and 97
		192	=>	112
		195	=>	63
		199	=>	84
		200	=>	10
		201	=>	42
		206	=>	32
		208	=>	40
		210	=>	34 and 115
		212	=>	96
		214	=>	81
		216	=>	113
		217	=>	106
		220	=>	55
		222	=>	120
		223	=>	47
		226	=>	108
		228	=>	118
		229	=>	44
		233	=>	11
		236	=>	60
		238	=>	25
		240	=>	91
		243	=>	72
		244	=>	23
		245	=>	114
		246	=>	61
		247	=>	121
		249	=>	123

Class: public abstract com.volmit.iris.generator.CeilingChunkGenerator	=>	com.volmit.iris.d.h
	Source: "CeilingChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.CeilingChunkGenerator
		protected com.volmit.iris.object.IrisDimension cacheCeiling	=>	ak
		protected com.volmit.iris.object.IrisDimension cacheFloor	=>	am
		protected boolean ceilingCached	=>	aj
		protected boolean generatingCeiling	=>	al
	MethodsOf: com.volmit.iris.generator.CeilingChunkGenerator
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$ChunkData copy(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	b(org.bukkit.generator.ChunkGenerator$ChunkData)
		private void generate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	b(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public com.volmit.iris.object.IrisDimension getCeilingDimension()	=>	au()
		public com.volmit.iris.object.IrisDimension getDimension()	=>	a()
		public com.volmit.iris.object.IrisDimension getFloorDimension()	=>	ar()
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void onHotload()	=>	n()
		private void targetCeiling()	=>	as()
		private void targetFloor()	=>	at()
		public void writeInverted(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$ChunkData)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$ChunkData)
	LineNumbersOf: com.volmit.iris.generator.CeilingChunkGenerator
		13	=>	39
		14	=>	27
		15	=>	16
		16	=>	55
		20	=>	17
		21	=>	43
		26	=>	23
		27	=>	26
		29	=>	36
		31	=>	54
		34	=>	47
		36	=>	35
		37	=>	56
		38	=>	32
		39	=>	3
		40	=>	7
		42	=>	60
		47	=>	51
		48	=>	42
		49	=>	50
		50	=>	46
		51	=>	22
		55	=>	11
		56	=>	15
		60	=>	29
		61	=>	58
		65	=>	4
		66	=>	48
		71	=>	44
		76	=>	45
		78	=>	18
		81	=>	33
		86	=>	37
		88	=>	61
		91	=>	10
		93	=>	63
		96	=>	49
		98	=>	28
		100	=>	40
		103	=>	62
		104	=>	5
		106	=>	34
		111	=>	2 and 21
		113	=>	31 and 65
		115	=>	8 and 38
		117	=>	1
		119	=>	19
		121	=>	13
		124	=>	53
		128	=>	64
		132	=>	30
		134	=>	20 and 59
		136	=>	14 and 24
		138	=>	41 and 52
		140	=>	6
		142	=>	12
		144	=>	9
		147	=>	57
		152	=>	25

Class: public abstract com.volmit.iris.generator.ContextualChunkGenerator	=>	com.volmit.iris.d.a
	Source: "ContextualChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.ContextualChunkGenerator
		private static int a	=>	h
		protected boolean failing	=>	g
		protected int generated	=>	d
		protected boolean initialized	=>	e
		protected com.volmit.iris.util.RNG masterRandom	=>	m
		protected com.volmit.iris.IrisMetrics metrics	=>	l
		protected com.volmit.iris.util.ChronoLatch perSecond	=>	k
		protected boolean pregenDone	=>	a
		protected com.volmit.iris.util.ChronoLatch pushLatch	=>	i
		protected int task	=>	j
		protected com.volmit.iris.util.ChronoLatch tickLatch	=>	b
		protected int ticks	=>	c
		protected org.bukkit.World world	=>	f
	MethodsOf: com.volmit.iris.generator.ContextualChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int a()	=>	f()
		public static void a(int)	=>	b(int)
		public static int b()	=>	q()
		private static java.lang.Throwable c(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean canSpawn(org.bukkit.World, int, int) 	SignatureNotChanged
		public void close()	=>	h()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		protected void fail(java.lang.Throwable)	=>	a(java.lang.Throwable)
		public org.bukkit.generator.ChunkGenerator$ChunkData generateChunkData(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		protected org.bukkit.generator.ChunkGenerator$ChunkData generateChunkDataFailure(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public java.util.List getDefaultPopulators(org.bukkit.World) 	SignatureNotChanged
		public org.bukkit.Location getFixedSpawnLocation(org.bukkit.World, java.util.Random) 	SignatureNotChanged
		public int getGenerated()	=>	k()
		public com.volmit.iris.util.RNG getMasterRandom()	=>	m()
		public com.volmit.iris.IrisMetrics getMetrics()	=>	d()
		public com.volmit.iris.util.ChronoLatch getPerSecond()	=>	u()
		public com.volmit.iris.util.ChronoLatch getPushLatch()	=>	i()
		public int getTask()	=>	t()
		public com.volmit.iris.util.ChronoLatch getTickLatch()	=>	r()
		public int getTicks()	=>	o()
		public org.bukkit.World getWorld()	=>	c()
		public int hashCode() 	SignatureNotChanged
		private void init(org.bukkit.World, com.volmit.iris.util.RNG)	=>	a(org.bukkit.World, com.volmit.iris.f.aV)
		public boolean isFailing()	=>	g()
		public boolean isInitialized()	=>	j()
		public boolean isParallelCapable() 	SignatureNotChanged
		public boolean isPregenDone()	=>	s()
		private synthetic void lambda$fail$0(java.lang.Throwable) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerJoinEvent)	=>	a(org.bukkit.event.player.PlayerJoinEvent)
		public void on(org.bukkit.event.player.PlayerQuitEvent)	=>	a(org.bukkit.event.player.PlayerQuitEvent)
		public void on(org.bukkit.event.player.PlayerTeleportEvent)	=>	a(org.bukkit.event.player.PlayerTeleportEvent)
		public void on(org.bukkit.event.world.ChunkLoadEvent)	=>	a(org.bukkit.event.world.ChunkLoadEvent)
		public void on(org.bukkit.event.world.ChunkUnloadEvent)	=>	a(org.bukkit.event.world.ChunkUnloadEvent)
		public void on(org.bukkit.event.world.WorldUnloadEvent)	=>	a(org.bukkit.event.world.WorldUnloadEvent)
		protected abstract void onChunkLoaded(org.bukkit.Chunk)	=>	b(org.bukkit.Chunk)
		protected abstract void onChunkUnloaded(org.bukkit.Chunk)	=>	a(org.bukkit.Chunk)
		protected abstract void onClose()	=>	p()
		protected abstract void onFailure(java.lang.Throwable)	=>	b(java.lang.Throwable)
		protected abstract void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void onHotload()	=>	n()
		protected abstract void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		protected abstract void onPlayerJoin(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		protected abstract void onPlayerLeft(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		protected abstract void onTick(int)	=>	a(int)
		public void setFailing(boolean)	=>	b(boolean)
		public void setGenerated(int)	=>	c(int)
		public void setInitialized(boolean)	=>	a(boolean)
		public void setMasterRandom(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public void setMetrics(com.volmit.iris.IrisMetrics)	=>	a(com.volmit.iris.k)
		public void setPerSecond(com.volmit.iris.util.ChronoLatch)	=>	b(com.volmit.iris.f.aG)
		public void setPregenDone(boolean)	=>	c(boolean)
		public void setPushLatch(com.volmit.iris.util.ChronoLatch)	=>	c(com.volmit.iris.f.aG)
		public void setTask(int)	=>	d(int)
		public void setTickLatch(com.volmit.iris.util.ChronoLatch)	=>	a(com.volmit.iris.f.aG)
		public void setTicks(int)	=>	e(int)
		public void setWorld(org.bukkit.World)	=>	b(org.bukkit.World)
		private void tick()	=>	l()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.ContextualChunkGenerator
		37	=>	33, 37, 41, 61, 64, 68, 95, 115, 117, 119, 130, 133 and 140
		38	=>	22, 42 and 108
		41	=>	21
		42	=>	111
		43	=>	103
		44	=>	23
		45	=>	123
		46	=>	113
		47	=>	40
		48	=>	2
		49	=>	45
		50	=>	16
		51	=>	125
		52	=>	35
		55	=>	72
		56	=>	102
		57	=>	5
		58	=>	91
		59	=>	67
		60	=>	15
		61	=>	105
		62	=>	28
		63	=>	126
		64	=>	62
		65	=>	92
		66	=>	83
		88	=>	141
		90	=>	25
		93	=>	66
		94	=>	101
		95	=>	76
		96	=>	57
		97	=>	8
		98	=>	138
		99	=>	143
		100	=>	54
		104	=>	70
		106	=>	47
		108	=>	31
		111	=>	7
		113	=>	85
		114	=>	44
		118	=>	100
		119	=>	39
		124	=>	135
		126	=>	18
		127	=>	78
		130	=>	12
		132	=>	53
		133	=>	139
		135	=>	27
		140	=>	96
		142	=>	1
		143	=>	30
		145	=>	145
		150	=>	110
		152	=>	36
		153	=>	109
		155	=>	107
		160	=>	58
		162	=>	134
		163	=>	24
		165	=>	128
		170	=>	65
		172	=>	94
		173	=>	86
		175	=>	80
		180	=>	73
		182	=>	132
		184	=>	89
		188	=>	99
		189	=>	124
		190	=>	49
		191	=>	48
		196	=>	26
		201	=>	75
		203	=>	63 and 116
		205	=>	81 and 104
		207	=>	98
		209	=>	77
		211	=>	144
		216	=>	82
		221	=>	13
		227	=>	11
		229	=>	88
		231	=>	59
		236	=>	129
		238	=>	106
		240	=>	69
		243	=>	84
		245	=>	87
		247	=>	20
		251	=>	10
		252	=>	56
		253	=>	60
		254	=>	17
		255	=>	55
		256	=>	122
		257	=>	3
		258	=>	71
		259	=>	97
		260	=>	19
		261	=>	74
		262	=>	52
		265	=>	6
		267	=>	137
		270	=>	4
		276	=>	142
		280	=>	93
		282	=>	136
		285	=>	51
		287	=>	14
		288	=>	43
		290	=>	120
		291	=>	46
		292	=>	79
		293	=>	118
		294	=>	34
		295	=>	29
		297	=>	112
		299	=>	121
		300	=>	50
		301	=>	32
		302	=>	9
		303	=>	146
		305	=>	131
		306	=>	127
		311	=>	114
		317	=>	90
		323	=>	38

Class: public abstract com.volmit.iris.generator.DimensionChunkGenerator	=>	com.volmit.iris.d.b
	Source: "DimensionChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.DimensionChunkGenerator
		protected static final org.bukkit.block.data.BlockData AIR	=>	n
		protected static final org.bukkit.block.data.BlockData BEDROCK	=>	q
		protected static final org.bukkit.block.data.BlockData CAVE_AIR	=>	o
		protected final java.lang.String dimensionName	=>	p
	MethodsOf: com.volmit.iris.generator.DimensionChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		protected com.volmit.iris.util.BiomeResult focus()	=>	v()
		public com.volmit.iris.object.IrisDimension getDimension()	=>	a()
		public java.lang.String getDimensionName()	=>	w()
		public double getModifiedX(int, int)	=>	j(int, int)
		public double getModifiedZ(int, int)	=>	i(int, int)
		public double getUnzoomed(double)	=>	a(double)
		public double getZoomed(double)	=>	b(double)
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.DimensionChunkGenerator
		16	=>	16 and 29
		17	=>	3, 14 and 17
		21	=>	27
		22	=>	24
		23	=>	31
		27	=>	21
		28	=>	19
		29	=>	7
		33	=>	23
		35	=>	34
		37	=>	26
		40	=>	30
		45	=>	22
		47	=>	11 and 25
		49	=>	4
		51	=>	33
		53	=>	37
		54	=>	35
		57	=>	28
		59	=>	10
		60	=>	13
		63	=>	5
		65	=>	6
		66	=>	2
		70	=>	9
		75	=>	1 and 36
		77	=>	32
		82	=>	18 and 20
		84	=>	12
		89	=>	8
		94	=>	15

Class: public com.volmit.iris.generator.IrisChunkGenerator	=>	com.volmit.iris.d.i
	Source: "IrisChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.IrisChunkGenerator
		private com.volmit.iris.util.KMap b	=>	an
		private java.lang.reflect.Method initLighting	=>	ao
		private java.util.concurrent.locks.ReentrantLock lock	=>	ap
	MethodsOf: com.volmit.iris.generator.IrisChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getB()	=>	aw()
		public com.volmit.iris.util.BiomeResult getBiome(int, int)	=>	c(int, int)
		public int getHeight(int, int)	=>	a(int, int)
		public java.lang.reflect.Method getInitLighting()	=>	av()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	ae()
		public com.volmit.iris.object.IrisRegion getRegion(int, int)	=>	b(int, int)
		public int hashCode() 	SignatureNotChanged
		protected void onChunkLoaded(org.bukkit.Chunk)	=>	b(org.bukkit.Chunk)
		protected void onChunkUnloaded(org.bukkit.Chunk)	=>	a(org.bukkit.Chunk)
		protected void onClose()	=>	p()
		protected void onFailure(java.lang.Throwable)	=>	b(java.lang.Throwable)
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void onHotloaded()	=>	b()
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		protected void onPlayerJoin(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		protected void onPlayerLeft(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		protected void onTick(int)	=>	a(int)
		public void setB(com.volmit.iris.util.KMap)	=>	g(com.volmit.iris.f.aR)
		public void setInitLighting(java.lang.reflect.Method)	=>	a(java.lang.reflect.Method)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	e(java.util.concurrent.locks.ReentrantLock)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.IrisChunkGenerator
		23	=>	4, 6, 31, 42, 44, 45 and 49
		24	=>	20, 32 and 46
		29	=>	50
		33	=>	5
		34	=>	55
		35	=>	11
		40	=>	52
		41	=>	34
		42	=>	10
		43	=>	17
		49	=>	9
		50	=>	24
		52	=>	47
		54	=>	51
		56	=>	26
		61	=>	30
		67	=>	13
		73	=>	29
		79	=>	54
		80	=>	48
		85	=>	40
		89	=>	39
		90	=>	33
		91	=>	8
		92	=>	2
		93	=>	27
		94	=>	37
		95	=>	53
		97	=>	35
		99	=>	41
		102	=>	28
		103	=>	43
		104	=>	36
		105	=>	7
		106	=>	21
		107	=>	18
		108	=>	12
		109	=>	25
		110	=>	22
		116	=>	3
		122	=>	14
		128	=>	16
		134	=>	19
		140	=>	15
		145	=>	23
		146	=>	1
		147	=>	38

Class: public abstract com.volmit.iris.generator.ParallaxChunkGenerator	=>	com.volmit.iris.d.f
	Source: "ParallaxChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.ParallaxChunkGenerator
		protected com.volmit.iris.object.atomics.AtomicWorldData ceilingParallaxMap	=>	V
		private com.volmit.iris.util.KMap ceilingSliverCache	=>	Q
		private java.util.concurrent.locks.ReentrantLock lock	=>	U
		private java.util.concurrent.locks.ReentrantLock lockq	=>	W
		private com.volmit.iris.object.atomics.MasterLock masterLock	=>	P
		protected com.volmit.iris.object.atomics.AtomicWorldData parallaxMap	=>	R
		private int sliverBuffer	=>	S
		private com.volmit.iris.util.KMap sliverCache	=>	T
	MethodsOf: com.volmit.iris.generator.ParallaxChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		private static java.lang.Throwable d(java.lang.Throwable) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int, int, int)	=>	a(int, int, int)
		public com.volmit.iris.object.atomics.AtomicWorldData getCeilingParallaxMap()	=>	aa()
		public com.volmit.iris.util.KMap getCeilingSliverCache()	=>	ac()
		public int getHighest(int, int)	=>	e(int, int)
		public int getHighest(int, int, boolean)	=>	a(int, int, boolean)
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	ae()
		public java.util.concurrent.locks.ReentrantLock getLockq()	=>	Z()
		public com.volmit.iris.object.atomics.MasterLock getMasterLock()	=>	ad()
		public com.volmit.iris.object.atomics.AtomicSliverMap getParallaxChunk(int, int)	=>	z(int, int)
		public com.volmit.iris.object.atomics.AtomicWorldData getParallaxMap()	=>	af()
		public com.volmit.iris.object.atomics.AtomicSliver getParallaxSliver(int, int)	=>	A(int, int)
		public int getSliverBuffer()	=>	ab()
		protected com.volmit.iris.util.KMap getSliverCache()	=>	Y()
		public int hashCode() 	SignatureNotChanged
		protected void injectBiomeSky(int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public boolean isParallaxGenerated(int, int)	=>	B(int, int)
		public boolean isPreventingDecay()	=>	e()
		public boolean isSolid(int, int, int)	=>	b(int, int, int)
		public boolean isWorldGenerated(int, int)	=>	y(int, int)
		private synthetic void lambda$0(int, int, com.volmit.iris.util.RNG, com.volmit.iris.util.KList) 	SignatureNotChanged
		private synthetic void lambda$1(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$2(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$3(com.volmit.iris.object.IrisDepositGenerator, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$4(com.volmit.iris.object.IrisDepositGenerator, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$5(com.volmit.iris.object.IrisDepositGenerator, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$6(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		protected void onClose()	=>	p()
		protected void onGenerateParallax(com.volmit.iris.util.RNG, int, int)	=>	a(com.volmit.iris.f.aV, int, int)
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		protected void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M, com.volmit.iris.f.K)
		protected void onTick(int)	=>	a(int)
		public void placeCaveObject(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.b.x, int, int, com.volmit.iris.f.aV)
		public void placeObject(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.b.x, int, int, com.volmit.iris.f.aV)
		public com.volmit.iris.object.atomics.AtomicSliver sampleSliver(int, int)	=>	x(int, int)
		public void set(int, int, int, org.bukkit.block.data.BlockData)	=>	a(int, int, int, org.bukkit.block.data.BlockData)
		public void setCeilingParallaxMap(com.volmit.iris.object.atomics.AtomicWorldData)	=>	a(com.volmit.iris.b.a.b)
		public void setCeilingSliverCache(com.volmit.iris.util.KMap)	=>	e(com.volmit.iris.f.aR)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	e(java.util.concurrent.locks.ReentrantLock)
		public void setLockq(java.util.concurrent.locks.ReentrantLock)	=>	d(java.util.concurrent.locks.ReentrantLock)
		public void setMasterLock(com.volmit.iris.object.atomics.MasterLock)	=>	a(com.volmit.iris.b.a.a)
		public void setParallaxMap(com.volmit.iris.object.atomics.AtomicWorldData)	=>	b(com.volmit.iris.b.a.b)
		public void setSliverBuffer(int)	=>	j(int)
		public void setSliverCache(com.volmit.iris.util.KMap)	=>	f(com.volmit.iris.f.aR)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.ParallaxChunkGenerator
		33	=>	4, 19, 31, 51, 53, 100, 119, 149, 151, 157, 159, 161, 166, 170 and 186
		34	=>	103, 108 and 125
		42	=>	83
		43	=>	32
		48	=>	87
		49	=>	219
		50	=>	9
		51	=>	200
		52	=>	185
		53	=>	126
		57	=>	139
		58	=>	89
		59	=>	162
		60	=>	209
		64	=>	127
		69	=>	54
		73	=>	23
		74	=>	131
		75	=>	222
		77	=>	44
		79	=>	68
		81	=>	107
		86	=>	120
		92	=>	98
		94	=>	129
		96	=>	22 and 181
		98	=>	64
		101	=>	3
		104	=>	140
		110	=>	128
		111	=>	72
		112	=>	208
		113	=>	93
		118	=>	2
		119	=>	6
		125	=>	66
		130	=>	63
		131	=>	65
		132	=>	198
		133	=>	201
		134	=>	174
		135	=>	207
		137	=>	175
		142	=>	105
		147	=>	206
		152	=>	97
		159	=>	214
		162	=>	27
		164	=>	104
		167	=>	216
		173	=>	173
		175	=>	37
		178	=>	180
		179	=>	70
		180	=>	80
		182	=>	61
		184	=>	124
		185	=>	196
		186	=>	46
		187	=>	102
		188	=>	212
		189	=>	96
		192	=>	11
		193	=>	143
		194	=>	60
		195	=>	178
		199	=>	117
		201	=>	221
		207	=>	18 and 86
		209	=>	8
		210	=>	7 and 132
		212	=>	91
		214	=>	12
		215	=>	101
		217	=>	177
		219	=>	24
		221	=>	21 and 50
		223	=>	160
		228	=>	56
		232	=>	30
		233	=>	204
		234	=>	99
		236	=>	59 and 144
		238	=>	210
		240	=>	90 and 133
		242	=>	179
		244	=>	169
		246	=>	130
		249	=>	152
		251	=>	121
		254	=>	138
		256	=>	116
		257	=>	193
		258	=>	45
		260	=>	205
		262	=>	33 and 92
		264	=>	183 and 218
		266	=>	13
		267	=>	165
		269	=>	82
		271	=>	190
		274	=>	39
		276	=>	75 and 136
		278	=>	85
		279	=>	48
		280	=>	62
		282	=>	202
		283	=>	197
		284	=>	58
		287	=>	203
		292	=>	49 and 141
		294	=>	43
		295	=>	36
		296	=>	29
		298	=>	25
		299	=>	146
		300	=>	114
		303	=>	15 and 153
		305	=>	122 and 156
		307	=>	171
		308	=>	94
		310	=>	167
		311	=>	106
		312	=>	78
		316	=>	5 and 28
		318	=>	42 and 194
		320	=>	81
		321	=>	111
		323	=>	123
		324	=>	137
		325	=>	220
		329	=>	79 and 184
		331	=>	40 and 217
		333	=>	47
		334	=>	164
		336	=>	215
		337	=>	10
		338	=>	109
		342	=>	213
		344	=>	188
		345	=>	17
		347	=>	1
		349	=>	57
		351	=>	192
		354	=>	155
		356	=>	118
		359	=>	88 and 147
		361	=>	110
		362	=>	195
		363	=>	154
		365	=>	163
		366	=>	158
		367	=>	182
		370	=>	69
		372	=>	38
		376	=>	55
		378	=>	52
		379	=>	34 and 168
		381	=>	150
		383	=>	113
		385	=>	115
		386	=>	14
		390	=>	112 and 199
		392	=>	145
		393	=>	67
		395	=>	74
		399	=>	142 and 191
		401	=>	95
		402	=>	77
		403	=>	84
		404	=>	16
		406	=>	26
		408	=>	73
		411	=>	187
		413	=>	20
		418	=>	172
		419	=>	76
		420	=>	41
		424	=>	135
		426	=>	35
		428	=>	148
		431	=>	71
		432	=>	189
		433	=>	134
		435	=>	211
		441	=>	176

Class: public abstract com.volmit.iris.generator.ParallelChunkGenerator	=>	com.volmit.iris.d.d
	Source: "ParallelChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.ParallelChunkGenerator
		private com.volmit.iris.util.GroupedExecutor accelerant	=>	A
		protected int cacheX	=>	E
		protected int cacheZ	=>	C
		protected boolean cachingAllowed	=>	G
		private java.util.concurrent.locks.ReentrantLock genlock	=>	B
		private int threads	=>	D
		protected boolean unsafe	=>	F
	MethodsOf: com.volmit.iris.generator.ParallelChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public void changeThreadCount(int)	=>	f(int)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.GroupedExecutor getAccelerant()	=>	H()
		public int getCacheX()	=>	M()
		public int getCacheZ()	=>	I()
		public java.util.concurrent.locks.ReentrantLock getGenlock()	=>	O()
		public int getThreads()	=>	N()
		public int hashCode() 	SignatureNotChanged
		public boolean isCachingAllowed()	=>	J()
		public boolean isParallelCapable() 	SignatureNotChanged
		public boolean isSafe()	=>	L()
		public boolean isUnsafe()	=>	K()
		private synthetic void lambda$onGenerate$0(int, int, int, int, int, int, com.volmit.iris.object.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap) 	SignatureNotChanged
		protected void onClose()	=>	p()
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		protected void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.object.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap)	=>	a(int, int, int, int, int, int, com.volmit.iris.b.a.e, com.volmit.iris.f.K)
		protected abstract void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.object.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap, int)	=>	a(int, int, int, int, int, int, com.volmit.iris.b.a.e, com.volmit.iris.f.K, int)
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		protected abstract void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M, com.volmit.iris.f.K)
		protected abstract int onSampleColumnHeight(int, int, int, int, int, int)	=>	a(int, int, int, int, int, int)
		protected int sampleHeight(int, int)	=>	n(int, int)
		public void setAccelerant(com.volmit.iris.util.GroupedExecutor)	=>	a(com.volmit.iris.f.aC)
		public void setCacheX(int)	=>	g(int)
		public void setCacheZ(int)	=>	h(int)
		public void setCachingAllowed(boolean)	=>	d(boolean)
		public void setGenlock(java.util.concurrent.locks.ReentrantLock)	=>	b(java.util.concurrent.locks.ReentrantLock)
		public void setThreads(int)	=>	i(int)
		public void setUnsafe(boolean)	=>	e(boolean)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.generator.ParallelChunkGenerator
		19	=>	1, 3, 13, 33, 48, 59, 63 and 64
		20	=>	29, 35 and 42
		23	=>	49
		24	=>	65
		25	=>	11
		26	=>	61
		27	=>	50
		28	=>	68
		29	=>	20
		33	=>	52
		34	=>	18
		35	=>	19
		36	=>	37
		37	=>	62
		38	=>	2
		39	=>	55
		43	=>	34
		44	=>	4
		45	=>	44
		46	=>	8
		48	=>	24
		50	=>	73
		52	=>	21
		58	=>	70
		59	=>	41
		67	=>	71
		72	=>	7
		73	=>	12
		74	=>	5
		75	=>	14
		76	=>	10
		77	=>	30
		78	=>	47
		79	=>	36
		82	=>	45 and 56
		84	=>	17
		85	=>	32
		87	=>	15 and 54
		89	=>	46
		90	=>	51
		91	=>	53
		93	=>	26
		95	=>	66
		96	=>	31
		100	=>	67
		101	=>	60
		102	=>	6
		103	=>	69
		104	=>	9
		105	=>	22
		106	=>	43
		107	=>	58
		108	=>	25
		109	=>	27
		110	=>	28
		114	=>	39
		115	=>	16
		119	=>	23
		120	=>	38
		121	=>	40
		125	=>	72
		131	=>	57

Class: public abstract com.volmit.iris.generator.PostBlockChunkGenerator	=>	com.volmit.iris.d.g
	Source: "PostBlockChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.PostBlockChunkGenerator
		private com.volmit.iris.util.KList availableFilters	=>	ac
		protected com.volmit.iris.object.IrisDimension cacheCeiling	=>	af
		protected com.volmit.iris.object.IrisDimension cacheFloor	=>	ai
		protected boolean ceilingCached	=>	Y
		private org.bukkit.generator.ChunkGenerator$ChunkData currentData	=>	aa
		private int currentPostX	=>	ah
		private int currentPostZ	=>	Z
		protected boolean generatingCeiling	=>	ae
		private java.util.concurrent.locks.ReentrantLock lock	=>	ad
		private int maxPhase	=>	ag
		private int minPhase	=>	ab
		private java.lang.String postKey	=>	X
	MethodsOf: com.volmit.iris.generator.PostBlockChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.KList caveFloors(int, int)	=>	h(int, int)
		public com.volmit.iris.util.IrisPostBlockFilter createProcessor(java.lang.String, int)	=>	a(java.lang.String, int)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAvailableFilters()	=>	aq()
		public com.volmit.iris.object.IrisDimension getCacheCeiling()	=>	ag()
		public com.volmit.iris.object.IrisDimension getCacheFloor()	=>	am()
		public org.bukkit.generator.ChunkGenerator$ChunkData getCurrentData()	=>	ao()
		public int getCurrentPostX()	=>	an()
		public int getCurrentPostZ()	=>	ai()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	ae()
		public int getMaxPhase()	=>	ap()
		public int getMinPhase()	=>	al()
		public org.bukkit.block.data.BlockData getPostBlock(int, int, int)	=>	d(int, int, int)
		public java.lang.String getPostKey()	=>	aj()
		public int hashCode() 	SignatureNotChanged
		public int highestTerrainBlock(int, int)	=>	g(int, int)
		public int highestTerrainOrFluidBlock(int, int)	=>	f(int, int)
		public boolean isCeilingCached()	=>	ah()
		public boolean isGeneratingCeiling()	=>	ak()
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		public void setAvailableFilters(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setCacheCeiling(com.volmit.iris.object.IrisDimension)	=>	b(com.volmit.iris.b.o)
		public void setCacheFloor(com.volmit.iris.object.IrisDimension)	=>	c(com.volmit.iris.b.o)
		public void setCeilingCached(boolean)	=>	f(boolean)
		public void setCurrentData(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData)
		public void setCurrentPostX(int)	=>	l(int)
		public void setCurrentPostZ(int)	=>	n(int)
		public void setGeneratingCeiling(boolean)	=>	g(boolean)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	e(java.util.concurrent.locks.ReentrantLock)
		public void setMaxPhase(int)	=>	m(int)
		public void setMinPhase(int)	=>	k(int)
		public void setPostBlock(int, int, int, org.bukkit.block.data.BlockData)	=>	b(int, int, int, org.bukkit.block.data.BlockData)
		public void setPostKey(java.lang.String)	=>	a(java.lang.String)
		public java.lang.String toString() 	SignatureNotChanged
		public void updateHeight(int, int, int)	=>	c(int, int, int)
	LineNumbersOf: com.volmit.iris.generator.PostBlockChunkGenerator
		20	=>	3, 4, 10, 35, 47, 51, 59, 66, 81, 84, 89, 90 and 96
		21	=>	23, 55 and 99
		24	=>	20 and 48
		25	=>	12 and 79
		26	=>	17 and 101
		27	=>	71 and 92
		28	=>	70
		29	=>	80
		30	=>	14
		31	=>	65
		32	=>	60
		33	=>	44
		34	=>	13
		35	=>	94
		39	=>	11
		40	=>	82
		41	=>	22
		42	=>	50
		43	=>	58
		47	=>	29
		49	=>	46
		53	=>	1
		56	=>	63
		58	=>	72
		59	=>	28
		60	=>	36
		61	=>	8
		62	=>	95
		67	=>	39
		69	=>	21
		71	=>	42
		74	=>	54
		75	=>	38
		76	=>	32
		77	=>	34
		79	=>	88
		81	=>	41 and 102
		83	=>	37 and 86
		85	=>	53
		87	=>	5 and 93
		89	=>	56
		90	=>	68
		92	=>	26
		94	=>	40
		96	=>	49
		98	=>	73
		102	=>	2
		104	=>	91
		106	=>	75
		108	=>	15
		111	=>	25
		114	=>	43
		115	=>	67
		116	=>	31
		120	=>	19
		122	=>	6
		126	=>	24
		129	=>	9
		131	=>	27
		132	=>	62
		135	=>	61
		137	=>	7
		138	=>	52
		139	=>	97
		145	=>	74
		147	=>	100
		152	=>	85
		154	=>	104
		159	=>	64
		161	=>	87
		162	=>	18
		163	=>	69
		164	=>	83
		167	=>	30
		173	=>	103
		175	=>	57
		176	=>	33
		177	=>	45
		182	=>	78
		184	=>	16
		189	=>	98
		195	=>	76
		201	=>	77

Class: public abstract com.volmit.iris.generator.TerrainChunkGenerator	=>	com.volmit.iris.d.e
	Source: "TerrainChunkGenerator.java"
	FieldsOf: com.volmit.iris.generator.TerrainChunkGenerator
		private int[] cacheHeightMap	=>	L
		private java.util.concurrent.locks.ReentrantLock cacheLock	=>	O
		private com.volmit.iris.object.IrisBiome[] cacheTrueBiome	=>	H
		private com.volmit.iris.layer.GenLayerCarve glCarve	=>	K
		private com.volmit.iris.layer.GenLayerCave glCave	=>	I
		private long lastChunkLoad	=>	M
		private long lastUpdateRequest	=>	J
		private com.volmit.iris.util.RNG rockRandom	=>	N
	MethodsOf: com.volmit.iris.generator.TerrainChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		protected boolean canPlace(org.bukkit.Material, org.bukkit.Material)	=>	a(org.bukkit.Material, org.bukkit.Material)
		private void decorateCave(com.volmit.iris.object.IrisBiome, com.volmit.iris.object.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	c(com.volmit.iris.b.n, com.volmit.iris.b.a.e, double, int, double, int, int, org.bukkit.block.data.BlockData)
		private void decorateLand(com.volmit.iris.object.IrisBiome, com.volmit.iris.object.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	b(com.volmit.iris.b.n, com.volmit.iris.b.a.e, double, int, double, int, int, org.bukkit.block.data.BlockData)
		private void decorateUnderwater(com.volmit.iris.object.IrisBiome, com.volmit.iris.object.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	a(com.volmit.iris.b.n, com.volmit.iris.b.a.e, double, int, double, int, int, org.bukkit.block.data.BlockData)
		private static java.lang.Throwable e(java.lang.Throwable) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int[] getCacheHeightMap()	=>	W()
		public java.util.concurrent.locks.ReentrantLock getCacheLock()	=>	S()
		public com.volmit.iris.object.IrisBiome[] getCacheTrueBiome()	=>	X()
		public com.volmit.iris.util.KList getCaves(int, int)	=>	o(int, int)
		public int getFluidHeight()	=>	P()
		public com.volmit.iris.layer.GenLayerCarve getGlCarve()	=>	Q()
		public com.volmit.iris.layer.GenLayerCave getGlCave()	=>	T()
		public long getLastChunkLoad()	=>	U()
		public long getLastUpdateRequest()	=>	R()
		protected double getNoiseHeight(int, int)	=>	p(int, int)
		public com.volmit.iris.util.RNG getRockRandom()	=>	V()
		public double getTerrainHeight(int, int)	=>	v(int, int)
		public double getTerrainWaterHeight(int, int)	=>	s(int, int)
		public int hashCode() 	SignatureNotChanged
		public boolean isFluidAtHeight(int, int)	=>	r(int, int)
		public boolean isUnderwater(int, int)	=>	d(int, int)
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid)
		protected void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.object.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap, int)	=>	a(int, int, int, int, int, int, com.volmit.iris.b.a.e, com.volmit.iris.f.K, int)
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG)	=>	b(org.bukkit.World, com.volmit.iris.f.aV)
		protected void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap)	=>	a(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M, com.volmit.iris.f.K)
		protected void onPostParallaxPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap)	=>	c(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M, com.volmit.iris.f.K)
		protected void onPreParallaxPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap)	=>	b(com.volmit.iris.f.aV, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M, com.volmit.iris.f.K)
		protected int onSampleColumnHeight(int, int, int, int, int, int)	=>	a(int, int, int, int, int, int)
		public com.volmit.iris.util.BiomeResult sampleCaveBiome(int, int)	=>	q(int, int)
		public com.volmit.iris.util.BiomeResult sampleTrueBiome(int, int)	=>	u(int, int)
		public com.volmit.iris.util.BiomeResult sampleTrueBiome(int, int, int)	=>	e(int, int, int)
		public com.volmit.iris.util.BiomeResult sampleTrueBiomeBase(int, int)	=>	w(int, int)
		public void setCacheHeightMap(int[])	=>	a(int[])
		public void setCacheLock(java.util.concurrent.locks.ReentrantLock)	=>	c(java.util.concurrent.locks.ReentrantLock)
		public void setCacheTrueBiome(com.volmit.iris.object.IrisBiome[])	=>	b(com.volmit.iris.b.n[])
		public void setGlCarve(com.volmit.iris.layer.GenLayerCarve)	=>	a(com.volmit.iris.a.d)
		public void setGlCave(com.volmit.iris.layer.GenLayerCave)	=>	a(com.volmit.iris.a.e)
		public void setLastChunkLoad(long)	=>	b(long)
		public void setLastUpdateRequest(long)	=>	a(long)
		public void setRockRandom(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public java.lang.String toString() 	SignatureNotChanged
		private boolean touchesSea(int, int)	=>	t(int, int)
	LineNumbersOf: com.volmit.iris.generator.TerrainChunkGenerator
		32	=>	1, 3, 4, 38, 41, 75, 90, 112, 154, 170, 172, 183, 217, 227, 240, 273 and 284
		33	=>	69, 124 and 153
		36	=>	18
		37	=>	122
		47	=>	199
		48	=>	275
		49	=>	95
		50	=>	94
		51	=>	109
		52	=>	65
		56	=>	7
		57	=>	251
		58	=>	179
		59	=>	92
		60	=>	50
		64	=>	86
		70	=>	43
		71	=>	201
		76	=>	67
		78	=>	203
		83	=>	27
		85	=>	63
		86	=>	165
		87	=>	44
		88	=>	212
		89	=>	160
		90	=>	78
		91	=>	148
		92	=>	114
		93	=>	12
		94	=>	56
		95	=>	190
		97	=>	186
		99	=>	55
		102	=>	30
		106	=>	177
		107	=>	123
		108	=>	71
		110	=>	213
		112	=>	277
		116	=>	22
		117	=>	184
		118	=>	211
		119	=>	108
		120	=>	260
		121	=>	193
		123	=>	194 and 233
		125	=>	279
		127	=>	215
		129	=>	228
		134	=>	102 and 136
		136	=>	264
		138	=>	2
		140	=>	175
		142	=>	270
		143	=>	149
		146	=>	155
		147	=>	101
		150	=>	33
		152	=>	128
		154	=>	126
		155	=>	20
		158	=>	72
		159	=>	77
		160	=>	173
		163	=>	134
		165	=>	278
		166	=>	141
		167	=>	121
		168	=>	247
		171	=>	58
		173	=>	34
		175	=>	176
		176	=>	118
		179	=>	97
		181	=>	80
		182	=>	198
		184	=>	241
		186	=>	266
		187	=>	37
		191	=>	125
		192	=>	171
		195	=>	137
		196	=>	13
		198	=>	267
		200	=>	225
		203	=>	35
		205	=>	285
		209	=>	178
		210	=>	236
		212	=>	36
		214	=>	168 and 258
		216	=>	107 and 147
		218	=>	11
		219	=>	249
		222	=>	254
		223	=>	282
		224	=>	223
		225	=>	16 and 24
		227	=>	46
		229	=>	272
		232	=>	219
		235	=>	239 and 268
		237	=>	60
		240	=>	84
		242	=>	150
		247	=>	222
		249	=>	269
		251	=>	47
		253	=>	140
		255	=>	161
		257	=>	195
		261	=>	192
		263	=>	253
		265	=>	39
		269	=>	243
		271	=>	230
		273	=>	207
		277	=>	159
		282	=>	248
		284	=>	167
		287	=>	174
		289	=>	64 and 244
		291	=>	144
		293	=>	74
		296	=>	127
		298	=>	81
		300	=>	28
		302	=>	238
		305	=>	59
		307	=>	262
		309	=>	204
		313	=>	152
		315	=>	45
		316	=>	255
		317	=>	274
		318	=>	197
		319	=>	120
		320	=>	66
		321	=>	99
		325	=>	283
		327	=>	139
		329	=>	202
		330	=>	188
		332	=>	29
		334	=>	187 and 237
		336	=>	218
		341	=>	25
		344	=>	23
		348	=>	214
		350	=>	232
		353	=>	82
		355	=>	15 and 209
		357	=>	263
		359	=>	156
		361	=>	131
		363	=>	5
		366	=>	52
		368	=>	226
		370	=>	73
		374	=>	182
		376	=>	220
		377	=>	76
		378	=>	185
		379	=>	21
		380	=>	93
		381	=>	117
		382	=>	256
		386	=>	17
		388	=>	98
		390	=>	206
		391	=>	180
		393	=>	31
		395	=>	9 and 53
		397	=>	229
		399	=>	246
		402	=>	210
		407	=>	205
		410	=>	286
		414	=>	151
		416	=>	62
		419	=>	111
		421	=>	8 and 26
		423	=>	271
		425	=>	116
		428	=>	91
		430	=>	276
		432	=>	142
		434	=>	129
		436	=>	119
		437	=>	257
		439	=>	189
		441	=>	231 and 265
		443	=>	54
		447	=>	14
		450	=>	234
		455	=>	113
		456	=>	200
		461	=>	252
		466	=>	96
		470	=>	87
		471	=>	145
		473	=>	42
		478	=>	132
		480	=>	166
		483	=>	162
		484	=>	32
		485	=>	216
		486	=>	110
		487	=>	146
		488	=>	191
		490	=>	105
		492	=>	259
		495	=>	208
		497	=>	181
		500	=>	280
		502	=>	115
		505	=>	281
		507	=>	130
		510	=>	61
		512	=>	6
		515	=>	48
		520	=>	19
		521	=>	133
		522	=>	138
		527	=>	163
		529	=>	70
		530	=>	106
		531	=>	85
		533	=>	164
		535	=>	143
		539	=>	40
		544	=>	245
		546	=>	104
		549	=>	49
		551	=>	79
		554	=>	158
		555	=>	196
		556	=>	250
		557	=>	287
		558	=>	89
		559	=>	261
		560	=>	135
		562	=>	157
		564	=>	51
		567	=>	10
		573	=>	68
		574	=>	224
		576	=>	242
		581	=>	169
		586	=>	88
		591	=>	235
		596	=>	57
		601	=>	103
		603	=>	100
		606	=>	221
		611	=>	83

Class: public com.volmit.iris.layer.BiomeDataProvider	=>	com.volmit.iris.a.b
	Source: "BiomeDataProvider.java"
	FieldsOf: com.volmit.iris.layer.BiomeDataProvider
		private com.volmit.iris.util.BiomeRarityCellGenerator generator	=>	b
		private com.volmit.iris.layer.GenLayerBiome layer	=>	a
		private com.volmit.iris.object.InferredType type	=>	c
	MethodsOf: com.volmit.iris.layer.BiomeDataProvider
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.layer.GenLayerBiome, com.volmit.iris.object.InferredType, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateData(double, double, int, int, com.volmit.iris.object.IrisRegion)	=>	b(double, double, int, int, com.volmit.iris.b.r)
		public com.volmit.iris.util.BiomeResult generatePureData(double, double, int, int, com.volmit.iris.object.IrisRegion)	=>	a(double, double, int, int, com.volmit.iris.b.r)
		public com.volmit.iris.util.BiomeRarityCellGenerator getGenerator()	=>	b()
		public com.volmit.iris.layer.GenLayerBiome getLayer()	=>	c()
		public com.volmit.iris.object.InferredType getType()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public void setGenerator(com.volmit.iris.util.BiomeRarityCellGenerator)	=>	a(com.volmit.iris.f.aq)
		public void setLayer(com.volmit.iris.layer.GenLayerBiome)	=>	a(com.volmit.iris.a.c)
		public void setType(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.layer.BiomeDataProvider
		11	=>	2, 7, 10, 13, 17, 18 and 19
		14	=>	14
		15	=>	20
		16	=>	12
		19	=>	3
		20	=>	4
		21	=>	5
		22	=>	9
		23	=>	16
		27	=>	6
		28	=>	8
		29	=>	15
		30	=>	11
		35	=>	1

Class: public com.volmit.iris.layer.GenLayerBiome	=>	com.volmit.iris.a.c
	Source: "GenLayerBiome.java"
	FieldsOf: com.volmit.iris.layer.GenLayerBiome
		private static int[] a	=>	j
		private com.volmit.iris.util.CellGenerator bridgeGenerator	=>	l
		private com.volmit.iris.layer.BiomeDataProvider caveProvider	=>	e
		private com.volmit.iris.generator.DimensionChunkGenerator iris	=>	c
		private com.volmit.iris.layer.BiomeDataProvider islandProvider	=>	i
		private com.volmit.iris.layer.BiomeDataProvider landProvider	=>	f
		private com.volmit.iris.util.CellGenerator regionGenerator	=>	d
		private com.volmit.iris.layer.BiomeDataProvider seaProvider	=>	k
		private com.volmit.iris.layer.BiomeDataProvider shoreProvider	=>	g
		private com.volmit.iris.layer.BiomeDataProvider skylandProvider	=>	h
	MethodsOf: com.volmit.iris.layer.GenLayerBiome
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public static int[] a()	=>	j()
		public static void a(int[])	=>	b(int[])
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double generate(double, double)	=>	a(double, double)
		public com.volmit.iris.util.BiomeResult generateBiomeData(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.util.BiomeRarityCellGenerator, com.volmit.iris.util.KList, com.volmit.iris.object.InferredType)	=>	a(double, double, com.volmit.iris.b.r, com.volmit.iris.f.aq, com.volmit.iris.f.t, com.volmit.iris.b.h)
		public com.volmit.iris.util.BiomeResult generateData(com.volmit.iris.object.InferredType, double, double, int, int, com.volmit.iris.object.IrisRegion)	=>	a(com.volmit.iris.b.h, double, double, int, int, com.volmit.iris.b.r)
		public com.volmit.iris.util.BiomeResult generateData(double, double, int, int)	=>	a(double, double, int, int)
		public com.volmit.iris.util.BiomeResult generateImpureData(int, int, com.volmit.iris.object.InferredType, com.volmit.iris.object.IrisRegion, com.volmit.iris.util.BiomeResult)	=>	a(int, int, com.volmit.iris.b.h, com.volmit.iris.b.r, com.volmit.iris.f.a_)
		public com.volmit.iris.util.BiomeResult generateRegionData(double, double, int, int, com.volmit.iris.object.IrisRegion)	=>	a(double, double, int, int, com.volmit.iris.b.r)
		public com.volmit.iris.util.CellGenerator getBridgeGenerator()	=>	f()
		public com.volmit.iris.layer.BiomeDataProvider getCaveProvider()	=>	c()
		public com.volmit.iris.generator.DimensionChunkGenerator getIris()	=>	b()
		public com.volmit.iris.layer.BiomeDataProvider getIslandProvider()	=>	a()
		public com.volmit.iris.layer.BiomeDataProvider getLandProvider()	=>	d()
		public com.volmit.iris.layer.BiomeDataProvider getProvider(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public com.volmit.iris.object.IrisRegion getRegion(double, double)	=>	b(double, double)
		public com.volmit.iris.util.CellGenerator getRegionGenerator()	=>	h()
		public com.volmit.iris.layer.BiomeDataProvider getSeaProvider()	=>	e()
		public com.volmit.iris.layer.BiomeDataProvider getShoreProvider()	=>	g()
		public com.volmit.iris.layer.BiomeDataProvider getSkylandProvider()	=>	i()
		public com.volmit.iris.object.InferredType getType(double, double, com.volmit.iris.object.IrisRegion)	=>	a(double, double, com.volmit.iris.b.r)
		public int hashCode() 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult implode(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.util.BiomeRarityCellGenerator, com.volmit.iris.util.BiomeResult)	=>	a(double, double, com.volmit.iris.b.r, com.volmit.iris.f.aq, com.volmit.iris.f.a_)
		public com.volmit.iris.util.BiomeResult implode(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.util.BiomeRarityCellGenerator, com.volmit.iris.util.BiomeResult, int)	=>	a(double, double, com.volmit.iris.b.r, com.volmit.iris.f.aq, com.volmit.iris.f.a_, int)
		public void setBridgeGenerator(com.volmit.iris.util.CellGenerator)	=>	b(com.volmit.iris.f.aX)
		public void setCaveProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	e(com.volmit.iris.a.b)
		public void setIris(com.volmit.iris.generator.DimensionChunkGenerator)	=>	a(com.volmit.iris.d.b)
		public void setIslandProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	a(com.volmit.iris.a.b)
		public void setLandProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	d(com.volmit.iris.a.b)
		public void setRegionGenerator(com.volmit.iris.util.CellGenerator)	=>	a(com.volmit.iris.f.aX)
		public void setSeaProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	b(com.volmit.iris.a.b)
		public void setShoreProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	c(com.volmit.iris.a.b)
		public void setSkylandProvider(com.volmit.iris.layer.BiomeDataProvider)	=>	f(com.volmit.iris.a.b)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.layer.GenLayerBiome
		20	=>	2, 4, 12, 14, 19, 21, 40, 47, 55, 57, 59, 62, 69, 71, 79, 83, 89, 93 and 94
		21	=>	76, 77 and 91
		36	=>	86
		37	=>	50
		38	=>	8
		39	=>	53
		40	=>	44
		41	=>	33
		42	=>	29
		43	=>	23
		44	=>	58
		45	=>	43
		46	=>	31
		50	=>	7
		52	=>	87
		53	=>	63
		56	=>	30
		57	=>	92
		58	=>	60
		59	=>	75
		60	=>	85
		62	=>	54
		67	=>	28
		72	=>	10
		77	=>	24
		79	=>	49
		82	=>	73
		84	=>	46
		87	=>	9
		89	=>	5
		92	=>	34
		94	=>	17
		97	=>	88
		99	=>	67
		102	=>	80
		104	=>	38
		109	=>	20
		112	=>	25
		117	=>	84
		122	=>	82
		123	=>	42
		124	=>	27
		125	=>	45
		126	=>	65
		131	=>	35
		133	=>	22
		136	=>	41
		137	=>	15
		138	=>	95
		139	=>	26
		141	=>	36
		146	=>	51 and 52
		148	=>	18
		150	=>	61
		154	=>	16 and 48
		156	=>	13
		158	=>	72
		162	=>	64
		167	=>	6
		172	=>	56
		174	=>	37
		177	=>	74
		178	=>	70
		180	=>	1
		182	=>	11
		184	=>	39
		185	=>	81
		186	=>	3
		187	=>	68
		188	=>	32
		190	=>	90
		194	=>	66
		200	=>	78

Class: public com.volmit.iris.layer.GenLayerCarve	=>	com.volmit.iris.a.d
	Source: "GenLayerCarve.java"
	FieldsOf: com.volmit.iris.layer.GenLayerCarve
		private com.volmit.iris.util.CellGenerator cell	=>	c
	MethodsOf: com.volmit.iris.layer.GenLayerCarve
		public void <init>(com.volmit.iris.generator.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double generate(double, double)	=>	a(double, double)
		public boolean isCarved(int, int, int)	=>	a(int, int, int)
	LineNumbersOf: com.volmit.iris.layer.GenLayerCarve
		16	=>	8
		17	=>	4
		18	=>	6
		22	=>	11
		24	=>	7
		27	=>	1
		28	=>	12
		30	=>	9
		32	=>	2
		34	=>	10
		37	=>	5
		43	=>	3

Class: public com.volmit.iris.layer.GenLayerCave	=>	com.volmit.iris.a.e
	Source: "GenLayerCave.java"
	FieldsOf: com.volmit.iris.layer.GenLayerCave
		public static final org.bukkit.block.data.BlockData AIR	=>	e
		public static final org.bukkit.block.data.BlockData CAVE_AIR	=>	d
		private static final com.volmit.iris.util.KList EMPTY	=>	h
		private com.volmit.iris.util.FastNoise gg	=>	f
		private com.volmit.iris.util.CNG gincline	=>	c
		private com.volmit.iris.util.CNG shuffle	=>	g
	MethodsOf: com.volmit.iris.layer.GenLayerCave
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public boolean can(org.bukkit.Material)	=>	a(org.bukkit.Material)
		public boolean canAir(org.bukkit.Material)	=>	b(org.bukkit.Material)
		public boolean dig(int, int, int, com.volmit.iris.object.atomics.AtomicSliver)	=>	a(int, int, int, com.volmit.iris.b.a.e)
		public com.volmit.iris.util.KList genCaves(double, double, int, int, com.volmit.iris.object.atomics.AtomicSliver)	=>	a(double, double, int, int, com.volmit.iris.b.a.e)
		public double generate(double, double)	=>	a(double, double)
	LineNumbersOf: com.volmit.iris.layer.GenLayerCave
		21	=>	33
		22	=>	6
		23	=>	8
		31	=>	37
		32	=>	44
		33	=>	31
		34	=>	10
		36	=>	15
		40	=>	51
		42	=>	14
		45	=>	28
		46	=>	63
		47	=>	16
		48	=>	42
		49	=>	55
		50	=>	65
		52	=>	26 and 41
		54	=>	13
		55	=>	61
		56	=>	45
		57	=>	21
		58	=>	36
		59	=>	46
		60	=>	59
		61	=>	12
		62	=>	22
		64	=>	67
		65	=>	20
		67	=>	60 and 64
		69	=>	49
		70	=>	18
		72	=>	47
		73	=>	48
		74	=>	5
		76	=>	32
		78	=>	9
		81	=>	23
		83	=>	58
		84	=>	27
		85	=>	66
		86	=>	7
		88	=>	30
		90	=>	43
		91	=>	2
		97	=>	25
		99	=>	1
		100	=>	3
		103	=>	17
		105	=>	53
		106	=>	68
		109	=>	24
		111	=>	56
		113	=>	62
		114	=>	50
		121	=>	54
		123	=>	52
		127	=>	29
		132	=>	19
		133	=>	39
		134	=>	11
		136	=>	57
		138	=>	69
		139	=>	38
		142	=>	35
		147	=>	34
		152	=>	4
		158	=>	40

Class: public abstract annotation com.volmit.iris.layer.post.Post	=>	com.volmit.iris.a.a.a
	Source: "Post.java"
	FieldsOf: com.volmit.iris.layer.post.Post
	MethodsOf: com.volmit.iris.layer.post.Post
		public abstract java.lang.String value() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.layer.post.Post

Class: public com.volmit.iris.layer.post.PostFloatingNibDeleter	=>	com.volmit.iris.a.a.b
	Source: "PostFloatingNibDeleter.java"
	FieldsOf: com.volmit.iris.layer.post.PostFloatingNibDeleter
		private static final org.bukkit.block.data.BlockData AIR	=>	e
	MethodsOf: com.volmit.iris.layer.post.PostFloatingNibDeleter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostFloatingNibDeleter
		12	=>	16
		16	=>	17
		17	=>	5
		21	=>	11
		22	=>	12
		27	=>	25
		28	=>	23
		30	=>	19
		32	=>	7
		35	=>	22
		36	=>	14
		37	=>	20
		38	=>	24
		39	=>	10
		40	=>	3
		41	=>	13
		42	=>	18
		44	=>	8
		46	=>	1
		48	=>	6 and 21
		50	=>	9
		52	=>	2
		53	=>	15
		57	=>	4

Class: public com.volmit.iris.layer.post.PostNibSmoother	=>	com.volmit.iris.a.a.c
	Source: "PostNibSmoother.java"
	FieldsOf: com.volmit.iris.layer.post.PostNibSmoother
	MethodsOf: com.volmit.iris.layer.post.PostNibSmoother
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostNibSmoother
		14	=>	13
		15	=>	9
		19	=>	19
		20	=>	18
		25	=>	14
		26	=>	4
		27	=>	16
		28	=>	12
		29	=>	22
		30	=>	11
		31	=>	2
		32	=>	3
		33	=>	5
		34	=>	17
		36	=>	6
		38	=>	21
		39	=>	10
		40	=>	1
		42	=>	8
		44	=>	7
		45	=>	15
		48	=>	20

Class: public com.volmit.iris.layer.post.PostPotholeFiller	=>	com.volmit.iris.a.a.d
	Source: "PostPotholeFiller.java"
	FieldsOf: com.volmit.iris.layer.post.PostPotholeFiller
	MethodsOf: com.volmit.iris.layer.post.PostPotholeFiller
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostPotholeFiller
		11	=>	8
		12	=>	1
		16	=>	5
		17	=>	6
		22	=>	13
		23	=>	2
		24	=>	18
		25	=>	14
		26	=>	17
		27	=>	15
		28	=>	4
		29	=>	12
		30	=>	9
		31	=>	3
		33	=>	16
		35	=>	10
		36	=>	11
		38	=>	7

Class: public com.volmit.iris.layer.post.PostSlabber	=>	com.volmit.iris.a.a.e
	Source: "PostSlabber.java"
	FieldsOf: com.volmit.iris.layer.post.PostSlabber
		public static final org.bukkit.Material AIR	=>	f
		public static final org.bukkit.Material WATER	=>	e
		private com.volmit.iris.util.RNG rng	=>	g
	MethodsOf: com.volmit.iris.layer.post.PostSlabber
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		private synthetic void lambda$0(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostSlabber
		13	=>	10
		14	=>	21
		19	=>	19
		20	=>	14
		21	=>	6
		25	=>	15
		26	=>	5
		31	=>	7
		32	=>	17
		33	=>	22
		34	=>	12
		35	=>	11
		37	=>	20
		39	=>	4
		41	=>	2
		43	=>	3
		45	=>	1
		48	=>	18
		50	=>	9
		52	=>	16
		53	=>	13
		54	=>	23
		58	=>	8

Class: public com.volmit.iris.layer.post.PostWallPatcher	=>	com.volmit.iris.a.a.f
	Source: "PostWallPatcher.java"
	FieldsOf: com.volmit.iris.layer.post.PostWallPatcher
		public static final org.bukkit.Material AIR	=>	e
		private static boolean a	=>	g
		private com.volmit.iris.util.RNG rng	=>	f
	MethodsOf: com.volmit.iris.layer.post.PostWallPatcher
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public static boolean a()	=>	f()
		public static void a(boolean)	=>	b(boolean)
		public static boolean b()	=>	e()
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostWallPatcher
		14	=>	11
		19	=>	19
		20	=>	25
		21	=>	3
		25	=>	5
		26	=>	14
		31	=>	4
		34	=>	28
		36	=>	30
		37	=>	13
		38	=>	9
		39	=>	27
		40	=>	16
		42	=>	26
		44	=>	18
		45	=>	24
		47	=>	23
		49	=>	1
		51	=>	29
		52	=>	8
		56	=>	6 and 17
		58	=>	10
		60	=>	21
		62	=>	20
		64	=>	15
		67	=>	2
		69	=>	12
		72	=>	22
		77	=>	7

Class: public com.volmit.iris.layer.post.PostWaterlogger	=>	com.volmit.iris.a.a.g
	Source: "PostWaterlogger.java"
	FieldsOf: com.volmit.iris.layer.post.PostWaterlogger
		private static final org.bukkit.block.data.BlockData WATER	=>	e
	MethodsOf: com.volmit.iris.layer.post.PostWaterlogger
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int)	=>	a(int, int)
	LineNumbersOf: com.volmit.iris.layer.post.PostWaterlogger
		14	=>	10
		18	=>	22
		19	=>	14
		23	=>	7
		24	=>	20
		29	=>	21
		30	=>	17
		32	=>	16
		34	=>	11
		36	=>	19
		38	=>	5
		41	=>	6
		43	=>	3
		44	=>	12
		47	=>	15
		49	=>	13
		50	=>	18
		52	=>	2
		54	=>	9
		56	=>	1
		58	=>	4
		61	=>	8

Class: public final enum com.volmit.iris.object.DecorationPart	=>	com.volmit.iris.b.w
	Source: "DecorationPart.java"
	FieldsOf: com.volmit.iris.object.DecorationPart
		private static final synthetic com.volmit.iris.object.DecorationPart[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.DecorationPart NONE	NameNotChanged
		public static final enum com.volmit.iris.object.DecorationPart SEA_SURFACE	NameNotChanged
		public static final enum com.volmit.iris.object.DecorationPart SHORE_LINE	NameNotChanged
	MethodsOf: com.volmit.iris.object.DecorationPart
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.DecorationPart valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.DecorationPart[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.DecorationPart
		5	=>	2, 3, 4 and 7
		7	=>	1
		10	=>	5
		13	=>	6

Class: public final enum com.volmit.iris.object.Dispersion	=>	com.volmit.iris.b.f
	Source: "Dispersion.java"
	FieldsOf: com.volmit.iris.object.Dispersion
		private static final synthetic com.volmit.iris.object.Dispersion[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.Dispersion SCATTER	NameNotChanged
		public static final enum com.volmit.iris.object.Dispersion WISPY	NameNotChanged
	MethodsOf: com.volmit.iris.object.Dispersion
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.Dispersion valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.Dispersion[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.Dispersion
		5	=>	2, 3, 4 and 6
		7	=>	5
		10	=>	1

Class: public final enum com.volmit.iris.object.Envelope	=>	com.volmit.iris.b.c
	Source: "Envelope.java"
	FieldsOf: com.volmit.iris.object.Envelope
		private static final synthetic com.volmit.iris.object.Envelope[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.Envelope CELLS	NameNotChanged
		public static final enum com.volmit.iris.object.Envelope EVERYWHERE	NameNotChanged
		public static final enum com.volmit.iris.object.Envelope VEINS	NameNotChanged
	MethodsOf: com.volmit.iris.object.Envelope
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.Envelope valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.Envelope[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.Envelope
		5	=>	2, 4, 6 and 7
		7	=>	1
		10	=>	3
		13	=>	5

Class: public final enum com.volmit.iris.object.InferredType	=>	com.volmit.iris.b.h
	Source: "InferredType.java"
	FieldsOf: com.volmit.iris.object.InferredType
		private static final synthetic com.volmit.iris.object.InferredType[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.InferredType CAVE	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType DEFER	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType ISLAND	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType LAND	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType SEA	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType SHORE	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType SKYLAND	NameNotChanged
	MethodsOf: com.volmit.iris.object.InferredType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.InferredType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.InferredType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.InferredType
		5	=>	3, 6, 7 and 8
		7	=>	10
		10	=>	11
		13	=>	4
		16	=>	9
		19	=>	1
		22	=>	5
		25	=>	2

Class: public final enum com.volmit.iris.object.InterpolationMethod	=>	com.volmit.iris.b.t
	Source: "InterpolationMethod.java"
	FieldsOf: com.volmit.iris.object.InterpolationMethod
		private static final synthetic com.volmit.iris.object.InterpolationMethod[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.InterpolationMethod BICUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod NONE	NameNotChanged
	MethodsOf: com.volmit.iris.object.InterpolationMethod
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.InterpolationMethod valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.InterpolationMethod[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.InterpolationMethod
		5	=>	1, 2, 4 and 7
		7	=>	5
		10	=>	6
		13	=>	8
		16	=>	3

Class: public com.volmit.iris.object.IrisAxisRotationClamp	=>	com.volmit.iris.b.d
	Source: "IrisAxisRotationClamp.java"
	FieldsOf: com.volmit.iris.object.IrisAxisRotationClamp
		private boolean enabled	=>	a
		private double interval	=>	d
		private double max	=>	c
		private double min	=>	b
	MethodsOf: com.volmit.iris.object.IrisAxisRotationClamp
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(boolean, double, double, double) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getInterval()	=>	d()
		public double getMax()	=>	a()
		public double getMin()	=>	c()
		public double getRadians(int)	=>	a(int)
		public int hashCode() 	SignatureNotChanged
		public boolean isEnabled()	=>	b()
		public boolean isUnlimited()	=>	e()
		public void setEnabled(boolean)	=>	a(boolean)
		public void setInterval(double)	=>	a(double)
		public void setMax(double)	=>	c(double)
		public void setMin(double)	=>	b(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisAxisRotationClamp
		9	=>	11, 13, 15, 20, 26, 29, 30 and 31
		12	=>	9 and 10
		14	=>	27
		16	=>	17 and 24
		18	=>	5
		20	=>	21 and 23
		22	=>	2
		24	=>	14 and 25
		26	=>	19
		29	=>	18
		31	=>	8
		34	=>	12
		35	=>	4
		36	=>	3
		37	=>	1
		38	=>	6
		39	=>	28
		43	=>	33
		48	=>	32
		50	=>	22
		53	=>	16
		54	=>	7

Class: public com.volmit.iris.object.IrisBiome	=>	com.volmit.iris.b.n
	Source: "IrisBiome.java"
	FieldsOf: com.volmit.iris.object.IrisBiome
		private com.volmit.iris.object.Dispersion biomeDispersion	=>	A
		private transient com.volmit.iris.util.CNG biomeGenerator	=>	d
		private com.volmit.iris.util.KList biomeScatter	=>	E
		private com.volmit.iris.util.KList biomeSkyScatter	=>	B
		private double biomeZoom	=>	e
		private double childShrinkFactor	=>	i
		private com.volmit.iris.util.KList children	=>	C
		private transient com.volmit.iris.util.BiomeRarityCellGenerator childrenCell	=>	u
		private com.volmit.iris.util.KList decorators	=>	w
		private com.volmit.iris.util.KList deposits	=>	p
		private org.bukkit.block.Biome derivative	=>	x
		private transient com.volmit.iris.util.KList fullLayerSpec	=>	l
		private com.volmit.iris.util.KList generators	=>	v
		private transient com.volmit.iris.object.InferredType inferredType	=>	a
		private transient com.volmit.iris.util.KList layerHeightGenerators	=>	s
		private transient com.volmit.iris.util.KList layerSeaHeightGenerators	=>	q
		private transient com.volmit.iris.util.KList layerSeaSurfaceGenerators	=>	j
		private transient com.volmit.iris.util.KList layerSurfaceGenerators	=>	n
		private com.volmit.iris.util.KList layers	=>	h
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	g
		private boolean lockLayers	=>	f
		private transient int maxHeight	=>	t
		private java.lang.String name	=>	z
		private com.volmit.iris.util.KList objects	=>	r
		private int rarity	=>	m
		private transient com.volmit.iris.util.KList realChildren	=>	k
		private com.volmit.iris.util.KList seaLayers	=>	y
		private com.volmit.iris.object.IrisBiomePaletteLayer slab	=>	o
		private com.volmit.iris.object.IrisBiomePaletteLayer wall	=>	D
	MethodsOf: com.volmit.iris.object.IrisBiome
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList generateLayers(double, double, com.volmit.iris.util.RNG, int, int)	=>	b(double, double, com.volmit.iris.f.aV, int, int)
		public com.volmit.iris.util.KList generateLockedLayers(double, double, com.volmit.iris.util.RNG, int, int)	=>	a(double, double, com.volmit.iris.f.aV, int, int)
		public com.volmit.iris.util.KList generateSeaLayers(double, double, com.volmit.iris.util.RNG, int)	=>	a(double, double, com.volmit.iris.f.aV, int)
		public com.volmit.iris.util.KList getAllChildren(int)	=>	c(int)
		public com.volmit.iris.object.Dispersion getBiomeDispersion()	=>	f()
		public com.volmit.iris.util.CNG getBiomeGenerator()	=>	t()
		public com.volmit.iris.util.CNG getBiomeGenerator(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public com.volmit.iris.util.KList getBiomeScatter()	=>	j()
		public com.volmit.iris.util.KList getBiomeSkyScatter()	=>	G()
		public double getBiomeZoom()	=>	i()
		public double getChildShrinkFactor()	=>	F()
		public com.volmit.iris.util.KList getChildren()	=>	h()
		public com.volmit.iris.util.BiomeRarityCellGenerator getChildrenCell()	=>	u()
		public com.volmit.iris.util.BiomeRarityCellGenerator getChildrenGenerator(com.volmit.iris.util.RNG, int, double)	=>	a(com.volmit.iris.f.aV, int, double)
		public com.volmit.iris.util.KList getDecorators()	=>	A()
		public com.volmit.iris.util.KList getDeposits()	=>	x()
		public org.bukkit.block.Biome getDerivative()	=>	n()
		public com.volmit.iris.util.KList getFullLayerSpec()	=>	g()
		public com.volmit.iris.util.KList getGenerators()	=>	w()
		public org.bukkit.block.Biome getGroundBiome(com.volmit.iris.util.RNG, double, double, double)	=>	b(com.volmit.iris.f.aV, double, double, double)
		public double getHeight(double, double, long)	=>	a(double, double, long)
		public com.volmit.iris.object.InferredType getInferredType()	=>	l()
		public com.volmit.iris.util.KList getLayerHeightGenerators()	=>	m()
		public com.volmit.iris.util.KList getLayerHeightGenerators(com.volmit.iris.util.RNG)	=>	c(com.volmit.iris.f.aV)
		public com.volmit.iris.util.KList getLayerSeaHeightGenerators()	=>	E()
		public com.volmit.iris.util.KList getLayerSeaHeightGenerators(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public com.volmit.iris.util.KList getLayerSeaSurfaceGenerators()	=>	k()
		public com.volmit.iris.util.KList getLayerSurfaceGenerators()	=>	e()
		public com.volmit.iris.util.KList getLayers()	=>	D()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	p()
		private int getMaxHeight()	=>	o()
		public java.lang.String getName()	=>	C()
		public com.volmit.iris.util.KList getObjects()	=>	z()
		public int getRarity()	=>	d()
		public com.volmit.iris.util.KList getRealChildren()	=>	B()
		public com.volmit.iris.util.KList getSeaLayers()	=>	q()
		public org.bukkit.block.Biome getSkyBiome(com.volmit.iris.util.RNG, double, double, double)	=>	a(com.volmit.iris.f.aV, double, double, double)
		public com.volmit.iris.object.IrisBiomePaletteLayer getSlab()	=>	y()
		public com.volmit.iris.object.IrisBiomePaletteLayer getWall()	=>	v()
		public int hashCode() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome infer(com.volmit.iris.object.InferredType, com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h, com.volmit.iris.b.h)
		public boolean isLand()	=>	s()
		public boolean isLockLayers()	=>	r()
		public boolean isSea()	=>	H()
		public boolean isShore()	=>	c()
		public void setBiomeDispersion(com.volmit.iris.object.Dispersion)	=>	a(com.volmit.iris.b.f)
		public void setBiomeGenerator(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setBiomeScatter(com.volmit.iris.util.KList)	=>	g(com.volmit.iris.f.t)
		public void setBiomeSkyScatter(com.volmit.iris.util.KList)	=>	l(com.volmit.iris.f.t)
		public void setBiomeZoom(double)	=>	a(double)
		public void setChildShrinkFactor(double)	=>	b(double)
		public void setChildren(com.volmit.iris.util.KList)	=>	m(com.volmit.iris.f.t)
		public void setChildrenCell(com.volmit.iris.util.BiomeRarityCellGenerator)	=>	a(com.volmit.iris.f.aq)
		public void setDecorators(com.volmit.iris.util.KList)	=>	i(com.volmit.iris.f.t)
		public void setDeposits(com.volmit.iris.util.KList)	=>	d(com.volmit.iris.f.t)
		public void setDerivative(org.bukkit.block.Biome)	=>	a(org.bukkit.block.Biome)
		public void setFullLayerSpec(com.volmit.iris.util.KList)	=>	e(com.volmit.iris.f.t)
		public void setGenerators(com.volmit.iris.util.KList)	=>	f(com.volmit.iris.f.t)
		public void setInferredType(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public void setLayerHeightGenerators(com.volmit.iris.util.KList)	=>	j(com.volmit.iris.f.t)
		public void setLayerSeaHeightGenerators(com.volmit.iris.util.KList)	=>	n(com.volmit.iris.f.t)
		public void setLayerSeaSurfaceGenerators(com.volmit.iris.util.KList)	=>	o(com.volmit.iris.f.t)
		public void setLayerSurfaceGenerators(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setLayers(com.volmit.iris.util.KList)	=>	h(com.volmit.iris.f.t)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setLockLayers(boolean)	=>	a(boolean)
		public void setMaxHeight(int)	=>	a(int)
		public void setName(java.lang.String)	=>	b(java.lang.String)
		public void setObjects(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setRarity(int)	=>	b(int)
		public void setRealChildren(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public void setSeaLayers(com.volmit.iris.util.KList)	=>	k(com.volmit.iris.f.t)
		public void setSlab(com.volmit.iris.object.IrisBiomePaletteLayer)	=>	a(com.volmit.iris.b.z)
		public void setWall(com.volmit.iris.object.IrisBiomePaletteLayer)	=>	b(com.volmit.iris.b.z)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisBiome
		22	=>	3, 7, 9, 10, 23, 24, 25, 26, 28, 29, 35, 43, 46, 50, 53, 56, 58, 67, 80, 82, 86, 91, 93, 94, 96, 97, 98, 100, 106, 107, 109, 110, 117, 122, 123, 127, 128, 129, 130, 138, 142, 144, 153, 154, 163, 171, 183, 184, 191, 197, 203, 208, 217, 218, 221, 222 and 223
		23	=>	33, 42 and 66
		28	=>	151
		32	=>	146
		36	=>	189
		40	=>	15
		44	=>	99
		48	=>	172
		52	=>	187
		56	=>	180
		60	=>	21
		64	=>	160
		68	=>	133
		72	=>	210
		76	=>	27
		80	=>	54
		84	=>	156
		88	=>	104
		92	=>	41
		96	=>	174
		98	=>	31
		102	=>	214
		110	=>	158
		113	=>	152
		117	=>	195
		119	=>	16 and 148
		121	=>	8
		124	=>	194
		129	=>	207
		131	=>	161
		134	=>	19
		139	=>	188
		141	=>	162
		142	=>	143
		145	=>	78
		150	=>	70
		152	=>	141
		155	=>	4
		157	=>	177
		159	=>	134
		162	=>	47 and 173
		164	=>	131
		165	=>	90
		167	=>	205
		169	=>	150
		172	=>	62 and 103
		174	=>	5
		176	=>	186
		181	=>	199
		182	=>	59
		184	=>	37
		186	=>	213
		190	=>	168
		192	=>	45
		196	=>	36
		201	=>	190
		202	=>	87
		204	=>	112
		206	=>	196
		209	=>	85 and 165
		211	=>	32
		212	=>	88
		214	=>	38
		216	=>	48
		219	=>	149 and 159
		223	=>	40
		224	=>	182
		226	=>	204
		228	=>	145
		233	=>	139
		235	=>	114
		238	=>	18 and 136
		240	=>	34
		241	=>	81
		242	=>	220
		245	=>	155
		250	=>	69
		252	=>	57
		254	=>	49
		256	=>	132 and 209
		258	=>	55
		261	=>	11
		264	=>	185
		269	=>	211
		270	=>	108
		275	=>	170
		277	=>	1 and 179
		279	=>	115
		280	=>	181
		282	=>	137
		284	=>	63
		287	=>	39 and 201
		289	=>	157
		291	=>	219
		296	=>	193
		297	=>	126
		299	=>	206
		301	=>	76
		305	=>	147
		307	=>	79
		311	=>	198
		316	=>	125
		317	=>	105
		319	=>	68
		321	=>	61
		323	=>	83 and 113
		325	=>	75
		328	=>	14
		330	=>	164
		335	=>	2
		336	=>	13
		338	=>	167
		340	=>	44
		342	=>	20 and 192
		344	=>	17
		347	=>	200
		349	=>	22
		354	=>	51
		356	=>	52
		359	=>	60
		364	=>	92
		366	=>	77
		368	=>	65
		373	=>	140
		375	=>	73
		377	=>	120
		382	=>	124
		384	=>	64
		387	=>	121
		389	=>	74
		392	=>	135
		397	=>	95
		399	=>	84
		401	=>	12
		403	=>	72 and 118
		405	=>	101
		410	=>	176
		411	=>	215
		416	=>	216
		417	=>	178
		418	=>	175
		420	=>	119
		422	=>	102 and 116
		424	=>	202
		425	=>	71
		426	=>	166
		430	=>	212
		435	=>	111
		437	=>	89
		440	=>	6
		442	=>	30
		445	=>	169

Class: public com.volmit.iris.object.IrisBiomeDecorator	=>	com.volmit.iris.b.y
	Source: "IrisBiomeDecorator.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeDecorator
		private transient com.volmit.iris.util.KList blockData	=>	b
		private double chance	=>	h
		private com.volmit.iris.object.Dispersion dispersion	=>	f
		private transient com.volmit.iris.util.CNG heightGenerator	=>	c
		private transient com.volmit.iris.util.KMap layerGenerators	=>	j
		private com.volmit.iris.util.KList palette	=>	m
		private com.volmit.iris.object.DecorationPart partOf	=>	k
		private int stackMax	=>	a
		private int stackMin	=>	i
		private com.volmit.iris.object.Dispersion variance	=>	d
		private com.volmit.iris.object.Dispersion verticalVariance	=>	g
		private double verticalZoom	=>	e
		private double zoom	=>	l
	MethodsOf: com.volmit.iris.object.IrisBiomeDecorator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.lang.String)	=>	a(java.lang.String)
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getBlockData()	=>	l()
		public org.bukkit.block.data.BlockData getBlockData(com.volmit.iris.util.RNG, double, double)	=>	b(com.volmit.iris.f.aV, double, double)
		public double getChance()	=>	c()
		public com.volmit.iris.object.Dispersion getDispersion()	=>	a()
		public com.volmit.iris.util.CNG getGenerator(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public int getHeight(com.volmit.iris.util.RNG, double, double)	=>	a(com.volmit.iris.f.aV, double, double)
		public com.volmit.iris.util.CNG getHeightGenerator()	=>	j()
		public com.volmit.iris.util.CNG getHeightGenerator(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public com.volmit.iris.util.KMap getLayerGenerators()	=>	g()
		public com.volmit.iris.util.KList getPalette()	=>	m()
		public com.volmit.iris.object.DecorationPart getPartOf()	=>	k()
		public int getStackMax()	=>	b()
		public int getStackMin()	=>	h()
		public com.volmit.iris.object.Dispersion getVariance()	=>	d()
		public com.volmit.iris.object.Dispersion getVerticalVariance()	=>	i()
		public double getVerticalZoom()	=>	f()
		public double getZoom()	=>	e()
		public int hashCode() 	SignatureNotChanged
		public void setBlockData(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setChance(double)	=>	a(double)
		public void setDispersion(com.volmit.iris.object.Dispersion)	=>	c(com.volmit.iris.b.f)
		public void setHeightGenerator(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setLayerGenerators(com.volmit.iris.util.KMap)	=>	a(com.volmit.iris.f.aR)
		public void setPalette(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setPartOf(com.volmit.iris.object.DecorationPart)	=>	a(com.volmit.iris.b.w)
		public void setStackMax(int)	=>	a(int)
		public void setStackMin(int)	=>	b(int)
		public void setVariance(com.volmit.iris.object.Dispersion)	=>	b(com.volmit.iris.b.f)
		public void setVerticalVariance(com.volmit.iris.object.Dispersion)	=>	a(com.volmit.iris.b.f)
		public void setVerticalZoom(double)	=>	b(double)
		public void setZoom(double)	=>	c(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisBiomeDecorator
		16	=>	2, 5, 11, 16, 23, 25, 29, 39, 40, 43, 44, 49, 50, 51, 54, 61, 68 and 75
		19	=>	31
		21	=>	69
		23	=>	70
		25	=>	45
		27	=>	62
		29	=>	77
		31	=>	58
		33	=>	28
		35	=>	57
		37	=>	55
		39	=>	4
		41	=>	21
		43	=>	63
		45	=>	9
		47	=>	56
		49	=>	34
		51	=>	66
		53	=>	67
		55	=>	15 and 32
		57	=>	20 and 73
		59	=>	6
		60	=>	59
		65	=>	46
		67	=>	71
		70	=>	42
		75	=>	65
		77	=>	18
		80	=>	76
		85	=>	37
		87	=>	72
		89	=>	60
		92	=>	19
		94	=>	10
		97	=>	36
		102	=>	8
		103	=>	12
		108	=>	47
		110	=>	17
		113	=>	14
		115	=>	48
		118	=>	27
		120	=>	26
		123	=>	22
		124	=>	52
		125	=>	30
		127	=>	41
		131	=>	7
		134	=>	53
		140	=>	3
		145	=>	33
		147	=>	13
		148	=>	74
		150	=>	35
		151	=>	1
		153	=>	64
		155	=>	38
		158	=>	24

Class: public com.volmit.iris.object.IrisBiomeGeneratorLink	=>	com.volmit.iris.b.v
	Source: "IrisBiomeGeneratorLink.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeGeneratorLink
		private transient com.volmit.iris.object.IrisGenerator gen	=>	a
		private java.lang.String generator	=>	c
		private int max	=>	b
		private int min	=>	d
	MethodsOf: com.volmit.iris.object.IrisBiomeGeneratorLink
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGenerator getCachedGenerator()	=>	a()
		public com.volmit.iris.object.IrisGenerator getGen()	=>	c()
		public java.lang.String getGenerator()	=>	e()
		public double getHeight(double, double, long)	=>	a(double, double, long)
		public int getMax()	=>	b()
		public int getMin()	=>	d()
		public int hashCode() 	SignatureNotChanged
		public void setGen(com.volmit.iris.object.IrisGenerator)	=>	a(com.volmit.iris.b.p)
		public void setGenerator(java.lang.String)	=>	a(java.lang.String)
		public void setMax(int)	=>	a(int)
		public void setMin(int)	=>	b(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisBiomeGeneratorLink
		11	=>	6, 8, 9, 11, 16, 19, 20 and 22
		14	=>	15
		16	=>	1
		18	=>	18
		20	=>	26
		22	=>	5
		24	=>	23
		26	=>	7
		29	=>	24
		31	=>	17
		35	=>	21
		37	=>	3
		39	=>	25
		41	=>	12
		45	=>	4
		50	=>	13
		51	=>	2
		52	=>	10
		54	=>	14

Class: public com.volmit.iris.object.IrisBiomeMutation	=>	com.volmit.iris.b.b
	Source: "IrisBiomeMutation.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeMutation
		private int checks	=>	e
		private com.volmit.iris.util.KList objects	=>	f
		private int radius	=>	c
		private com.volmit.iris.util.KList sideA	=>	g
		private transient com.volmit.iris.util.KList sideACache	=>	d
		private com.volmit.iris.util.KList sideB	=>	b
		private transient com.volmit.iris.util.KList sideBCache	=>	a
	MethodsOf: com.volmit.iris.object.IrisBiomeMutation
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getChecks()	=>	h()
		public com.volmit.iris.util.KList getObjects()	=>	a()
		public int getRadius()	=>	g()
		public com.volmit.iris.util.KList getRealSideA()	=>	i()
		public com.volmit.iris.util.KList getRealSideB()	=>	f()
		public com.volmit.iris.util.KList getSideA()	=>	e()
		public com.volmit.iris.util.KList getSideACache()	=>	c()
		public com.volmit.iris.util.KList getSideB()	=>	d()
		public com.volmit.iris.util.KList getSideBCache()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public com.volmit.iris.util.KList processList(com.volmit.iris.util.KList)	=>	f(com.volmit.iris.f.t)
		public void setChecks(int)	=>	b(int)
		public void setObjects(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public void setRadius(int)	=>	a(int)
		public void setSideA(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setSideACache(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setSideB(com.volmit.iris.util.KList)	=>	e(com.volmit.iris.f.t)
		public void setSideBCache(com.volmit.iris.util.KList)	=>	d(com.volmit.iris.f.t)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisBiomeMutation
		12	=>	3, 7, 12, 13, 14, 15, 21, 22, 26, 34, 37, 38, 39, 40, 45, 46, 47, 48, 50 and 51
		17	=>	10
		21	=>	4
		25	=>	23
		29	=>	28
		33	=>	27
		40	=>	30
		42	=>	20
		45	=>	5
		50	=>	33
		52	=>	17
		55	=>	16
		60	=>	32
		62	=>	9 and 31
		64	=>	49
		66	=>	6
		68	=>	18
		69	=>	42
		72	=>	25
		74	=>	29
		75	=>	1
		76	=>	41
		78	=>	44
		80	=>	36
		81	=>	35
		83	=>	11
		85	=>	24
		86	=>	19
		87	=>	43
		91	=>	8
		95	=>	2

Class: public com.volmit.iris.object.IrisBiomePaletteLayer	=>	com.volmit.iris.b.z
	Source: "IrisBiomePaletteLayer.java"
	FieldsOf: com.volmit.iris.object.IrisBiomePaletteLayer
		private static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$Dispersion	=>	d
		private transient com.volmit.iris.util.KList blockData	=>	j
		private com.volmit.iris.object.Dispersion dispersion	=>	f
		private transient com.volmit.iris.util.CNG heightGenerator	=>	g
		private transient com.volmit.iris.util.CNG layerGenerator	=>	e
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	b
		private int maxHeight	=>	a
		private int minHeight	=>	h
		private com.volmit.iris.util.KList palette	=>	i
		private double terrainZoom	=>	c
	MethodsOf: com.volmit.iris.object.IrisBiomePaletteLayer
		static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$Dispersion()	=>	b()
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.NoSuchFieldError a(java.lang.NoSuchFieldError) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.lang.String)	=>	a(java.lang.String)
		public void cacheGenerator(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(com.volmit.iris.util.RNG, double, double, double)	=>	a(com.volmit.iris.f.aV, double, double, double)
		public com.volmit.iris.util.KList getBlockData()	=>	h()
		public com.volmit.iris.object.Dispersion getDispersion()	=>	d()
		public com.volmit.iris.util.CNG getHeightGenerator()	=>	f()
		public com.volmit.iris.util.CNG getHeightGenerator(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public com.volmit.iris.util.CNG getLayerGenerator()	=>	a()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	c()
		public int getMaxHeight()	=>	i()
		public int getMinHeight()	=>	j()
		public com.volmit.iris.util.KList getPalette()	=>	e()
		public double getTerrainZoom()	=>	g()
		public int hashCode() 	SignatureNotChanged
		public void setBlockData(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setDispersion(com.volmit.iris.object.Dispersion)	=>	a(com.volmit.iris.b.f)
		public void setHeightGenerator(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setLayerGenerator(com.volmit.iris.util.CNG)	=>	b(com.volmit.iris.f.ay)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setMaxHeight(int)	=>	b(int)
		public void setMinHeight(int)	=>	a(int)
		public void setPalette(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setTerrainZoom(double)	=>	a(double)
		public java.lang.String toString() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer zero()	=>	k()
	LineNumbersOf: com.volmit.iris.object.IrisBiomePaletteLayer
		17	=>	6, 7, 12, 18, 19, 20, 22, 25, 26, 30, 31, 35, 36, 39, 40, 41, 45, 48, 50, 52, 56, 58 and 61
		18	=>	3
		22	=>	54
		26	=>	46
		30	=>	27
		34	=>	49
		38	=>	62
		40	=>	13
		47	=>	33
		49	=>	9
		52	=>	37
		57	=>	42
		59	=>	55
		62	=>	51
		64	=>	11
		67	=>	32
		69	=>	2
		72	=>	60
		74	=>	4
		76	=>	59
		81	=>	14
		85	=>	53
		90	=>	5
		92	=>	64
		95	=>	44
		96	=>	34
		98	=>	38
		101	=>	10
		105	=>	16
		107	=>	1
		112	=>	24
		113	=>	43
		115	=>	21
		116	=>	23 and 47
		118	=>	63
		119	=>	17
		121	=>	28
		125	=>	15
		127	=>	29
		132	=>	57
		133	=>	8

Class: synthetic com.volmit.iris.object.IrisBiomePaletteLayer$1	=>	com.volmit.iris.b.z$a
	Source: "IrisBiomePaletteLayer.java"
	FieldsOf: com.volmit.iris.object.IrisBiomePaletteLayer$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$Dispersion	=>	a
	MethodsOf: com.volmit.iris.object.IrisBiomePaletteLayer$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisBiomePaletteLayer$1
		92	=>	1

Class: public com.volmit.iris.object.IrisDepositGenerator	=>	com.volmit.iris.b.j
	Source: "IrisDepositGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisDepositGenerator
		private transient com.volmit.iris.util.KList blockData	=>	j
		private transient com.volmit.iris.object.IrisObjectPlacement config	=>	g
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	c
		private int maxHeight	=>	b
		private int maxPerChunk	=>	f
		private int maxSize	=>	h
		private int minHeight	=>	a
		private int minPerChunk	=>	i
		private int minSize	=>	l
		private transient com.volmit.iris.util.KList objects	=>	e
		private com.volmit.iris.util.KList palette	=>	k
		private int varience	=>	d
	MethodsOf: com.volmit.iris.object.IrisDepositGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		private com.volmit.iris.object.IrisObjectPlacement createDepositConfig()	=>	h()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public void generate(int, int, com.volmit.iris.util.RNG, com.volmit.iris.generator.ParallaxChunkGenerator)	=>	a(int, int, com.volmit.iris.f.aV, com.volmit.iris.d.f)
		private com.volmit.iris.object.IrisObject generateClumpObject(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public com.volmit.iris.util.KList getBlockData()	=>	l()
		public com.volmit.iris.object.IrisObject getClump(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public com.volmit.iris.object.IrisObjectPlacement getConfig()	=>	j()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	k()
		public int getMaxDimension()	=>	c()
		public int getMaxHeight()	=>	d()
		public int getMaxPerChunk()	=>	b()
		public int getMaxSize()	=>	m()
		public int getMinHeight()	=>	n()
		public int getMinPerChunk()	=>	i()
		public int getMinSize()	=>	g()
		public com.volmit.iris.util.KList getObjects()	=>	a()
		public com.volmit.iris.util.KList getPalette()	=>	f()
		public int getVarience()	=>	e()
		public int hashCode() 	SignatureNotChanged
		private org.bukkit.block.data.BlockData nextBlock(com.volmit.iris.util.RNG)	=>	c(com.volmit.iris.f.aV)
		public void setBlockData(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setConfig(com.volmit.iris.object.IrisObjectPlacement)	=>	a(com.volmit.iris.b.x)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setMaxHeight(int)	=>	e(int)
		public void setMaxPerChunk(int)	=>	b(int)
		public void setMaxSize(int)	=>	g(int)
		public void setMinHeight(int)	=>	d(int)
		public void setMinPerChunk(int)	=>	a(int)
		public void setMinSize(int)	=>	c(int)
		public void setObjects(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setPalette(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public void setVarience(int)	=>	f(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisDepositGenerator
		17	=>	2, 4, 7, 9, 14, 15, 24, 30, 33, 35, 37, 44, 45, 46, 51, 52, 53, 57, 60, 62, 70, 72, 86, 88, 94, 95, 96, 100 and 101
		22	=>	3
		26	=>	98
		30	=>	61
		34	=>	18
		38	=>	79
		42	=>	90
		46	=>	103
		50	=>	82
		52	=>	75
		53	=>	28
		59	=>	80
		61	=>	31
		63	=>	67
		64	=>	23
		66	=>	29 and 89
		68	=>	25
		72	=>	17
		73	=>	104
		78	=>	58
		79	=>	13
		80	=>	92
		81	=>	48
		82	=>	91
		83	=>	105
		84	=>	40
		85	=>	87
		86	=>	39
		87	=>	34
		88	=>	84
		89	=>	26
		90	=>	10
		91	=>	36
		92	=>	55
		93	=>	97
		94	=>	38
		95	=>	42
		97	=>	32
		102	=>	63
		107	=>	50
		108	=>	21
		109	=>	49
		110	=>	71
		112	=>	20
		114	=>	1
		115	=>	81
		119	=>	41
		121	=>	5
		122	=>	11
		123	=>	78
		124	=>	47
		128	=>	54
		133	=>	77
		138	=>	76
		140	=>	85
		142	=>	6
		144	=>	93 and 102
		146	=>	59
		148	=>	99
		150	=>	16
		155	=>	69
		157	=>	8
		162	=>	83
		163	=>	64
		165	=>	43
		167	=>	22
		170	=>	68
		171	=>	73
		173	=>	56
		175	=>	66
		178	=>	12
		180	=>	19
		182	=>	27
		185	=>	65
		186	=>	74

Class: public com.volmit.iris.object.IrisDimension	=>	com.volmit.iris.b.o
	Source: "IrisDimension.java"
	FieldsOf: com.volmit.iris.object.IrisDimension
		private static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$Dispersion	=>	N
		private double biomeZoom	=>	E
		private transient com.volmit.iris.util.KList cacheFilters	=>	C
		private boolean carving	=>	ab
		private double carvingEnvelope	=>	W
		private int carvingMax	=>	m
		private int carvingMin	=>	l
		private double carvingRippleThickness	=>	O
		private double carvingSliverThickness	=>	d
		private double carvingZoom	=>	w
		private double caveBiomeZoom	=>	q
		private double caveScale	=>	g
		private double caveShift	=>	f
		private double caveThickness	=>	z
		private boolean caves	=>	I
		private java.lang.String ceiling	=>	k
		private double continentZoom	=>	af
		private transient com.volmit.iris.util.CNG coordFracture	=>	y
		private double coordFractureDistance	=>	p
		private double coordFractureZoom	=>	K
		private transient java.lang.Double cosr	=>	G
		private boolean decorate	=>	P
		private com.volmit.iris.util.KList deposits	=>	ae
		private double dimensionAngleDeg	=>	D
		private com.volmit.iris.object.Dispersion dispersion	=>	ag
		private org.bukkit.World$Environment environment	=>	ah
		private transient com.volmit.iris.util.KList fluidData	=>	v
		private int fluidHeight	=>	n
		private transient com.volmit.iris.util.CNG fluidLayerGenerator	=>	H
		private transient java.util.concurrent.locks.ReentrantLock fluidLock	=>	o
		private com.volmit.iris.util.KList fluidPalette	=>	J
		private java.lang.String focus	=>	j
		private com.volmit.iris.object.InterpolationMethod interpolationFunction	=>	u
		private double interpolationScale	=>	ad
		private transient boolean inverted	=>	Z
		private double landZoom	=>	r
		private boolean mirrorCeiling	=>	aa
		private com.volmit.iris.util.KList mutations	=>	a
		private java.lang.String name	=>	R
		private transient java.util.concurrent.locks.ReentrantLock parLock	=>	Q
		private transient com.volmit.iris.util.ChunkPosition parallaxSize	=>	ac
		private boolean placeObjects	=>	Y
		private boolean postProcessing	=>	F
		private com.volmit.iris.util.KList postProcessors	=>	T
		private boolean preventLeafDecay	=>	V
		private transient java.lang.Double rad	=>	t
		private double regionZoom	=>	h
		private com.volmit.iris.util.KList regions	=>	B
		private transient com.volmit.iris.util.KList rockData	=>	S
		private transient com.volmit.iris.util.CNG rockLayerGenerator	=>	i
		private transient java.util.concurrent.locks.ReentrantLock rockLock	=>	X
		private com.volmit.iris.util.KList rockPalette	=>	A
		private double rockZoom	=>	U
		private int roughnessHeight	=>	ai
		private double roughnessZoom	=>	e
		private double seaZoom	=>	x
		private double shoreZoom	=>	L
		private transient java.lang.Double sinr	=>	M
		private double terrainZoom	=>	s
	MethodsOf: com.volmit.iris.object.IrisDimension
		static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$Dispersion()	=>	W()
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public void cacheFluidGenerator(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public void cacheRockGenerator(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public double cosRotate()	=>	c()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllBiomes()	=>	N()
		public com.volmit.iris.util.KList getAllRegions()	=>	E()
		public double getBiomeZoom()	=>	v()
		public com.volmit.iris.util.KList getCacheFilters()	=>	al()
		public double getCarvingEnvelope()	=>	q()
		public int getCarvingMax()	=>	V()
		public int getCarvingMin()	=>	C()
		public double getCarvingRippleThickness()	=>	F()
		public double getCarvingSliverThickness()	=>	X()
		public double getCarvingZoom()	=>	R()
		public double getCaveBiomeZoom()	=>	H()
		public double getCaveScale()	=>	B()
		public double getCaveShift()	=>	s()
		public double getCaveThickness()	=>	A()
		public java.lang.String getCeiling()	=>	am()
		public double getContinentZoom()	=>	m()
		public com.volmit.iris.util.CNG getCoordFracture()	=>	t()
		public com.volmit.iris.util.CNG getCoordFracture(com.volmit.iris.util.RNG, int)	=>	a(com.volmit.iris.f.aV, int)
		public double getCoordFractureDistance()	=>	Z()
		public double getCoordFractureZoom()	=>	ad()
		public java.lang.Double getCosr()	=>	o()
		private com.volmit.iris.util.KList getDefaultPostProcessors()	=>	ai()
		public com.volmit.iris.util.KList getDeposits()	=>	d()
		public double getDimensionAngle()	=>	an()
		public double getDimensionAngleDeg()	=>	D()
		public com.volmit.iris.object.Dispersion getDispersion()	=>	M()
		public org.bukkit.World$Environment getEnvironment()	=>	J()
		public org.bukkit.block.data.BlockData getFluid(com.volmit.iris.util.RNG, double, double, double)	=>	b(com.volmit.iris.f.aV, double, double, double)
		public com.volmit.iris.util.KList getFluidData()	=>	aa()
		public int getFluidHeight()	=>	S()
		public com.volmit.iris.util.CNG getFluidLayerGenerator()	=>	z()
		public java.util.concurrent.locks.ReentrantLock getFluidLock()	=>	Y()
		public com.volmit.iris.util.KList getFluidPalette()	=>	x()
		public java.lang.String getFocus()	=>	U()
		public com.volmit.iris.object.InterpolationMethod getInterpolationFunction()	=>	ac()
		public double getInterpolationScale()	=>	p()
		public double getLandZoom()	=>	w()
		public com.volmit.iris.util.KList getMutations()	=>	i()
		public java.lang.String getName()	=>	L()
		public java.util.concurrent.locks.ReentrantLock getParLock()	=>	j()
		public com.volmit.iris.util.ChunkPosition getParallaxSize()	=>	ae()
		public com.volmit.iris.util.KList getPostBlockProcessors(com.volmit.iris.generator.PostBlockChunkGenerator)	=>	a(com.volmit.iris.d.g)
		public com.volmit.iris.util.KList getPostProcessors()	=>	l()
		public java.lang.Double getRad()	=>	y()
		public double getRegionZoom()	=>	n()
		public com.volmit.iris.util.KList getRegions()	=>	f()
		public org.bukkit.block.data.BlockData getRock(com.volmit.iris.util.RNG, double, double, double)	=>	a(com.volmit.iris.f.aV, double, double, double)
		public com.volmit.iris.util.KList getRockData()	=>	K()
		public com.volmit.iris.util.CNG getRockLayerGenerator()	=>	ab()
		public java.util.concurrent.locks.ReentrantLock getRockLock()	=>	G()
		public com.volmit.iris.util.KList getRockPalette()	=>	g()
		public double getRockZoom()	=>	P()
		public int getRoughnessHeight()	=>	h()
		public double getRoughnessZoom()	=>	e()
		public double getSeaZoom()	=>	O()
		public double getShoreZoom()	=>	af()
		public java.lang.Double getSinr()	=>	ah()
		public double getTerrainZoom()	=>	T()
		public int hashCode() 	SignatureNotChanged
		public boolean isCarving()	=>	aj()
		public boolean isCaves()	=>	ao()
		public boolean isDecorate()	=>	r()
		public boolean isInverted()	=>	ag()
		public boolean isMirrorCeiling()	=>	ak()
		public boolean isPlaceObjects()	=>	k()
		public boolean isPostProcessing()	=>	u()
		public boolean isPreventLeafDecay()	=>	I()
		public void setBiomeZoom(double)	=>	o(double)
		public void setCacheFilters(com.volmit.iris.util.KList)	=>	h(com.volmit.iris.f.t)
		public void setCarving(boolean)	=>	d(boolean)
		public void setCarvingEnvelope(double)	=>	t(double)
		public void setCarvingMax(int)	=>	c(int)
		public void setCarvingMin(int)	=>	b(int)
		public void setCarvingRippleThickness(double)	=>	m(double)
		public void setCarvingSliverThickness(double)	=>	r(double)
		public void setCarvingZoom(double)	=>	n(double)
		public void setCaveBiomeZoom(double)	=>	h(double)
		public void setCaveScale(double)	=>	g(double)
		public void setCaveShift(double)	=>	f(double)
		public void setCaveThickness(double)	=>	c(double)
		public void setCaves(boolean)	=>	a(boolean)
		public void setCeiling(java.lang.String)	=>	b(java.lang.String)
		public void setContinentZoom(double)	=>	s(double)
		public void setCoordFracture(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setCoordFractureDistance(double)	=>	d(double)
		public void setCoordFractureZoom(double)	=>	q(double)
		public void setCosr(java.lang.Double)	=>	c(java.lang.Double)
		public void setDecorate(boolean)	=>	g(boolean)
		public void setDeposits(com.volmit.iris.util.KList)	=>	i(com.volmit.iris.f.t)
		public void setDimensionAngleDeg(double)	=>	i(double)
		public void setDispersion(com.volmit.iris.object.Dispersion)	=>	a(com.volmit.iris.b.f)
		public void setEnvironment(org.bukkit.World$Environment)	=>	a(org.bukkit.World$Environment)
		public void setFluidData(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setFluidHeight(int)	=>	d(int)
		public void setFluidLayerGenerator(com.volmit.iris.util.CNG)	=>	b(com.volmit.iris.f.ay)
		public void setFluidLock(java.util.concurrent.locks.ReentrantLock)	=>	b(java.util.concurrent.locks.ReentrantLock)
		public void setFluidPalette(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setFocus(java.lang.String)	=>	c(java.lang.String)
		public void setInterpolationFunction(com.volmit.iris.object.InterpolationMethod)	=>	a(com.volmit.iris.b.t)
		public void setInterpolationScale(double)	=>	a(double)
		public void setInverted(boolean)	=>	h(boolean)
		public void setLandZoom(double)	=>	u(double)
		public void setMirrorCeiling(boolean)	=>	c(boolean)
		public void setMutations(com.volmit.iris.util.KList)	=>	f(com.volmit.iris.f.t)
		public void setName(java.lang.String)	=>	d(java.lang.String)
		public void setParLock(java.util.concurrent.locks.ReentrantLock)	=>	c(java.util.concurrent.locks.ReentrantLock)
		public void setParallaxSize(com.volmit.iris.util.ChunkPosition)	=>	a(com.volmit.iris.f.V)
		public void setPlaceObjects(boolean)	=>	b(boolean)
		public void setPostProcessing(boolean)	=>	f(boolean)
		public void setPostProcessors(com.volmit.iris.util.KList)	=>	d(com.volmit.iris.f.t)
		public void setPreventLeafDecay(boolean)	=>	e(boolean)
		public void setRad(java.lang.Double)	=>	a(java.lang.Double)
		public void setRegionZoom(double)	=>	k(double)
		public void setRegions(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public void setRockData(com.volmit.iris.util.KList)	=>	e(com.volmit.iris.f.t)
		public void setRockLayerGenerator(com.volmit.iris.util.CNG)	=>	c(com.volmit.iris.f.ay)
		public void setRockLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setRockPalette(com.volmit.iris.util.KList)	=>	g(com.volmit.iris.f.t)
		public void setRockZoom(double)	=>	l(double)
		public void setRoughnessHeight(int)	=>	a(int)
		public void setRoughnessZoom(double)	=>	e(double)
		public void setSeaZoom(double)	=>	p(double)
		public void setShoreZoom(double)	=>	j(double)
		public void setSinr(java.lang.Double)	=>	b(java.lang.Double)
		public void setTerrainZoom(double)	=>	b(double)
		public double sinRotate()	=>	Q()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisDimension
		25	=>	5, 6, 7, 11, 14, 18, 19, 20, 21, 22, 25, 28, 33, 36, 37, 39, 45, 47, 49, 60, 61, 63, 67, 71, 73, 75, 77, 78, 81, 82, 88, 89, 91, 92, 94, 99, 101, 103, 105, 110, 114, 119, 123, 124, 125, 133, 134, 136, 137, 138, 144, 145, 146, 149, 150, 159, 162, 163, 165, 166, 171, 172, 176, 181, 183, 189, 191, 193, 197, 200, 204, 207, 209, 210, 212, 213, 215, 216, 217, 225, 226, 227, 228, 230, 236, 238, 243, 246, 247, 248, 249, 250, 253, 258, 260, 261, 263, 264, 269, 270, 271, 273, 277, 282, 284, 286, 288, 290, 291, 292, 295, 296, 298, 302, 305 and 306
		26	=>	12, 126 and 222
		27	=>	116
		31	=>	42
		35	=>	111
		39	=>	164
		43	=>	178
		47	=>	240
		51	=>	232
		55	=>	97
		59	=>	241
		63	=>	4
		67	=>	48
		71	=>	202
		75	=>	187
		79	=>	79
		83	=>	195
		87	=>	283
		91	=>	10
		95	=>	186
		99	=>	107
		103	=>	108
		107	=>	85
		111	=>	147
		115	=>	98
		119	=>	180
		123	=>	152
		127	=>	74
		131	=>	135
		135	=>	87
		139	=>	93
		143	=>	233
		147	=>	115
		151	=>	239
		155	=>	280
		159	=>	173
		163	=>	141
		167	=>	285
		171	=>	268
		175	=>	15
		179	=>	199
		183	=>	120
		187	=>	267
		191	=>	16
		195	=>	278
		199	=>	279
		203	=>	244
		206	=>	130
		207	=>	255
		208	=>	31
		222	=>	32
		224	=>	26
		226	=>	203 and 281
		228	=>	198
		231	=>	257
		232	=>	294
		234	=>	72 and 113
		236	=>	143
		237	=>	30
		240	=>	301
		243	=>	27
		248	=>	34
		250	=>	229
		251	=>	131
		254	=>	256
		259	=>	252
		261	=>	234
		262	=>	151
		263	=>	62
		264	=>	43
		265	=>	237
		266	=>	155
		268	=>	206
		273	=>	148
		275	=>	58
		278	=>	55
		280	=>	40
		283	=>	56
		285	=>	66
		287	=>	235
		292	=>	265
		296	=>	266
		301	=>	51
		303	=>	174
		306	=>	251
		307	=>	161
		309	=>	179
		312	=>	184
		316	=>	127
		318	=>	29
		320	=>	262
		321	=>	140 and 168
		323	=>	254
		324	=>	196
		326	=>	169
		331	=>	50
		333	=>	139
		338	=>	41
		340	=>	211
		343	=>	223
		345	=>	287
		348	=>	175
		350	=>	84
		352	=>	188
		357	=>	275
		361	=>	54
		366	=>	177
		368	=>	117
		371	=>	167
		372	=>	153
		374	=>	17
		377	=>	59
		381	=>	13
		383	=>	304
		385	=>	121
		386	=>	46 and 112
		388	=>	300
		389	=>	57
		391	=>	2
		396	=>	158
		398	=>	274
		403	=>	293
		405	=>	38
		408	=>	194
		413	=>	128
		415	=>	3
		418	=>	220
		423	=>	289
		425	=>	218
		428	=>	259
		433	=>	132
		435	=>	303 and 307
		437	=>	8
		440	=>	192
		445	=>	69
		447	=>	70 and 118
		449	=>	170
		452	=>	23
		457	=>	157
		459	=>	245
		461	=>	106
		462	=>	80
		464	=>	231
		465	=>	205
		466	=>	142
		468	=>	76 and 214
		470	=>	90 and 182
		472	=>	221
		476	=>	201 and 208
		480	=>	109
		481	=>	83
		482	=>	68
		483	=>	122
		485	=>	64
		491	=>	53 and 156
		493	=>	185
		494	=>	154
		495	=>	190
		498	=>	35 and 86
		500	=>	129 and 224
		502	=>	299
		503	=>	52
		504	=>	242
		508	=>	100 and 160
		510	=>	96 and 272
		512	=>	44
		513	=>	9
		514	=>	297
		518	=>	102
		519	=>	219
		520	=>	24
		521	=>	276
		522	=>	104
		523	=>	1
		526	=>	65
		527	=>	95

Class: synthetic com.volmit.iris.object.IrisDimension$1	=>	com.volmit.iris.b.o$a
	Source: "IrisDimension.java"
	FieldsOf: com.volmit.iris.object.IrisDimension$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$Dispersion	=>	a
	MethodsOf: com.volmit.iris.object.IrisDimension$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisDimension$1
		303	=>	1

Class: public com.volmit.iris.object.IrisGenerator	=>	com.volmit.iris.b.p
	Source: "IrisGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisGenerator
		private com.volmit.iris.object.IrisNoiseGenerator cliffHeightGenerator	=>	m
		private double cliffHeightMax	=>	g
		private double cliffHeightMin	=>	f
		private com.volmit.iris.util.KList composite	=>	k
		private com.volmit.iris.object.InterpolationMethod interpolationFunction	=>	l
		private double interpolationScale	=>	h
		private double offsetX	=>	e
		private double offsetZ	=>	i
		private double opacity	=>	j
		private long seed	=>	d
		private double zoom	=>	a
	MethodsOf: com.volmit.iris.object.IrisGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public double cliff(double, double, double, double)	=>	a(double, double, double, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getCliffHeight(double, double, double)	=>	a(double, double, double)
		public com.volmit.iris.object.IrisNoiseGenerator getCliffHeightGenerator()	=>	f()
		public double getCliffHeightMax()	=>	e()
		public double getCliffHeightMin()	=>	g()
		public com.volmit.iris.util.KList getComposite()	=>	l()
		public double getHeight(double, double, long)	=>	a(double, double, long)
		public com.volmit.iris.object.InterpolationMethod getInterpolationFunction()	=>	k()
		public double getInterpolationScale()	=>	h()
		public double getMax()	=>	i()
		public double getOffsetX()	=>	o()
		public double getOffsetZ()	=>	n()
		public double getOpacity()	=>	c()
		public long getSeed()	=>	d()
		public double getZoom()	=>	m()
		public boolean hasCliffs()	=>	j()
		public int hashCode() 	SignatureNotChanged
		public void setCliffHeightGenerator(com.volmit.iris.object.IrisNoiseGenerator)	=>	a(com.volmit.iris.b.k)
		public void setCliffHeightMax(double)	=>	c(double)
		public void setCliffHeightMin(double)	=>	f(double)
		public void setComposite(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setInterpolationFunction(com.volmit.iris.object.InterpolationMethod)	=>	a(com.volmit.iris.b.t)
		public void setInterpolationScale(double)	=>	d(double)
		public void setOffsetX(double)	=>	b(double)
		public void setOffsetZ(double)	=>	a(double)
		public void setOpacity(double)	=>	g(double)
		public void setSeed(long)	=>	a(long)
		public void setZoom(double)	=>	e(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisGenerator
		13	=>	4, 5, 11, 17, 23, 24, 34, 37, 42, 45, 53, 56 and 57
		14	=>	41, 43 and 55
		17	=>	49
		19	=>	10
		21	=>	58
		23	=>	30
		25	=>	31
		27	=>	20
		29	=>	12
		31	=>	8
		33	=>	9
		35	=>	6
		37	=>	54
		39	=>	16
		41	=>	15
		43	=>	48
		45	=>	25
		47	=>	21
		49	=>	13
		51	=>	28
		53	=>	14
		55	=>	33
		57	=>	50
		59	=>	59
		63	=>	36
		68	=>	40
		73	=>	2
		75	=>	32
		76	=>	35
		79	=>	1
		80	=>	52
		81	=>	44
		83	=>	22
		85	=>	51
		86	=>	29
		87	=>	18
		89	=>	3
		91	=>	27
		93	=>	26
		96	=>	47
		101	=>	7
		102	=>	38
		103	=>	19
		108	=>	46
		109	=>	39

Class: public com.volmit.iris.object.IrisNoiseGenerator	=>	com.volmit.iris.b.k
	Source: "IrisNoiseGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisNoiseGenerator
		private boolean bezier	=>	l
		private boolean enabled	=>	c
		private double exponent	=>	a
		private com.volmit.iris.util.KList fracture	=>	o
		private transient com.volmit.iris.util.CNG generator	=>	n
		private boolean irisBased	=>	k
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	i
		private int octaves	=>	g
		private double offsetX	=>	j
		private double offsetY	=>	e
		private double offsetZ	=>	m
		private double opacity	=>	h
		private boolean parametric	=>	d
		private long seed	=>	f
		private boolean sinCentered	=>	b
		private double zoom	=>	p
	MethodsOf: com.volmit.iris.object.IrisNoiseGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(boolean) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getExponent()	=>	c()
		public com.volmit.iris.util.KList getFracture()	=>	n()
		public com.volmit.iris.util.CNG getGenerator()	=>	p()
		protected com.volmit.iris.util.CNG getGenerator(long)	=>	a(long)
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	h()
		public double getMax()	=>	f()
		public double getNoise(long, double, double)	=>	a(long, double, double)
		public int getOctaves()	=>	q()
		public double getOffsetX()	=>	k()
		public double getOffsetY()	=>	m()
		public double getOffsetZ()	=>	b()
		public double getOpacity()	=>	a()
		public long getSeed()	=>	e()
		public double getZoom()	=>	j()
		public int hashCode() 	SignatureNotChanged
		public boolean isBezier()	=>	d()
		public boolean isEnabled()	=>	l()
		public boolean isIrisBased()	=>	o()
		public boolean isParametric()	=>	g()
		public boolean isSinCentered()	=>	i()
		public void setBezier(boolean)	=>	b(boolean)
		public void setEnabled(boolean)	=>	a(boolean)
		public void setExponent(double)	=>	f(double)
		public void setFracture(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setGenerator(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setIrisBased(boolean)	=>	d(boolean)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setOctaves(int)	=>	a(int)
		public void setOffsetX(double)	=>	d(double)
		public void setOffsetY(double)	=>	e(double)
		public void setOffsetZ(double)	=>	c(double)
		public void setOpacity(double)	=>	a(double)
		public void setParametric(boolean)	=>	e(boolean)
		public void setSeed(long)	=>	b(long)
		public void setSinCentered(boolean)	=>	c(boolean)
		public void setZoom(double)	=>	b(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisNoiseGenerator
		15	=>	2, 4, 8, 19, 21, 27, 28, 30, 35, 39, 42, 44, 45, 46, 49, 50, 55, 62, 69 and 71
		18	=>	15
		20	=>	73
		22	=>	32
		24	=>	5
		26	=>	17
		28	=>	1
		30	=>	66
		32	=>	54
		34	=>	53
		36	=>	23
		38	=>	74
		40	=>	56
		42	=>	12
		44	=>	16
		46	=>	38
		48	=>	64
		50	=>	26
		52	=>	68
		54	=>	77
		56	=>	40
		58	=>	14
		60	=>	24
		62	=>	72
		64	=>	51
		66	=>	60
		68	=>	48
		70	=>	41
		72	=>	18
		74	=>	47
		75	=>	79
		78	=>	31
		79	=>	13
		80	=>	9
		84	=>	52
		85	=>	78
		86	=>	25
		90	=>	61
		92	=>	63
		93	=>	33
		94	=>	34
		97	=>	29
		102	=>	70
		107	=>	37
		109	=>	65
		112	=>	7
		113	=>	3
		114	=>	67
		116	=>	75
		118	=>	58
		120	=>	59
		121	=>	22
		123	=>	57
		124	=>	20
		126	=>	43
		127	=>	11
		128	=>	10
		129	=>	36
		130	=>	76
		132	=>	6

Class: public com.volmit.iris.object.IrisObject	=>	com.volmit.iris.b.q
	Source: "IrisObject.java"
	FieldsOf: com.volmit.iris.object.IrisObject
		private static final org.bukkit.Material SNOW	=>	e
		private static final org.bukkit.block.data.BlockData[] SNOW_LAYERS	=>	d
		private com.volmit.iris.util.KMap blocks	=>	j
		private transient org.bukkit.util.BlockVector center	=>	g
		private int d	=>	f
		private int h	=>	i
		private int w	=>	a
	MethodsOf: com.volmit.iris.object.IrisObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getBlocks()	=>	f()
		public org.bukkit.util.BlockVector getCenter()	=>	d()
		public int getD()	=>	c()
		public int getH()	=>	g()
		public int getW()	=>	e()
		public int hashCode() 	SignatureNotChanged
		public void place(int, int, com.volmit.iris.util.IObjectPlacer, com.volmit.iris.object.IrisObjectPlacement, com.volmit.iris.util.RNG)	=>	a(int, int, com.volmit.iris.f.X, com.volmit.iris.b.x, com.volmit.iris.f.aV)
		public void place(int, int, int, com.volmit.iris.util.IObjectPlacer, com.volmit.iris.object.IrisObjectPlacement, com.volmit.iris.util.RNG)	=>	a(int, int, int, com.volmit.iris.f.X, com.volmit.iris.b.x, com.volmit.iris.f.aV)
		public void place(org.bukkit.Location)	=>	a(org.bukkit.Location)
		public void read(java.io.File)	=>	a(java.io.File)
		public void read(java.io.InputStream)	=>	a(java.io.InputStream)
		public static org.bukkit.util.BlockVector sampleSize(java.io.File)	=>	c(java.io.File)
		public void setBlocks(com.volmit.iris.util.KMap)	=>	a(com.volmit.iris.f.aR)
		public void setCenter(org.bukkit.util.BlockVector)	=>	a(org.bukkit.util.BlockVector)
		public void setD(int)	=>	c(int)
		public void setH(int)	=>	b(int)
		public void setUnsigned(int, int, int, org.bukkit.block.data.BlockData)	=>	a(int, int, int, org.bukkit.block.data.BlockData)
		public void setW(int)	=>	a(int)
		public java.lang.String toString() 	SignatureNotChanged
		public void write(java.io.File)	=>	b(java.io.File)
		public void write(java.io.OutputStream)	=>	a(java.io.OutputStream)
	LineNumbersOf: com.volmit.iris.object.IrisObject
		27	=>	14, 19, 22, 24, 36, 45, 47, 50, 55, 81 and 83
		28	=>	88, 94 and 96
		31	=>	68
		32	=>	48
		39	=>	33
		41	=>	7
		42	=>	5
		43	=>	78
		44	=>	10
		45	=>	58
		46	=>	100
		50	=>	40
		51	=>	117
		52	=>	38
		53	=>	12
		54	=>	59
		59	=>	34
		60	=>	89
		61	=>	18
		62	=>	41
		63	=>	121
		64	=>	79
		66	=>	56 and 112
		68	=>	118
		70	=>	90
		74	=>	20
		75	=>	62
		76	=>	67
		77	=>	98
		81	=>	60
		82	=>	49
		83	=>	93
		84	=>	46
		85	=>	30
		89	=>	27
		90	=>	105
		91	=>	97
		92	=>	86
		93	=>	21
		94	=>	15 and 73
		96	=>	72
		97	=>	31
		98	=>	115
		99	=>	84
		101	=>	106
		105	=>	54
		107	=>	75
		110	=>	1
		112	=>	25
		114	=>	61
		115	=>	65
		119	=>	43
		121	=>	99
		125	=>	108
		126	=>	109
		130	=>	2
		131	=>	51
		132	=>	104
		133	=>	120
		134	=>	119
		135	=>	77
		136	=>	57
		138	=>	102
		140	=>	66
		142	=>	114
		146	=>	111 and 113
		148	=>	80
		149	=>	74
		150	=>	42
		151	=>	95
		153	=>	101
		155	=>	37
		158	=>	11 and 53
		160	=>	92
		162	=>	82
		166	=>	16
		167	=>	23
		168	=>	32
		170	=>	76
		172	=>	70
		174	=>	69
		176	=>	63
		179	=>	9
		181	=>	35
		185	=>	103
		187	=>	17
		190	=>	44
		193	=>	13
		195	=>	28
		197	=>	29 and 85
		199	=>	39
		200	=>	3
		201	=>	64
		203	=>	87
		205	=>	116
		206	=>	71
		208	=>	91
		211	=>	8
		212	=>	52
		216	=>	107
		220	=>	6 and 110
		222	=>	4
		224	=>	26

Class: public com.volmit.iris.object.IrisObjectPlacement	=>	com.volmit.iris.b.x
	Source: "IrisObjectPlacement.java"
	FieldsOf: com.volmit.iris.object.IrisObjectPlacement
		private double chance	=>	i
		private int density	=>	b
		private com.volmit.iris.util.KList edit	=>	e
		private boolean meld	=>	j
		private boolean onwater	=>	h
		private com.volmit.iris.util.KList place	=>	c
		private com.volmit.iris.object.IrisObjectRotation rotation	=>	a
		private double snow	=>	d
		private com.volmit.iris.object.IrisObjectTranslate translate	=>	g
		private boolean underwater	=>	f
	MethodsOf: com.volmit.iris.object.IrisObjectPlacement
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getChance()	=>	e()
		public int getDensity()	=>	f()
		public com.volmit.iris.util.KList getEdit()	=>	h()
		public com.volmit.iris.util.KList getPlace()	=>	d()
		public com.volmit.iris.object.IrisObjectRotation getRotation()	=>	c()
		public com.volmit.iris.object.IrisObject getSchematic(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.f.aV)
		public double getSnow()	=>	i()
		public com.volmit.iris.object.IrisObjectTranslate getTranslate()	=>	g()
		public int getTriesForChunk(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public int hashCode() 	SignatureNotChanged
		public boolean isMeld()	=>	j()
		public boolean isOnwater()	=>	a()
		public boolean isUnderwater()	=>	b()
		public void setChance(double)	=>	a(double)
		public void setDensity(int)	=>	a(int)
		public void setEdit(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setMeld(boolean)	=>	a(boolean)
		public void setOnwater(boolean)	=>	c(boolean)
		public void setPlace(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setRotation(com.volmit.iris.object.IrisObjectRotation)	=>	a(com.volmit.iris.b.s)
		public void setSnow(double)	=>	b(double)
		public void setTranslate(com.volmit.iris.object.IrisObjectTranslate)	=>	a(com.volmit.iris.b.g)
		public void setUnderwater(boolean)	=>	b(boolean)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisObjectPlacement
		11	=>	1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 24, 25, 29, 32, 33, 34, 37 and 41
		16	=>	3
		20	=>	17
		24	=>	23
		28	=>	36
		32	=>	21
		36	=>	38
		40	=>	43
		44	=>	30
		48	=>	5
		52	=>	28
		54	=>	27
		57	=>	42
		61	=>	39
		63	=>	31
		66	=>	35
		71	=>	44
		73	=>	26
		76	=>	16
		78	=>	40
		81	=>	18

Class: public com.volmit.iris.object.IrisObjectReplace	=>	com.volmit.iris.b.i
	Source: "IrisObjectReplace.java"
	FieldsOf: com.volmit.iris.object.IrisObjectReplace
		private boolean exact	=>	f
		private java.lang.String find	=>	c
		private transient org.bukkit.block.data.BlockData findData	=>	d
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	a
		private java.lang.String replace	=>	e
		private transient org.bukkit.block.data.BlockData replaceData	=>	b
	MethodsOf: com.volmit.iris.object.IrisObjectReplace
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getFind()	=>	d()
		public org.bukkit.block.data.BlockData getFindData()	=>	e()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	a()
		public org.bukkit.block.data.BlockData getReplace()	=>	b()
		public org.bukkit.block.data.BlockData getReplaceData()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public boolean isExact()	=>	f()
		public void setExact(boolean)	=>	a(boolean)
		public void setFind(java.lang.String)	=>	b(java.lang.String)
		public void setFindData(org.bukkit.block.data.BlockData)	=>	b(org.bukkit.block.data.BlockData)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setReplace(java.lang.String)	=>	a(java.lang.String)
		public void setReplaceData(org.bukkit.block.data.BlockData)	=>	a(org.bukkit.block.data.BlockData)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisObjectReplace
		14	=>	1, 2, 6, 7, 12, 13, 14, 15, 17, 19, 20, 22, 23 and 24
		24	=>	21
		26	=>	9
		30	=>	16
		33	=>	11
		37	=>	5
		39	=>	18
		42	=>	10
		47	=>	8
		49	=>	4
		52	=>	3

Class: public com.volmit.iris.object.IrisObjectRotation	=>	com.volmit.iris.b.s
	Source: "IrisObjectRotation.java"
	FieldsOf: com.volmit.iris.object.IrisObjectRotation
		private boolean enabled	=>	d
		private com.volmit.iris.object.IrisAxisRotationClamp xAxis	=>	b
		private com.volmit.iris.object.IrisAxisRotationClamp yAxis	=>	c
		private com.volmit.iris.object.IrisAxisRotationClamp zAxis	=>	a
	MethodsOf: com.volmit.iris.object.IrisObjectRotation
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean canRotate()	=>	g()
		public boolean canRotateX()	=>	f()
		public boolean canRotateY()	=>	c()
		public boolean canRotateZ()	=>	a()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getRotation(int, com.volmit.iris.object.IrisAxisRotationClamp)	=>	a(int, com.volmit.iris.b.d)
		public com.volmit.iris.object.IrisAxisRotationClamp getXAxis()	=>	h()
		public double getXRotation(int)	=>	c(int)
		public com.volmit.iris.object.IrisAxisRotationClamp getYAxis()	=>	d()
		public double getYRotation(int)	=>	a(int)
		public com.volmit.iris.object.IrisAxisRotationClamp getZAxis()	=>	b()
		public double getZRotation(int)	=>	b(int)
		public int hashCode() 	SignatureNotChanged
		public boolean isEnabled()	=>	e()
		public org.bukkit.util.BlockVector rotate(org.bukkit.util.BlockVector, boolean, boolean, int, int, int)	=>	a(org.bukkit.util.BlockVector, boolean, boolean, int, int, int)
		public void setEnabled(boolean)	=>	a(boolean)
		public void setXAxis(com.volmit.iris.object.IrisAxisRotationClamp)	=>	c(com.volmit.iris.b.d)
		public void setYAxis(com.volmit.iris.object.IrisAxisRotationClamp)	=>	a(com.volmit.iris.b.d)
		public void setZAxis(com.volmit.iris.object.IrisAxisRotationClamp)	=>	b(com.volmit.iris.b.d)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisObjectRotation
		11	=>	2, 7, 8, 17, 19, 28, 30 and 43
		14	=>	32
		16	=>	40
		18	=>	14
		20	=>	41
		22	=>	16
		24	=>	25
		26	=>	5
		28	=>	11
		31	=>	10
		33	=>	26
		37	=>	24
		42	=>	13
		47	=>	9
		52	=>	21
		54	=>	33
		57	=>	37
		59	=>	20
		62	=>	6
		67	=>	22
		69	=>	4
		72	=>	36
		74	=>	42
		76	=>	1
		79	=>	27
		81	=>	39
		84	=>	34
		86	=>	23
		89	=>	15
		91	=>	12
		94	=>	38
		96	=>	3
		99	=>	18
		104	=>	31
		109	=>	44
		114	=>	35
		119	=>	29

Class: public com.volmit.iris.object.IrisObjectTranslate	=>	com.volmit.iris.b.g
	Source: "IrisObjectTranslate.java"
	FieldsOf: com.volmit.iris.object.IrisObjectTranslate
		private int x	=>	a
		private int y	=>	b
		private int z	=>	c
	MethodsOf: com.volmit.iris.object.IrisObjectTranslate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean canTranslate()	=>	d()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getX()	=>	c()
		public int getY()	=>	a()
		public int getZ()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setX(int)	=>	a(int)
		public void setY(int)	=>	b(int)
		public void setZ(int)	=>	c(int)
		public java.lang.String toString() 	SignatureNotChanged
		public org.bukkit.util.BlockVector translate(org.bukkit.util.BlockVector)	=>	a(org.bukkit.util.BlockVector)
	LineNumbersOf: com.volmit.iris.object.IrisObjectTranslate
		11	=>	2, 3, 11, 13, 15, 17 and 18
		16	=>	14
		20	=>	8
		24	=>	4
		27	=>	16
		28	=>	19
		29	=>	10
		30	=>	9
		31	=>	12
		35	=>	7
		40	=>	1
		42	=>	6
		45	=>	5

Class: public com.volmit.iris.object.IrisPostProcessor	=>	com.volmit.iris.b.u
	Source: "IrisPostProcessor.java"
	FieldsOf: com.volmit.iris.object.IrisPostProcessor
		private int phase	=>	b
		private java.lang.String processor	=>	a
	MethodsOf: com.volmit.iris.object.IrisPostProcessor
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getPhase()	=>	a()
		public java.lang.String getProcessor()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setPhase(int)	=>	a(int)
		public void setProcessor(java.lang.String)	=>	a(java.lang.String)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisPostProcessor
		10	=>	9, 10 and 18
		11	=>	3, 4 and 15
		14	=>	5
		16	=>	7
		18	=>	11
		20	=>	6
		24	=>	17
		25	=>	8
		28	=>	12
		29	=>	14
		30	=>	13
		31	=>	2
		35	=>	16
		36	=>	1

Class: public com.volmit.iris.object.IrisRegion	=>	com.volmit.iris.b.r
	Source: "IrisRegion.java"
	FieldsOf: com.volmit.iris.object.IrisRegion
		private static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$InferredType	=>	z
		private double biomeImplosionRatio	=>	C
		private transient com.volmit.iris.util.KList cacheRidge	=>	t
		private transient com.volmit.iris.util.KList cacheSpot	=>	p
		private double caveBiomeZoom	=>	h
		private com.volmit.iris.util.KList caveBiomes	=>	G
		private com.volmit.iris.util.KList deposits	=>	x
		private double islandBiomeZoom	=>	n
		private com.volmit.iris.util.KList islandBiomes	=>	k
		private double landBiomeZoom	=>	l
		private com.volmit.iris.util.KList landBiomes	=>	e
		private transient java.util.concurrent.locks.ReentrantLock lock	=>	v
		private java.lang.String name	=>	a
		private transient com.volmit.iris.util.KList realCaveBiomes	=>	F
		private transient com.volmit.iris.util.KList realIslandBiomes	=>	o
		private transient com.volmit.iris.util.KList realLandBiomes	=>	u
		private transient com.volmit.iris.util.KList realSeaBiomes	=>	m
		private transient com.volmit.iris.util.KList realShoreBiomes	=>	E
		private transient com.volmit.iris.util.KList realSkylandBiomes	=>	A
		private com.volmit.iris.util.KList ridgeBiomes	=>	y
		private double seaBiomeZoom	=>	i
		private com.volmit.iris.util.KList seaBiomes	=>	g
		private double shoreBiomeZoom	=>	H
		private com.volmit.iris.util.KList shoreBiomes	=>	f
		private transient com.volmit.iris.util.CNG shoreHeightGenerator	=>	D
		private double shoreHeightMax	=>	d
		private double shoreHeightMin	=>	r
		private double shoreHeightZoom	=>	B
		private double shoreRatio	=>	w
		private double skylandBiomeZoom	=>	q
		private com.volmit.iris.util.KList skylandBiomes	=>	s
		private com.volmit.iris.util.KList spotBiomes	=>	j
	MethodsOf: com.volmit.iris.object.IrisRegion
		static synthetic int[] $SWITCH_TABLE$com$volmit$iris$object$InferredType()	=>	u()
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.NoSuchFieldError a(java.lang.NoSuchFieldError) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllBiomes()	=>	r()
		public double getBiomeImplosionRatio()	=>	s()
		public double getBiomeZoom(com.volmit.iris.object.InferredType)	=>	b(com.volmit.iris.b.h)
		public com.volmit.iris.util.KList getBiomes(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public com.volmit.iris.util.KList getCacheRidge()	=>	m()
		public com.volmit.iris.util.KList getCacheSpot()	=>	j()
		public double getCaveBiomeZoom()	=>	F()
		public com.volmit.iris.util.KList getCaveBiomes()	=>	v()
		public com.volmit.iris.util.KList getDeposits()	=>	k()
		public double getIslandBiomeZoom()	=>	E()
		public com.volmit.iris.util.KList getIslandBiomes()	=>	q()
		public double getLandBiomeZoom()	=>	C()
		public com.volmit.iris.util.KList getLandBiomes()	=>	G()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	y()
		public java.lang.String getName()	=>	e()
		public com.volmit.iris.util.KList getRealCaveBiomes()	=>	d()
		public com.volmit.iris.util.KList getRealIslandBiomes()	=>	D()
		public com.volmit.iris.util.KList getRealLandBiomes()	=>	l()
		public com.volmit.iris.util.KList getRealSeaBiomes()	=>	w()
		public com.volmit.iris.util.KList getRealShoreBiomes()	=>	p()
		public com.volmit.iris.util.KList getRealSkylandBiomes()	=>	h()
		public com.volmit.iris.util.KList getRidgeBiomeKeys()	=>	B()
		public com.volmit.iris.util.KList getRidgeBiomes()	=>	i()
		public double getSeaBiomeZoom()	=>	o()
		public com.volmit.iris.util.KList getSeaBiomes()	=>	t()
		public double getShoreBiomeZoom()	=>	c()
		public com.volmit.iris.util.KList getShoreBiomes()	=>	z()
		public double getShoreHeight(double, double)	=>	a(double, double)
		public com.volmit.iris.util.CNG getShoreHeightGenerator()	=>	A()
		public double getShoreHeightMax()	=>	J()
		public double getShoreHeightMin()	=>	f()
		public double getShoreHeightZoom()	=>	x()
		public double getShoreRatio()	=>	g()
		public double getSkylandBiomeZoom()	=>	K()
		public com.volmit.iris.util.KList getSkylandBiomes()	=>	I()
		public com.volmit.iris.util.KList getSpotBiomeKeys()	=>	n()
		public com.volmit.iris.util.KList getSpotBiomes()	=>	H()
		public int hashCode() 	SignatureNotChanged
		private synthetic void lambda$0(com.volmit.iris.object.IrisRegionRidge) 	SignatureNotChanged
		private synthetic void lambda$1(com.volmit.iris.object.IrisRegionSpot) 	SignatureNotChanged
		private static synthetic void lambda$2(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegionSpot) 	SignatureNotChanged
		private static synthetic void lambda$3(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegionRidge) 	SignatureNotChanged
		public void setBiomeImplosionRatio(double)	=>	j(double)
		public void setCacheRidge(com.volmit.iris.util.KList)	=>	p(com.volmit.iris.f.t)
		public void setCacheSpot(com.volmit.iris.util.KList)	=>	e(com.volmit.iris.f.t)
		public void setCaveBiomeZoom(double)	=>	i(double)
		public void setCaveBiomes(com.volmit.iris.util.KList)	=>	j(com.volmit.iris.f.t)
		public void setDeposits(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public void setIslandBiomeZoom(double)	=>	d(double)
		public void setIslandBiomes(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public void setLandBiomeZoom(double)	=>	g(double)
		public void setLandBiomes(com.volmit.iris.util.KList)	=>	f(com.volmit.iris.f.t)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setName(java.lang.String)	=>	b(java.lang.String)
		public void setRealCaveBiomes(com.volmit.iris.util.KList)	=>	m(com.volmit.iris.f.t)
		public void setRealIslandBiomes(com.volmit.iris.util.KList)	=>	q(com.volmit.iris.f.t)
		public void setRealLandBiomes(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public void setRealSeaBiomes(com.volmit.iris.util.KList)	=>	k(com.volmit.iris.f.t)
		public void setRealShoreBiomes(com.volmit.iris.util.KList)	=>	g(com.volmit.iris.f.t)
		public void setRealSkylandBiomes(com.volmit.iris.util.KList)	=>	i(com.volmit.iris.f.t)
		public void setRidgeBiomes(com.volmit.iris.util.KList)	=>	d(com.volmit.iris.f.t)
		public void setSeaBiomeZoom(double)	=>	c(double)
		public void setSeaBiomes(com.volmit.iris.util.KList)	=>	h(com.volmit.iris.f.t)
		public void setShoreBiomeZoom(double)	=>	k(double)
		public void setShoreBiomes(com.volmit.iris.util.KList)	=>	l(com.volmit.iris.f.t)
		public void setShoreHeightGenerator(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public void setShoreHeightMax(double)	=>	a(double)
		public void setShoreHeightMin(double)	=>	b(double)
		public void setShoreHeightZoom(double)	=>	f(double)
		public void setShoreRatio(double)	=>	e(double)
		public void setSkylandBiomeZoom(double)	=>	h(double)
		public void setSkylandBiomes(com.volmit.iris.util.KList)	=>	n(com.volmit.iris.f.t)
		public void setSpotBiomes(com.volmit.iris.util.KList)	=>	o(com.volmit.iris.f.t)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisRegion
		18	=>	4, 6, 8, 12, 13, 17, 18, 20, 21, 24, 31, 34, 38, 48, 59, 63, 64, 67, 70, 72, 77, 84, 86, 90, 91, 92, 97, 103, 105, 111, 115, 122, 123, 126, 132, 134, 135, 136, 142, 145, 148, 149, 150, 153, 154, 155, 158, 161, 164, 165, 167, 168, 169, 173, 174, 176, 177, 184 and 188
		19	=>	15, 52 and 117
		20	=>	51
		24	=>	25
		28	=>	50
		32	=>	163
		36	=>	36
		40	=>	94
		44	=>	191
		48	=>	119
		52	=>	124
		56	=>	114
		60	=>	27
		64	=>	156
		68	=>	140
		72	=>	42
		76	=>	35
		80	=>	181
		84	=>	143
		88	=>	151
		92	=>	160
		96	=>	108
		100	=>	152
		103	=>	83
		108	=>	68
		119	=>	99
		122	=>	19
		124	=>	172
		126	=>	87
		128	=>	183
		130	=>	113
		132	=>	120
		137	=>	131
		142	=>	82
		144	=>	62
		146	=>	33
		147	=>	54 and 69
		150	=>	88
		152	=>	26
		157	=>	29
		159	=>	109
		161	=>	144
		162	=>	85 and 130
		165	=>	146
		167	=>	73
		172	=>	80
		174	=>	81
		175	=>	194
		176	=>	28
		179	=>	32
		184	=>	185
		185	=>	179
		186	=>	96
		187	=>	100
		188	=>	157
		189	=>	125 and 159
		190	=>	14 and 22
		192	=>	3 and 110
		194	=>	9 and 10
		196	=>	89
		198	=>	118
		199	=>	1
		202	=>	55
		203	=>	102
		204	=>	60
		205	=>	61
		209	=>	37
		214	=>	47
		216	=>	190
		219	=>	65
		221	=>	141
		224	=>	43
		226	=>	129
		229	=>	138
		231	=>	66
		234	=>	78
		236	=>	53
		239	=>	182
		241	=>	46
		244	=>	121
		249	=>	133
		251	=>	137
		253	=>	189
		255	=>	95 and 107
		257	=>	76
		262	=>	147
		263	=>	116
		268	=>	58
		270	=>	11
		272	=>	127
		274	=>	49 and 180
		276	=>	74
		281	=>	175
		282	=>	30
		287	=>	186
		289	=>	171
		291	=>	71
		293	=>	7 and 187
		295	=>	2
		300	=>	162
		301	=>	193
		306	=>	101
		308	=>	98
		310	=>	39
		312	=>	5 and 75
		314	=>	57
		319	=>	79
		320	=>	166
		325	=>	23
		327	=>	112
		329	=>	40
		331	=>	56 and 104
		333	=>	170
		338	=>	178
		339	=>	16
		344	=>	128
		346	=>	139
		348	=>	41
		350	=>	44 and 45
		352	=>	93
		357	=>	106
		358	=>	192

Class: synthetic com.volmit.iris.object.IrisRegion$1	=>	com.volmit.iris.b.r$a
	Source: "IrisRegion.java"
	FieldsOf: com.volmit.iris.object.IrisRegion$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$InferredType	=>	a
	MethodsOf: com.volmit.iris.object.IrisRegion$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisRegion$1
		119	=>	1

Class: public com.volmit.iris.object.IrisRegionRidge	=>	com.volmit.iris.b.l
	Source: "IrisRegionRidge.java"
	FieldsOf: com.volmit.iris.object.IrisRegionRidge
		private com.volmit.iris.object.InferredType as	=>	h
		private java.lang.String biome	=>	k
		private double chance	=>	a
		private double chanceScale	=>	i
		private double chanceShuffle	=>	e
		private transient com.volmit.iris.util.CellGenerator ridge	=>	d
		private double scale	=>	b
		private double shuffle	=>	c
		private transient com.volmit.iris.util.CellGenerator spot	=>	f
		private double thickness	=>	j
		private com.volmit.iris.object.InferredType type	=>	g
	MethodsOf: com.volmit.iris.object.IrisRegionRidge
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getAs()	=>	h()
		public java.lang.String getBiome()	=>	k()
		public double getChance()	=>	e()
		public double getChanceScale()	=>	g()
		public double getChanceShuffle()	=>	b()
		public com.volmit.iris.util.CellGenerator getRidge()	=>	d()
		public double getScale()	=>	i()
		public double getShuffle()	=>	j()
		public com.volmit.iris.util.CellGenerator getSpot()	=>	f()
		public double getThickness()	=>	c()
		public com.volmit.iris.object.InferredType getType()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public boolean isRidge(com.volmit.iris.util.RNG, double, double)	=>	a(com.volmit.iris.f.aV, double, double)
		public void setAs(com.volmit.iris.object.InferredType)	=>	b(com.volmit.iris.b.h)
		public void setBiome(java.lang.String)	=>	a(java.lang.String)
		public void setChance(double)	=>	e(double)
		public void setChanceScale(double)	=>	a(double)
		public void setChanceShuffle(double)	=>	c(double)
		public void setRidge(com.volmit.iris.util.CellGenerator)	=>	a(com.volmit.iris.f.aX)
		public void setScale(double)	=>	b(double)
		public void setShuffle(double)	=>	f(double)
		public void setSpot(com.volmit.iris.util.CellGenerator)	=>	b(com.volmit.iris.f.aX)
		public void setThickness(double)	=>	d(double)
		public void setType(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisRegionRidge
		11	=>	2, 5, 6, 9, 17, 21, 24, 30, 32, 35, 36, 38, 39, 41 and 50
		16	=>	33
		18	=>	49
		20	=>	4
		22	=>	10
		24	=>	44
		26	=>	47
		28	=>	40
		30	=>	37
		32	=>	48
		34	=>	13
		36	=>	22
		38	=>	19
		40	=>	29
		42	=>	12
		44	=>	15
		46	=>	1
		48	=>	16
		50	=>	42
		51	=>	3
		54	=>	7
		56	=>	43
		60	=>	25
		62	=>	20
		63	=>	45
		64	=>	14
		67	=>	11
		69	=>	28
		70	=>	18
		71	=>	23
		74	=>	34
		76	=>	8
		78	=>	26
		82	=>	46
		84	=>	31
		87	=>	27

Class: public com.volmit.iris.object.IrisRegionSpot	=>	com.volmit.iris.b.e
	Source: "IrisRegionSpot.java"
	FieldsOf: com.volmit.iris.object.IrisRegionSpot
		private com.volmit.iris.object.InferredType as	=>	b
		private java.lang.String biome	=>	g
		private double rarity	=>	c
		private double scale	=>	a
		private double shuffle	=>	d
		private transient com.volmit.iris.util.CellGenerator spot	=>	e
		private com.volmit.iris.object.InferredType type	=>	f
	MethodsOf: com.volmit.iris.object.IrisRegionSpot
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getAs()	=>	f()
		public java.lang.String getBiome()	=>	d()
		public double getRarity()	=>	e()
		public double getScale()	=>	g()
		public double getShuffle()	=>	a()
		public com.volmit.iris.util.CellGenerator getSpot()	=>	c()
		public com.volmit.iris.object.InferredType getType()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public boolean isSpot(com.volmit.iris.util.RNG, double, double)	=>	a(com.volmit.iris.f.aV, double, double)
		public void setAs(com.volmit.iris.object.InferredType)	=>	b(com.volmit.iris.b.h)
		public void setBiome(java.lang.String)	=>	a(java.lang.String)
		public void setRarity(double)	=>	b(double)
		public void setScale(double)	=>	a(double)
		public void setShuffle(double)	=>	c(double)
		public void setSpot(com.volmit.iris.util.CellGenerator)	=>	a(com.volmit.iris.f.aX)
		public void setType(com.volmit.iris.object.InferredType)	=>	a(com.volmit.iris.b.h)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisRegionSpot
		11	=>	1, 5, 9, 11, 16, 17, 20, 22, 23, 28 and 30
		16	=>	18
		18	=>	31
		20	=>	26
		22	=>	13
		24	=>	15
		26	=>	21
		28	=>	2
		30	=>	24
		32	=>	8
		34	=>	14
		36	=>	3
		38	=>	29
		41	=>	27
		43	=>	32
		47	=>	4
		49	=>	12
		50	=>	19
		51	=>	25
		54	=>	6
		56	=>	10
		59	=>	7

Class: public com.volmit.iris.object.IrisRegistrant	=>	com.volmit.iris.b.m
	Source: "IrisRegistrant.java"
	FieldsOf: com.volmit.iris.object.IrisRegistrant
		private static com.google.gson.TypeAdapter[] a	=>	b
		private java.lang.String loadKey	=>	c
	MethodsOf: com.volmit.iris.object.IrisRegistrant
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	b()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getLoadKey()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public void setLoadKey(java.lang.String)	=>	a(java.lang.String)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.object.IrisRegistrant
		5	=>	1, 2, 3, 5, 6 and 7
		8	=>	4

Class: public com.volmit.iris.object.atomics.AtomicRegionData	=>	com.volmit.iris.b.a.d
	Source: "AtomicRegionData.java"
	FieldsOf: com.volmit.iris.object.atomics.AtomicRegionData
		private com.volmit.iris.util.KMap tag	=>	b
		private final org.bukkit.World world	=>	a
	MethodsOf: com.volmit.iris.object.atomics.AtomicRegionData
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.World) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public boolean contains(int, int)	=>	a(int, int)
		public void delete(int, int)	=>	c(int, int)
		public com.volmit.iris.object.atomics.AtomicSliverMap get(int, int)	=>	b(int, int)
		public org.bukkit.World getWorld()	=>	b()
		public void read(java.io.InputStream)	=>	a(java.io.InputStream)
		public void set(int, int, com.volmit.iris.object.atomics.AtomicSliverMap)	=>	a(int, int, com.volmit.iris.b.a.c)
		public int size()	=>	a()
		public void write(java.io.OutputStream)	=>	a(java.io.OutputStream)
	LineNumbersOf: com.volmit.iris.object.atomics.AtomicRegionData
		24	=>	16
		25	=>	1
		26	=>	20
		27	=>	8
		31	=>	5
		36	=>	10
		37	=>	4
		38	=>	23
		39	=>	15
		40	=>	6
		44	=>	26
		45	=>	25
		46	=>	14
		47	=>	11
		51	=>	21
		56	=>	31
		57	=>	22
		61	=>	2
		63	=>	19
		66	=>	3
		67	=>	17
		68	=>	9
		69	=>	29
		73	=>	33
		75	=>	27
		77	=>	24
		82	=>	32
		83	=>	13
		84	=>	30
		87	=>	12
		90	=>	28
		92	=>	18
		97	=>	7

Class: public com.volmit.iris.object.atomics.AtomicSliver	=>	com.volmit.iris.b.a.e
	Source: "AtomicSliver.java"
	FieldsOf: com.volmit.iris.object.atomics.AtomicSliver
		public static final org.bukkit.block.data.BlockData AIR	=>	f
		private com.volmit.iris.util.KMap biome	=>	e
		private com.volmit.iris.util.KMap block	=>	g
		private int highestBiome	=>	i
		private int highestBlock	=>	h
		private long last	=>	b
		private java.util.concurrent.locks.ReentrantLock lock	=>	d
		private com.volmit.iris.util.KMap truebiome	=>	c
		private int x	=>	j
		private int z	=>	a
	MethodsOf: com.volmit.iris.object.atomics.AtomicSliver
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int)	=>	b(int)
		public com.volmit.iris.util.KMap getBiome()	=>	a()
		public org.bukkit.block.Biome getBiome(int)	=>	e(int)
		public com.volmit.iris.util.KMap getBlock()	=>	g()
		public int getHighestBiome()	=>	d()
		public int getHighestBlock()	=>	h()
		public long getLast()	=>	i()
		public java.util.concurrent.locks.ReentrantLock getLock()	=>	b()
		public com.volmit.iris.object.IrisBiome getTrueBiome(int)	=>	a(int)
		public com.volmit.iris.util.KMap getTruebiome()	=>	e()
		public org.bukkit.Material getType(int)	=>	i(int)
		public int getX()	=>	f()
		public int getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	b(org.bukkit.generator.ChunkGenerator$ChunkData)
		public void insert(com.volmit.iris.object.atomics.AtomicSliver)	=>	a(com.volmit.iris.b.a.e)
		public boolean isOlderThan(long)	=>	a(long)
		public boolean isSolid(int)	=>	h(int)
		public void read(java.io.DataInputStream)	=>	a(java.io.DataInputStream)
		public void set(int, com.volmit.iris.object.IrisBiome)	=>	a(int, com.volmit.iris.b.n)
		public void set(int, org.bukkit.block.Biome)	=>	a(int, org.bukkit.block.Biome)
		public void set(int, org.bukkit.block.data.BlockData)	=>	a(int, org.bukkit.block.data.BlockData)
		public void setBiome(com.volmit.iris.util.KMap)	=>	c(com.volmit.iris.f.aR)
		public void setBlock(com.volmit.iris.util.KMap)	=>	a(com.volmit.iris.f.aR)
		public void setHighestBiome(int)	=>	c(int)
		public void setHighestBlock(int)	=>	f(int)
		public void setLast(long)	=>	b(long)
		public void setLock(java.util.concurrent.locks.ReentrantLock)	=>	a(java.util.concurrent.locks.ReentrantLock)
		public void setSilently(int, org.bukkit.block.data.BlockData)	=>	b(int, org.bukkit.block.data.BlockData)
		public void setTruebiome(com.volmit.iris.util.KMap)	=>	b(com.volmit.iris.f.aR)
		public void setX(int)	=>	g(int)
		public void setZ(int)	=>	d(int)
		public java.lang.String toString() 	SignatureNotChanged
		public void write(com.volmit.iris.util.HeightMap)	=>	a(com.volmit.iris.f.M)
		public void write(java.io.DataOutputStream)	=>	a(java.io.DataOutputStream)
		public void write(org.bukkit.generator.ChunkGenerator$BiomeGrid)	=>	a(org.bukkit.generator.ChunkGenerator$BiomeGrid)
		public void write(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData)
	LineNumbersOf: com.volmit.iris.object.atomics.AtomicSliver
		22	=>	7, 23, 28, 31, 38, 50, 52, 57, 58, 63, 64, 65, 70, 75, 77, 82, 84, 92, 105, 116, 122 and 123
		25	=>	37
		29	=>	101
		30	=>	71
		31	=>	22
		32	=>	114
		36	=>	51
		38	=>	68
		39	=>	47
		40	=>	102
		41	=>	98
		42	=>	107
		43	=>	5
		47	=>	43
		52	=>	3
		53	=>	96
		55	=>	21
		57	=>	30
		60	=>	59
		65	=>	87
		67	=>	89
		70	=>	125
		71	=>	2
		73	=>	41
		75	=>	90
		76	=>	67
		79	=>	66
		80	=>	60
		81	=>	115
		85	=>	85
		87	=>	99
		90	=>	53
		91	=>	40
		92	=>	44
		93	=>	9
		97	=>	112
		102	=>	10
		103	=>	93
		108	=>	62
		109	=>	36
		114	=>	83
		115	=>	42
		116	=>	111
		117	=>	121
		118	=>	119
		122	=>	45
		123	=>	17
		124	=>	113
		125	=>	78
		129	=>	33
		130	=>	35 and 97
		132	=>	117
		134	=>	61
		135	=>	72
		139	=>	1
		142	=>	81
		143	=>	19
		147	=>	48
		148	=>	54 and 109
		150	=>	106
		152	=>	46
		155	=>	56
		156	=>	124
		160	=>	91
		161	=>	20
		162	=>	29
		163	=>	26
		167	=>	32
		168	=>	25
		169	=>	104
		170	=>	95
		172	=>	39 and 120
		174	=>	6
		176	=>	8
		177	=>	126
		181	=>	13
		182	=>	88
		184	=>	4 and 80
		186	=>	76
		187	=>	110
		189	=>	12
		190	=>	16
		194	=>	74
		195	=>	11 and 100
		197	=>	14
		199	=>	24
		200	=>	49
		202	=>	18
		205	=>	94
		208	=>	73
		209	=>	34
		213	=>	15
		214	=>	79 and 86
		216	=>	103
		218	=>	118
		219	=>	69
		222	=>	27
		223	=>	55
		227	=>	108

Class: public com.volmit.iris.object.atomics.AtomicSliverMap	=>	com.volmit.iris.b.a.c
	Source: "AtomicSliverMap.java"
	FieldsOf: com.volmit.iris.object.atomics.AtomicSliverMap
		private static int[] a	=>	b
		private boolean parallaxGenerated	=>	d
		private final com.volmit.iris.object.atomics.AtomicSliver[] slivers	=>	c
		private boolean worldGenerated	=>	e
	MethodsOf: com.volmit.iris.object.atomics.AtomicSliverMap
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int[] a()	=>	b()
		public static void a(int[])	=>	b(int[])
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.atomics.AtomicSliver getSliver(int, int)	=>	a(int, int)
		public com.volmit.iris.object.atomics.AtomicSliver[] getSlivers()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$ChunkData)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData)
		public void insert(com.volmit.iris.object.atomics.AtomicSliverMap)	=>	a(com.volmit.iris.b.a.c)
		public boolean isParallaxGenerated()	=>	e()
		public boolean isWorldGenerated()	=>	d()
		public void read(java.io.InputStream)	=>	a(java.io.InputStream)
		public void setParallaxGenerated(boolean)	=>	b(boolean)
		public void setWorldGenerated(boolean)	=>	a(boolean)
		public java.lang.String toString() 	SignatureNotChanged
		public void write(java.io.OutputStream)	=>	a(java.io.OutputStream)
		public void write(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap)	=>	a(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.f.M)
	LineNumbersOf: com.volmit.iris.object.atomics.AtomicSliverMap
		16	=>	20, 23, 24, 29, 33 and 48
		19	=>	18
		20	=>	25
		21	=>	46
		24	=>	47
		25	=>	7
		26	=>	3
		27	=>	4
		29	=>	2 and 13
		31	=>	17 and 39
		33	=>	27
		36	=>	44
		40	=>	28 and 36
		42	=>	42
		44	=>	15
		48	=>	14
		49	=>	34
		50	=>	30
		51	=>	8 and 11
		53	=>	21
		56	=>	37
		57	=>	31
		61	=>	26
		62	=>	49
		63	=>	22
		65	=>	45 and 50
		67	=>	19
		69	=>	43
		73	=>	40
		78	=>	6 and 41
		80	=>	12
		82	=>	1
		83	=>	9
		84	=>	16
		87	=>	32
		91	=>	10 and 38
		93	=>	5
		95	=>	35

Class: public com.volmit.iris.object.atomics.AtomicWorldData	=>	com.volmit.iris.b.a.b
	Source: "AtomicWorldData.java"
	FieldsOf: com.volmit.iris.object.atomics.AtomicWorldData
		private com.volmit.iris.util.ChronoLatch cl	=>	b
		private com.volmit.iris.util.KMap lastChunk	=>	g
		private com.volmit.iris.util.KMap lastRegion	=>	f
		private com.volmit.iris.util.KMap loadedChunks	=>	d
		private com.volmit.iris.util.KMap loadedSections	=>	a
		private java.lang.String prefix	=>	c
		private org.bukkit.World world	=>	e
	MethodsOf: com.volmit.iris.object.atomics.AtomicWorldData
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.World, java.lang.String) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void clean(int)	=>	a(int)
		public com.volmit.iris.object.atomics.AtomicRegionData createSection(int, int)	=>	f(int, int)
		public void deleteSection(int, int)	=>	h(int, int)
		public com.volmit.iris.util.KMap getLoadedChunks()	=>	a()
		public com.volmit.iris.util.KMap getLoadedRegions()	=>	b()
		public com.volmit.iris.object.atomics.AtomicRegionData getSubregion(int, int)	=>	c(int, int)
		public java.io.File getSubregionFile(int, int)	=>	g(int, int)
		public java.io.File getSubregionFolder()	=>	c()
		public boolean hasChunk(int, int)	=>	d(int, int)
		public boolean isSectionLoaded(com.volmit.iris.util.ChunkPosition)	=>	b(com.volmit.iris.f.V)
		public boolean isSectionLoaded(int, int)	=>	a(int, int)
		public com.volmit.iris.object.atomics.AtomicSliverMap loadChunk(int, int)	=>	e(int, int)
		public com.volmit.iris.object.atomics.AtomicRegionData loadSection(int, int)	=>	b(int, int)
		public com.volmit.iris.object.atomics.AtomicRegionData loadSection(int, int, boolean)	=>	b(int, int, boolean)
		public void saveAll()	=>	e()
		public void saveChunk(com.volmit.iris.util.ChunkPosition)	=>	c(com.volmit.iris.f.V)
		public void saveChunks()	=>	d()
		public void saveChunks(com.volmit.iris.util.ChunkPosition)	=>	a(com.volmit.iris.f.V)
		public boolean saveSection(com.volmit.iris.util.ChunkPosition)	=>	d(com.volmit.iris.f.V)
		public boolean saveSection(int, int)	=>	i(int, int)
		public void unloadAll(boolean)	=>	a(boolean)
		public boolean unloadSection(com.volmit.iris.util.ChunkPosition, boolean)	=>	a(com.volmit.iris.f.V, boolean)
		public boolean unloadSection(int, int, boolean)	=>	a(int, int, boolean)
	LineNumbersOf: com.volmit.iris.object.atomics.AtomicWorldData
		24	=>	102
		27	=>	93
		28	=>	113
		29	=>	5
		30	=>	108
		31	=>	68
		32	=>	64
		33	=>	55
		34	=>	67
		35	=>	1
		39	=>	69
		44	=>	117
		46	=>	107
		48	=>	52
		51	=>	65
		53	=>	9
		58	=>	61
		60	=>	50
		62	=>	79
		63	=>	39
		64	=>	101
		68	=>	20
		70	=>	63
		72	=>	60
		73	=>	53
		75	=>	47
		76	=>	80
		77	=>	56
		78	=>	29
		82	=>	71
		83	=>	77
		84	=>	76
		88	=>	48
		93	=>	70
		98	=>	27
		103	=>	90
		105	=>	96
		106	=>	16
		109	=>	106
		111	=>	95
		114	=>	32
		115	=>	25
		116	=>	38
		121	=>	78
		126	=>	103
		128	=>	23
		130	=>	85
		133	=>	44
		134	=>	121
		135	=>	17
		136	=>	59
		137	=>	81
		138	=>	115
		143	=>	30
		145	=>	111
		146	=>	73
		147	=>	92
		151	=>	43
		153	=>	4
		154	=>	45
		156	=>	7
		158	=>	40
		160	=>	99
		161	=>	24
		165	=>	82
		166	=>	14
		167	=>	13
		168	=>	22
		169	=>	119
		170	=>	2
		171	=>	74
		175	=>	11
		176	=>	91
		177	=>	3
		179	=>	97
		182	=>	41
		183	=>	83
		184	=>	72
		186	=>	15
		191	=>	116
		196	=>	46
		197	=>	89
		199	=>	114
		202	=>	37
		204	=>	42
		207	=>	6
		209	=>	105
		211	=>	8
		212	=>	88
		213	=>	10
		216	=>	58
		217	=>	54
		218	=>	19
		219	=>	123
		220	=>	31
		221	=>	66
		226	=>	49
		231	=>	120
		233	=>	18
		236	=>	112
		237	=>	33
		239	=>	21
		244	=>	86
		249	=>	94
		254	=>	118
		259	=>	34
		261	=>	57
		264	=>	75
		266	=>	35
		268	=>	104
		272	=>	62
		275	=>	51
		277	=>	100
		278	=>	98
		280	=>	36
		282	=>	28
		284	=>	12
		288	=>	87
		291	=>	109
		293	=>	26
		294	=>	122
		296	=>	110
		297	=>	84

Class: public com.volmit.iris.object.atomics.MasterLock	=>	com.volmit.iris.b.a.a
	Source: "MasterLock.java"
	FieldsOf: com.volmit.iris.object.atomics.MasterLock
		private java.util.concurrent.locks.ReentrantLock lock	=>	b
		private com.volmit.iris.util.KMap locks	=>	a
	MethodsOf: com.volmit.iris.object.atomics.MasterLock
		public void <init>() 	SignatureNotChanged
		public void clear()	=>	a()
		public void lock(java.lang.String)	=>	a(java.lang.String)
		public void unlock(java.lang.String)	=>	b(java.lang.String)
	LineNumbersOf: com.volmit.iris.object.atomics.MasterLock
		13	=>	8
		14	=>	12
		15	=>	11
		16	=>	18
		20	=>	2
		21	=>	15
		25	=>	14
		26	=>	6
		28	=>	1
		31	=>	17
		32	=>	4
		33	=>	13
		34	=>	19
		38	=>	10
		39	=>	5
		41	=>	7
		44	=>	16
		45	=>	9
		46	=>	3
		47	=>	20

Class: public com.volmit.iris.tetris.TetrisGenerator	=>	com.volmit.iris.e.b
	Source: "TetrisGenerator.java"
	FieldsOf: com.volmit.iris.tetris.TetrisGenerator
		private int gridSize	=>	a
	MethodsOf: com.volmit.iris.tetris.TetrisGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getCenterFromBlock(int)	=>	f(int)
		public int getCenterFromGrid(int)	=>	c(int)
		public int getGrid(int)	=>	g(int)
		public int getGridSize()	=>	a()
		public int getMaxFromBlock(int)	=>	h(int)
		public int getMaxFromGrid(int)	=>	a(int)
		public int getMinFromBlock(int)	=>	d(int)
		public int getMinFromGrid(int)	=>	e(int)
		public int hashCode() 	SignatureNotChanged
		public void setGridSize(int)	=>	b(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.tetris.TetrisGenerator
		5	=>	8, 9, 10, 11, 12 and 13
		8	=>	2
		12	=>	4
		17	=>	7
		22	=>	6
		27	=>	1
		32	=>	3
		37	=>	14
		42	=>	5

Class: public com.volmit.iris.tetris.TetrisObject	=>	com.volmit.iris.e.a
	Source: "TetrisObject.java"
	FieldsOf: com.volmit.iris.tetris.TetrisObject
		private static int a	=>	c
		private com.volmit.iris.util.KMap holes	=>	a
		private int x	=>	b
		private int y	=>	e
		private int z	=>	d
	MethodsOf: com.volmit.iris.tetris.TetrisObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		public static int a()	=>	e()
		public static void a(int)	=>	d(int)
		public static int b()	=>	a()
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getHoles()	=>	f()
		public int getX()	=>	b()
		public int getY()	=>	d()
		public int getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public void setHoles(com.volmit.iris.util.KMap)	=>	a(com.volmit.iris.f.aR)
		public void setX(int)	=>	b(int)
		public void setY(int)	=>	c(int)
		public void setZ(int)	=>	a(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.tetris.TetrisObject
		8	=>	1, 3, 7, 10, 11, 12, 13 and 14
		11	=>	6
		12	=>	9
		13	=>	2
		14	=>	5
		17	=>	4
		18	=>	15
		19	=>	8

Class: public com.volmit.iris.util.Average	=>	com.volmit.iris.f.aw
	Source: "Average.java"
	FieldsOf: com.volmit.iris.util.Average
		private double average	=>	a
		private boolean brandNew	=>	c
		protected int cursor	=>	e
		private boolean dirty	=>	b
		private double lastSum	=>	d
		protected double[] values	=>	f
	MethodsOf: com.volmit.iris.util.Average
		public void <init>(int) 	SignatureNotChanged
		private void calculateAverage()	=>	d()
		public double getAverage()	=>	c()
		public boolean isDirty()	=>	b()
		public void put(double)	=>	a(double)
		public int size()	=>	a()
	LineNumbersOf: com.volmit.iris.util.Average
		24	=>	27
		25	=>	18
		26	=>	25
		27	=>	4
		28	=>	16
		29	=>	9
		30	=>	14
		31	=>	1
		32	=>	29
		41	=>	13
		43	=>	2
		45	=>	3
		46	=>	28
		47	=>	6
		48	=>	7
		51	=>	22
		52	=>	23
		53	=>	12
		54	=>	10
		55	=>	8
		63	=>	24
		64	=>	15
		65	=>	21
		68	=>	26
		72	=>	20
		73	=>	11
		74	=>	19
		78	=>	17
		83	=>	5

Class: public final enum com.volmit.iris.util.Axis	=>	com.volmit.iris.f.ap
	Source: "Axis.java"
	FieldsOf: com.volmit.iris.util.Axis
		private static final synthetic com.volmit.iris.util.Axis[] $VALUES	=>	c
		public static final enum com.volmit.iris.util.Axis X	NameNotChanged
		public static final enum com.volmit.iris.util.Axis Y	NameNotChanged
		public static final enum com.volmit.iris.util.Axis Z	NameNotChanged
		private int x	=>	b
		private int y	=>	a
		private int z	=>	d
	MethodsOf: com.volmit.iris.util.Axis
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int) 	SignatureNotChanged
		public org.bukkit.util.Vector negative()	=>	a()
		public org.bukkit.util.Vector positive()	=>	b()
		public static com.volmit.iris.util.Axis valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Axis[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Axis
		5	=>	4, 5 and 9
		7	=>	3
		8	=>	10
		9	=>	2
		16	=>	6
		17	=>	7
		18	=>	12
		19	=>	1
		20	=>	11
		24	=>	13
		29	=>	8

Class: public com.volmit.iris.util.BasePerlinNoiseGenerator	=>	com.volmit.iris.f.bc
	Source: "BasePerlinNoiseGenerator.java"
	FieldsOf: com.volmit.iris.util.BasePerlinNoiseGenerator
		protected static final int[][] grad3	=>	e
		private static final com.volmit.iris.util.BasePerlinNoiseGenerator instance	=>	f
	MethodsOf: com.volmit.iris.util.BasePerlinNoiseGenerator
		static void <clinit>() 	SignatureNotChanged
		protected void <init>() 	SignatureNotChanged
		public void <init>(java.util.Random) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		public static com.volmit.iris.util.BasePerlinNoiseGenerator getInstance()	=>	a()
		public static double getNoise(double)	=>	d(double)
		public static double getNoise(double, double)	=>	b(double, double)
		public static double getNoise(double, double, double)	=>	c(double, double, double)
		public static double getNoise(double, double, double, int, double, double)	=>	b(double, double, double, int, double, double)
		public static double getNoise(double, double, int, double, double)	=>	b(double, double, int, double, double)
		public static double getNoise(double, int, double, double)	=>	b(double, int, double, double)
		public double noise(double, double, double)	=>	a(double, double, double)
	LineNumbersOf: com.volmit.iris.util.BasePerlinNoiseGenerator
		13	=>	28
		14	=>	33
		17	=>	44
		18	=>	43
		20	=>	5 and 36
		22	=>	38
		24	=>	52
		34	=>	31
		35	=>	7
		44	=>	37
		45	=>	18
		46	=>	1
		47	=>	3
		49	=>	4 and 42
		51	=>	13
		54	=>	8 and 32
		56	=>	47
		57	=>	35
		59	=>	2
		60	=>	22
		61	=>	46
		63	=>	27
		75	=>	29
		90	=>	51
		107	=>	11
		117	=>	23
		123	=>	40
		124	=>	50
		125	=>	20
		127	=>	17
		128	=>	49
		129	=>	26
		132	=>	6
		133	=>	30
		134	=>	54
		137	=>	9
		138	=>	14
		139	=>	16
		142	=>	25
		143	=>	45
		144	=>	39
		147	=>	21
		148	=>	41
		149	=>	24
		150	=>	10
		151	=>	53
		152	=>	19
		154	=>	12
		173	=>	34
		194	=>	15
		217	=>	48

Class: public com.volmit.iris.util.BiomeDominance	=>	com.volmit.iris.f.a5
	Source: "BiomeDominance.java"
	FieldsOf: com.volmit.iris.util.BiomeDominance
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.BiomeDominance
		public void <init>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.BiomeDominance
		5	=>	1

Class: public com.volmit.iris.util.BiomeMap	=>	com.volmit.iris.f.K
	Source: "BiomeMap.java"
	FieldsOf: com.volmit.iris.util.BiomeMap
		private final com.volmit.iris.object.IrisBiome[] height	=>	a
	MethodsOf: com.volmit.iris.util.BiomeMap
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getBiome(int, int)	=>	a(int, int)
		public void setBiome(int, int, com.volmit.iris.object.IrisBiome)	=>	a(int, int, com.volmit.iris.b.n)
	LineNumbersOf: com.volmit.iris.util.BiomeMap
		9	=>	1
		11	=>	3
		12	=>	5
		16	=>	6
		17	=>	2
		21	=>	4

Class: public com.volmit.iris.util.BiomeRarityCellGenerator	=>	com.volmit.iris.f.aq
	Source: "BiomeRarityCellGenerator.java"
	FieldsOf: com.volmit.iris.util.BiomeRarityCellGenerator
	MethodsOf: com.volmit.iris.util.BiomeRarityCellGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome get(double, double, com.volmit.iris.util.KList)	=>	a(double, double, com.volmit.iris.f.t)
	LineNumbersOf: com.volmit.iris.util.BiomeRarityCellGenerator
		9	=>	5
		10	=>	4
		14	=>	14
		16	=>	23
		19	=>	7
		21	=>	9
		24	=>	26
		25	=>	17
		26	=>	22
		27	=>	15 and 21
		29	=>	1
		31	=>	11
		35	=>	20
		37	=>	2 and 18
		39	=>	13 and 25
		41	=>	12
		43	=>	6
		44	=>	16
		48	=>	10
		53	=>	8
		55	=>	19
		58	=>	3
		60	=>	27
		63	=>	24

Class: public com.volmit.iris.util.BiomeResult	=>	com.volmit.iris.f.a_
	Source: "BiomeResult.java"
	FieldsOf: com.volmit.iris.util.BiomeResult
		private com.volmit.iris.object.IrisBiome biome	=>	a
		private double distance	=>	b
	MethodsOf: com.volmit.iris.util.BiomeResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.object.IrisBiome, double) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getBiome()	=>	a()
		public double getDistance()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public boolean is(com.volmit.iris.util.BiomeResult)	=>	a(com.volmit.iris.f.a_)
		public void setBiome(com.volmit.iris.object.IrisBiome)	=>	a(com.volmit.iris.b.n)
		public void setDistance(double)	=>	a(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.BiomeResult
		7	=>	1, 4, 5, 7, 9, 11, 12 and 13
		13	=>	8
		15	=>	6
		16	=>	2
		17	=>	10
		21	=>	3

Class: public com.volmit.iris.util.BlockDataTools	=>	com.volmit.iris.f.bo
	Source: "BlockDataTools.java"
	FieldsOf: com.volmit.iris.util.BlockDataTools
		private static final com.volmit.iris.util.KMap bdc	=>	b
		private static final com.volmit.iris.util.KList nulls	=>	a
	MethodsOf: com.volmit.iris.util.BlockDataTools
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static org.bukkit.block.data.BlockData getBlockData(java.lang.String)	=>	b(java.lang.String)
		public static org.bukkit.block.data.BlockData parseBlockData(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: com.volmit.iris.util.BlockDataTools
		9	=>	4
		11	=>	16
		12	=>	22
		16	=>	11
		18	=>	23
		23	=>	1
		25	=>	18
		27	=>	21
		28	=>	25
		29	=>	8
		32	=>	10
		34	=>	2
		37	=>	9
		39	=>	6
		42	=>	19
		49	=>	5
		51	=>	14
		53	=>	26
		57	=>	24
		60	=>	13
		62	=>	27
		63	=>	20
		64	=>	12
		68	=>	15
		70	=>	7
		73	=>	17
		78	=>	3

Class: public com.volmit.iris.util.BlockPosition	=>	com.volmit.iris.f.a8
	Source: "BlockPosition.java"
	FieldsOf: com.volmit.iris.util.BlockPosition
		private int x	=>	c
		private int y	=>	b
		private int z	=>	a
	MethodsOf: com.volmit.iris.util.BlockPosition
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getChunkX()	=>	e()
		public int getChunkZ()	=>	c()
		public int getX()	=>	d()
		public int getY()	=>	b()
		public int getZ()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public void setX(int)	=>	b(int)
		public void setY(int)	=>	a(int)
		public void setZ(int)	=>	c(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.BlockPosition
		5	=>	3, 5, 7, 10, 12, 13 and 16
		8	=>	6
		9	=>	1
		10	=>	17
		13	=>	4
		14	=>	9
		15	=>	2
		16	=>	11
		17	=>	8
		21	=>	14
		26	=>	15

Class: public com.volmit.iris.util.Board	=>	com.volmit.iris.f.l
	Source: "Board.java"
	FieldsOf: com.volmit.iris.util.Board
		private static final java.util.function.Function APPLY_COLOR_TRANSLATION	=>	b
		private static final java.lang.String[] CACHED_ENTRIES	=>	c
		private com.volmit.iris.util.BoardSettings boardSettings	=>	e
		private final org.bukkit.scoreboard.Objective objective	=>	g
		private final org.bukkit.entity.Player player	=>	a
		private boolean ready	=>	d
		private final org.bukkit.scoreboard.Team team	=>	f
	MethodsOf: com.volmit.iris.util.Board
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.entity.Player, com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public org.bukkit.scoreboard.Scoreboard getScoreboard()	=>	a()
		private static synthetic java.lang.String lambda$static$0(java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$static$1(int) 	SignatureNotChanged
		public void remove()	=>	b()
		public void removeEntry(java.lang.String)	=>	a(java.lang.String)
		public void resetScoreboard()	=>	c()
		public void setBoardSettings(com.volmit.iris.util.BoardSettings)	=>	a(com.volmit.iris.f.m)
		public void update()	=>	d()
	LineNumbersOf: com.volmit.iris.util.Board
		26	=>	24
		28	=>	6 and 54
		31	=>	10 and 59
		32	=>	32
		37	=>	58
		41	=>	26
		42	=>	9
		43	=>	27
		44	=>	23
		45	=>	44
		46	=>	47
		47	=>	37
		48	=>	57
		49	=>	42
		50	=>	2
		51	=>	50
		52	=>	52
		55	=>	56
		59	=>	38
		60	=>	18
		64	=>	48
		65	=>	11
		69	=>	3
		70	=>	4
		71	=>	28
		75	=>	46
		76	=>	14
		80	=>	41
		82	=>	25
		83	=>	55
		87	=>	17
		88	=>	35
		89	=>	49
		90	=>	15
		92	=>	36
		95	=>	22
		96	=>	53
		99	=>	29 and 33
		100	=>	30
		101	=>	1
		102	=>	16
		104	=>	31
		105	=>	19
		106	=>	13
		109	=>	7
		110	=>	45
		112	=>	39
		114	=>	43
		115	=>	40
		117	=>	21
		121	=>	12
		124	=>	51
		125	=>	34
		128	=>	8
		129	=>	20
		130	=>	5

Class: synthetic com.volmit.iris.util.Board$1	=>	com.volmit.iris.f.l$a
	Source: "Board.java"
	FieldsOf: com.volmit.iris.util.Board$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$ScoreDirection	=>	a
	MethodsOf: com.volmit.iris.util.Board$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Board$1
		112	=>	1

Class: public com.volmit.iris.util.BoardEntry	=>	com.volmit.iris.f.aF
	Source: "BoardEntry.java"
	FieldsOf: com.volmit.iris.util.BoardEntry
		private final java.lang.String prefix	=>	a
		private final java.lang.String suffix	=>	b
	MethodsOf: com.volmit.iris.util.BoardEntry
		private void <init>(java.lang.String, java.lang.String) 	SignatureNotChanged
		public java.lang.String getPrefix()	=>	b()
		public java.lang.String getSuffix()	=>	a()
		public static com.volmit.iris.util.BoardEntry translateToEntry(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: com.volmit.iris.util.BoardEntry
		13	=>	4 and 15
		16	=>	10
		17	=>	5
		18	=>	12
		19	=>	7
		22	=>	17
		23	=>	13
		25	=>	16
		26	=>	9
		28	=>	6
		29	=>	14
		31	=>	3
		32	=>	8
		33	=>	1
		36	=>	11
		37	=>	2

Class: public com.volmit.iris.util.BoardManager	=>	com.volmit.iris.f.a6
	Source: "BoardManager.java"
	FieldsOf: com.volmit.iris.util.BoardManager
		private com.volmit.iris.util.BoardSettings boardSettings	=>	b
		private final org.bukkit.plugin.java.JavaPlugin plugin	=>	a
		private java.util.Map scoreboards	=>	c
		private org.bukkit.scheduler.BukkitTask updateTask	=>	d
	MethodsOf: com.volmit.iris.util.BoardManager
		public void <init>(org.bukkit.plugin.java.JavaPlugin, com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		public java.util.Optional getBoard(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		public java.util.Map getScoreboards()	=>	a()
		public boolean hasBoard(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		private synthetic void lambda$onJoin$1(org.bukkit.event.player.PlayerJoinEvent) 	SignatureNotChanged
		private static synthetic void lambda$setBoardSettings$0(com.volmit.iris.util.BoardSettings, com.volmit.iris.util.Board) 	SignatureNotChanged
		public void onDisable()	=>	b()
		public void onJoin(org.bukkit.event.player.PlayerJoinEvent)	=>	a(org.bukkit.event.player.PlayerJoinEvent)
		public void onQuit(org.bukkit.event.player.PlayerQuitEvent)	=>	a(org.bukkit.event.player.PlayerQuitEvent)
		private void remove(org.bukkit.entity.Player)	=>	d(org.bukkit.entity.Player)
		public void setBoardSettings(com.volmit.iris.util.BoardSettings)	=>	a(com.volmit.iris.f.m)
		private void setup(org.bukkit.entity.Player)	=>	c(org.bukkit.entity.Player)
	LineNumbersOf: com.volmit.iris.util.BoardManager
		29	=>	26
		30	=>	27
		31	=>	31
		32	=>	2
		33	=>	17
		34	=>	22
		35	=>	11
		36	=>	5
		39	=>	23
		40	=>	1 and 19
		41	=>	3
		44	=>	21
		48	=>	18
		52	=>	24
		53	=>	12
		54	=>	16
		56	=>	30
		57	=>	4
		60	=>	33
		61	=>	9
		64	=>	32
		69	=>	13
		70	=>	25
		71	=>	20
		73	=>	7
		74	=>	14
		78	=>	15
		79	=>	8
		82	=>	28
		83	=>	6
		84	=>	10
		85	=>	29

Class: public abstract com.volmit.iris.util.BoardProvider	=>	com.volmit.iris.f.a0
	Source: "BoardProvider.java"
	FieldsOf: com.volmit.iris.util.BoardProvider
	MethodsOf: com.volmit.iris.util.BoardProvider
		public abstract java.util.List getLines(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		public abstract java.lang.String getTitle(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
	LineNumbersOf: com.volmit.iris.util.BoardProvider

Class: public com.volmit.iris.util.BoardSettings	=>	com.volmit.iris.f.m
	Source: "BoardSettings.java"
	FieldsOf: com.volmit.iris.util.BoardSettings
		private com.volmit.iris.util.BoardProvider boardProvider	=>	a
		private com.volmit.iris.util.ScoreDirection scoreDirection	=>	b
	MethodsOf: com.volmit.iris.util.BoardSettings
		void <init>(com.volmit.iris.util.BoardProvider, com.volmit.iris.util.ScoreDirection) 	SignatureNotChanged
		public static com.volmit.iris.util.BoardSettings$BoardSettingsBuilder builder()	=>	c()
		public com.volmit.iris.util.BoardProvider getBoardProvider()	=>	b()
		public com.volmit.iris.util.ScoreDirection getScoreDirection()	=>	a()
	LineNumbersOf: com.volmit.iris.util.BoardSettings
		11	=>	1 and 4
		14	=>	2
		16	=>	3

Class: public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder	=>	com.volmit.iris.f.m$a
	Source: "BoardSettings.java"
	FieldsOf: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder
		private com.volmit.iris.util.BoardProvider boardProvider	=>	b
		private com.volmit.iris.util.ScoreDirection scoreDirection	=>	a
	MethodsOf: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder boardProvider(com.volmit.iris.util.BoardProvider)	=>	a(com.volmit.iris.f.a0)
		public com.volmit.iris.util.BoardSettings build()	=>	a()
		public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder scoreDirection(com.volmit.iris.util.ScoreDirection)	=>	a(com.volmit.iris.f.ax)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder
		11	=>	1, 2, 3, 4 and 5

Class: public com.volmit.iris.util.BoardUpdateTask	=>	com.volmit.iris.f.q
	Source: "BoardUpdateTask.java"
	FieldsOf: com.volmit.iris.util.BoardUpdateTask
		private static final java.util.function.Predicate PLAYER_IS_ONLINE	=>	a
		private final com.volmit.iris.util.BoardManager boardManager	=>	b
	MethodsOf: com.volmit.iris.util.BoardUpdateTask
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.BoardManager) 	SignatureNotChanged
		private static synthetic boolean lambda$run$1(java.util.Map$Entry) 	SignatureNotChanged
		private static synthetic void lambda$run$2(java.util.Map$Entry) 	SignatureNotChanged
		private static synthetic boolean lambda$static$0(java.util.UUID) 	SignatureNotChanged
		public void run() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.BoardUpdateTask
		15	=>	1
		18	=>	4 and 7
		24	=>	3, 5 and 6
		25	=>	2

Class: public abstract com.volmit.iris.util.BorderCheck	=>	com.volmit.iris.f.a2
	Source: "BorderCheck.java"
	FieldsOf: com.volmit.iris.util.BorderCheck
	MethodsOf: com.volmit.iris.util.BorderCheck
		public abstract java.lang.Object get(double, double)	=>	a(double, double)
	LineNumbersOf: com.volmit.iris.util.BorderCheck

Class: public com.volmit.iris.util.Borders	=>	com.volmit.iris.f.ah
	Source: "Borders.java"
	FieldsOf: com.volmit.iris.util.Borders
	MethodsOf: com.volmit.iris.util.Borders
		public void <init>() 	SignatureNotChanged
		public static double getDistanceToBorder(double, double, int, double, double, double, com.volmit.iris.util.BorderCheck)	=>	a(double, double, int, double, double, double, com.volmit.iris.f.a2)
		public static boolean isBorderWithin(double, double, int, double, double, com.volmit.iris.util.BorderCheck)	=>	a(double, double, int, double, double, com.volmit.iris.f.a2)
	LineNumbersOf: com.volmit.iris.util.Borders
		3	=>	14
		7	=>	12
		8	=>	10
		10	=>	5 and 11
		12	=>	1
		13	=>	16
		15	=>	19
		17	=>	9
		21	=>	15
		26	=>	8
		27	=>	13
		29	=>	4 and 17
		31	=>	18
		32	=>	3
		34	=>	7
		36	=>	2
		40	=>	6

Class: public final com.volmit.iris.util.ByteArrayTag	=>	com.volmit.iris.f.az
	Source: "ByteArrayTag.java"
	FieldsOf: com.volmit.iris.util.ByteArrayTag
		private final byte[] value	=>	c
	MethodsOf: com.volmit.iris.util.ByteArrayTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte[]) 	SignatureNotChanged
		public byte[] getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ByteArrayTag
		41	=>	6
		55	=>	4
		56	=>	14
		57	=>	7
		61	=>	17
		66	=>	1
		67	=>	8 and 15
		68	=>	16
		69	=>	11
		70	=>	2
		72	=>	9
		74	=>	5
		75	=>	13
		76	=>	3
		77	=>	12
		79	=>	10

Class: public final com.volmit.iris.util.ByteTag	=>	com.volmit.iris.f.au
	Source: "ByteTag.java"
	FieldsOf: com.volmit.iris.util.ByteTag
		private final byte value	=>	c
	MethodsOf: com.volmit.iris.util.ByteTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte) 	SignatureNotChanged
		public java.lang.Byte getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ByteTag
		41	=>	3
		55	=>	1
		56	=>	4
		57	=>	10
		61	=>	9
		66	=>	7
		67	=>	5
		68	=>	6
		69	=>	2
		71	=>	8

Class: public com.volmit.iris.util.CDou	=>	com.volmit.iris.f.bE
	Source: "CDou.java"
	FieldsOf: com.volmit.iris.util.CDou
		private double max	=>	b
		private double number	=>	a
	MethodsOf: com.volmit.iris.util.CDou
		public void <init>(double) 	SignatureNotChanged
		public com.volmit.iris.util.CDou add(double)	=>	a(double)
		public void circ()	=>	a()
		public double get()	=>	b()
		public com.volmit.iris.util.CDou set(double)	=>	c(double)
		public com.volmit.iris.util.CDou sub(double)	=>	b(double)
	LineNumbersOf: com.volmit.iris.util.CDou
		9	=>	7
		10	=>	15
		11	=>	1
		12	=>	5
		16	=>	6
		17	=>	11
		18	=>	12
		23	=>	10
		24	=>	8
		25	=>	4
		30	=>	3
		31	=>	16
		32	=>	2
		37	=>	18
		42	=>	9
		44	=>	14
		47	=>	17
		48	=>	13

Class: public com.volmit.iris.util.CNG	=>	com.volmit.iris.f.ay
	Source: "CNG.java"
	FieldsOf: com.volmit.iris.util.CNG
		public static final com.volmit.iris.util.NoiseInjector ADD	=>	n
		public static final com.volmit.iris.util.NoiseInjector DST_MOD	=>	g
		public static final com.volmit.iris.util.NoiseInjector DST_POW	=>	a
		public static final com.volmit.iris.util.NoiseInjector DST_SUBTRACT	=>	j
		public static final com.volmit.iris.util.NoiseInjector MAX	=>	f
		public static final com.volmit.iris.util.NoiseInjector MIN	=>	c
		public static final com.volmit.iris.util.NoiseInjector MULTIPLY	=>	v
		public static final com.volmit.iris.util.NoiseInjector SRC_MOD	=>	h
		public static final com.volmit.iris.util.NoiseInjector SRC_POW	=>	r
		public static final com.volmit.iris.util.NoiseInjector SRC_SUBTRACT	=>	z
		private double amp	=>	x
		private com.volmit.iris.util.KList children	=>	k
		public static long creates	=>	l
		private double down	=>	b
		private com.volmit.iris.util.CNG fracture	=>	q
		private double freq	=>	A
		private double fscale	=>	s
		private com.volmit.iris.util.SNG generator	=>	y
		public static long hits	=>	e
		private com.volmit.iris.util.NoiseInjector injector	=>	t
		private int oct	=>	i
		private final double opacity	=>	d
		private double patch	=>	u
		private double power	=>	o
		private com.volmit.iris.util.RNG rng	=>	m
		private double scale	=>	p
		private double up	=>	w
	MethodsOf: com.volmit.iris.util.CNG
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, double, int) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		public com.volmit.iris.util.CNG amp(double)	=>	f(double)
		public com.volmit.iris.util.CNG child(com.volmit.iris.util.CNG)	=>	a(com.volmit.iris.f.ay)
		public com.volmit.iris.util.CNG down(double)	=>	g(double)
		public int fit(int, int, double[])	=>	a(int, int, double[])
		public int fitDouble(double, double, double[])	=>	b(double, double, double[])
		public double fitDoubleD(double, double, double[])	=>	a(double, double, double[])
		public int fitDoubleExponent(double, double, double, double[])	=>	a(double, double, double, double[])
		public com.volmit.iris.util.CNG fractureWith(com.volmit.iris.util.CNG, double)	=>	a(com.volmit.iris.f.ay, double)
		public com.volmit.iris.util.CNG freq(double)	=>	d(double)
		public com.volmit.iris.util.RNG getRNG()	=>	b()
		public com.volmit.iris.util.CNG injectWith(com.volmit.iris.util.NoiseInjector)	=>	a(com.volmit.iris.f.U)
		private static synthetic double[] lambda$static$0(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$1(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$2(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$3(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$4(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$5(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$6(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$7(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$8(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$9(double, double) 	SignatureNotChanged
		public com.volmit.iris.util.RNG nextRNG()	=>	a()
		public double noise(double[])	=>	a(double[])
		public com.volmit.iris.util.CNG patch(double)	=>	c(double)
		public com.volmit.iris.util.CNG pow(double)	=>	a(double)
		public com.volmit.iris.util.CNG scale(double)	=>	b(double)
		public static com.volmit.iris.util.CNG signature(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.f.aV)
		public com.volmit.iris.util.CNG up(double)	=>	e(double)
	LineNumbersOf: com.volmit.iris.util.CNG
		5	=>	61
		6	=>	52
		7	=>	21 and 53
		8	=>	89 and 101
		9	=>	9 and 32
		10	=>	24 and 109
		11	=>	35 and 82
		12	=>	7 and 111
		13	=>	31 and 70
		14	=>	11 and 67
		15	=>	56 and 58
		16	=>	102 and 106
		36	=>	48 and 73
		37	=>	43
		38	=>	16 and 63
		39	=>	91
		40	=>	83 and 93
		41	=>	15
		42	=>	1 and 14
		43	=>	22 and 38
		49	=>	30
		50	=>	29
		54	=>	8
		55	=>	100
		58	=>	10
		59	=>	72
		60	=>	47
		61	=>	28
		62	=>	12
		63	=>	80
		64	=>	55
		65	=>	79
		66	=>	99
		67	=>	42
		68	=>	46
		69	=>	76
		70	=>	85
		71	=>	96
		72	=>	60
		76	=>	45
		78	=>	68
		81	=>	5
		82	=>	49
		88	=>	86
		93	=>	41
		98	=>	39
		99	=>	18
		100	=>	105
		105	=>	98
		106	=>	19
		111	=>	64
		112	=>	2
		117	=>	4
		118	=>	17
		123	=>	74
		124	=>	81
		129	=>	6
		130	=>	95
		135	=>	25
		136	=>	44
		141	=>	54
		142	=>	75
		147	=>	110
		149	=>	84
		152	=>	77
		154	=>	88
		159	=>	59
		161	=>	62
		164	=>	107
		166	=>	66
		171	=>	23
		173	=>	27
		176	=>	78
		178	=>	103
		183	=>	65
		185	=>	104
		188	=>	3
		190	=>	108
		195	=>	50
		196	=>	33
		197	=>	97
		198	=>	69
		199	=>	71
		200	=>	13
		201	=>	34
		202	=>	20
		203	=>	57
		205	=>	90
		208	=>	87
		210	=>	94
		211	=>	37
		212	=>	92
		213	=>	51
		215	=>	36
		220	=>	40
		221	=>	26

Class: public abstract com.volmit.iris.util.Callback	=>	com.volmit.iris.f.I
	Source: "Callback.java"
	FieldsOf: com.volmit.iris.util.Callback
	MethodsOf: com.volmit.iris.util.Callback
		public abstract void run(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Callback

Class: public abstract com.volmit.iris.util.CallbackCV	=>	com.volmit.iris.f.an
	Source: "CallbackCV.java"
	FieldsOf: com.volmit.iris.util.CallbackCV
	MethodsOf: com.volmit.iris.util.CallbackCV
		public abstract void run(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.CallbackCV

Class: public com.volmit.iris.util.CaveResult	=>	com.volmit.iris.f.ac
	Source: "CaveResult.java"
	FieldsOf: com.volmit.iris.util.CaveResult
		private int ceiling	=>	b
		private int floor	=>	a
	MethodsOf: com.volmit.iris.util.CaveResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getCeiling()	=>	a()
		public int getFloor()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setCeiling(int)	=>	b(int)
		public void setFloor(int)	=>	a(int)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.CaveResult
		5	=>	1, 3, 5, 10, 11 and 12
		8	=>	7
		9	=>	8
		12	=>	4
		13	=>	6
		14	=>	9
		15	=>	2

Class: public com.volmit.iris.util.CellGenerator	=>	com.volmit.iris.f.aX
	Source: "CellGenerator.java"
	FieldsOf: com.volmit.iris.util.CellGenerator
		private double cellScale	=>	d
		private com.volmit.iris.util.CNG cng	=>	c
		private com.volmit.iris.util.FastNoise fd	=>	e
		private com.volmit.iris.util.FastNoise fn	=>	b
		private double shuffle	=>	a
	MethodsOf: com.volmit.iris.util.CellGenerator
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getCellScale()	=>	a()
		public float getDistance(double, double)	=>	a(double, double)
		public float getDistance(double, double, double)	=>	a(double, double, double)
		public int getIndex(double, double, int)	=>	b(double, double, int)
		public double getShuffle()	=>	b()
		public float getValue(double, double, int)	=>	a(double, double, int)
		public void setCellScale(double)	=>	b(double)
		public void setShuffle(double)	=>	a(double)
	LineNumbersOf: com.volmit.iris.util.CellGenerator
		16	=>	1
		17	=>	6
		20	=>	24
		21	=>	23
		25	=>	21
		26	=>	18
		27	=>	9
		28	=>	4
		29	=>	5
		30	=>	22
		31	=>	13
		32	=>	16
		33	=>	15
		34	=>	27
		35	=>	2
		36	=>	12
		37	=>	26
		38	=>	19
		39	=>	14
		43	=>	17
		48	=>	10
		53	=>	20
		55	=>	8
		58	=>	25
		63	=>	7
		65	=>	3
		68	=>	11

Class: public com.volmit.iris.util.ChronoLatch	=>	com.volmit.iris.f.aG
	Source: "ChronoLatch.java"
	FieldsOf: com.volmit.iris.util.ChronoLatch
		private long interval	=>	b
		private long since	=>	a
	MethodsOf: com.volmit.iris.util.ChronoLatch
		public void <init>(long) 	SignatureNotChanged
		public void <init>(long, boolean) 	SignatureNotChanged
		public boolean flip()	=>	a()
	LineNumbersOf: com.volmit.iris.util.ChronoLatch
		9	=>	4
		10	=>	9
		11	=>	8
		12	=>	1
		16	=>	6
		17	=>	10
		21	=>	3
		23	=>	2
		24	=>	7
		27	=>	5

Class: public com.volmit.iris.util.ChunkPosition	=>	com.volmit.iris.f.V
	Source: "ChunkPosition.java"
	FieldsOf: com.volmit.iris.util.ChunkPosition
		private int x	=>	a
		private int z	=>	b
	MethodsOf: com.volmit.iris.util.ChunkPosition
		public void <init>(int, int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getX()	=>	a()
		public int getZ()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public void setX(int)	=>	b(int)
		public void setZ(int)	=>	a(int)
	LineNumbersOf: com.volmit.iris.util.ChunkPosition
		11	=>	8
		12	=>	16
		13	=>	1
		14	=>	5
		18	=>	9
		23	=>	2
		24	=>	13
		28	=>	14
		33	=>	3
		34	=>	4
		39	=>	6
		45	=>	7
		47	=>	11
		49	=>	15
		51	=>	17
		53	=>	10
		54	=>	12

Class: public com.volmit.iris.util.Chunker	=>	com.volmit.iris.f.W
	Source: "Chunker.java"
	FieldsOf: com.volmit.iris.util.Chunker
		private java.util.concurrent.ExecutorService executor	=>	a
		private com.volmit.iris.util.KList q	=>	c
		private int threads	=>	b
		private int workload	=>	d
	MethodsOf: com.volmit.iris.util.Chunker
		public void <init>(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void execute(java.util.function.Consumer, com.volmit.iris.util.Callback, int)	=>	a(java.util.function.Consumer, com.volmit.iris.f.I, int)
		private synthetic void lambda$execute$6(int, int, java.util.function.Consumer, com.volmit.iris.util.Contained, com.volmit.iris.util.Callback, com.volmit.iris.util.ChronoLatch, int) 	SignatureNotChanged
		private synthetic void lambda$execute$7() 	SignatureNotChanged
		private static synthetic java.lang.Boolean lambda$null$0(int, java.lang.Integer) 	SignatureNotChanged
		private synthetic void lambda$null$1(java.util.function.Consumer, java.lang.Integer) 	SignatureNotChanged
		private synthetic void lambda$null$2(java.util.function.Consumer, java.lang.Integer) 	SignatureNotChanged
		private synthetic java.lang.Integer lambda$null$3(java.lang.Integer) 	SignatureNotChanged
		private static synthetic java.lang.Boolean lambda$null$4(com.volmit.iris.util.Callback, com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		private static synthetic void lambda$null$5(com.volmit.iris.util.Callback, com.volmit.iris.util.Contained, int) 	SignatureNotChanged
		public com.volmit.iris.util.Chunker threads(int)	=>	a(int)
		public com.volmit.iris.util.Chunker workload(int)	=>	b(int)
	LineNumbersOf: com.volmit.iris.util.Chunker
		16	=>	8
		17	=>	4
		18	=>	2
		22	=>	11
		23	=>	12
		28	=>	3
		29	=>	31
		34	=>	28
		35	=>	18
		36	=>	13
		37	=>	6
		38	=>	10
		40	=>	19
		42	=>	22
		43	=>	9
		44	=>	5
		46	=>	24
		48	=>	7, 21, 23 and 25
		49	=>	26 and 27
		50	=>	17, 20 and 29
		51	=>	1
		52	=>	16
		54	=>	14
		55	=>	15 and 30
		56	=>	32

Class: public final com.volmit.iris.util.CompoundTag	=>	com.volmit.iris.f.a9
	Source: "CompoundTag.java"
	FieldsOf: com.volmit.iris.util.CompoundTag
		private final java.util.Map value	=>	c
	MethodsOf: com.volmit.iris.util.CompoundTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.util.Map) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.util.Map getValue()	=>	d()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.CompoundTag
		44	=>	12
		58	=>	1
		59	=>	8
		60	=>	3
		64	=>	11
		69	=>	2
		70	=>	16
		71	=>	14
		72	=>	5
		74	=>	7
		75	=>	10
		76	=>	15
		77	=>	6
		78	=>	4
		79	=>	13
		80	=>	9

Class: public abstract com.volmit.iris.util.Consumer2	=>	com.volmit.iris.f.Y
	Source: "Consumer2.java"
	FieldsOf: com.volmit.iris.util.Consumer2
	MethodsOf: com.volmit.iris.util.Consumer2
		public abstract void accept(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Consumer2

Class: public abstract com.volmit.iris.util.Consumer3	=>	com.volmit.iris.f.am
	Source: "Consumer3.java"
	FieldsOf: com.volmit.iris.util.Consumer3
	MethodsOf: com.volmit.iris.util.Consumer3
		public abstract void accept(java.lang.Object, java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Consumer3

Class: public com.volmit.iris.util.Contained	=>	com.volmit.iris.f.aP
	Source: "Contained.java"
	FieldsOf: com.volmit.iris.util.Contained
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.Contained
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object get()	=>	a()
		public void mod(java.util.function.Function)	=>	a(java.util.function.Function)
		public void set(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Contained
		10	=>	3
		11	=>	5
		12	=>	2
		16	=>	9
		17	=>	8
		21	=>	6
		22	=>	10
		26	=>	4
		31	=>	1
		32	=>	7

Class: public com.volmit.iris.util.Cuboid	=>	com.volmit.iris.f.h
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid
		protected final java.lang.String worldName	=>	b
		protected int x1	=>	c
		protected int x2	=>	a
		protected int y1	=>	g
		protected int y2	=>	e
		protected int z1	=>	d
		protected int z2	=>	f
	MethodsOf: com.volmit.iris.util.Cuboid
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int, int, int) 	SignatureNotChanged
		public void <init>(java.util.Map) 	SignatureNotChanged
		public void <init>(org.bukkit.Location) 	SignatureNotChanged
		public void <init>(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public void <init>(org.bukkit.World, int, int, int, int, int, int) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public byte averageLightLevel()	=>	l()
		public com.volmit.iris.util.Cuboid clone()	=>	p()
		public bridge synthetic java.lang.Object clone() 	SignatureNotChanged
		public boolean contains(int, int, int)	=>	a(int, int, int)
		public boolean contains(org.bukkit.Location)	=>	a(org.bukkit.Location)
		public boolean contains(org.bukkit.block.Block)	=>	a(org.bukkit.block.Block)
		public boolean containsOnly(org.bukkit.Material)	=>	a(org.bukkit.Material)
		public com.volmit.iris.util.Cuboid contract()	=>	n()
		public com.volmit.iris.util.Cuboid contract(com.volmit.iris.util.Cuboid$CuboidDirection)	=>	a(com.volmit.iris.f.h$c)
		public org.bukkit.block.Block[] corners()	=>	j()
		public com.volmit.iris.util.Cuboid expand(com.volmit.iris.util.Cuboid$CuboidDirection, int)	=>	a(com.volmit.iris.f.h$c, int)
		public com.volmit.iris.util.Cuboid expand(com.volmit.iris.util.Direction, int)	=>	a(com.volmit.iris.f.ab, int)
		public com.volmit.iris.util.Cuboid flatten(int)	=>	a(int)
		public com.volmit.iris.util.Cuboid getBoundingCuboid(com.volmit.iris.util.Cuboid)	=>	a(com.volmit.iris.f.h)
		public org.bukkit.Location getCenter()	=>	m()
		public java.util.List getChunks()	=>	e()
		public com.volmit.iris.util.Dimension getDimension()	=>	b()
		public com.volmit.iris.util.KList getEntities()	=>	q()
		public com.volmit.iris.util.Cuboid getFace(com.volmit.iris.util.Cuboid$CuboidDirection)	=>	b(com.volmit.iris.f.h$c)
		public org.bukkit.Location getLowerNE()	=>	u()
		public int getLowerX()	=>	t()
		public int getLowerY()	=>	d()
		public int getLowerZ()	=>	g()
		public org.bukkit.block.Block getRelativeBlock(int, int, int)	=>	b(int, int, int)
		public org.bukkit.block.Block getRelativeBlock(org.bukkit.World, int, int, int)	=>	a(org.bukkit.World, int, int, int)
		public int getSizeX()	=>	s()
		public int getSizeY()	=>	c()
		public int getSizeZ()	=>	o()
		public org.bukkit.Location getUpperSW()	=>	h()
		public int getUpperX()	=>	r()
		public int getUpperY()	=>	a()
		public int getUpperZ()	=>	k()
		public org.bukkit.World getWorld()	=>	i()
		public com.volmit.iris.util.Cuboid inset(com.volmit.iris.util.Cuboid$CuboidDirection, int)	=>	c(com.volmit.iris.f.h$c, int)
		public java.util.Iterator iterator() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid outset(com.volmit.iris.util.Cuboid$CuboidDirection, int)	=>	d(com.volmit.iris.f.h$c, int)
		public java.util.Map serialize() 	SignatureNotChanged
		public void set(org.bukkit.Location, org.bukkit.Location)	=>	a(org.bukkit.Location, org.bukkit.Location)
		public com.volmit.iris.util.Cuboid shift(com.volmit.iris.util.Cuboid$CuboidDirection, int)	=>	b(com.volmit.iris.f.h$c, int)
		public java.lang.String toString() 	SignatureNotChanged
		public int volume()	=>	f()
	LineNumbersOf: com.volmit.iris.util.Cuboid
		23	=>	165
		39	=>	139
		40	=>	186
		42	=>	13
		45	=>	38
		46	=>	60
		47	=>	32
		48	=>	182
		49	=>	88
		50	=>	29
		51	=>	77
		52	=>	42
		56	=>	46
		58	=>	85
		60	=>	23 and 41
		62	=>	104
		64	=>	86
		67	=>	177
		69	=>	183
		82	=>	73
		83	=>	159
		84	=>	174
		85	=>	84
		86	=>	184
		87	=>	87
		88	=>	145
		98	=>	76
		99	=>	198
		109	=>	121
		110	=>	138
		131	=>	44
		132	=>	140
		133	=>	189
		134	=>	154
		135	=>	191
		136	=>	113
		137	=>	14
		138	=>	94
		139	=>	68
		160	=>	9
		161	=>	67
		162	=>	10
		163	=>	151
		164	=>	171
		165	=>	137
		166	=>	22
		167	=>	124
		168	=>	110
		171	=>	156
		172	=>	105
		173	=>	43
		174	=>	131
		175	=>	66
		176	=>	178
		177	=>	181
		178	=>	5
		179	=>	62
		184	=>	70
		185	=>	179
		186	=>	45
		187	=>	37
		188	=>	114
		189	=>	126
		190	=>	125
		191	=>	78
		192	=>	128
		197	=>	4
		208	=>	195
		219	=>	97
		229	=>	119
		230	=>	16
		231	=>	48
		232	=>	109
		244	=>	160
		245	=>	81
		247	=>	74
		249	=>	19
		259	=>	40
		269	=>	146
		279	=>	192
		289	=>	95
		299	=>	15
		309	=>	167
		319	=>	2
		329	=>	53
		339	=>	149
		349	=>	26
		359	=>	101
		360	=>	75
		361	=>	92
		362	=>	49
		363	=>	33
		364	=>	28
		365	=>	55
		366	=>	163
		367	=>	158
		368	=>	180
		369	=>	170
		385	=>	142
		388	=>	157
		390	=>	31
		392	=>	11
		394	=>	36
		396	=>	112
		398	=>	93
		400	=>	21
		406	=>	133
		407	=>	79
		408	=>	147
		409	=>	162
		410	=>	52
		411	=>	27
		412	=>	107
		426	=>	152
		442	=>	71
		445	=>	117
		446	=>	122
		448	=>	161
		449	=>	135
		451	=>	8
		452	=>	185
		454	=>	187
		456	=>	91
		472	=>	35
		488	=>	150
		500	=>	172
		512	=>	1
		522	=>	153
		533	=>	103
		534	=>	18
		535	=>	166
		537	=>	134
		539	=>	3
		540	=>	98
		542	=>	118
		543	=>	127
		554	=>	116
		568	=>	175
		569	=>	17
		572	=>	169
		574	=>	57
		576	=>	90
		578	=>	190
		580	=>	47
		582	=>	24
		584	=>	173
		586	=>	12
		588	=>	51
		590	=>	193
		592	=>	89
		594	=>	59
		596	=>	132
		598	=>	111
		600	=>	197
		602	=>	25
		604	=>	80
		606	=>	143
		608	=>	83
		622	=>	56
		625	=>	144
		627	=>	64
		629	=>	6
		631	=>	136
		633	=>	39
		635	=>	50
		637	=>	30
		650	=>	99
		652	=>	69
		654	=>	120
		656	=>	65
		657	=>	129
		669	=>	102
		671	=>	72
		674	=>	194
		675	=>	123
		676	=>	82
		677	=>	54
		678	=>	106
		679	=>	63
		681	=>	61
		697	=>	7
		717	=>	164
		728	=>	155
		730	=>	196
		731	=>	100
		732	=>	130
		733	=>	168
		734	=>	148
		735	=>	115 and 141
		737	=>	20 and 108
		739	=>	96
		742	=>	188
		767	=>	58
		778	=>	176
		789	=>	34

Class: synthetic com.volmit.iris.util.Cuboid$1	=>	com.volmit.iris.f.h$b
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$Cuboid$CuboidDirection	=>	a
	MethodsOf: com.volmit.iris.util.Cuboid$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Cuboid$1
		385	=>	1

Class: public final enum com.volmit.iris.util.Cuboid$CuboidDirection	=>	com.volmit.iris.f.h$c
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$CuboidDirection
		private static final synthetic com.volmit.iris.util.Cuboid$CuboidDirection[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Both	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Down	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection East	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Horizontal	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection North	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection South	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Unknown	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Up	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Vertical	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection West	NameNotChanged
	MethodsOf: com.volmit.iris.util.Cuboid$CuboidDirection
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid$CuboidDirection opposite()	=>	a()
		public static com.volmit.iris.util.Cuboid$CuboidDirection valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Cuboid$CuboidDirection[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Cuboid$CuboidDirection
		840	=>	1, 2, 5 and 15
		843	=>	10
		844	=>	3
		845	=>	9
		846	=>	25
		847	=>	18
		848	=>	17
		849	=>	22
		850	=>	7
		851	=>	13
		852	=>	19
		856	=>	6
		859	=>	24
		861	=>	16
		863	=>	11
		865	=>	8
		867	=>	21
		869	=>	4
		871	=>	12
		873	=>	14
		875	=>	20
		877	=>	23

Class: public com.volmit.iris.util.Cuboid$CuboidIterator	=>	com.volmit.iris.f.h$a
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$CuboidIterator
		private int baseX	=>	c
		private int baseY	=>	i
		private int baseZ	=>	d
		private int sizeX	=>	g
		private int sizeY	=>	e
		private int sizeZ	=>	j
		final synthetic com.volmit.iris.util.Cuboid this$0	NameNotChanged
		private org.bukkit.World w	=>	b
		private int x	=>	f
		private int y	=>	a
		private int z	=>	h
	MethodsOf: com.volmit.iris.util.Cuboid$CuboidIterator
		public void <init>(com.volmit.iris.util.Cuboid, org.bukkit.World, int, int, int, int, int, int) 	SignatureNotChanged
		public boolean hasNext() 	SignatureNotChanged
		public bridge synthetic java.lang.Object next() 	SignatureNotChanged
		public org.bukkit.block.Block next()	=>	a()
		public void remove() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Cuboid$CuboidIterator
		792	=>	15
		800	=>	5
		801	=>	18
		802	=>	1
		803	=>	9
		804	=>	8
		805	=>	19
		806	=>	10
		807	=>	6
		808	=>	17
		809	=>	4
		814	=>	14
		820	=>	12
		821	=>	2
		823	=>	16
		824	=>	3
		826	=>	11
		827	=>	13
		830	=>	7
		837	=>	20

Class: public com.volmit.iris.util.CuboidException	=>	com.volmit.iris.f.a1
	Source: "CuboidException.java"
	FieldsOf: com.volmit.iris.util.CuboidException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.CuboidException
		public void <init>(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.CuboidException
		12	=>	1
		13	=>	2

Class: public abstract com.volmit.iris.util.DOP	=>	com.volmit.iris.f.i
	Source: "DOP.java"
	FieldsOf: com.volmit.iris.util.DOP
		private java.lang.String type	=>	a
	MethodsOf: com.volmit.iris.util.DOP
		public void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String getType()	=>	a()
		public abstract org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.DOP
		10	=>	3
		11	=>	4
		12	=>	1
		18	=>	2

Class: public abstract annotation com.volmit.iris.util.Desc	=>	com.volmit.iris.f.j
	Source: "Desc.java"
	FieldsOf: com.volmit.iris.util.Desc
	MethodsOf: com.volmit.iris.util.Desc
		public abstract java.lang.String value() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Desc

Class: public com.volmit.iris.util.Dimension	=>	com.volmit.iris.f.r
	Source: "Dimension.java"
	FieldsOf: com.volmit.iris.util.Dimension
		private final int depth	=>	c
		private final int height	=>	a
		private final int width	=>	b
	MethodsOf: com.volmit.iris.util.Dimension
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		public int getDepth()	=>	b()
		public int getHeight()	=>	c()
		public com.volmit.iris.util.DimensionFace getPane()	=>	d()
		public int getWidth()	=>	a()
	LineNumbersOf: com.volmit.iris.util.Dimension
		25	=>	11
		26	=>	1
		27	=>	12
		28	=>	10
		29	=>	5
		40	=>	6
		41	=>	2
		42	=>	20
		43	=>	7
		44	=>	18
		54	=>	14
		56	=>	4
		59	=>	3
		61	=>	17
		64	=>	9
		66	=>	19
		69	=>	15
		74	=>	16
		79	=>	13
		84	=>	8

Class: public final enum com.volmit.iris.util.DimensionFace	=>	com.volmit.iris.f.aH
	Source: "DimensionFace.java"
	FieldsOf: com.volmit.iris.util.DimensionFace
		private static final synthetic com.volmit.iris.util.DimensionFace[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.DimensionFace X	NameNotChanged
		public static final enum com.volmit.iris.util.DimensionFace Y	NameNotChanged
		public static final enum com.volmit.iris.util.DimensionFace Z	NameNotChanged
	MethodsOf: com.volmit.iris.util.DimensionFace
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.DimensionFace valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.DimensionFace[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.DimensionFace
		8	=>	2, 3, 5 and 7
		13	=>	1
		18	=>	4
		23	=>	6

Class: public final enum com.volmit.iris.util.Direction	=>	com.volmit.iris.f.ab
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction
		private static final synthetic com.volmit.iris.util.Direction[] $VALUES	=>	d
		public static final enum com.volmit.iris.util.Direction D	NameNotChanged
		public static final enum com.volmit.iris.util.Direction E	NameNotChanged
		public static final enum com.volmit.iris.util.Direction N	NameNotChanged
		public static final enum com.volmit.iris.util.Direction S	NameNotChanged
		public static final enum com.volmit.iris.util.Direction U	NameNotChanged
		public static final enum com.volmit.iris.util.Direction W	NameNotChanged
		private com.volmit.iris.util.Cuboid$CuboidDirection f	=>	b
		private static com.volmit.iris.util.KMap permute	=>	e
		private int x	=>	f
		private int y	=>	a
		private int z	=>	c
	MethodsOf: com.volmit.iris.util.Direction
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int, com.volmit.iris.util.Cuboid$CuboidDirection) 	SignatureNotChanged
		public org.bukkit.util.Vector angle(org.bukkit.util.Vector, com.volmit.iris.util.Direction)	=>	a(org.bukkit.util.Vector, com.volmit.iris.f.ab)
		public byte byteValue()	=>	h()
		public static void calculatePermutations()	=>	m()
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector)	=>	b(org.bukkit.util.Vector)
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector, com.volmit.iris.util.Direction[])	=>	a(org.bukkit.util.Vector, com.volmit.iris.f.ab[])
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector, com.volmit.iris.util.KList)	=>	a(org.bukkit.util.Vector, com.volmit.iris.f.t)
		public com.volmit.iris.util.Cuboid$CuboidDirection f()	=>	i()
		public static com.volmit.iris.util.Direction fromByte(byte)	=>	a(byte)
		public org.bukkit.Axis getAxis()	=>	e()
		public static com.volmit.iris.util.Direction getDirection(org.bukkit.block.BlockFace)	=>	a(org.bukkit.block.BlockFace)
		public static com.volmit.iris.util.Direction getDirection(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
		public org.bukkit.block.BlockFace getFace()	=>	g()
		public boolean isCrooked(com.volmit.iris.util.Direction)	=>	a(com.volmit.iris.f.ab)
		public boolean isVertical()	=>	f()
		public static com.volmit.iris.util.KList news()	=>	l()
		public com.volmit.iris.util.Direction reverse()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
		public org.bukkit.util.Vector toVector()	=>	b()
		public static com.volmit.iris.util.KList udnews()	=>	d()
		public static com.volmit.iris.util.Direction valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Direction[] values() 	SignatureNotChanged
		public int x()	=>	k()
		public int y()	=>	c()
		public int z()	=>	j()
	LineNumbersOf: com.volmit.iris.util.Direction
		15	=>	9, 105 and 123
		17	=>	22
		18	=>	169
		19	=>	109
		20	=>	83
		21	=>	94
		22	=>	60
		24	=>	85
		33	=>	75
		36	=>	59
		38	=>	135
		40	=>	15
		42	=>	173
		44	=>	140
		46	=>	28
		48	=>	156
		50	=>	3
		52	=>	70
		54	=>	139
		56	=>	57
		58	=>	5
		60	=>	31
		62	=>	69
		64	=>	18
		66	=>	27
		68	=>	159
		70	=>	166
		72	=>	150
		75	=>	146
		81	=>	42
		84	=>	46
		86	=>	72
		88	=>	118
		90	=>	71
		92	=>	95
		94	=>	157
		97	=>	122
		102	=>	97
		107	=>	99
		108	=>	153
		110	=>	62 and 145
		112	=>	50
		113	=>	54
		115	=>	44
		117	=>	12
		118	=>	115
		122	=>	81
		127	=>	104
		128	=>	147
		130	=>	125 and 127
		132	=>	141
		133	=>	79
		135	=>	108
		137	=>	129
		138	=>	19
		142	=>	96
		147	=>	134
		148	=>	92
		150	=>	137
		152	=>	38
		153	=>	106
		155	=>	6
		157	=>	121
		158	=>	172
		160	=>	131
		162	=>	136
		167	=>	114
		172	=>	2
		174	=>	87
		177	=>	142
		179	=>	158
		182	=>	117
		186	=>	68
		187	=>	110
		188	=>	149
		189	=>	120
		190	=>	88
		191	=>	63
		195	=>	130
		197	=>	102
		199	=>	53
		201	=>	171
		203	=>	17
		205	=>	162
		210	=>	65
		213	=>	33
		215	=>	103
		217	=>	138
		219	=>	48
		221	=>	30
		223	=>	73
		228	=>	14
		233	=>	43
		238	=>	76
		243	=>	29
		248	=>	77
		253	=>	21
		258	=>	41
		260	=>	119
		262	=>	16
		264	=>	82
		266	=>	66
		268	=>	32
		273	=>	84
		287	=>	64
		289	=>	151
		292	=>	144
		294	=>	52
		297	=>	26
		299	=>	93
		302	=>	35
		304	=>	34
		307	=>	163
		309	=>	98
		312	=>	133
		314	=>	148
		319	=>	160
		330	=>	165
		333	=>	61
		335	=>	10
		337	=>	58
		339	=>	36
		341	=>	78
		343	=>	90
		348	=>	161
		353	=>	51
		355	=>	39
		358	=>	24
		360	=>	164
		362	=>	11
		364	=>	116
		366	=>	45
		368	=>	67
		378	=>	20
		380	=>	80
		382	=>	132
		394	=>	55
		405	=>	13
		407	=>	8
		417	=>	107
		419	=>	143
		429	=>	112
		431	=>	7
		441	=>	86
		443	=>	49
		453	=>	40
		455	=>	111
		465	=>	154
		467	=>	37
		479	=>	128
		488	=>	168
		489	=>	124
		490	=>	56
		494	=>	152
		497	=>	25
		499	=>	4
		501	=>	101
		503	=>	126
		505	=>	100
		507	=>	74
		510	=>	170
		515	=>	23
		518	=>	1
		520	=>	155
		522	=>	89
		524	=>	47
		526	=>	91
		528	=>	113
		531	=>	167

Class: final com.volmit.iris.util.Direction$1	=>	com.volmit.iris.f.ab$k
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$1
	MethodsOf: com.volmit.iris.util.Direction$1
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$1
		369	=>	1
		373	=>	2

Class: final com.volmit.iris.util.Direction$10	=>	com.volmit.iris.f.ab$b
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$10
	MethodsOf: com.volmit.iris.util.Direction$10
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$10
		480	=>	2
		484	=>	1

Class: synthetic com.volmit.iris.util.Direction$11	=>	com.volmit.iris.f.ab$a
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$11
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$Direction	=>	b
		static final synthetic int[] $SwitchMap$org$bukkit$block$BlockFace	=>	a
	MethodsOf: com.volmit.iris.util.Direction$11
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Direction$11
		33	=>	2
		81	=>	1

Class: final com.volmit.iris.util.Direction$2	=>	com.volmit.iris.f.ab$e
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$2
	MethodsOf: com.volmit.iris.util.Direction$2
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$2
		383	=>	1
		387	=>	2

Class: final com.volmit.iris.util.Direction$3	=>	com.volmit.iris.f.ab$f
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$3
	MethodsOf: com.volmit.iris.util.Direction$3
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$3
		395	=>	2
		399	=>	1

Class: final com.volmit.iris.util.Direction$4	=>	com.volmit.iris.f.ab$c
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$4
	MethodsOf: com.volmit.iris.util.Direction$4
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$4
		408	=>	1
		412	=>	2

Class: final com.volmit.iris.util.Direction$5	=>	com.volmit.iris.f.ab$d
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$5
	MethodsOf: com.volmit.iris.util.Direction$5
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$5
		420	=>	2
		424	=>	1

Class: final com.volmit.iris.util.Direction$6	=>	com.volmit.iris.f.ab$i
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$6
	MethodsOf: com.volmit.iris.util.Direction$6
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$6
		432	=>	2
		436	=>	1

Class: final com.volmit.iris.util.Direction$7	=>	com.volmit.iris.f.ab$j
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$7
	MethodsOf: com.volmit.iris.util.Direction$7
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$7
		444	=>	2
		448	=>	1

Class: final com.volmit.iris.util.Direction$8	=>	com.volmit.iris.f.ab$g
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$8
	MethodsOf: com.volmit.iris.util.Direction$8
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$8
		456	=>	1
		460	=>	2

Class: final com.volmit.iris.util.Direction$9	=>	com.volmit.iris.f.ab$h
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$9
	MethodsOf: com.volmit.iris.util.Direction$9
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.Direction$9
		468	=>	1
		472	=>	2

Class: public abstract annotation com.volmit.iris.util.DontObfuscate	=>	com.volmit.iris.f.at
	Source: "DontObfuscate.java"
	FieldsOf: com.volmit.iris.util.DontObfuscate
	MethodsOf: com.volmit.iris.util.DontObfuscate
	LineNumbersOf: com.volmit.iris.util.DontObfuscate

Class: public com.volmit.iris.util.DoubleArrayUtils	=>	com.volmit.iris.f.E
	Source: "DoubleArrayUtils.java"
	FieldsOf: com.volmit.iris.util.DoubleArrayUtils
	MethodsOf: com.volmit.iris.util.DoubleArrayUtils
		public void <init>() 	SignatureNotChanged
		public static void fill(double[], double)	=>	a(double[], double)
		public static void shiftRight(double[], double)	=>	b(double[], double)
		public static void wrapRight(double[])	=>	a(double[])
	LineNumbersOf: com.volmit.iris.util.DoubleArrayUtils
		4	=>	1
		8	=>	2 and 5
		10	=>	4
		13	=>	11
		14	=>	7
		18	=>	13
		19	=>	9
		20	=>	8
		24	=>	6 and 12
		26	=>	3
		28	=>	10

Class: public final com.volmit.iris.util.DoubleTag	=>	com.volmit.iris.f.a7
	Source: "DoubleTag.java"
	FieldsOf: com.volmit.iris.util.DoubleTag
		private final double value	=>	c
	MethodsOf: com.volmit.iris.util.DoubleTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, double) 	SignatureNotChanged
		public java.lang.Double getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.DoubleTag
		41	=>	8
		55	=>	2
		56	=>	9
		57	=>	7
		61	=>	10
		66	=>	1
		67	=>	4
		68	=>	5
		69	=>	3
		71	=>	6

Class: public final com.volmit.iris.util.EndTag	=>	com.volmit.iris.f.aU
	Source: "EndTag.java"
	FieldsOf: com.volmit.iris.util.EndTag
	MethodsOf: com.volmit.iris.util.EndTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.EndTag
		47	=>	3
		48	=>	4
		52	=>	2
		57	=>	1

Class: public com.volmit.iris.util.FastNoise	=>	com.volmit.iris.f.O
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise
		private static final com.volmit.iris.util.FastNoise$Float2[] CELL_2D	=>	d
		private static final com.volmit.iris.util.FastNoise$Float3[] CELL_3D	=>	f
		private static final com.volmit.iris.util.FastNoise$Float2[] GRAD_2D	=>	n
		private static final com.volmit.iris.util.FastNoise$Float3[] GRAD_3D	=>	p
		private static final byte[] SIMPLEX_4D	=>	j
		private com.volmit.iris.util.FastNoise$CellularDistanceFunction m_cellularDistanceFunction	=>	a
		private com.volmit.iris.util.FastNoise m_cellularNoiseLookup	=>	g
		private com.volmit.iris.util.FastNoise$CellularReturnType m_cellularReturnType	=>	h
		private float m_fractalBounding	=>	b
		private com.volmit.iris.util.FastNoise$FractalType m_fractalType	=>	c
		private float m_frequency	=>	q
		private float m_gain	=>	r
		private float m_gradientPerturbAmp	=>	k
		private com.volmit.iris.util.FastNoise$Interp m_interp	=>	m
		private float m_lacunarity	=>	i
		private com.volmit.iris.util.FastNoise$NoiseType m_noiseType	=>	o
		private int m_octaves	=>	l
		private int m_seed	=>	e
	MethodsOf: com.volmit.iris.util.FastNoise
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		private void CalculateFractalBounding()	=>	a()
		private static float CubicLerp(float, float, float, float, float)	=>	a(float, float, float, float, float)
		private static int FastFloor(float)	=>	f(float)
		private static int FastRound(float)	=>	d(float)
		private int FloatCast2Int(float)	=>	c(float)
		public float GetCellular(float, float)	=>	i(float, float)
		public float GetCellular(float, float, float)	=>	z(float, float, float)
		public float GetCubic(float, float)	=>	f(float, float)
		public float GetCubic(float, float, float)	=>	l(float, float, float)
		public float GetCubicFractal(float, float)	=>	m(float, float)
		public float GetCubicFractal(float, float, float)	=>	d(float, float, float)
		public static float GetDecimalType()	=>	c()
		public float GetNoise(float, float)	=>	e(float, float)
		public float GetNoise(float, float, float)	=>	a(float, float, float)
		public float GetPerlin(float, float)	=>	p(float, float)
		public float GetPerlin(float, float, float)	=>	w(float, float, float)
		public float GetPerlinFractal(float, float)	=>	h(float, float)
		public float GetPerlinFractal(float, float, float)	=>	f(float, float, float)
		public int GetSeed()	=>	b()
		public float GetSimplex(float, float)	=>	g(float, float)
		public float GetSimplex(float, float, float)	=>	m(float, float, float)
		public float GetSimplex(float, float, float, float)	=>	b(float, float, float, float)
		public float GetSimplexFractal(float, float)	=>	r(float, float)
		public float GetSimplexFractal(float, float, float)	=>	o(float, float, float)
		public float GetValue(float, float)	=>	k(float, float)
		public float GetValue(float, float, float)	=>	s(float, float, float)
		public float GetValueFractal(float, float)	=>	w(float, float)
		public float GetValueFractal(float, float, float)	=>	n(float, float, float)
		public float GetWhiteNoise(float, float)	=>	n(float, float)
		public float GetWhiteNoise(float, float, float)	=>	i(float, float, float)
		public float GetWhiteNoise(float, float, float, float)	=>	a(float, float, float, float)
		public float GetWhiteNoiseInt(int, int)	=>	a(int, int)
		public float GetWhiteNoiseInt(int, int, int)	=>	b(int, int, int)
		public float GetWhiteNoiseInt(int, int, int, int)	=>	c(int, int, int, int)
		private static float GradCoord2D(int, int, int, float, float)	=>	a(int, int, int, float, float)
		private static float GradCoord3D(int, int, int, int, float, float, float)	=>	a(int, int, int, int, float, float, float)
		private static float GradCoord4D(int, int, int, int, int, float, float, float, float)	=>	a(int, int, int, int, int, float, float, float, float)
		public void GradientPerturb(javax.vecmath.Vector2f)	=>	a(a.a.S)
		public void GradientPerturb(javax.vecmath.Vector3f)	=>	b(a.a.H)
		public void GradientPerturbFractal(javax.vecmath.Vector2f)	=>	b(a.a.S)
		public void GradientPerturbFractal(javax.vecmath.Vector3f)	=>	a(a.a.H)
		private static int Hash2D(int, int, int)	=>	a(int, int, int)
		private static int Hash3D(int, int, int, int)	=>	b(int, int, int, int)
		public static int Hash4D(int, int, int, int, int)	=>	b(int, int, int, int, int)
		private static float InterpHermiteFunc(float)	=>	i(float)
		private static float InterpQuinticFunc(float)	=>	h(float)
		private static float Lerp(float, float, float)	=>	g(float, float, float)
		public void SetCellularDistanceFunction(com.volmit.iris.util.FastNoise$CellularDistanceFunction)	=>	a(com.volmit.iris.f.O$a)
		public void SetCellularNoiseLookup(com.volmit.iris.util.FastNoise)	=>	a(com.volmit.iris.f.O)
		public void SetCellularReturnType(com.volmit.iris.util.FastNoise$CellularReturnType)	=>	a(com.volmit.iris.f.O$b)
		public void SetFractalGain(float)	=>	a(float)
		public void SetFractalLacunarity(float)	=>	e(float)
		public void SetFractalOctaves(int)	=>	b(int)
		public void SetFractalType(com.volmit.iris.util.FastNoise$FractalType)	=>	a(com.volmit.iris.f.O$h)
		public void SetFrequency(float)	=>	g(float)
		public void SetGradientPerturbAmp(float)	=>	b(float)
		public void SetInterp(com.volmit.iris.util.FastNoise$Interp)	=>	a(com.volmit.iris.f.O$e)
		public void SetNoiseType(com.volmit.iris.util.FastNoise$NoiseType)	=>	a(com.volmit.iris.f.O$c)
		public void SetSeed(int)	=>	a(int)
		private float SingleCellular(float, float)	=>	u(float, float)
		private float SingleCellular(float, float, float)	=>	e(float, float, float)
		private float SingleCellular2Edge(float, float)	=>	y(float, float)
		private float SingleCellular2Edge(float, float, float)	=>	x(float, float, float)
		private float SingleCubic(int, float, float)	=>	d(int, float, float)
		private float SingleCubic(int, float, float, float)	=>	c(int, float, float, float)
		private float SingleCubicFractalBillow(float, float)	=>	o(float, float)
		private float SingleCubicFractalBillow(float, float, float)	=>	y(float, float, float)
		private float SingleCubicFractalFBM(float, float)	=>	v(float, float)
		private float SingleCubicFractalFBM(float, float, float)	=>	b(float, float, float)
		private float SingleCubicFractalRigidMulti(float, float)	=>	c(float, float)
		private float SingleCubicFractalRigidMulti(float, float, float)	=>	u(float, float, float)
		private void SingleGradientPerturb(int, float, float, javax.vecmath.Vector2f)	=>	a(int, float, float, a.a.S)
		private void SingleGradientPerturb(int, float, float, javax.vecmath.Vector3f)	=>	a(int, float, float, a.a.H)
		private float SinglePerlin(int, float, float)	=>	a(int, float, float)
		private float SinglePerlin(int, float, float, float)	=>	b(int, float, float, float)
		private float SinglePerlinFractalBillow(float, float)	=>	l(float, float)
		private float SinglePerlinFractalBillow(float, float, float)	=>	j(float, float, float)
		private float SinglePerlinFractalFBM(float, float)	=>	j(float, float)
		private float SinglePerlinFractalFBM(float, float, float)	=>	h(float, float, float)
		private float SinglePerlinFractalRigidMulti(float, float)	=>	x(float, float)
		private float SinglePerlinFractalRigidMulti(float, float, float)	=>	t(float, float, float)
		private float SingleSimplex(int, float, float)	=>	c(int, float, float)
		private float SingleSimplex(int, float, float, float)	=>	a(int, float, float, float)
		private float SingleSimplex(int, float, float, float, float)	=>	a(int, float, float, float, float)
		private float SingleSimplexFractalBillow(float, float)	=>	s(float, float)
		private float SingleSimplexFractalBillow(float, float, float)	=>	k(float, float, float)
		private float SingleSimplexFractalFBM(float, float)	=>	t(float, float)
		private float SingleSimplexFractalFBM(float, float, float)	=>	c(float, float, float)
		private float SingleSimplexFractalRigidMulti(float, float)	=>	d(float, float)
		private float SingleSimplexFractalRigidMulti(float, float, float)	=>	p(float, float, float)
		private float SingleValue(int, float, float)	=>	b(int, float, float)
		private float SingleValue(int, float, float, float)	=>	d(int, float, float, float)
		private float SingleValueFractalBillow(float, float)	=>	a(float, float)
		private float SingleValueFractalBillow(float, float, float)	=>	v(float, float, float)
		private float SingleValueFractalFBM(float, float)	=>	q(float, float)
		private float SingleValueFractalFBM(float, float, float)	=>	r(float, float, float)
		private float SingleValueFractalRigidMulti(float, float)	=>	b(float, float)
		private float SingleValueFractalRigidMulti(float, float, float)	=>	q(float, float, float)
		private static float ValCoord2D(int, int, int)	=>	c(int, int, int)
		private static float ValCoord3D(int, int, int, int)	=>	a(int, int, int, int)
		private static float ValCoord4D(int, int, int, int, int)	=>	a(int, int, int, int, int)
	LineNumbersOf: com.volmit.iris.util.FastNoise
		40	=>	527
		41	=>	102
		42	=>	1074
		43	=>	561
		45	=>	666
		46	=>	729
		47	=>	226
		48	=>	493
		52	=>	623
		53	=>	913
		54	=>	78
		56	=>	787
		59	=>	185
		60	=>	757
		62	=>	1058
		63	=>	614
		64	=>	1053
		65	=>	733
		69	=>	607
		74	=>	680
		80	=>	908
		81	=>	601
		86	=>	1109
		87	=>	496
		97	=>	971
		98	=>	948
		103	=>	113
		104	=>	219
		109	=>	848
		110	=>	1183
		111	=>	977
		116	=>	4
		117	=>	1144
		122	=>	337
		123	=>	374
		124	=>	299
		129	=>	240
		130	=>	828
		136	=>	576
		137	=>	565
		142	=>	1098
		143	=>	334
		148	=>	388
		149	=>	105
		154	=>	252
		155	=>	521
		176	=>	233
		181	=>	248
		188	=>	288
		224	=>	1156
		262	=>	40
		267	=>	1014
		272	=>	1110
		277	=>	408
		282	=>	335
		287	=>	384
		288	=>	130
		292	=>	216
		293	=>	439
		294	=>	578 and 820
		295	=>	1031
		296	=>	434
		298	=>	1102
		299	=>	591
		308	=>	1030
		309	=>	278
		310	=>	353
		312	=>	215
		313	=>	554
		315	=>	431
		319	=>	786
		320	=>	543
		321	=>	222
		322	=>	706
		324	=>	784
		325	=>	719
		327	=>	424
		331	=>	545
		332	=>	54
		333	=>	909
		334	=>	744
		335	=>	274
		337	=>	558
		338	=>	269
		340	=>	985
		344	=>	1082
		345	=>	48
		346	=>	231
		348	=>	499
		352	=>	1138
		353	=>	228
		354	=>	394
		355	=>	791
		357	=>	700
		361	=>	52
		362	=>	186
		363	=>	555
		364	=>	1132
		365	=>	110
		367	=>	140
		371	=>	504
		372	=>	1059
		373	=>	1100
		375	=>	877
		376	=>	711
		378	=>	7
		380	=>	183
		384	=>	1130
		385	=>	338
		386	=>	165
		387	=>	1147
		389	=>	812
		390	=>	884
		392	=>	511
		394	=>	404
		398	=>	1088
		399	=>	1148
		400	=>	301
		401	=>	99
		402	=>	924
		404	=>	668
		405	=>	1153
		407	=>	218
		408	=>	81
		409	=>	491
		411	=>	1162
		412	=>	859
		413	=>	731
		414	=>	67
		416	=>	391
		417	=>	143
		418	=>	438
		419	=>	517
		421	=>	169
		422	=>	1145
		423	=>	644
		426	=>	1073
		430	=>	944
		431	=>	910
		432	=>	743
		434	=>	564
		436	=>	814
		438	=>	502
		440	=>	327
		442	=>	426
		444	=>	686
		446	=>	445
		449	=>	3
		451	=>	997
		453	=>	1005
		455	=>	199
		457	=>	409
		459	=>	318
		462	=>	80
		464	=>	490
		466	=>	117
		468	=>	220
		470	=>	723
		472	=>	950
		475	=>	866
		479	=>	976
		481	=>	1175
		484	=>	180
		486	=>	658
		488	=>	993
		490	=>	173
		492	=>	753
		494	=>	229
		496	=>	153
		499	=>	646
		504	=>	303
		505	=>	1127
		507	=>	560
		509	=>	619
		511	=>	862
		513	=>	538
		515	=>	386
		517	=>	628
		519	=>	147
		522	=>	769
		524	=>	83
		526	=>	238
		528	=>	537
		530	=>	203
		532	=>	317
		535	=>	906
		537	=>	221
		539	=>	363
		541	=>	418
		543	=>	1096
		545	=>	516
		548	=>	155
		552	=>	194
		554	=>	794
		557	=>	898
		559	=>	836
		561	=>	539
		563	=>	574
		565	=>	897
		567	=>	678
		569	=>	702
		572	=>	503
		579	=>	293
		581	=>	312
		585	=>	122
		586	=>	18
		587	=>	773
		588	=>	1078
		590	=>	1114
		594	=>	13
		595	=>	223
		596	=>	983
		598	=>	152
		602	=>	1068
		603	=>	687
		605	=>	896
		609	=>	878
		613	=>	833
		617	=>	249
		622	=>	309
		623	=>	370
		624	=>	647
		626	=>	577
		628	=>	540
		630	=>	637
		632	=>	536
		634	=>	598
		639	=>	1069
		640	=>	65
		641	=>	1010
		643	=>	531 and 562
		644	=>	788
		645	=>	176
		646	=>	818
		648	=>	469
		649	=>	640
		652	=>	22
		656	=>	800
		657	=>	672
		658	=>	1013
		660	=>	437 and 1180
		661	=>	104
		662	=>	311
		663	=>	481
		665	=>	403
		666	=>	991
		669	=>	39
		673	=>	295
		674	=>	487
		675	=>	804
		677	=>	547 and 1084
		678	=>	263
		679	=>	385
		680	=>	656
		682	=>	236
		683	=>	688
		686	=>	746
		690	=>	582
		694	=>	92
		695	=>	916
		696	=>	392
		697	=>	728
		698	=>	1150
		699	=>	479
		702	=>	49
		705	=>	1085
		706	=>	2
		707	=>	258
		708	=>	32
		710	=>	1106
		711	=>	782
		712	=>	923
		713	=>	1037
		715	=>	572
		716	=>	605
		717	=>	320
		721	=>	648
		722	=>	821
		723	=>	829
		724	=>	986
		726	=>	1092
		727	=>	510
		729	=>	15
		733	=>	857
		734	=>	684
		736	=>	629
		738	=>	1041
		740	=>	663
		742	=>	726
		744	=>	1067
		749	=>	1075
		750	=>	1087
		751	=>	968
		753	=>	376 and 875
		754	=>	308
		755	=>	1057
		757	=>	296
		758	=>	643
		761	=>	35
		765	=>	1060
		766	=>	495
		767	=>	856
		769	=>	854 and 1052
		770	=>	98
		771	=>	1136
		772	=>	468
		773	=>	421
		776	=>	286
		780	=>	1090
		781	=>	331
		782	=>	398
		784	=>	920 and 1080
		785	=>	115
		786	=>	232
		788	=>	412
		789	=>	759
		792	=>	372
		796	=>	1131
		800	=>	460
		801	=>	273
		802	=>	251
		803	=>	1164
		806	=>	999
		809	=>	164
		810	=>	526
		811	=>	888
		813	=>	305
		814	=>	415
		815	=>	881
		817	=>	1034
		818	=>	981
		822	=>	713
		823	=>	725
		825	=>	1061
		830	=>	883
		831	=>	1179
		832	=>	1047
		834	=>	889
		836	=>	1093
		838	=>	568
		840	=>	581
		842	=>	960
		847	=>	771
		848	=>	671
		849	=>	419
		851	=>	430 and 486
		852	=>	10
		853	=>	842
		854	=>	50
		856	=>	651
		857	=>	63
		860	=>	1169
		864	=>	316
		865	=>	441
		866	=>	198
		868	=>	609 and 652
		869	=>	322
		870	=>	417
		871	=>	467
		873	=>	326
		874	=>	1112
		877	=>	87
		881	=>	1040
		882	=>	994
		883	=>	792
		885	=>	594 and 1017
		886	=>	865
		887	=>	1141
		888	=>	314
		890	=>	1027
		891	=>	1029
		894	=>	863
		898	=>	313
		902	=>	596
		903	=>	46
		904	=>	1015
		905	=>	79
		906	=>	281
		907	=>	193
		910	=>	118
		913	=>	1019
		914	=>	378
		915	=>	349
		916	=>	494
		918	=>	432
		919	=>	712
		920	=>	213
		921	=>	639
		923	=>	508
		924	=>	1
		925	=>	987
		929	=>	1099
		930	=>	984
		931	=>	1160
		932	=>	593
		933	=>	279
		934	=>	474
		936	=>	943
		937	=>	876
		938	=>	62
		939	=>	974
		941	=>	796
		942	=>	919
		944	=>	760
		948	=>	159
		949	=>	736
		951	=>	1007
		953	=>	123
		955	=>	27
		957	=>	1008
		959	=>	860
		964	=>	544
		965	=>	799
		966	=>	1129
		968	=>	208 and 638
		969	=>	615
		970	=>	735
		972	=>	167
		973	=>	171
		976	=>	703
		980	=>	779
		981	=>	96
		982	=>	825
		984	=>	212 and 670
		985	=>	778
		986	=>	383
		988	=>	307
		989	=>	192
		992	=>	473
		996	=>	71
		997	=>	346
		998	=>	170
		1000	=>	402 and 528
		1001	=>	870
		1002	=>	64
		1004	=>	995
		1005	=>	1157
		1008	=>	129
		1012	=>	350
		1016	=>	969
		1017	=>	704
		1018	=>	285
		1019	=>	642
		1022	=>	718
		1025	=>	520
		1026	=>	410
		1027	=>	119
		1029	=>	323
		1030	=>	245
		1031	=>	966
		1033	=>	846
		1034	=>	234
		1038	=>	1065
		1039	=>	685
		1040	=>	1126
		1041	=>	747
		1043	=>	654
		1044	=>	128
		1046	=>	885
		1051	=>	90
		1052	=>	103
		1053	=>	321
		1055	=>	749
		1057	=>	675
		1059	=>	650
		1061	=>	979
		1063	=>	375
		1068	=>	280
		1069	=>	851
		1070	=>	1143
		1072	=>	190 and 405
		1073	=>	662
		1074	=>	351
		1075	=>	109
		1077	=>	867
		1078	=>	242
		1081	=>	1038
		1085	=>	126
		1086	=>	163
		1087	=>	399
		1089	=>	77 and 811
		1090	=>	872
		1091	=>	579
		1092	=>	1023
		1094	=>	732
		1095	=>	125
		1098	=>	329
		1102	=>	522
		1103	=>	879
		1104	=>	978
		1106	=>	73 and 649
		1107	=>	184
		1108	=>	541
		1109	=>	1177
		1111	=>	972
		1112	=>	1066
		1115	=>	451
		1119	=>	1016
		1127	=>	622
		1128	=>	734
		1129	=>	701
		1130	=>	996
		1132	=>	768
		1133	=>	707
		1134	=>	72
		1135	=>	669
		1140	=>	683
		1141	=>	636
		1142	=>	134
		1143	=>	230
		1144	=>	177
		1145	=>	160
		1146	=>	1091
		1147	=>	20
		1148	=>	1101
		1149	=>	36
		1150	=>	1166
		1151	=>	45
		1152	=>	982
		1153	=>	1042
		1154	=>	1054
		1157	=>	797
		1158	=>	472
		1159	=>	837
		1160	=>	341
		1161	=>	53
		1162	=>	677
		1166	=>	573
		1167	=>	108
		1168	=>	85
		1169	=>	709
		1170	=>	178
		1171	=>	693
		1172	=>	97
		1173	=>	770
		1174	=>	200
		1175	=>	272
		1176	=>	262
		1177	=>	946
		1178	=>	645
		1179	=>	841
		1182	=>	926
		1183	=>	1170
		1184	=>	1111
		1185	=>	459
		1186	=>	1064
		1187	=>	94
		1191	=>	179
		1192	=>	905
		1193	=>	1159
		1194	=>	189
		1195	=>	461
		1196	=>	935
		1197	=>	287
		1198	=>	1151
		1199	=>	315
		1203	=>	566
		1204	=>	961
		1206	=>	70
		1207	=>	66
		1210	=>	480
		1211	=>	1146
		1213	=>	457
		1214	=>	339
		1217	=>	174
		1218	=>	790
		1220	=>	655
		1221	=>	858
		1224	=>	891
		1225	=>	256
		1227	=>	448
		1228	=>	464
		1231	=>	720
		1235	=>	1174
		1236	=>	817
		1238	=>	250
		1240	=>	61
		1242	=>	458
		1244	=>	724
		1246	=>	708
		1251	=>	772
		1252	=>	202
		1253	=>	754
		1255	=>	691 and 824
		1256	=>	282
		1257	=>	24
		1259	=>	1086
		1260	=>	51
		1263	=>	752
		1267	=>	181
		1268	=>	945
		1269	=>	816
		1271	=>	277 and 556
		1272	=>	188
		1273	=>	569
		1275	=>	387
		1276	=>	1178
		1279	=>	844
		1283	=>	894
		1284	=>	68
		1285	=>	956
		1287	=>	1155 and 1176
		1288	=>	209
		1289	=>	667
		1291	=>	55
		1292	=>	618
		1295	=>	413
		1299	=>	345
		1306	=>	172
		1307	=>	763
		1308	=>	975
		1310	=>	900
		1311	=>	764
		1312	=>	116
		1314	=>	427
		1315	=>	1081
		1318	=>	625
		1319	=>	692
		1320	=>	1097
		1322	=>	366
		1323	=>	903
		1326	=>	1171
		1327	=>	762
		1328	=>	483
		1329	=>	1012
		1333	=>	401
		1334	=>	120
		1336	=>	694
		1337	=>	589
		1340	=>	873
		1341	=>	776
		1343	=>	748
		1344	=>	930
		1347	=>	962
		1348	=>	557
		1350	=>	697
		1351	=>	507
		1354	=>	440
		1358	=>	1161
		1361	=>	492
		1378	=>	840
		1379	=>	550
		1380	=>	695
		1381	=>	534
		1382	=>	271
		1383	=>	965
		1384	=>	14
		1385	=>	518
		1386	=>	1118
		1387	=>	1107
		1388	=>	260
		1389	=>	204
		1390	=>	954
		1391	=>	1104
		1393	=>	31
		1394	=>	988
		1395	=>	893
		1396	=>	571
		1397	=>	501
		1398	=>	135
		1399	=>	947
		1401	=>	1000
		1402	=>	292
		1403	=>	1004
		1404	=>	168
		1405	=>	302
		1406	=>	373
		1407	=>	101
		1408	=>	76
		1409	=>	699
		1410	=>	756
		1411	=>	297
		1412	=>	1137
		1414	=>	586
		1415	=>	465
		1416	=>	1140
		1417	=>	175
		1418	=>	162
		1419	=>	197
		1420	=>	533
		1421	=>	380
		1422	=>	1119
		1423	=>	832
		1424	=>	928
		1425	=>	1134
		1426	=>	899
		1427	=>	30
		1428	=>	291
		1429	=>	595
		1431	=>	111
		1432	=>	990
		1434	=>	26
		1435	=>	575
		1437	=>	620
		1438	=>	567
		1440	=>	710
		1441	=>	934
		1443	=>	682
		1444	=>	630
		1446	=>	942
		1447	=>	364
		1449	=>	880
		1450	=>	826
		1452	=>	626
		1453	=>	588
		1455	=>	1079
		1456	=>	519
		1458	=>	661
		1459	=>	377
		1462	=>	265
		1467	=>	344
		1468	=>	789
		1469	=>	244
		1471	=>	444
		1473	=>	151
		1475	=>	207
		1477	=>	936
		1479	=>	446
		1484	=>	529
		1485	=>	1077
		1486	=>	559
		1487	=>	428
		1489	=>	275
		1490	=>	416
		1491	=>	855
		1492	=>	261
		1494	=>	957
		1495	=>	1056
		1498	=>	627
		1502	=>	1094
		1503	=>	43
		1504	=>	617
		1505	=>	917
		1507	=>	270
		1508	=>	1036
		1509	=>	822
		1510	=>	781
		1512	=>	1011
		1513	=>	414
		1516	=>	673
		1520	=>	730
		1521	=>	952
		1522	=>	959
		1523	=>	552
		1525	=>	28
		1526	=>	443
		1527	=>	475
		1528	=>	191
		1530	=>	922
		1531	=>	41
		1534	=>	425
		1538	=>	938
		1544	=>	356
		1545	=>	433
		1546	=>	739
		1548	=>	266
		1549	=>	886
		1550	=>	874
		1551	=>	157
		1552	=>	1142
		1553	=>	1051
		1554	=>	328
		1555	=>	525
		1556	=>	932
		1558	=>	237
		1559	=>	785
		1560	=>	141
		1562	=>	241 and 1049
		1563	=>	798
		1564	=>	136
		1565	=>	347
		1566	=>	838
		1567	=>	843
		1569	=>	515
		1570	=>	634
		1571	=>	138
		1572	=>	455
		1573	=>	864
		1575	=>	806
		1576	=>	257
		1577	=>	452
		1578	=>	84
		1579	=>	267
		1581	=>	1002
		1582	=>	1032
		1583	=>	742
		1584	=>	927
		1585	=>	478
		1592	=>	958
		1593	=>	393
		1595	=>	553
		1597	=>	149
		1599	=>	641
		1601	=>	758
		1603	=>	810
		1608	=>	369
		1609	=>	1070
		1610	=>	137
		1611	=>	676
		1613	=>	201
		1614	=>	107
		1615	=>	1105
		1617	=>	57
		1618	=>	611
		1621	=>	477
		1625	=>	264
		1626	=>	1113
		1627	=>	6
		1628	=>	352
		1630	=>	1128
		1631	=>	584
		1632	=>	246
		1634	=>	931
		1635	=>	74
		1638	=>	738
		1642	=>	449
		1643	=>	290
		1644	=>	268
		1645	=>	590
		1647	=>	612
		1648	=>	395
		1649	=>	348
		1651	=>	585
		1652	=>	224
		1655	=>	835
		1659	=>	56
		1660	=>	830
		1662	=>	1048
		1668	=>	5
		1669	=>	980
		1671	=>	1158
		1672	=>	1026
		1673	=>	144
		1674	=>	1039
		1675	=>	114
		1676	=>	849
		1678	=>	882
		1679	=>	306
		1681	=>	513 and 633
		1682	=>	1003
		1684	=>	761
		1686	=>	420
		1688	=>	847
		1695	=>	1122
		1696	=>	1033
		1697	=>	142
		1699	=>	523
		1703	=>	852
		1705	=>	592
		1710	=>	206
		1711	=>	1021
		1712	=>	482
		1714	=>	382
		1715	=>	132
		1717	=>	1116
		1719	=>	498 and 925
		1720	=>	205 and 937
		1721	=>	396 and 664
		1722	=>	497
		1724	=>	447
		1725	=>	698
		1726	=>	613
		1728	=>	253
		1730	=>	1182
		1731	=>	38
		1732	=>	890
		1733	=>	12
		1734	=>	1046
		1739	=>	850
		1741	=>	127 and 1024
		1742	=>	411 and 1173
		1743	=>	354 and 767
		1744	=>	93
		1746	=>	182
		1747	=>	25
		1748	=>	358
		1750	=>	310
		1752	=>	161
		1753	=>	940
		1754	=>	750
		1755	=>	456
		1756	=>	259
		1761	=>	819
		1763	=>	357 and 406
		1764	=>	715 and 716
		1765	=>	1006 and 1124
		1766	=>	793
		1768	=>	59
		1769	=>	587
		1770	=>	807
		1772	=>	47
		1774	=>	133
		1775	=>	563
		1776	=>	1181
		1777	=>	941
		1778	=>	740
		1786	=>	368
		1788	=>	82
		1791	=>	911
		1792	=>	717
		1795	=>	42
		1797	=>	775
		1802	=>	1009
		1803	=>	901
		1804	=>	227
		1806	=>	124
		1807	=>	509
		1809	=>	1123
		1811	=>	95 and 1062
		1812	=>	139 and 929
		1813	=>	381 and 608
		1814	=>	150
		1816	=>	914
		1817	=>	1072
		1818	=>	1152
		1820	=>	815
		1822	=>	158
		1823	=>	1117
		1827	=>	616
		1829	=>	145 and 801
		1830	=>	23 and 600
		1831	=>	505 and 868
		1832	=>	506
		1834	=>	583
		1835	=>	100
		1836	=>	795
		1838	=>	214
		1840	=>	436
		1841	=>	330
		1845	=>	949
		1847	=>	689 and 755
		1848	=>	912 and 1028
		1849	=>	488 and 953
		1850	=>	255
		1852	=>	606
		1853	=>	1167
		1854	=>	839
		1856	=>	998
		1858	=>	907
		1859	=>	631
		1863	=>	37
		1868	=>	60
		1870	=>	604
		1872	=>	342
		1874	=>	210
		1876	=>	361
		1878	=>	131
		1880	=>	359
		1885	=>	235
		1886	=>	343
		1888	=>	1071
		1892	=>	992
		1894	=>	247
		1899	=>	239
		1900	=>	195
		1902	=>	435
		1903	=>	89
		1905	=>	603
		1908	=>	635 and 964
		1909	=>	371 and 442
		1910	=>	951
		1912	=>	1139
		1913	=>	196
		1915	=>	705
		1917	=>	653
		1918	=>	217
		1919	=>	1165
		1920	=>	300
		1924	=>	665
		1926	=>	21 and 34
		1927	=>	106 and 887
		1928	=>	1089
		1930	=>	470
		1931	=>	423
		1933	=>	44
		1935	=>	599
		1936	=>	75
		1937	=>	727
		1938	=>	532
		1942	=>	766
		1944	=>	324 and 955
		1945	=>	17 and 489
		1946	=>	963
		1948	=>	1063
		1949	=>	1018
		1951	=>	512
		1953	=>	783
		1954	=>	989
		1955	=>	389
		1956	=>	722
		1963	=>	156
		1965	=>	362
		1968	=>	429
		1969	=>	11
		1972	=>	484
		1974	=>	805
		1979	=>	745
		1980	=>	1083
		1982	=>	737
		1983	=>	154
		1985	=>	1103
		1988	=>	463 and 1133
		1989	=>	921 and 1001
		1990	=>	548
		1992	=>	542
		1993	=>	58
		1995	=>	632
		1997	=>	1095
		1998	=>	1035
		2001	=>	602
		2003	=>	902 and 1154
		2004	=>	121 and 915
		2005	=>	284
		2007	=>	1045
		2008	=>	422
		2010	=>	454
		2012	=>	294
		2013	=>	714
		2016	=>	16
		2018	=>	336 and 1121
		2019	=>	674 and 1055
		2020	=>	904
		2022	=>	741
		2023	=>	462
		2025	=>	91
		2027	=>	679
		2028	=>	8
		2034	=>	1043
		2036	=>	69
		2038	=>	471
		2040	=>	325
		2042	=>	514
		2044	=>	1135
		2046	=>	690
		2051	=>	549
		2052	=>	1115
		2055	=>	803
		2056	=>	970
		2057	=>	933
		2059	=>	379
		2061	=>	254 and 659
		2062	=>	535
		2063	=>	570
		2064	=>	333
		2066	=>	187
		2069	=>	1168
		2070	=>	827
		2071	=>	243
		2073	=>	546
		2074	=>	367
		2075	=>	871
		2076	=>	660
		2077	=>	450
		2078	=>	834
		2081	=>	1076
		2084	=>	466
		2085	=>	33
		2086	=>	823
		2087	=>	400
		2089	=>	19
		2090	=>	918
		2091	=>	869
		2092	=>	681
		2094	=>	1163
		2095	=>	621
		2096	=>	610
		2100	=>	166
		2101	=>	551
		2103	=>	845
		2104	=>	340
		2105	=>	319
		2107	=>	861
		2108	=>	146
		2110	=>	29
		2111	=>	86
		2112	=>	148
		2114	=>	973
		2115	=>	304
		2116	=>	225
		2118	=>	289
		2119	=>	892
		2121	=>	276
		2122	=>	895
		2123	=>	390
		2125	=>	802
		2126	=>	355
		2128	=>	580
		2129	=>	1044
		2130	=>	1050
		2132	=>	485
		2133	=>	211
		2134	=>	780
		2135	=>	967
		2138	=>	777
		2139	=>	1120
		2142	=>	696
		2143	=>	831
		2144	=>	397
		2146	=>	88
		2148	=>	298 and 360
		2149	=>	657
		2150	=>	1022
		2151	=>	453
		2153	=>	365
		2156	=>	476
		2157	=>	765
		2159	=>	283
		2160	=>	597
		2161	=>	332
		2162	=>	9
		2165	=>	624
		2168	=>	1020
		2169	=>	1025
		2170	=>	112
		2172	=>	1172
		2173	=>	1149
		2174	=>	1125
		2176	=>	813
		2177	=>	774
		2181	=>	721
		2182	=>	751
		2184	=>	1108
		2185	=>	500
		2187	=>	853
		2188	=>	808
		2190	=>	939
		2191	=>	530
		2193	=>	524
		2194	=>	809
		2195	=>	407

Class: synthetic com.volmit.iris.util.FastNoise$1	=>	com.volmit.iris.f.O$g
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$FastNoise$CellularDistanceFunction	=>	c
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$FastNoise$CellularReturnType	=>	b
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$FastNoise$FractalType	=>	a
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$FastNoise$Interp	=>	d
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$FastNoise$NoiseType	=>	e
	MethodsOf: com.volmit.iris.util.FastNoise$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$1
		434	=>	5
		438	=>	1
		475	=>	4
		702	=>	2
		1717	=>	3

Class: public final enum com.volmit.iris.util.FastNoise$CellularDistanceFunction	=>	com.volmit.iris.f.O$a
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$CellularDistanceFunction
		private static final synthetic com.volmit.iris.util.FastNoise$CellularDistanceFunction[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.FastNoise$CellularDistanceFunction Euclidean	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularDistanceFunction Manhattan	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularDistanceFunction Natural	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastNoise$CellularDistanceFunction
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$CellularDistanceFunction valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$CellularDistanceFunction[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$CellularDistanceFunction
		37	=>	1, 2, 3 and 4

Class: public final enum com.volmit.iris.util.FastNoise$CellularReturnType	=>	com.volmit.iris.f.O$b
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$CellularReturnType
		private static final synthetic com.volmit.iris.util.FastNoise$CellularReturnType[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType CellValue	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance2	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance2Add	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance2Div	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance2Mul	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType Distance2Sub	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$CellularReturnType NoiseLookup	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastNoise$CellularReturnType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$CellularReturnType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$CellularReturnType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$CellularReturnType
		38	=>	1, 2, 3 and 4

Class: com.volmit.iris.util.FastNoise$Float2	=>	com.volmit.iris.f.O$d
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$Float2
		public final float x	=>	a
		public final float y	=>	b
	MethodsOf: com.volmit.iris.util.FastNoise$Float2
		public void <init>(float, float) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$Float2
		160	=>	3
		161	=>	1
		162	=>	4
		163	=>	2

Class: com.volmit.iris.util.FastNoise$Float3	=>	com.volmit.iris.f.O$f
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$Float3
		public final float x	=>	b
		public final float y	=>	a
		public final float z	=>	c
	MethodsOf: com.volmit.iris.util.FastNoise$Float3
		public void <init>(float, float, float) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$Float3
		169	=>	4
		170	=>	5
		171	=>	2
		172	=>	3
		173	=>	1

Class: public final enum com.volmit.iris.util.FastNoise$FractalType	=>	com.volmit.iris.f.O$h
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$FractalType
		private static final synthetic com.volmit.iris.util.FastNoise$FractalType[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.FastNoise$FractalType Billow	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$FractalType FBM	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$FractalType RigidMulti	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastNoise$FractalType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$FractalType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$FractalType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$FractalType
		36	=>	1, 2, 3 and 4

Class: public final enum com.volmit.iris.util.FastNoise$Interp	=>	com.volmit.iris.f.O$e
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$Interp
		private static final synthetic com.volmit.iris.util.FastNoise$Interp[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.FastNoise$Interp Hermite	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$Interp Linear	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$Interp Quintic	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastNoise$Interp
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$Interp valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$Interp[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$Interp
		35	=>	1, 2, 3 and 4

Class: public final enum com.volmit.iris.util.FastNoise$NoiseType	=>	com.volmit.iris.f.O$c
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.util.FastNoise$NoiseType
		private static final synthetic com.volmit.iris.util.FastNoise$NoiseType[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.FastNoise$NoiseType Cellular	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType Cubic	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType CubicFractal	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType Perlin	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType PerlinFractal	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType Simplex	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType SimplexFractal	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType Value	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType ValueFractal	NameNotChanged
		public static final enum com.volmit.iris.util.FastNoise$NoiseType WhiteNoise	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastNoise$NoiseType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$NoiseType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.FastNoise$NoiseType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FastNoise$NoiseType
		34	=>	1, 2, 3 and 4

Class: public final com.volmit.iris.util.FastParticle	=>	com.volmit.iris.f.x
	Source: "FastParticle.java"
	FieldsOf: com.volmit.iris.util.FastParticle
		private static final com.volmit.iris.util.ParticleSender PARTICLE_SENDER	=>	a
	MethodsOf: com.volmit.iris.util.FastParticle
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		private static void sendParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int, double, double, double)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int, double, double, double, double)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, double, double, double, int, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, double)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, java.lang.Object)	=>	a(org.bukkit.World, com.volmit.iris.f.g, org.bukkit.Location, int, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int, double, double, double)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int, double, double, double, double)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, double, double, double, int, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, double)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, java.lang.Object)	=>	a(org.bukkit.entity.Player, com.volmit.iris.f.g, org.bukkit.Location, int, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.FastParticle
		19	=>	35
		20	=>	30
		21	=>	2
		22	=>	42
		24	=>	41
		26	=>	22
		28	=>	51
		29	=>	14
		36	=>	1
		37	=>	60
		40	=>	49
		41	=>	10
		44	=>	43
		45	=>	57
		49	=>	46
		50	=>	15
		54	=>	44
		55	=>	27
		59	=>	53
		60	=>	32
		64	=>	37
		66	=>	38
		70	=>	39
		71	=>	12
		75	=>	17
		76	=>	6
		80	=>	47
		81	=>	19
		85	=>	50
		86	=>	20
		90	=>	13
		91	=>	4
		97	=>	54
		98	=>	34
		101	=>	58
		102	=>	56
		105	=>	59
		106	=>	45
		110	=>	9
		111	=>	48
		115	=>	11
		116	=>	29
		120	=>	5
		121	=>	8
		125	=>	28
		126	=>	31
		130	=>	21
		131	=>	55
		135	=>	40
		136	=>	7
		140	=>	25
		141	=>	33
		145	=>	52
		146	=>	16
		150	=>	18
		151	=>	24
		155	=>	36
		156	=>	23
		159	=>	3
		160	=>	26

Class: public final com.volmit.iris.util.FastReflection	=>	com.volmit.iris.f.aD
	Source: "FastReflection.java"
	FieldsOf: com.volmit.iris.util.FastReflection
		public static final java.lang.String NMS_PACKAGE	=>	c
		public static final java.lang.String OBC_PACKAGE	=>	b
		public static final java.lang.String VERSION	=>	a
	MethodsOf: com.volmit.iris.util.FastReflection
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static java.lang.Object enumValueOf(java.lang.Class, java.lang.String)	=>	a(java.lang.Class, java.lang.String)
		public static java.lang.Class nmsClass(java.lang.String)	=>	g(java.lang.String)
		public static java.lang.String nmsClassName(java.lang.String)	=>	c(java.lang.String)
		public static java.util.Optional nmsOptionalClass(java.lang.String)	=>	e(java.lang.String)
		public static java.lang.Class obcClass(java.lang.String)	=>	f(java.lang.String)
		public static java.lang.String obcClassName(java.lang.String)	=>	d(java.lang.String)
		public static java.util.Optional obcOptionalClass(java.lang.String)	=>	b(java.lang.String)
		public static java.util.Optional optionalClass(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: com.volmit.iris.util.FastReflection
		17	=>	13
		19	=>	9
		20	=>	2
		24	=>	3
		28	=>	8
		32	=>	12
		36	=>	4
		40	=>	6
		44	=>	7
		49	=>	10
		50	=>	5
		51	=>	11
		57	=>	1

Class: public com.volmit.iris.util.FileWatcher	=>	com.volmit.iris.f.w
	Source: "FileWatcher.java"
	FieldsOf: com.volmit.iris.util.FileWatcher
		private boolean exists	=>	d
		private final java.io.File file	=>	a
		private long lastModified	=>	c
		private long size	=>	b
	MethodsOf: com.volmit.iris.util.FileWatcher
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public boolean checkModified()	=>	b()
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.io.File getFile()	=>	d()
		public long getLastModified()	=>	a()
		public long getSize()	=>	f()
		public int hashCode() 	SignatureNotChanged
		public boolean isExists()	=>	c()
		private void readProperties()	=>	e()
		public void setExists(boolean)	=>	a(boolean)
		public void setLastModified(long)	=>	a(long)
		public void setSize(long)	=>	b(long)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FileWatcher
		8	=>	3, 11, 13, 16, 17, 18 and 25
		11	=>	9
		13	=>	22
		14	=>	10
		15	=>	24
		18	=>	20
		19	=>	15
		20	=>	14
		21	=>	4
		25	=>	21
		26	=>	7
		27	=>	5
		28	=>	2
		32	=>	23
		33	=>	26
		34	=>	19
		35	=>	8
		37	=>	12
		39	=>	1
		42	=>	6

Class: public final com.volmit.iris.util.FloatTag	=>	com.volmit.iris.f.aY
	Source: "FloatTag.java"
	FieldsOf: com.volmit.iris.util.FloatTag
		private final float value	=>	c
	MethodsOf: com.volmit.iris.util.FloatTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, float) 	SignatureNotChanged
		public java.lang.Float getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.FloatTag
		41	=>	6
		55	=>	7
		56	=>	1
		57	=>	9
		61	=>	10
		66	=>	4
		67	=>	2
		68	=>	8
		69	=>	3
		71	=>	5

Class: public com.volmit.iris.util.Form	=>	com.volmit.iris.f.n
	Source: "Form.java"
	FieldsOf: com.volmit.iris.util.Form
		private static java.text.DecimalFormat DF	=>	c
		private static final java.util.NavigableMap MAP	=>	e
		private static final java.lang.String[] NAMES	=>	b
		private static java.text.NumberFormat NF	=>	d
		private static final java.math.BigInteger THOUSAND	=>	a
	MethodsOf: com.volmit.iris.util.Form
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String ago(long)	=>	f(long)
		public static java.lang.String b(double)	=>	c(double)
		public static java.lang.String b(int)	=>	d(int)
		public static java.lang.String b(java.math.BigInteger)	=>	a(java.math.BigInteger)
		public static java.lang.String b(long)	=>	e(long)
		public static java.lang.String capitalize(java.lang.String)	=>	c(java.lang.String)
		public static java.lang.String capitalizeWords(java.lang.String)	=>	b(java.lang.String)
		public static java.lang.String cname(java.lang.String)	=>	a(java.lang.String)
		public static java.lang.String duration(com.volmit.iris.util.RollingSequence, long)	=>	a(com.volmit.iris.f.aL, long)
		public static java.lang.String duration(double, int)	=>	c(double, int)
		public static java.lang.String duration(long)	=>	b(long)
		public static java.lang.String duration(long, int)	=>	a(long, int)
		public static java.lang.String f(double)	=>	d(double)
		public static java.lang.String f(double, int)	=>	d(double, int)
		public static java.lang.String f(float)	=>	a(float)
		public static java.lang.String f(float, int)	=>	a(float, int)
		public static java.lang.String f(int)	=>	b(int)
		public static java.lang.String f(long)	=>	l(long)
		public static java.lang.String fd(double, int)	=>	b(double, int)
		public static java.lang.String fileSize(long)	=>	c(long)
		public static java.lang.String fmin(java.util.Calendar)	=>	a(java.util.Calendar)
		public static java.lang.String forceDoubleDigit(int)	=>	a(int)
		public static int fromRoman(java.lang.String)	=>	d(java.lang.String)
		private static void instantiate()	=>	a()
		public static java.lang.String mem(long)	=>	d(long)
		public static java.lang.String memSize(long)	=>	j(long)
		public static java.lang.String memSize(long, int)	=>	e(long, int)
		public static java.lang.String memx(long)	=>	g(long)
		public static java.lang.String msSeconds(long)	=>	m(long)
		public static java.lang.String msSeconds(long, int)	=>	d(long, int)
		public static java.lang.String nsMs(long)	=>	k(long)
		public static java.lang.String nsMs(long, int)	=>	c(long, int)
		public static java.lang.String nsMsd(long, int)	=>	b(long, int)
		public static java.lang.String numberSuffix(int)	=>	c(int)
		public static java.lang.String ofSize(long, int)	=>	f(long, int)
		public static java.lang.String ofSize(long, int, int)	=>	a(long, int, int)
		public static java.lang.String ofSizeMetricWeight(long, int, int)	=>	b(long, int, int)
		public static java.lang.String pc(double)	=>	a(double)
		public static java.lang.String pc(double, int)	=>	a(double, int)
		public static java.lang.String pc(float)	=>	b(float)
		public static java.lang.String pc(float, int)	=>	b(float, int)
		public static java.lang.String pc(int, int)	=>	a(int, int)
		public static java.lang.String pc(int, int, int)	=>	a(int, int, int)
		public static java.lang.String pc(long, long)	=>	a(long, long)
		public static java.lang.String pc(long, long, int)	=>	a(long, long, int)
		public static java.lang.String repeat(java.lang.String, int)	=>	b(java.lang.String, int)
		public static java.lang.String scroll(java.lang.String, int, long)	=>	a(java.lang.String, int, long)
		public static java.lang.String split(java.lang.String, java.lang.String[])	=>	a(java.lang.String, java.lang.String[])
		public static java.lang.String stamp(long)	=>	i(long)
		public static java.lang.String stampDay(long)	=>	h(long)
		public static java.lang.String stampTime(long)	=>	a(long)
		public static java.lang.String toRoman(int)	=>	e(int)
		public static java.lang.String trim(java.lang.String, int)	=>	c(java.lang.String, int)
		public static java.lang.String wrap(java.lang.String, int)	=>	a(java.lang.String, int)
		public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean)	=>	a(java.lang.String, int, java.lang.String, boolean)
		public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean, java.lang.String)	=>	a(java.lang.String, int, java.lang.String, boolean, java.lang.String)
		public static java.lang.String wrapWords(java.lang.String, int)	=>	d(java.lang.String, int)
	LineNumbersOf: com.volmit.iris.util.Form
		18	=>	450
		23	=>	117
		24	=>	16
		29	=>	3
		30	=>	92 and 424
		32	=>	313
		34	=>	323
		38	=>	235
		40	=>	267
		42	=>	259
		57	=>	10
		58	=>	28
		59	=>	39
		60	=>	33
		61	=>	295
		63	=>	74
		75	=>	216
		76	=>	123
		78	=>	106 and 150
		80	=>	158
		82	=>	115
		83	=>	361
		88	=>	434
		92	=>	8
		104	=>	354
		106	=>	23 and 108
		108	=>	221
		111	=>	19
		125	=>	249
		139	=>	332
		157	=>	232
		177	=>	127
		179	=>	381
		184	=>	159
		186	=>	11
		189	=>	286
		191	=>	227
		194	=>	347
		196	=>	357
		199	=>	334
		200	=>	178
		201	=>	101
		202	=>	144
		204	=>	412
		206	=>	54
		207	=>	56
		208	=>	124
		210	=>	61
		212	=>	188
		213	=>	196
		216	=>	5
		219	=>	211
		221	=>	198
		224	=>	439
		226	=>	328
		229	=>	210
		231	=>	281
		232	=>	290
		233	=>	409
		235	=>	260
		237	=>	441
		238	=>	413
		239	=>	243
		243	=>	146
		244	=>	157
		246	=>	155
		249	=>	70
		251	=>	181
		252	=>	404
		253	=>	189
		257	=>	204
		258	=>	355
		261	=>	427
		263	=>	114
		264	=>	296
		279	=>	182
		280	=>	75
		281	=>	411
		283	=>	97
		285	=>	398
		286	=>	337
		287	=>	238
		289	=>	446
		291	=>	100
		292	=>	428
		294	=>	254
		296	=>	350
		297	=>	241
		298	=>	377
		300	=>	279
		302	=>	190
		303	=>	109
		304	=>	324
		306	=>	376
		308	=>	287
		309	=>	40
		310	=>	340
		312	=>	73
		314	=>	385
		315	=>	212
		316	=>	225
		318	=>	293
		320	=>	46
		321	=>	292
		322	=>	208
		327	=>	229
		333	=>	311
		339	=>	139
		345	=>	418
		351	=>	197
		357	=>	71
		363	=>	35
		376	=>	309
		377	=>	104
		379	=>	299
		382	=>	2
		394	=>	288
		396	=>	43
		398	=>	300
		401	=>	199
		403	=>	315
		406	=>	265
		408	=>	191
		413	=>	387
		414	=>	302
		415	=>	132
		416	=>	41
		417	=>	18
		419	=>	343
		421	=>	192
		422	=>	58
		424	=>	438
		427	=>	322
		429	=>	96
		431	=>	137
		433	=>	68
		434	=>	390
		436	=>	154
		441	=>	335
		442	=>	255
		443	=>	230
		445	=>	233
		448	=>	414
		449	=>	282
		451	=>	256
		452	=>	30
		454	=>	120
		455	=>	364
		457	=>	98
		458	=>	442
		460	=>	133
		461	=>	89
		463	=>	57
		464	=>	261
		466	=>	400
		470	=>	408
		471	=>	246
		473	=>	202
		476	=>	50
		477	=>	138
		479	=>	105
		480	=>	14
		482	=>	405
		483	=>	417
		485	=>	321
		486	=>	80
		488	=>	389
		489	=>	369
		491	=>	330
		492	=>	297
		494	=>	145
		495	=>	341
		497	=>	135
		498	=>	449
		500	=>	397
		501	=>	38
		503	=>	325
		504	=>	84
		506	=>	358
		507	=>	116
		509	=>	122
		513	=>	63
		514	=>	62
		516	=>	48
		522	=>	266
		523	=>	247
		524	=>	248
		526	=>	244
		529	=>	20
		530	=>	125
		532	=>	37
		533	=>	31
		535	=>	345
		536	=>	306
		538	=>	307
		539	=>	304
		541	=>	420
		542	=>	169
		544	=>	263
		545	=>	423
		547	=>	64
		551	=>	153
		552	=>	456
		554	=>	395
		557	=>	91
		558	=>	141
		560	=>	415
		561	=>	107
		563	=>	370
		564	=>	384
		566	=>	342
		567	=>	444
		569	=>	26
		570	=>	314
		572	=>	367
		573	=>	149
		575	=>	119
		576	=>	429
		578	=>	278
		579	=>	242
		581	=>	407
		582	=>	113
		584	=>	112
		585	=>	402
		587	=>	187
		588	=>	320
		590	=>	103
		594	=>	52
		595	=>	195
		596	=>	162
		598	=>	264
		612	=>	318
		613	=>	180
		618	=>	165
		620	=>	237
		637	=>	220
		639	=>	49
		642	=>	131
		644	=>	383
		647	=>	77
		649	=>	319
		652	=>	175
		654	=>	236
		657	=>	363
		659	=>	27
		662	=>	362
		667	=>	433
		681	=>	240
		683	=>	348
		686	=>	200
		688	=>	346
		691	=>	372
		693	=>	275
		696	=>	193
		698	=>	431
		701	=>	251
		703	=>	425
		706	=>	336
		718	=>	406
		730	=>	93
		742	=>	129
		754	=>	168
		755	=>	47
		757	=>	447
		760	=>	6
		761	=>	455
		762	=>	327
		763	=>	317
		764	=>	291
		766	=>	349
		768	=>	126
		771	=>	448
		784	=>	333
		798	=>	51
		800	=>	167 and 331
		802	=>	270
		803	=>	366
		806	=>	452
		819	=>	81
		824	=>	284
		837	=>	45
		838	=>	312
		844	=>	183
		846	=>	379
		851	=>	174
		853	=>	410
		856	=>	231
		862	=>	403
		863	=>	85
		879	=>	289
		880	=>	140
		882	=>	207
		884	=>	393
		885	=>	401
		887	=>	148
		889	=>	430
		890	=>	435
		892	=>	17
		894	=>	1
		895	=>	29
		897	=>	272
		899	=>	152
		900	=>	166
		906	=>	130
		908	=>	305
		913	=>	94
		932	=>	396
		933	=>	365
		935	=>	60
		937	=>	134
		938	=>	110
		940	=>	102
		942	=>	351
		943	=>	457
		945	=>	143
		947	=>	399
		948	=>	375
		950	=>	308
		952	=>	205
		953	=>	386
		959	=>	274
		977	=>	13
		978	=>	391
		980	=>	99
		982	=>	445
		983	=>	179
		985	=>	432
		987	=>	72
		988	=>	437
		990	=>	250
		992	=>	12
		993	=>	24
		995	=>	422
		997	=>	268
		998	=>	176
		1000	=>	53
		1002	=>	269
		1003	=>	83
		1009	=>	301
		1023	=>	147
		1025	=>	15
		1028	=>	4
		1041	=>	194
		1043	=>	25 and 453
		1045	=>	151
		1047	=>	257
		1052	=>	426
		1056	=>	7
		1058	=>	128
		1061	=>	223
		1073	=>	95
		1075	=>	86
		1080	=>	171
		1093	=>	234
		1095	=>	252
		1100	=>	156
		1102	=>	136
		1104	=>	65
		1109	=>	79
		1111	=>	201
		1125	=>	371
		1126	=>	82
		1138	=>	9
		1139	=>	352
		1153	=>	298
		1155	=>	339
		1157	=>	121
		1160	=>	258
		1162	=>	253
		1178	=>	226
		1180	=>	59
		1182	=>	88
		1185	=>	69
		1187	=>	170
		1201	=>	378
		1203	=>	228
		1205	=>	271
		1208	=>	142
		1210	=>	421
		1221	=>	111
		1232	=>	118
		1247	=>	277
		1262	=>	66
		1275	=>	294
		1288	=>	344
		1304	=>	161
		1318	=>	206
		1334	=>	262
		1348	=>	218
		1360	=>	440
		1374	=>	163
		1386	=>	285
		1400	=>	222
		1414	=>	203
		1426	=>	273
		1428	=>	419
		1429	=>	416
		1430	=>	280
		1431	=>	356
		1432	=>	388
		1433	=>	454
		1434	=>	380
		1435	=>	329
		1436	=>	22
		1437	=>	217
		1438	=>	392
		1439	=>	177
		1440	=>	160
		1442	=>	359
		1444	=>	374
		1446	=>	310
		1448	=>	186
		1449	=>	326
		1450	=>	36
		1452	=>	394
		1464	=>	360
		1466	=>	67
		1469	=>	373
		1471	=>	382
		1473	=>	42
		1476	=>	219
		1478	=>	34
		1481	=>	353
		1483	=>	239
		1486	=>	87
		1488	=>	209
		1491	=>	436
		1493	=>	245
		1496	=>	185
		1498	=>	55
		1501	=>	224
		1503	=>	172
		1506	=>	283
		1508	=>	443
		1511	=>	32
		1513	=>	451
		1516	=>	44
		1518	=>	368
		1521	=>	303
		1523	=>	214
		1526	=>	213
		1528	=>	184
		1531	=>	276
		1533	=>	173
		1536	=>	90
		1550	=>	76
		1552	=>	164
		1555	=>	316
		1557	=>	21 and 78
		1559	=>	215
		1562	=>	338

Class: public abstract com.volmit.iris.util.Function2	=>	com.volmit.iris.f.b
	Source: "Function2.java"
	FieldsOf: com.volmit.iris.util.Function2
	MethodsOf: com.volmit.iris.util.Function2
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Function2

Class: public abstract com.volmit.iris.util.Function3	=>	com.volmit.iris.f.aT
	Source: "Function3.java"
	FieldsOf: com.volmit.iris.util.Function3
	MethodsOf: com.volmit.iris.util.Function3
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Function3

Class: public abstract com.volmit.iris.util.Function4	=>	com.volmit.iris.f.ag
	Source: "Function4.java"
	FieldsOf: com.volmit.iris.util.Function4
	MethodsOf: com.volmit.iris.util.Function4
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Function4

Class: public com.volmit.iris.util.GBiset	=>	com.volmit.iris.f.bC
	Source: "GBiset.java"
	FieldsOf: com.volmit.iris.util.GBiset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.GBiset
		public void <init>(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object getA()	=>	b()
		public java.lang.Object getB()	=>	a()
		public void setA(java.lang.Object)	=>	a(java.lang.Object)
		public void setB(java.lang.Object)	=>	b(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.GBiset
		32	=>	5
		33	=>	6
		34	=>	3
		35	=>	1
		44	=>	2
		55	=>	4
		56	=>	9
		65	=>	7
		75	=>	8
		76	=>	10

Class: public abstract com.volmit.iris.util.GListAdapter	=>	com.volmit.iris.f.u
	Source: "GListAdapter.java"
	FieldsOf: com.volmit.iris.util.GListAdapter
	MethodsOf: com.volmit.iris.util.GListAdapter
		public void <init>() 	SignatureNotChanged
		public java.util.List adapt(java.util.List)	=>	a(java.util.List)
		public abstract java.lang.Object onAdapt(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.GListAdapter
		15	=>	3
		26	=>	8
		28	=>	4
		30	=>	6
		32	=>	7
		34	=>	5
		36	=>	2
		38	=>	1

Class: public abstract com.volmit.iris.util.GenLayer	=>	com.volmit.iris.f.J
	Source: "GenLayer.java"
	FieldsOf: com.volmit.iris.util.GenLayer
		protected final com.volmit.iris.generator.DimensionChunkGenerator iris	=>	b
		protected final com.volmit.iris.util.RNG rng	=>	a
	MethodsOf: com.volmit.iris.util.GenLayer
		public void <init>(com.volmit.iris.generator.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public abstract double generate(double, double)	=>	a(double, double)
	LineNumbersOf: com.volmit.iris.util.GenLayer
		11	=>	1
		12	=>	4
		13	=>	3
		14	=>	2

Class: public com.volmit.iris.util.GroupedExecutor	=>	com.volmit.iris.f.aC
	Source: "GroupedExecutor.java"
	FieldsOf: com.volmit.iris.util.GroupedExecutor
		private java.util.concurrent.locks.ReentrantLock lock	=>	c
		private com.volmit.iris.util.KMap mirror	=>	a
		private java.util.concurrent.ExecutorService service	=>	d
		private int xc	=>	b
	MethodsOf: com.volmit.iris.util.GroupedExecutor
		public void <init>(int, int, java.lang.String) 	SignatureNotChanged
		static synthetic int access$008(com.volmit.iris.util.GroupedExecutor) 	SignatureNotChanged
		public void close()	=>	a()
		public void closeNow()	=>	b()
		private synthetic void lambda$close$3() 	SignatureNotChanged
		private static synthetic java.lang.Thread lambda$new$0(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private synthetic java.lang.Thread lambda$new$1(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private synthetic void lambda$queue$2(com.volmit.iris.util.NastyRunnable, java.lang.String) 	SignatureNotChanged
		public void queue(java.lang.String, com.volmit.iris.util.NastyRunnable)	=>	a(java.lang.String, com.volmit.iris.f.B)
		public void waitFor(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: com.volmit.iris.util.GroupedExecutor
		10	=>	8
		18	=>	14
		19	=>	38
		20	=>	12
		21	=>	22
		23	=>	11
		25	=>	1
		27	=>	21
		28	=>	32
		29	=>	15
		31	=>	37
		35	=>	3
		37	=>	5
		49	=>	50
		50	=>	39
		54	=>	30
		56	=>	28
		57	=>	43
		58	=>	31
		60	=>	7
		63	=>	9
		67	=>	49
		69	=>	33
		72	=>	20
		74	=>	48
		79	=>	44
		81	=>	4
		83	=>	40
		86	=>	17
		90	=>	13
		91	=>	42
		93	=>	6
		95	=>	29
		96	=>	25
		97	=>	18
		101	=>	34
		104	=>	47
		107	=>	45
		109	=>	46
		110	=>	2
		111	=>	10
		112	=>	19
		113	=>	16
		117	=>	26
		119	=>	23
		120	=>	24
		121	=>	35
		122	=>	36
		126	=>	27
		127	=>	41

Class: com.volmit.iris.util.GroupedExecutor$1	=>	com.volmit.iris.f.aC$a
	Source: "GroupedExecutor.java"
	FieldsOf: com.volmit.iris.util.GroupedExecutor$1
		final synthetic com.volmit.iris.util.GroupedExecutor this$0	NameNotChanged
		final synthetic java.lang.String val$name	NameNotChanged
		final synthetic int val$priority	NameNotChanged
	MethodsOf: com.volmit.iris.util.GroupedExecutor$1
		void <init>(com.volmit.iris.util.GroupedExecutor, java.lang.String, int) 	SignatureNotChanged
		public java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.GroupedExecutor$1
		38	=>	2
		42	=>	4
		43	=>	3
		44	=>	1
		45	=>	5

Class: public com.volmit.iris.util.HTTP	=>	com.volmit.iris.f.aA
	Source: "HTTP.java"
	FieldsOf: com.volmit.iris.util.HTTP
		public static final java.lang.String CRLF	=>	a
	MethodsOf: com.volmit.iris.util.HTTP
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String)	=>	a(java.lang.String)
		public static java.lang.String toString(com.volmit.iris.util.JSONObject)	=>	a(com.volmit.iris.f.al)
	LineNumbersOf: com.volmit.iris.util.HTTP
		36	=>	23
		94	=>	36
		95	=>	20
		98	=>	8
		99	=>	30
		104	=>	13
		105	=>	1
		106	=>	4
		107	=>	11
		114	=>	2
		115	=>	10
		116	=>	32
		121	=>	7
		123	=>	39
		124	=>	34
		125	=>	35
		126	=>	16
		127	=>	37
		128	=>	19
		163	=>	6
		165	=>	43
		166	=>	45
		168	=>	26
		169	=>	14
		170	=>	22
		171	=>	31
		172	=>	46
		173	=>	40
		175	=>	5
		176	=>	28
		177	=>	29
		178	=>	17
		179	=>	18
		180	=>	44
		181	=>	42
		184	=>	25
		186	=>	24
		187	=>	21
		189	=>	15
		190	=>	9
		192	=>	3
		193	=>	12
		194	=>	41
		195	=>	33
		198	=>	38
		199	=>	27

Class: public com.volmit.iris.util.HTTPTokener	=>	com.volmit.iris.f.bh
	Source: "HTTPTokener.java"
	FieldsOf: com.volmit.iris.util.HTTPTokener
	MethodsOf: com.volmit.iris.util.HTTPTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public java.lang.String nextToken()	=>	g()
	LineNumbersOf: com.volmit.iris.util.HTTPTokener
		46	=>	6
		47	=>	3
		59	=>	1
		62	=>	14
		63	=>	9
		64	=>	2
		66	=>	10
		69	=>	17
		70	=>	12
		72	=>	16
		74	=>	8
		76	=>	15
		78	=>	13
		83	=>	5
		85	=>	4
		87	=>	11
		88	=>	7

Class: public com.volmit.iris.util.HeightMap	=>	com.volmit.iris.f.M
	Source: "HeightMap.java"
	FieldsOf: com.volmit.iris.util.HeightMap
		private final byte[] height	=>	a
	MethodsOf: com.volmit.iris.util.HeightMap
		public void <init>() 	SignatureNotChanged
		public int getHeight(int, int)	=>	a(int, int)
		public void setHeight(int, int, int)	=>	a(int, int, int)
	LineNumbersOf: com.volmit.iris.util.HeightMap
		10	=>	3
		11	=>	5
		12	=>	2
		13	=>	4
		17	=>	6
		18	=>	1
		22	=>	7

Class: public com.volmit.iris.util.ING	=>	com.volmit.iris.f.aj
	Source: "ING.java"
	FieldsOf: com.volmit.iris.util.ING
	MethodsOf: com.volmit.iris.util.ING
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ING
		6	=>	2
		8	=>	1

Class: public com.volmit.iris.util.IO	=>	com.volmit.iris.f.F
	Source: "IO.java"
	FieldsOf: com.volmit.iris.util.IO
		public static final char DIR_SEPARATOR	=>	e
		public static final char DIR_SEPARATOR_UNIX	=>	a
		public static final char DIR_SEPARATOR_WINDOWS	=>	c
		public static final java.lang.String LINE_SEPARATOR	=>	b
		public static final java.lang.String LINE_SEPARATOR_UNIX	=>	d
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	=>	g
		private static final char[] hexArray	=>	f
	MethodsOf: com.volmit.iris.util.IO
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static java.lang.String bytesToHex(byte[])	=>	c(byte[])
		public static void closeQuietly(java.io.InputStream)	=>	b(java.io.InputStream)
		public static void closeQuietly(java.io.OutputStream)	=>	a(java.io.OutputStream)
		public static void closeQuietly(java.io.Reader)	=>	c(java.io.Reader)
		public static void closeQuietly(java.io.Writer)	=>	a(java.io.Writer)
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream)	=>	a(java.io.InputStream, java.io.InputStream)
		public static boolean contentEquals(java.io.Reader, java.io.Reader)	=>	a(java.io.Reader, java.io.Reader)
		public static int copy(java.io.InputStream, java.io.OutputStream)	=>	c(java.io.InputStream, java.io.OutputStream)
		public static void copy(java.io.InputStream, java.io.Writer)	=>	a(java.io.InputStream, java.io.Writer)
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String)	=>	a(java.io.InputStream, java.io.Writer, java.lang.String)
		public static void copy(java.io.Reader, java.io.OutputStream)	=>	a(java.io.Reader, java.io.OutputStream)
		public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String)	=>	a(java.io.Reader, java.io.OutputStream, java.lang.String)
		public static int copy(java.io.Reader, java.io.Writer)	=>	b(java.io.Reader, java.io.Writer)
		public static void copyFile(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		public static void copyFile(java.io.File, java.io.File, boolean)	=>	b(java.io.File, java.io.File, boolean)
		public static long copyLarge(java.io.InputStream, java.io.OutputStream)	=>	b(java.io.InputStream, java.io.OutputStream)
		public static long copyLarge(java.io.Reader, java.io.Writer)	=>	a(java.io.Reader, java.io.Writer)
		public static long count(java.io.File)	=>	b(java.io.File)
		public static byte[] decode(java.lang.String)	=>	f(java.lang.String)
		public static java.lang.String decompress(java.lang.String)	=>	a(java.lang.String)
		public static void delete(java.io.File)	=>	e(java.io.File)
		public static void deleteUp(java.io.File)	=>	c(java.io.File)
		private static void doCopyFile(java.io.File, java.io.File, boolean)	=>	a(java.io.File, java.io.File, boolean)
		public static java.lang.String encode(byte[])	=>	b(byte[])
		public static long fillTransfer(java.io.InputStream, java.io.OutputStream)	=>	a(java.io.InputStream, java.io.OutputStream)
		public static long fullTransfer(java.io.InputStream, java.io.OutputStream, int)	=>	a(java.io.InputStream, java.io.OutputStream, int)
		public static java.lang.String hash(java.lang.String)	=>	c(java.lang.String)
		public static java.lang.String readAll(java.io.File)	=>	d(java.io.File)
		public static java.lang.String readAll(java.io.InputStream)	=>	c(java.io.InputStream)
		public static void readEntry(java.io.File, java.lang.String, java.util.function.Consumer)	=>	a(java.io.File, java.lang.String, java.util.function.Consumer)
		public static java.util.List readLines(java.io.InputStream)	=>	f(java.io.InputStream)
		public static java.util.List readLines(java.io.InputStream, java.lang.String)	=>	a(java.io.InputStream, java.lang.String)
		public static java.util.List readLines(java.io.Reader)	=>	b(java.io.Reader)
		public static byte[] sdecompress(java.lang.String)	=>	e(java.lang.String)
		public static long size(java.io.File)	=>	a(java.io.File)
		public static byte[] toByteArray(java.io.InputStream)	=>	d(java.io.InputStream)
		public static byte[] toByteArray(java.io.Reader)	=>	e(java.io.Reader)
		public static byte[] toByteArray(java.io.Reader, java.lang.String)	=>	a(java.io.Reader, java.lang.String)
		public static byte[] toByteArray(java.lang.String)	=>	d(java.lang.String)
		public static char[] toCharArray(java.io.InputStream)	=>	a(java.io.InputStream)
		public static char[] toCharArray(java.io.InputStream, java.lang.String)	=>	c(java.io.InputStream, java.lang.String)
		public static char[] toCharArray(java.io.Reader)	=>	d(java.io.Reader)
		public static java.io.InputStream toInputStream(java.lang.String)	=>	b(java.lang.String)
		public static java.io.InputStream toInputStream(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public static java.lang.String toString(byte[])	=>	a(byte[])
		public static java.lang.String toString(byte[], java.lang.String)	=>	a(byte[], java.lang.String)
		public static java.lang.String toString(java.io.InputStream)	=>	e(java.io.InputStream)
		public static java.lang.String toString(java.io.InputStream, java.lang.String)	=>	b(java.io.InputStream, java.lang.String)
		public static java.lang.String toString(java.io.Reader)	=>	a(java.io.Reader)
		public static void touch(java.io.File)	=>	f(java.io.File)
		public static int transfer(java.io.InputStream, java.io.OutputStream, byte[])	=>	a(java.io.InputStream, java.io.OutputStream, byte[])
		public static long transfer(java.io.InputStream, java.io.OutputStream, byte[], int)	=>	a(java.io.InputStream, java.io.OutputStream, byte[], int)
		public static long transfer(java.io.InputStream, java.io.OutputStream, int, long)	=>	a(java.io.InputStream, java.io.OutputStream, int, long)
		public static void write(byte[], java.io.OutputStream)	=>	a(byte[], java.io.OutputStream)
		public static void write(byte[], java.io.Writer)	=>	a(byte[], java.io.Writer)
		public static void write(byte[], java.io.Writer, java.lang.String)	=>	a(byte[], java.io.Writer, java.lang.String)
		public static void write(char[], java.io.OutputStream)	=>	a(char[], java.io.OutputStream)
		public static void write(char[], java.io.OutputStream, java.lang.String)	=>	a(char[], java.io.OutputStream, java.lang.String)
		public static void write(char[], java.io.Writer)	=>	a(char[], java.io.Writer)
		public static void write(java.lang.String, java.io.OutputStream)	=>	a(java.lang.String, java.io.OutputStream)
		public static void write(java.lang.String, java.io.OutputStream, java.lang.String)	=>	a(java.lang.String, java.io.OutputStream, java.lang.String)
		public static void write(java.lang.String, java.io.Writer)	=>	a(java.lang.String, java.io.Writer)
		public static void write(java.lang.StringBuffer, java.io.OutputStream)	=>	a(java.lang.StringBuffer, java.io.OutputStream)
		public static void write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String)	=>	a(java.lang.StringBuffer, java.io.OutputStream, java.lang.String)
		public static void write(java.lang.StringBuffer, java.io.Writer)	=>	a(java.lang.StringBuffer, java.io.Writer)
		public static void writeAll(java.io.File, java.lang.Object)	=>	a(java.io.File, java.lang.Object)
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)	=>	a(java.util.Collection, java.lang.String, java.io.OutputStream)
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)	=>	a(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
		public static void writeLines(java.util.Collection, java.lang.String, java.io.Writer)	=>	a(java.util.Collection, java.lang.String, java.io.Writer)
	LineNumbersOf: com.volmit.iris.util.IO
		38	=>	142
		51	=>	133
		69	=>	389
		73	=>	319
		74	=>	311
		75	=>	243
		76	=>	163
		77	=>	29
		79	=>	351
		84	=>	358
		85	=>	378
		86	=>	361
		87	=>	289
		88	=>	182
		90	=>	38
		95	=>	134
		100	=>	278
		107	=>	84
		108	=>	226
		111	=>	281
		113	=>	200
		116	=>	323
		121	=>	39
		122	=>	170 and 302
		124	=>	230
		125	=>	244
		126	=>	364
		129	=>	177
		148	=>	48
		150	=>	344
		152	=>	168
		155	=>	329
		176	=>	144
		177	=>	54
		178	=>	175
		179	=>	140
		181	=>	298
		183	=>	101
		184	=>	51
		185	=>	336
		187	=>	131
		189	=>	7
		193	=>	61
		207	=>	82
		212	=>	102
		214	=>	198
		216	=>	256
		218	=>	324
		221	=>	15
		239	=>	125
		240	=>	240
		241	=>	31
		243	=>	347
		245	=>	181
		246	=>	92
		249	=>	34
		260	=>	227
		262	=>	139
		265	=>	111
		267	=>	247 and 382
		269	=>	89
		273	=>	212
		274	=>	1
		278	=>	279
		280	=>	360
		282	=>	320
		284	=>	95 and 166
		286	=>	155
		292	=>	265
		296	=>	232
		301	=>	228
		303	=>	366
		305	=>	62
		307	=>	120 and 252
		309	=>	268
		315	=>	154
		319	=>	128
		324	=>	36
		325	=>	275
		326	=>	308
		328	=>	159
		330	=>	19
		331	=>	9
		332	=>	114
		334	=>	113
		336	=>	112
		340	=>	173
		345	=>	88
		346	=>	221
		350	=>	374
		351	=>	187
		353	=>	13
		355	=>	94
		357	=>	359
		358	=>	147
		360	=>	261
		363	=>	315
		365	=>	104
		370	=>	68, 100 and 353
		371	=>	2, 12 and 207
		373	=>	193
		375	=>	283
		377	=>	103
		381	=>	352
		382	=>	4
		383	=>	356
		384	=>	30
		385	=>	164
		389	=>	327
		390	=>	255
		391	=>	290
		393	=>	238
		395	=>	291
		398	=>	375
		400	=>	60
		405	=>	190
		406	=>	40
		407	=>	50
		409	=>	231
		411	=>	90
		414	=>	174
		416	=>	105
		431	=>	17
		433	=>	210
		434	=>	307
		436	=>	179
		437	=>	137
		462	=>	10
		463	=>	373
		491	=>	26
		493	=>	349
		495	=>	249
		497	=>	313
		499	=>	171
		501	=>	63
		503	=>	158
		505	=>	250
		507	=>	24
		509	=>	67
		511	=>	297
		513	=>	55
		515	=>	203
		518	=>	296
		520	=>	236
		522	=>	383
		523	=>	85
		539	=>	343
		541	=>	22
		544	=>	28
		547	=>	333
		550	=>	303
		554	=>	42 and 233
		555	=>	130 and 196
		559	=>	25 and 189
		560	=>	192 and 348
		562	=>	277
		564	=>	350
		566	=>	35
		568	=>	215
		570	=>	11
		586	=>	272
		588	=>	306
		591	=>	80
		594	=>	153
		595	=>	322
		610	=>	143
		612	=>	309
		615	=>	126
		618	=>	380
		619	=>	213
		634	=>	381
		636	=>	270
		639	=>	81
		642	=>	293
		643	=>	295
		658	=>	372
		660	=>	369
		663	=>	77
		666	=>	117
		667	=>	357
		687	=>	152
		688	=>	225
		689	=>	337
		709	=>	27
		710	=>	188
		711	=>	76
		737	=>	33
		738	=>	345
		739	=>	362
		759	=>	346
		782	=>	354
		783	=>	211
		784	=>	217
		810	=>	162
		811	=>	274
		812	=>	109
		832	=>	136
		833	=>	286
		834	=>	334
		856	=>	269
		857	=>	172
		858	=>	285
		883	=>	52
		884	=>	5
		885	=>	342
		904	=>	310
		905	=>	222
		906	=>	124
		924	=>	263
		947	=>	138
		949	=>	69
		953	=>	377
		977	=>	246
		978	=>	21
		1004	=>	86
		1006	=>	385
		1010	=>	83
		1011	=>	264
		1033	=>	3
		1034	=>	119
		1035	=>	328
		1036	=>	259
		1038	=>	214
		1039	=>	299
		1041	=>	37
		1056	=>	161
		1057	=>	251
		1078	=>	135
		1079	=>	6
		1099	=>	254
		1101	=>	64
		1103	=>	282
		1123	=>	218
		1125	=>	235
		1127	=>	160
		1152	=>	8
		1154	=>	146
		1156	=>	183
		1160	=>	266
		1163	=>	260
		1183	=>	41
		1185	=>	384
		1187	=>	318
		1207	=>	223
		1209	=>	204
		1211	=>	273
		1237	=>	70
		1239	=>	156
		1241	=>	110
		1245	=>	363
		1248	=>	127
		1267	=>	169
		1269	=>	49
		1271	=>	141
		1292	=>	209
		1294	=>	57
		1296	=>	253
		1321	=>	287
		1323	=>	157
		1325	=>	180
		1329	=>	191
		1332	=>	32
		1351	=>	59
		1353	=>	340
		1355	=>	390
		1376	=>	107
		1378	=>	93
		1380	=>	165
		1405	=>	312
		1407	=>	242
		1409	=>	195
		1413	=>	267
		1416	=>	276
		1439	=>	208
		1441	=>	271
		1443	=>	176
		1445	=>	288
		1447	=>	43
		1449	=>	284
		1450	=>	194
		1452	=>	301
		1454	=>	72
		1455	=>	118
		1456	=>	53
		1482	=>	304
		1484	=>	73
		1488	=>	386
		1490	=>	79
		1492	=>	341
		1494	=>	239
		1496	=>	248
		1498	=>	98
		1499	=>	199
		1501	=>	237
		1503	=>	97
		1504	=>	201
		1506	=>	388
		1526	=>	122
		1528	=>	56
		1530	=>	258
		1532	=>	280
		1534	=>	245
		1536	=>	87
		1537	=>	148
		1539	=>	316
		1541	=>	178
		1542	=>	23
		1543	=>	123
		1573	=>	379
		1574	=>	16
		1576	=>	44
		1578	=>	241
		1601	=>	185
		1602	=>	367
		1603	=>	314
		1604	=>	332
		1606	=>	65
		1607	=>	391
		1609	=>	116
		1633	=>	300
		1634	=>	305
		1635	=>	234
		1663	=>	326
		1665	=>	96
		1669	=>	74
		1670	=>	371
		1672	=>	355
		1702	=>	206
		1703	=>	106
		1705	=>	46
		1707	=>	331
		1730	=>	219
		1731	=>	149
		1732	=>	370
		1733	=>	18
		1735	=>	338
		1736	=>	229
		1738	=>	186
		1766	=>	205
		1767	=>	292
		1769	=>	368
		1770	=>	216
		1802	=>	202
		1804	=>	91
		1808	=>	325
		1809	=>	317
		1811	=>	294
		1813	=>	45
		1836	=>	14
		1838	=>	20
		1840	=>	365
		1842	=>	145
		1845	=>	257
		1846	=>	58
		1848	=>	321
		1849	=>	66
		1851	=>	262
		1853	=>	108
		1854	=>	220
		1856	=>	121
		1857	=>	184
		1880	=>	150
		1882	=>	376
		1884	=>	47
		1886	=>	224
		1889	=>	71
		1890	=>	99
		1892	=>	335
		1893	=>	129
		1895	=>	339
		1897	=>	78
		1898	=>	197
		1900	=>	115
		1901	=>	151
		1907	=>	132
		1908	=>	75
		1909	=>	330
		1910	=>	167
		1911	=>	387

Class: public abstract com.volmit.iris.util.IObjectPlacer	=>	com.volmit.iris.f.X
	Source: "IObjectPlacer.java"
	FieldsOf: com.volmit.iris.util.IObjectPlacer
	MethodsOf: com.volmit.iris.util.IObjectPlacer
		public abstract org.bukkit.block.data.BlockData get(int, int, int)	=>	a(int, int, int)
		public abstract int getHighest(int, int)	=>	e(int, int)
		public abstract int getHighest(int, int, boolean)	=>	a(int, int, boolean)
		public abstract boolean isPreventingDecay()	=>	e()
		public abstract boolean isSolid(int, int, int)	=>	b(int, int, int)
		public abstract boolean isUnderwater(int, int)	=>	d(int, int)
		public abstract void set(int, int, int, org.bukkit.block.data.BlockData)	=>	a(int, int, int, org.bukkit.block.data.BlockData)
	LineNumbersOf: com.volmit.iris.util.IObjectPlacer

Class: public abstract com.volmit.iris.util.IPostBlockAccess	=>	com.volmit.iris.f.H
	Source: "IPostBlockAccess.java"
	FieldsOf: com.volmit.iris.util.IPostBlockAccess
	MethodsOf: com.volmit.iris.util.IPostBlockAccess
		public abstract com.volmit.iris.util.KList caveFloors(int, int)	=>	h(int, int)
		public abstract org.bukkit.block.data.BlockData getPostBlock(int, int, int)	=>	d(int, int, int)
		public abstract int highestTerrainBlock(int, int)	=>	g(int, int)
		public abstract int highestTerrainOrFluidBlock(int, int)	=>	f(int, int)
		public abstract void setPostBlock(int, int, int, org.bukkit.block.data.BlockData)	=>	b(int, int, int, org.bukkit.block.data.BlockData)
		public abstract void updateHeight(int, int, int)	=>	c(int, int, int)
	LineNumbersOf: com.volmit.iris.util.IPostBlockAccess

Class: public final com.volmit.iris.util.IntArrayTag	=>	com.volmit.iris.f.aZ
	Source: "IntArrayTag.java"
	FieldsOf: com.volmit.iris.util.IntArrayTag
		private final int[] value	=>	c
	MethodsOf: com.volmit.iris.util.IntArrayTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int[]) 	SignatureNotChanged
		public int[] getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.IntArrayTag
		43	=>	1
		57	=>	8
		58	=>	6
		59	=>	3
		63	=>	4
		68	=>	5
		69	=>	10
		70	=>	7
		71	=>	9
		73	=>	2

Class: public final com.volmit.iris.util.IntTag	=>	com.volmit.iris.f.ad
	Source: "IntTag.java"
	FieldsOf: com.volmit.iris.util.IntTag
		private final int value	=>	c
	MethodsOf: com.volmit.iris.util.IntTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.Integer getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.IntTag
		41	=>	4
		55	=>	2
		56	=>	5
		57	=>	10
		61	=>	3
		66	=>	1
		67	=>	6
		68	=>	7
		69	=>	9
		71	=>	8

Class: public final enum com.volmit.iris.util.InterpolationType	=>	com.volmit.iris.f.c
	Source: "InterpolationType.java"
	FieldsOf: com.volmit.iris.util.InterpolationType
		private static final synthetic com.volmit.iris.util.InterpolationType[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.InterpolationType BEZIER	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType LINEAR	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType NONE	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType PARAMETRIC_2	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType PARAMETRIC_4	NameNotChanged
	MethodsOf: com.volmit.iris.util.InterpolationType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.InterpolationType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.InterpolationType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.InterpolationType
		2	=>	2, 6, 7 and 8
		4	=>	5
		5	=>	4
		6	=>	9
		7	=>	1
		8	=>	3

Class: public com.volmit.iris.util.InvertedBiomeGrid	=>	com.volmit.iris.f.ao
	Source: "InvertedBiomeGrid.java"
	FieldsOf: com.volmit.iris.util.InvertedBiomeGrid
		private org.bukkit.generator.ChunkGenerator$BiomeGrid grid	=>	a
	MethodsOf: com.volmit.iris.util.InvertedBiomeGrid
		public void <init>(org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int, int) 	SignatureNotChanged
		public void setBiome(int, int, int, org.bukkit.block.Biome) 	SignatureNotChanged
		public void setBiome(int, int, org.bukkit.block.Biome) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.InvertedBiomeGrid
		11	=>	7
		12	=>	3
		13	=>	4
		19	=>	6
		25	=>	1
		32	=>	5
		33	=>	8
		38	=>	2
		39	=>	9

Class: public com.volmit.iris.util.IrisInterpolation	=>	com.volmit.iris.f.p
	Source: "IrisInterpolation.java"
	FieldsOf: com.volmit.iris.util.IrisInterpolation
	MethodsOf: com.volmit.iris.util.IrisInterpolation
		public void <init>() 	SignatureNotChanged
		public static double bezier(double)	=>	b(double)
		public static double bicubic(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)	=>	a(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)
		public static double bihermite(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)	=>	a(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double)
		public static double blerp(double, double, double, double, double, double)	=>	a(double, double, double, double, double, double)
		public static double blerp(double, double, double, double, double, double, com.volmit.iris.util.InterpolationType)	=>	a(double, double, double, double, double, double, com.volmit.iris.f.c)
		public static double blerpBezier(double, double, double, double, double, double)	=>	b(double, double, double, double, double, double)
		public static double blerpParametric(double, double, double, double, double, double, double)	=>	b(double, double, double, double, double, double, double)
		public static double cubic(double, double, double, double, double)	=>	b(double, double, double, double, double)
		public static double getBicubicNoise(int, int, double, com.volmit.iris.util.NoiseProvider)	=>	a(int, int, double, com.volmit.iris.f.T)
		public static double getBilinearNoise(int, int, double, com.volmit.iris.util.NoiseProvider)	=>	b(int, int, double, com.volmit.iris.f.T)
		public static double getHermiteNoise(int, int, double, com.volmit.iris.util.NoiseProvider)	=>	c(int, int, double, com.volmit.iris.f.T)
		public static double getNoise(com.volmit.iris.object.InterpolationMethod, int, int, double, com.volmit.iris.util.NoiseProvider)	=>	a(com.volmit.iris.b.t, int, int, double, com.volmit.iris.f.T)
		public static double hermite(double, double, double, double, double, double, double)	=>	a(double, double, double, double, double, double, double)
		public static double lerp(double, double, double)	=>	b(double, double, double)
		public static double lerpBezier(double, double, double)	=>	d(double, double, double)
		public static double lerpCenterSin(double, double, double)	=>	a(double, double, double)
		public static double lerpCenterSinBezier(double, double, double)	=>	c(double, double, double)
		public static double lerpParametric(double, double, double, double)	=>	a(double, double, double, double)
		public static float lerpf(float, float, float)	=>	a(float, float, float)
		public static double parametric(double, double)	=>	a(double, double)
		public static double rangeScale(double, double, double, double, double)	=>	a(double, double, double, double, double)
		public static double sinCenter(double)	=>	a(double)
	LineNumbersOf: com.volmit.iris.util.IrisInterpolation
		5	=>	113
		9	=>	16
		14	=>	3
		15	=>	2
		20	=>	120
		25	=>	31
		30	=>	32
		35	=>	79
		40	=>	86
		45	=>	103
		50	=>	61
		55	=>	101
		60	=>	104
		62	=>	26
		65	=>	107
		67	=>	122
		70	=>	71
		72	=>	25
		75	=>	64
		77	=>	94
		80	=>	19
		85	=>	96
		90	=>	30
		98	=>	22
		99	=>	1
		100	=>	43
		101	=>	106
		102	=>	11
		103	=>	87
		104	=>	76
		105	=>	66
		106	=>	68
		107	=>	35
		109	=>	75
		114	=>	29
		121	=>	18
		122	=>	89
		123	=>	9
		124	=>	24
		125	=>	78
		127	=>	40
		132	=>	33
		137	=>	124
		138	=>	55
		139	=>	36
		140	=>	8
		141	=>	116
		142	=>	62
		143	=>	110
		144	=>	15
		146	=>	4 and 52
		147	=>	5
		148	=>	12
		149	=>	111
		150	=>	93
		157	=>	112
		158	=>	118
		159	=>	48
		160	=>	41
		161	=>	99
		162	=>	20
		163	=>	81
		164	=>	38
		165	=>	73
		166	=>	67
		167	=>	109
		168	=>	85
		170	=>	34 and 80
		171	=>	92
		172	=>	56
		173	=>	57
		174	=>	6
		175	=>	7
		176	=>	117
		177	=>	13
		178	=>	115
		179	=>	27
		180	=>	23
		181	=>	102
		182	=>	39
		183	=>	74
		184	=>	47
		185	=>	28
		186	=>	95
		193	=>	58
		194	=>	69
		195	=>	123
		196	=>	83
		197	=>	51
		198	=>	21
		199	=>	45
		200	=>	53
		201	=>	65
		202	=>	121
		203	=>	17
		204	=>	46
		206	=>	37 and 50
		207	=>	10
		208	=>	88
		209	=>	90
		210	=>	70
		211	=>	97
		212	=>	44
		213	=>	100
		214	=>	119
		215	=>	14
		216	=>	72
		217	=>	108
		218	=>	59
		219	=>	114
		220	=>	54
		221	=>	63
		222	=>	42
		229	=>	60
		231	=>	82
		234	=>	91
		236	=>	105
		239	=>	98
		241	=>	49
		244	=>	77
		249	=>	84

Class: public abstract com.volmit.iris.util.IrisPostBlockFilter	=>	com.volmit.iris.f.bV
	Source: "IrisPostBlockFilter.java"
	FieldsOf: com.volmit.iris.util.IrisPostBlockFilter
		public com.volmit.iris.generator.PostBlockChunkGenerator gen	=>	a
		private java.lang.String key	=>	b
		private int phase	=>	c
		private com.volmit.iris.util.KList queue	=>	d
	MethodsOf: com.volmit.iris.util.IrisPostBlockFilter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.generator.PostBlockChunkGenerator, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.KList caveFloors(int, int)	=>	h(int, int)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.generator.PostBlockChunkGenerator getGen()	=>	b()
		public java.lang.String getKey()	=>	c()
		public int getPhase()	=>	a()
		public org.bukkit.block.data.BlockData getPostBlock(int, int, int)	=>	d(int, int, int)
		public com.volmit.iris.util.KList getQueue()	=>	d()
		public int hashCode() 	SignatureNotChanged
		public int highestTerrainBlock(int, int)	=>	g(int, int)
		public int highestTerrainOrFluidBlock(int, int)	=>	f(int, int)
		public boolean isAir(int, int, int)	=>	a(int, int, int)
		public boolean isAirOrWater(int, int, int)	=>	e(int, int, int)
		public boolean isLiquid(int, int, int)	=>	f(int, int, int)
		public boolean isSlab(int, int, int)	=>	i(int, int, int)
		public boolean isSolid(int, int, int)	=>	h(int, int, int)
		public boolean isWater(int, int, int)	=>	b(int, int, int)
		public boolean isWaterOrWaterlogged(int, int, int)	=>	g(int, int, int)
		public abstract void onPost(int, int)	=>	a(int, int)
		public void queue(java.lang.Runnable)	=>	a(java.lang.Runnable)
		public void setGen(com.volmit.iris.generator.PostBlockChunkGenerator)	=>	a(com.volmit.iris.d.g)
		public void setKey(java.lang.String)	=>	a(java.lang.String)
		public void setPhase(int)	=>	a(int)
		public void setPostBlock(int, int, int, org.bukkit.block.data.BlockData)	=>	b(int, int, int, org.bukkit.block.data.BlockData)
		public void setQueue(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public java.lang.String toString() 	SignatureNotChanged
		public void updateHeight(int, int, int)	=>	c(int, int, int)
	LineNumbersOf: com.volmit.iris.util.IrisPostBlockFilter
		14	=>	3, 14, 20, 28, 30, 32, 34 and 39
		17	=>	33
		18	=>	12
		19	=>	19
		20	=>	13
		23	=>	4
		24	=>	15
		25	=>	41
		26	=>	25
		27	=>	40
		28	=>	43
		32	=>	24
		33	=>	38
		40	=>	18
		46	=>	23
		47	=>	42
		52	=>	44
		58	=>	6
		63	=>	16
		64	=>	7
		69	=>	36
		70	=>	5
		75	=>	9
		76	=>	11
		81	=>	26
		82	=>	31
		87	=>	10
		88	=>	27
		93	=>	17
		94	=>	21
		99	=>	1
		100	=>	37
		106	=>	22
		111	=>	2
		112	=>	35
		117	=>	8
		118	=>	29

Class: public com.volmit.iris.util.J	=>	com.volmit.iris.f.y
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J
		private static final java.util.concurrent.ExecutorService e	=>	a
		private static int tid	=>	b
	MethodsOf: com.volmit.iris.util.J
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static void a(java.lang.Runnable)	=>	b(java.lang.Runnable)
		public static java.util.concurrent.Future a(java.util.concurrent.Callable)	=>	b(java.util.concurrent.Callable)
		static synthetic int access$000() 	SignatureNotChanged
		static synthetic int access$008() 	SignatureNotChanged
		public static boolean attempt(com.volmit.iris.util.NastyRunnable)	=>	c(com.volmit.iris.f.B)
		public static java.lang.Object attempt(java.util.function.Supplier, java.lang.Object)	=>	a(java.util.function.Supplier, java.lang.Object)
		public static void attemptAsync(com.volmit.iris.util.NastyRunnable)	=>	b(com.volmit.iris.f.B)
		public static java.lang.Throwable attemptCatch(com.volmit.iris.util.NastyRunnable)	=>	a(com.volmit.iris.f.B)
		public static java.lang.Object attemptFunction(com.volmit.iris.util.NastyFunction, java.lang.Object, java.lang.Object)	=>	a(com.volmit.iris.f.A, java.lang.Object, java.lang.Object)
		public static java.lang.Object attemptResult(com.volmit.iris.util.NastyFuture, java.lang.Object)	=>	a(com.volmit.iris.f.Z, java.lang.Object)
		public static void dofor(int, java.util.function.Function, int, java.util.function.Consumer)	=>	a(int, java.util.function.Function, int, java.util.function.Consumer)
		public static boolean doif(java.util.function.Supplier, java.lang.Runnable)	=>	a(java.util.function.Supplier, java.lang.Runnable)
		private static synthetic java.lang.Boolean lambda$attemptAsync$0(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		private static synthetic void lambda$sleep$1(long) 	SignatureNotChanged
		public static boolean sleep(long)	=>	a(long)
	LineNumbersOf: com.volmit.iris.util.J
		14	=>	16, 18 and 34
		16	=>	35
		17	=>	21
		38	=>	30 and 32
		40	=>	33
		42	=>	27
		46	=>	2
		48	=>	29
		49	=>	23
		52	=>	36
		57	=>	20
		58	=>	9
		62	=>	24
		67	=>	6 and 17
		68	=>	25
		74	=>	4
		77	=>	22
		82	=>	19
		89	=>	1
		92	=>	13
		97	=>	12
		102	=>	3 and 28
		107	=>	8
		114	=>	11
		117	=>	10
		119	=>	15
		120	=>	7
		122	=>	31
		129	=>	14
		132	=>	5
		134	=>	26

Class: final com.volmit.iris.util.J$1	=>	com.volmit.iris.f.y$a
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J$1
	MethodsOf: com.volmit.iris.util.J$1
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static synthetic void lambda$newThread$0(java.lang.Thread, java.lang.Throwable) 	SignatureNotChanged
		public java.lang.Thread newThread(java.lang.Runnable) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.J$1
		18	=>	2
		22	=>	4
		23	=>	3
		24	=>	10
		25	=>	7
		26	=>	6
		28	=>	1
		29	=>	9
		30	=>	8
		32	=>	5

Class: public com.volmit.iris.util.JSONArray	=>	com.volmit.iris.f.a3
	Source: "JSONArray.java"
	FieldsOf: com.volmit.iris.util.JSONArray
		private final java.util.ArrayList myArrayList	=>	a
	MethodsOf: com.volmit.iris.util.JSONArray
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONTokener) 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object get(int)	=>	h(int)
		public java.math.BigDecimal getBigDecimal(int)	=>	r(int)
		public java.math.BigInteger getBigInteger(int)	=>	j(int)
		public boolean getBoolean(int)	=>	l(int)
		public double getDouble(int)	=>	b(int)
		public java.lang.Enum getEnum(java.lang.Class, int)	=>	a(java.lang.Class, int)
		public int getInt(int)	=>	d(int)
		public com.volmit.iris.util.JSONArray getJSONArray(int)	=>	s(int)
		public com.volmit.iris.util.JSONObject getJSONObject(int)	=>	g(int)
		public long getLong(int)	=>	t(int)
		public java.lang.String getString(int)	=>	o(int)
		public boolean isNull(int)	=>	q(int)
		public java.util.Iterator iterator() 	SignatureNotChanged
		public java.lang.String join(java.lang.String)	=>	a(java.lang.String)
		public int length()	=>	a()
		public java.lang.Object opt(int)	=>	e(int)
		public java.math.BigDecimal optBigDecimal(int, java.math.BigDecimal)	=>	a(int, java.math.BigDecimal)
		public java.math.BigInteger optBigInteger(int, java.math.BigInteger)	=>	a(int, java.math.BigInteger)
		public boolean optBoolean(int)	=>	c(int)
		public boolean optBoolean(int, boolean)	=>	a(int, boolean)
		public double optDouble(int)	=>	n(int)
		public double optDouble(int, double)	=>	a(int, double)
		public java.lang.Enum optEnum(java.lang.Class, int)	=>	b(java.lang.Class, int)
		public java.lang.Enum optEnum(java.lang.Class, int, java.lang.Enum)	=>	a(java.lang.Class, int, java.lang.Enum)
		public int optInt(int)	=>	u(int)
		public int optInt(int, int)	=>	b(int, int)
		public com.volmit.iris.util.JSONArray optJSONArray(int)	=>	k(int)
		public com.volmit.iris.util.JSONObject optJSONObject(int)	=>	p(int)
		public long optLong(int)	=>	f(int)
		public long optLong(int, long)	=>	b(int, long)
		public java.lang.String optString(int)	=>	m(int)
		public java.lang.String optString(int, java.lang.String)	=>	a(int, java.lang.String)
		public com.volmit.iris.util.JSONArray put(boolean)	=>	a(boolean)
		public com.volmit.iris.util.JSONArray put(double)	=>	a(double)
		public com.volmit.iris.util.JSONArray put(int)	=>	v(int)
		public com.volmit.iris.util.JSONArray put(int, boolean)	=>	b(int, boolean)
		public com.volmit.iris.util.JSONArray put(int, double)	=>	b(int, double)
		public com.volmit.iris.util.JSONArray put(int, int)	=>	a(int, int)
		public com.volmit.iris.util.JSONArray put(int, java.lang.Object)	=>	a(int, java.lang.Object)
		public com.volmit.iris.util.JSONArray put(int, java.util.Collection)	=>	a(int, java.util.Collection)
		public com.volmit.iris.util.JSONArray put(int, java.util.Map)	=>	a(int, java.util.Map)
		public com.volmit.iris.util.JSONArray put(int, long)	=>	a(int, long)
		public com.volmit.iris.util.JSONArray put(java.lang.Object)	=>	b(java.lang.Object)
		public com.volmit.iris.util.JSONArray put(java.util.Collection)	=>	a(java.util.Collection)
		public com.volmit.iris.util.JSONArray put(java.util.Map)	=>	a(java.util.Map)
		public com.volmit.iris.util.JSONArray put(long)	=>	a(long)
		public java.lang.Object remove(int)	=>	i(int)
		public boolean similar(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.JSONObject toJSONObject(com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.f.a3)
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(int)	=>	a(int)
		public java.io.Writer write(java.io.Writer)	=>	a(java.io.Writer)
		java.io.Writer write(java.io.Writer, int, int)	=>	a(java.io.Writer, int, int)
	LineNumbersOf: com.volmit.iris.util.JSONArray
		95	=>	194
		96	=>	128
		97	=>	145
		109	=>	120
		110	=>	197
		112	=>	61
		114	=>	224
		116	=>	165
		119	=>	9
		121	=>	19
		122	=>	202
		125	=>	204
		126	=>	98
		128	=>	51
		131	=>	80
		133	=>	220
		135	=>	36
		136	=>	123
		138	=>	82
		140	=>	115
		144	=>	143
		158	=>	49
		159	=>	26
		168	=>	192
		169	=>	195
		170	=>	43
		172	=>	168
		173	=>	227
		175	=>	221
		178	=>	86
		188	=>	24
		189	=>	162
		191	=>	117
		192	=>	52 and 169
		194	=>	89
		196	=>	163
		198	=>	213
		200	=>	15
		205	=>	73
		219	=>	14
		220	=>	58
		222	=>	54
		224	=>	174
		240	=>	147
		241	=>	201
		243	=>	210
		244	=>	77
		246	=>	114
		248	=>	199
		263	=>	196
		266	=>	96
		267	=>	151
		269	=>	138
		287	=>	46
		288	=>	76
		293	=>	103
		295	=>	92
		310	=>	66
		313	=>	67
		314	=>	30
		316	=>	44
		332	=>	166
		335	=>	69
		336	=>	149
		338	=>	100
		353	=>	153
		356	=>	122
		357	=>	140
		359	=>	129
		375	=>	95
		376	=>	27
		378	=>	141
		380	=>	75
		395	=>	60
		396	=>	164
		398	=>	206
		400	=>	155
		415	=>	216
		418	=>	94
		419	=>	5
		421	=>	232
		436	=>	10
		437	=>	38
		439	=>	170
		441	=>	55
		453	=>	81
		469	=>	35
		470	=>	85
		472	=>	161 and 172
		474	=>	136
		476	=>	134
		478	=>	176
		480	=>	125
		490	=>	34
		502	=>	79
		516	=>	74
		534	=>	1
		535	=>	171
		537	=>	93
		552	=>	159
		570	=>	121
		571	=>	3
		573	=>	28
		588	=>	18
		606	=>	56
		607	=>	50
		609	=>	167
		624	=>	47
		643	=>	160
		644	=>	70
		646	=>	173
		648	=>	154
		652	=>	4
		653	=>	62
		655	=>	132
		658	=>	152
		660	=>	48
		663	=>	97
		665	=>	42
		684	=>	8
		685	=>	105
		687	=>	71
		706	=>	112
		707	=>	37
		709	=>	223
		723	=>	90
		724	=>	185
		738	=>	187
		739	=>	101
		753	=>	139
		771	=>	177
		772	=>	16
		774	=>	72
		789	=>	126
		804	=>	142
		805	=>	33
		817	=>	41
		818	=>	217
		831	=>	137
		832	=>	64
		846	=>	78
		847	=>	57
		848	=>	21
		849	=>	45
		861	=>	191
		862	=>	116
		874	=>	158
		875	=>	231
		888	=>	198
		889	=>	20
		903	=>	180
		904	=>	83
		922	=>	148
		923	=>	193
		940	=>	59
		941	=>	186
		959	=>	106
		960	=>	63
		978	=>	150
		979	=>	87
		997	=>	200
		998	=>	184
		1016	=>	214
		1017	=>	113
		1038	=>	110
		1039	=>	32
		1041	=>	102
		1043	=>	88
		1045	=>	23
		1048	=>	130
		1050	=>	12
		1052	=>	146
		1054	=>	215
		1067	=>	203
		1080	=>	65
		1082	=>	99
		1084	=>	107
		1085	=>	118
		1087	=>	230
		1089	=>	6 and 22
		1091	=>	157
		1092	=>	2
		1093	=>	11
		1095	=>	225
		1097	=>	181
		1099	=>	111
		1101	=>	144
		1103	=>	131
		1105	=>	219
		1107	=>	189
		1110	=>	175
		1127	=>	208
		1129	=>	188
		1131	=>	156
		1132	=>	17 and 211
		1134	=>	84
		1136	=>	179
		1155	=>	222
		1156	=>	91
		1158	=>	124
		1176	=>	135
		1177	=>	212
		1179	=>	178
		1180	=>	228
		1194	=>	205
		1214	=>	127
		1215	=>	109
		1216	=>	68
		1218	=>	29
		1220	=>	31
		1221	=>	39
		1223	=>	108
		1225	=>	190 and 209
		1227	=>	53
		1229	=>	104
		1231	=>	133
		1233	=>	119
		1235	=>	40
		1236	=>	183
		1237	=>	13
		1239	=>	182
		1241	=>	218
		1243	=>	229
		1245	=>	226
		1246	=>	207
		1247	=>	25
		1249	=>	7

Class: public com.volmit.iris.util.JSONException	=>	com.volmit.iris.f.aQ
	Source: "JSONException.java"
	FieldsOf: com.volmit.iris.util.JSONException
		private java.lang.Throwable cause	=>	a
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.JSONException
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
		public java.lang.Throwable getCause() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.JSONException
		23	=>	2
		24	=>	3
		34	=>	5
		35	=>	6
		36	=>	4
		48	=>	1

Class: public com.volmit.iris.util.JSONML	=>	com.volmit.iris.f.aN
	Source: "JSONML.java"
	FieldsOf: com.volmit.iris.util.JSONML
	MethodsOf: com.volmit.iris.util.JSONML
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		private static java.lang.Object parse(com.volmit.iris.util.XMLTokener, boolean, com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.f.bb, boolean, com.volmit.iris.f.a3)
		public static com.volmit.iris.util.JSONArray toJSONArray(com.volmit.iris.util.XMLTokener)	=>	a(com.volmit.iris.f.bb)
		public static com.volmit.iris.util.JSONArray toJSONArray(java.lang.String)	=>	b(java.lang.String)
		public static com.volmit.iris.util.JSONObject toJSONObject(com.volmit.iris.util.XMLTokener)	=>	b(com.volmit.iris.f.bb)
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String)	=>	a(java.lang.String)
		public static java.lang.String toString(com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.f.a3)
		public static java.lang.String toString(com.volmit.iris.util.JSONObject)	=>	a(com.volmit.iris.f.al)
	LineNumbersOf: com.volmit.iris.util.JSONML
		38	=>	47
		58	=>	29
		60	=>	138
		61	=>	109
		63	=>	77
		73	=>	154
		75	=>	26
		77	=>	167
		78	=>	146
		80	=>	130
		81	=>	20
		83	=>	137
		88	=>	13
		89	=>	98
		91	=>	96
		93	=>	165
		95	=>	179
		97	=>	35
		98	=>	74
		103	=>	141
		104	=>	148
		106	=>	69
		108	=>	91
		111	=>	134
		113	=>	108
		115	=>	15
		116	=>	158
		118	=>	170
		120	=>	55
		124	=>	152
		128	=>	62
		131	=>	187
		132	=>	131
		134	=>	12
		135	=>	78
		137	=>	28
		138	=>	22
		140	=>	121
		142	=>	65
		144	=>	36
		149	=>	39
		152	=>	159
		159	=>	185
		161	=>	92
		163	=>	49
		164	=>	23
		165	=>	54
		166	=>	27
		168	=>	7
		169	=>	111
		171	=>	82
		175	=>	142
		176	=>	80
		178	=>	181
		181	=>	100
		184	=>	184
		186	=>	21
		188	=>	183
		190	=>	150
		192	=>	114
		194	=>	139
		199	=>	88
		200	=>	14
		202	=>	112
		204	=>	99
		205	=>	79
		207	=>	9
		208	=>	42
		210	=>	52
		212	=>	40
		213	=>	102
		216	=>	50
		219	=>	51
		221	=>	87
		226	=>	126
		228	=>	103
		230	=>	143
		232	=>	3
		234	=>	164
		236	=>	177
		239	=>	178
		247	=>	168
		249	=>	176
		251	=>	153
		252	=>	25
		254	=>	72
		256	=>	71
		258	=>	169
		259	=>	90
		261	=>	63
		263	=>	70
		265	=>	162
		267	=>	124
		270	=>	151
		278	=>	18
		280	=>	61
		302	=>	17
		321	=>	16
		341	=>	95
		361	=>	75
		380	=>	44
		386	=>	67
		387	=>	180
		388	=>	10
		389	=>	173
		390	=>	132
		392	=>	144
		393	=>	89
		395	=>	41
		396	=>	38
		400	=>	81
		401	=>	31
		403	=>	33
		404	=>	57
		405	=>	129
		406	=>	113
		408	=>	133
		409	=>	123
		410	=>	122
		411	=>	1
		412	=>	5
		413	=>	125
		418	=>	106
		423	=>	34
		424	=>	163
		426	=>	136
		427	=>	186
		430	=>	84
		433	=>	37
		434	=>	6
		435	=>	140
		437	=>	135
		439	=>	128
		440	=>	171
		442	=>	105
		443	=>	104
		445	=>	160
		448	=>	94
		451	=>	73
		452	=>	93
		453	=>	64
		454	=>	101
		455	=>	161
		457	=>	156
		473	=>	32
		485	=>	115
		486	=>	8
		488	=>	19
		490	=>	45
		491	=>	117
		492	=>	107
		493	=>	119
		497	=>	59
		498	=>	46
		500	=>	2
		501	=>	60
		503	=>	4
		504	=>	86
		505	=>	53
		507	=>	166
		508	=>	66
		509	=>	120
		510	=>	11
		511	=>	182
		512	=>	110
		519	=>	157
		520	=>	24
		522	=>	85
		523	=>	155
		526	=>	147
		527	=>	174
		528	=>	83 and 97
		530	=>	175
		531	=>	68
		533	=>	149
		535	=>	43
		536	=>	48
		538	=>	58
		539	=>	30
		541	=>	118
		544	=>	56
		548	=>	116
		549	=>	76
		550	=>	172
		551	=>	127
		553	=>	145

Class: public com.volmit.iris.util.JSONObject	=>	com.volmit.iris.f.al
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject
		public static final java.lang.Object NULL	=>	b
		private final java.util.Map map	=>	a
	MethodsOf: com.volmit.iris.util.JSONObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONObject, java.lang.String[]) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONTokener) 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.Object, java.lang.String[]) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.util.Locale) 	SignatureNotChanged
		public void <init>(java.util.Map) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject accumulate(java.lang.String, java.lang.Object)	=>	a(java.lang.String, java.lang.Object)
		public com.volmit.iris.util.JSONObject append(java.lang.String, java.lang.Object)	=>	d(java.lang.String, java.lang.Object)
		public static java.lang.String doubleToString(double)	=>	a(double)
		public java.lang.Object get(java.lang.String)	=>	w(java.lang.String)
		public java.math.BigDecimal getBigDecimal(java.lang.String)	=>	o(java.lang.String)
		public java.math.BigInteger getBigInteger(java.lang.String)	=>	v(java.lang.String)
		public boolean getBoolean(java.lang.String)	=>	f(java.lang.String)
		public double getDouble(java.lang.String)	=>	c(java.lang.String)
		public java.lang.Enum getEnum(java.lang.Class, java.lang.String)	=>	a(java.lang.Class, java.lang.String)
		public int getInt(java.lang.String)	=>	n(java.lang.String)
		public com.volmit.iris.util.JSONArray getJSONArray(java.lang.String)	=>	s(java.lang.String)
		public com.volmit.iris.util.JSONObject getJSONObject(java.lang.String)	=>	a(java.lang.String)
		public long getLong(java.lang.String)	=>	q(java.lang.String)
		public static java.lang.String[] getNames(com.volmit.iris.util.JSONObject)	=>	a(com.volmit.iris.f.al)
		public static java.lang.String[] getNames(java.lang.Object)	=>	c(java.lang.Object)
		public java.lang.String getString(java.lang.String)	=>	k(java.lang.String)
		public boolean has(java.lang.String)	=>	d(java.lang.String)
		public com.volmit.iris.util.JSONObject increment(java.lang.String)	=>	x(java.lang.String)
		static final void indent(java.io.Writer, int)	=>	a(java.io.Writer, int)
		public boolean isNull(java.lang.String)	=>	i(java.lang.String)
		public java.util.Set keySet()	=>	d()
		public java.util.Iterator keys()	=>	c()
		public int length()	=>	b()
		public com.volmit.iris.util.JSONArray names()	=>	a()
		public static java.lang.String numberToString(java.lang.Number)	=>	a(java.lang.Number)
		public java.lang.Object opt(java.lang.String)	=>	b(java.lang.String)
		public java.math.BigDecimal optBigDecimal(java.lang.String, java.math.BigDecimal)	=>	a(java.lang.String, java.math.BigDecimal)
		public java.math.BigInteger optBigInteger(java.lang.String, java.math.BigInteger)	=>	a(java.lang.String, java.math.BigInteger)
		public boolean optBoolean(java.lang.String)	=>	e(java.lang.String)
		public boolean optBoolean(java.lang.String, boolean)	=>	b(java.lang.String, boolean)
		public double optDouble(java.lang.String)	=>	p(java.lang.String)
		public double optDouble(java.lang.String, double)	=>	a(java.lang.String, double)
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String)	=>	b(java.lang.Class, java.lang.String)
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String, java.lang.Enum)	=>	a(java.lang.Class, java.lang.String, java.lang.Enum)
		public int optInt(java.lang.String)	=>	g(java.lang.String)
		public int optInt(java.lang.String, int)	=>	a(java.lang.String, int)
		public com.volmit.iris.util.JSONArray optJSONArray(java.lang.String)	=>	u(java.lang.String)
		public com.volmit.iris.util.JSONObject optJSONObject(java.lang.String)	=>	j(java.lang.String)
		public long optLong(java.lang.String)	=>	l(java.lang.String)
		public long optLong(java.lang.String, long)	=>	a(java.lang.String, long)
		public java.lang.String optString(java.lang.String)	=>	r(java.lang.String)
		public java.lang.String optString(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		private void populateMap(java.lang.Object)	=>	e(java.lang.Object)
		public com.volmit.iris.util.JSONObject put(java.lang.String, boolean)	=>	a(java.lang.String, boolean)
		public com.volmit.iris.util.JSONObject put(java.lang.String, double)	=>	b(java.lang.String, double)
		public com.volmit.iris.util.JSONObject put(java.lang.String, int)	=>	b(java.lang.String, int)
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.lang.Object)	=>	e(java.lang.String, java.lang.Object)
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.util.Collection)	=>	a(java.lang.String, java.util.Collection)
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.util.Map)	=>	a(java.lang.String, java.util.Map)
		public com.volmit.iris.util.JSONObject put(java.lang.String, long)	=>	b(java.lang.String, long)
		public com.volmit.iris.util.JSONObject putOnce(java.lang.String, java.lang.Object)	=>	c(java.lang.String, java.lang.Object)
		public com.volmit.iris.util.JSONObject putOpt(java.lang.String, java.lang.Object)	=>	b(java.lang.String, java.lang.Object)
		public static java.lang.String quote(java.lang.String)	=>	t(java.lang.String)
		public static java.io.Writer quote(java.lang.String, java.io.Writer)	=>	a(java.lang.String, java.io.Writer)
		public java.lang.Object remove(java.lang.String)	=>	m(java.lang.String)
		public boolean similar(java.lang.Object)	=>	f(java.lang.Object)
		public static java.lang.Object stringToValue(java.lang.String)	=>	h(java.lang.String)
		public static void testValidity(java.lang.Object)	=>	b(java.lang.Object)
		public com.volmit.iris.util.JSONArray toJSONArray(com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.f.a3)
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(int)	=>	a(int)
		public static java.lang.String valueToString(java.lang.Object)	=>	a(java.lang.Object)
		public static java.lang.Object wrap(java.lang.Object)	=>	d(java.lang.Object)
		public java.io.Writer write(java.io.Writer)	=>	a(java.io.Writer)
		java.io.Writer write(java.io.Writer, int, int)	=>	a(java.io.Writer, int, int)
		static final java.io.Writer writeValue(java.io.Writer, java.lang.Object, int, int)	=>	a(java.io.Writer, java.lang.Object, int, int)
	LineNumbersOf: com.volmit.iris.util.JSONObject
		154	=>	323
		160	=>	92
		161	=>	439
		162	=>	498
		180	=>	90
		181	=>	107 and 276
		185	=>	259
		186	=>	30
		188	=>	85
		190	=>	325
		203	=>	415
		207	=>	237
		209	=>	380
		213	=>	372
		214	=>	329
		217	=>	21
		219	=>	89
		221	=>	41
		222	=>	301
		227	=>	492
		228	=>	302
		230	=>	198
		232	=>	239
		236	=>	38
		240	=>	453
		242	=>	13
		244	=>	83
		245	=>	19
		247	=>	411
		249	=>	210
		263	=>	368
		264	=>	296
		265	=>	155
		267	=>	176
		268	=>	249
		270	=>	508
		271	=>	352
		272	=>	108
		274	=>	183
		276	=>	511
		278	=>	124
		303	=>	469
		304	=>	256
		305	=>	407
		323	=>	250
		324	=>	518
		325	=>	164 and 459
		327	=>	213
		330	=>	452
		331	=>	399
		333	=>	314
		335	=>	289
		351	=>	471
		352	=>	330
		366	=>	238
		367	=>	54
		371	=>	333
		372	=>	292
		374	=>	409
		375	=>	167
		384	=>	86
		385	=>	274
		386	=>	45
		387	=>	177 and 403
		389	=>	174
		390	=>	178
		391	=>	101
		393	=>	205
		394	=>	187
		396	=>	133
		398	=>	447
		400	=>	4
		401	=>	203
		424	=>	455
		425	=>	280
		426	=>	386
		428	=>	18
		429	=>	225
		431	=>	485
		434	=>	252
		436	=>	270
		456	=>	387
		457	=>	181
		458	=>	159
		460	=>	266
		461	=>	464
		463	=>	458
		466	=>	476
		468	=>	1
		481	=>	480
		483	=>	500
		488	=>	10
		489	=>	398
		491	=>	25
		493	=>	3
		495	=>	278
		497	=>	431
		500	=>	417
		514	=>	356
		516	=>	110
		518	=>	290
		519	=>	97
		521	=>	282
		523	=>	191
		540	=>	119
		541	=>	262
		546	=>	316
		548	=>	184
		563	=>	463
		564	=>	217
		566	=>	376
		567	=>	232
		569	=>	426
		571	=>	52
		586	=>	420
		589	=>	208
		590	=>	118
		592	=>	248
		608	=>	285
		611	=>	327
		612	=>	221
		614	=>	121
		630	=>	8
		633	=>	122
		634	=>	126
		636	=>	395
		652	=>	392
		655	=>	22
		656	=>	136
		658	=>	42
		673	=>	6
		674	=>	346
		676	=>	479
		678	=>	135
		692	=>	298
		693	=>	31
		695	=>	506
		697	=>	412
		712	=>	60
		715	=>	424
		716	=>	34
		718	=>	24
		729	=>	29
		730	=>	226
		732	=>	428
		734	=>	201
		735	=>	91
		736	=>	338
		737	=>	491
		739	=>	240
		740	=>	383
		742	=>	438
		752	=>	268
		754	=>	369
		756	=>	162
		757	=>	11
		758	=>	170
		759	=>	120
		761	=>	189
		763	=>	501
		764	=>	334 and 377
		766	=>	305
		768	=>	227
		782	=>	157
		783	=>	132
		785	=>	106
		787	=>	79
		799	=>	517
		816	=>	341
		817	=>	127
		819	=>	365
		820	=>	418
		822	=>	78
		823	=>	69
		825	=>	158
		826	=>	43
		828	=>	462
		829	=>	152
		831	=>	204
		832	=>	396
		834	=>	75
		835	=>	68
		837	=>	214
		840	=>	394
		842	=>	516
		856	=>	263
		866	=>	80
		876	=>	202
		886	=>	134
		898	=>	230
		899	=>	294
		900	=>	165
		902	=>	175
		904	=>	140
		918	=>	141
		920	=>	299
		922	=>	347
		926	=>	73
		927	=>	261
		929	=>	113
		931	=>	344
		933	=>	281
		935	=>	2
		938	=>	499
		950	=>	340
		964	=>	197
		983	=>	433
		984	=>	81
		986	=>	473
		988	=>	195
		992	=>	148
		993	=>	423
		995	=>	37
		998	=>	185
		1000	=>	449
		1003	=>	70
		1005	=>	408
		1019	=>	151
		1037	=>	48
		1038	=>	88
		1040	=>	265
		1055	=>	300
		1073	=>	445
		1074	=>	306
		1076	=>	55
		1095	=>	474
		1096	=>	142
		1098	=>	336
		1117	=>	505
		1118	=>	363
		1120	=>	267
		1135	=>	379
		1153	=>	358
		1154	=>	35
		1156	=>	318
		1170	=>	46
		1171	=>	49
		1184	=>	288
		1185	=>	17
		1199	=>	391
		1217	=>	71
		1218	=>	430
		1220	=>	64
		1235	=>	514
		1250	=>	72
		1251	=>	283
		1256	=>	172
		1260	=>	307
		1262	=>	9
		1263	=>	77 and 450
		1267	=>	193
		1268	=>	156
		1270	=>	467
		1271	=>	443
		1272	=>	112
		1274	=>	196
		1276	=>	123
		1279	=>	188
		1281	=>	303
		1283	=>	360
		1285	=>	354
		1287	=>	312
		1289	=>	446
		1290	=>	168
		1292	=>	429
		1295	=>	320
		1296	=>	84
		1298	=>	246
		1302	=>	437
		1304	=>	357
		1306	=>	342
		1321	=>	367
		1322	=>	247
		1338	=>	115
		1339	=>	100
		1355	=>	44
		1356	=>	40
		1372	=>	207
		1373	=>	371
		1389	=>	444
		1390	=>	279
		1406	=>	67
		1407	=>	432
		1426	=>	488
		1428	=>	441
		1430	=>	95
		1432	=>	137
		1433	=>	192
		1436	=>	111
		1438	=>	222
		1456	=>	382
		1458	=>	451
		1460	=>	421
		1462	=>	304
		1464	=>	515
		1483	=>	487
		1485	=>	242
		1487	=>	359
		1502	=>	146
		1503	=>	317
		1507	=>	454
		1508	=>	93
		1511	=>	297
		1513	=>	16
		1518	=>	370
		1520	=>	385
		1521	=>	493
		1525	=>	373
		1528	=>	59
		1530	=>	496
		1531	=>	309 and 335
		1533	=>	348
		1534	=>	169
		1535	=>	199
		1539	=>	351
		1540	=>	482
		1541	=>	104
		1543	=>	319
		1545	=>	5
		1547	=>	94
		1548	=>	228
		1550	=>	393
		1551	=>	179
		1553	=>	255
		1554	=>	241
		1556	=>	481
		1557	=>	513
		1559	=>	324
		1560	=>	144
		1562	=>	388
		1563	=>	139
		1565	=>	171
		1567	=>	375
		1568	=>	502
		1569	=>	163
		1570	=>	275
		1573	=>	440
		1577	=>	244
		1578	=>	160
		1591	=>	63
		1606	=>	366
		1608	=>	161
		1610	=>	114
		1611	=>	315
		1613	=>	472
		1615	=>	14
		1616	=>	215
		1618	=>	475
		1619	=>	448
		1620	=>	103
		1621	=>	62
		1623	=>	425
		1625	=>	410
		1627	=>	145
		1629	=>	224
		1631	=>	350
		1633	=>	512
		1635	=>	235
		1637	=>	364
		1638	=>	182
		1639	=>	154
		1641	=>	332
		1656	=>	150
		1658	=>	143
		1660	=>	23
		1662	=>	180
		1664	=>	310
		1666	=>	390
		1668	=>	223
		1670	=>	291
		1678	=>	349
		1679	=>	27
		1683	=>	293
		1685	=>	220
		1686	=>	322
		1688	=>	405
		1692	=>	186
		1693	=>	295
		1695	=>	414
		1697	=>	419
		1700	=>	339
		1704	=>	200
		1706	=>	273
		1708	=>	271
		1721	=>	12
		1723	=>	82
		1725	=>	61
		1727	=>	149
		1729	=>	486
		1731	=>	56
		1733	=>	20
		1737	=>	211
		1752	=>	190
		1754	=>	99
		1756	=>	337
		1757	=>	65 and 194
		1759	=>	272
		1761	=>	442
		1780	=>	147
		1781	=>	33
		1783	=>	138
		1803	=>	436
		1804	=>	489
		1806	=>	236
		1807	=>	219
		1836	=>	76
		1838	=>	32
		1840	=>	468
		1845	=>	258
		1846	=>	47
		1848	=>	435
		1849	=>	507
		1850	=>	313
		1852	=>	166
		1854	=>	277
		1856	=>	50
		1858	=>	311
		1860	=>	28
		1862	=>	361
		1864	=>	105
		1867	=>	7
		1868	=>	434
		1870	=>	66
		1873	=>	427
		1874	=>	53
		1876	=>	212
		1878	=>	457
		1880	=>	484
		1899	=>	478
		1901	=>	128
		1903	=>	404
		1905	=>	257
		1908	=>	321
		1911	=>	326
		1912	=>	401
		1914	=>	153
		1916	=>	422
		1918	=>	253
		1921	=>	470
		1922	=>	465
		1924	=>	233
		1925	=>	510
		1926	=>	397
		1928	=>	384
		1930	=>	98
		1931	=>	460
		1933	=>	504
		1948	=>	284
		1953	=>	355
		1955	=>	353
		1956	=>	331
		1958	=>	51
		1959	=>	229
		1961	=>	251
		1962	=>	483
		1965	=>	477
		1966	=>	216
		1967	=>	260
		1970	=>	116
		1971	=>	117
		1972	=>	374
		1974	=>	15
		1975	=>	109
		1977	=>	406
		1978	=>	362
		1980	=>	461
		1981	=>	57
		1986	=>	269
		1987	=>	509
		1989	=>	129
		1990	=>	254
		1991	=>	413
		1992	=>	243
		1994	=>	125
		1996	=>	466
		2001	=>	58 and 402
		2003	=>	490
		2005	=>	36
		2020	=>	96
		2021	=>	131
		2022	=>	495
		2023	=>	520
		2025	=>	494
		2027	=>	234
		2028	=>	308
		2029	=>	381
		2030	=>	519
		2032	=>	209
		2034	=>	264
		2035	=>	218
		2037	=>	173
		2038	=>	130
		2040	=>	287
		2041	=>	231
		2043	=>	400
		2045	=>	378
		2047	=>	503
		2049	=>	87
		2050	=>	286
		2051	=>	206
		2052	=>	328
		2054	=>	74
		2056	=>	345
		2057	=>	497
		2058	=>	456
		2059	=>	245
		2061	=>	416
		2063	=>	389
		2065	=>	343
		2066	=>	26
		2067	=>	102
		2069	=>	39

Class: synthetic com.volmit.iris.util.JSONObject$1	=>	com.volmit.iris.f.al$b
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject$1
	MethodsOf: com.volmit.iris.util.JSONObject$1
	LineNumbersOf: com.volmit.iris.util.JSONObject$1

Class: final com.volmit.iris.util.JSONObject$Null	=>	com.volmit.iris.f.al$a
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject$Null
	MethodsOf: com.volmit.iris.util.JSONObject$Null
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(com.volmit.iris.util.JSONObject$1) 	SignatureNotChanged
		protected final java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.JSONObject$Null
		103	=>	1 and 4
		115	=>	3
		129	=>	2
		139	=>	5

Class: public abstract com.volmit.iris.util.JSONString	=>	com.volmit.iris.f.aa
	Source: "JSONString.java"
	FieldsOf: com.volmit.iris.util.JSONString
	MethodsOf: com.volmit.iris.util.JSONString
		public abstract java.lang.String toJSONString()	=>	a()
	LineNumbersOf: com.volmit.iris.util.JSONString

Class: public com.volmit.iris.util.JSONStringer	=>	com.volmit.iris.f.aS
	Source: "JSONStringer.java"
	FieldsOf: com.volmit.iris.util.JSONStringer
	MethodsOf: com.volmit.iris.util.JSONStringer
		public void <init>() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.JSONStringer
		70	=>	1
		71	=>	3
		84	=>	2

Class: public com.volmit.iris.util.JSONTokener	=>	com.volmit.iris.f.bQ
	Source: "JSONTokener.java"
	FieldsOf: com.volmit.iris.util.JSONTokener
		private long character	=>	f
		private boolean eof	=>	g
		private long index	=>	a
		private long line	=>	c
		private char previous	=>	d
		private java.io.Reader reader	=>	e
		private boolean usePrevious	=>	b
	MethodsOf: com.volmit.iris.util.JSONTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		public void <init>(java.io.Reader) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void back()	=>	b()
		public static int dehexchar(char)	=>	e(char)
		public boolean end()	=>	f()
		public boolean more()	=>	a()
		public char next()	=>	e()
		public char next(char)	=>	d(char)
		public java.lang.String next(int)	=>	a(int)
		public char nextClean()	=>	c()
		public java.lang.String nextString(char)	=>	b(char)
		public java.lang.String nextTo(char)	=>	c(char)
		public java.lang.String nextTo(java.lang.String)	=>	a(java.lang.String)
		public java.lang.Object nextValue()	=>	d()
		public char skipTo(char)	=>	a(char)
		public com.volmit.iris.util.JSONException syntaxError(java.lang.String)	=>	b(java.lang.String)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.JSONTokener
		61	=>	46
		62	=>	142
		63	=>	26
		64	=>	108
		65	=>	115
		66	=>	42
		67	=>	134
		68	=>	140
		69	=>	72
		79	=>	20
		80	=>	69
		90	=>	53
		91	=>	19
		100	=>	105
		102	=>	85
		104	=>	101
		105	=>	135
		106	=>	32
		107	=>	144
		108	=>	95
		120	=>	102
		122	=>	29
		124	=>	12
		126	=>	52
		128	=>	1
		130	=>	58
		132	=>	18
		137	=>	128
		148	=>	86
		149	=>	13
		151	=>	132
		153	=>	90
		154	=>	100
		165	=>	117
		167	=>	113
		168	=>	83
		173	=>	62
		174	=>	56
		176	=>	107
		177	=>	78
		179	=>	104
		181	=>	48
		182	=>	127
		185	=>	76
		186	=>	71
		188	=>	74
		189	=>	63
		190	=>	54
		192	=>	75
		193	=>	16
		196	=>	61
		198	=>	99
		199	=>	39
		214	=>	2
		215	=>	31
		217	=>	77
		219	=>	50
		234	=>	111
		236	=>	82
		239	=>	3
		240	=>	55
		242	=>	133
		244	=>	89
		245	=>	36
		247	=>	10
		249	=>	118
		251	=>	139
		264	=>	94
		265	=>	44
		267	=>	123
		269	=>	84
		288	=>	92
		291	=>	138
		292	=>	24
		297	=>	80
		299	=>	112
		300	=>	5
		303	=>	11
		304	=>	145
		306	=>	38
		307	=>	47
		309	=>	125
		310	=>	40
		312	=>	110
		313	=>	136
		315	=>	114
		316	=>	81
		318	=>	57
		319	=>	4
		324	=>	37
		325	=>	122
		327	=>	124
		331	=>	109
		333	=>	126
		335	=>	8
		350	=>	27
		353	=>	41
		354	=>	66
		356	=>	141
		358	=>	143
		360	=>	7
		362	=>	22
		363	=>	28
		377	=>	87
		380	=>	116
		381	=>	106
		383	=>	17
		385	=>	59
		387	=>	64
		389	=>	93
		404	=>	21
		407	=>	6
		411	=>	97
		413	=>	129
		414	=>	25
		416	=>	121
		417	=>	23
		429	=>	67
		430	=>	9
		432	=>	34
		433	=>	35
		435	=>	14
		437	=>	103
		438	=>	91
		440	=>	120
		442	=>	45
		459	=>	15
		460	=>	96
		461	=>	130
		462	=>	30
		465	=>	131
		466	=>	119
		468	=>	43
		469	=>	70
		470	=>	98
		471	=>	33
		472	=>	65
		474	=>	79
		475	=>	51
		477	=>	137
		478	=>	68
		479	=>	49
		480	=>	73
		492	=>	88
		502	=>	60

Class: public com.volmit.iris.util.JSONWriter	=>	com.volmit.iris.f.aE
	Source: "JSONWriter.java"
	FieldsOf: com.volmit.iris.util.JSONWriter
		private boolean comma	=>	c
		protected char mode	=>	d
		private final com.volmit.iris.util.JSONObject[] stack	=>	e
		private int top	=>	b
		protected java.io.Writer writer	=>	a
	MethodsOf: com.volmit.iris.util.JSONWriter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.Writer) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private com.volmit.iris.util.JSONWriter append(java.lang.String)	=>	a(java.lang.String)
		public com.volmit.iris.util.JSONWriter array()	=>	b()
		private com.volmit.iris.util.JSONWriter end(char, char)	=>	a(char, char)
		public com.volmit.iris.util.JSONWriter endArray()	=>	a()
		public com.volmit.iris.util.JSONWriter endObject()	=>	c()
		public com.volmit.iris.util.JSONWriter key(java.lang.String)	=>	b(java.lang.String)
		public com.volmit.iris.util.JSONWriter object()	=>	d()
		private void pop(char)	=>	a(char)
		private void push(com.volmit.iris.util.JSONObject)	=>	a(com.volmit.iris.f.al)
		public com.volmit.iris.util.JSONWriter value(boolean)	=>	a(boolean)
		public com.volmit.iris.util.JSONWriter value(double)	=>	a(double)
		public com.volmit.iris.util.JSONWriter value(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.JSONWriter value(long)	=>	a(long)
	LineNumbersOf: com.volmit.iris.util.JSONWriter
		99	=>	71
		100	=>	14
		101	=>	56
		102	=>	66
		103	=>	43
		104	=>	72
		105	=>	25
		118	=>	2
		120	=>	41
		122	=>	1
		126	=>	39
		128	=>	16
		130	=>	29
		131	=>	51
		133	=>	45
		134	=>	57
		135	=>	65
		137	=>	62
		139	=>	55
		140	=>	5
		142	=>	3
		158	=>	33
		160	=>	11
		161	=>	67
		162	=>	22
		163	=>	23
		165	=>	60
		181	=>	37
		183	=>	35
		185	=>	44
		188	=>	15
		189	=>	78
		191	=>	50
		192	=>	38
		193	=>	49
		194	=>	54
		207	=>	32
		220	=>	27
		236	=>	6
		238	=>	64
		240	=>	4
		244	=>	52
		245	=>	26
		247	=>	63
		249	=>	74
		250	=>	8
		251	=>	69
		252	=>	75
		253	=>	7
		254	=>	42
		256	=>	36
		259	=>	18
		275	=>	77
		277	=>	59
		279	=>	46
		281	=>	21
		282	=>	30
		283	=>	40
		284	=>	28
		286	=>	17
		300	=>	61
		302	=>	19
		304	=>	47
		305	=>	48
		307	=>	76
		309	=>	13
		310	=>	53
		311	=>	9
		323	=>	68
		325	=>	20
		327	=>	34
		328	=>	12
		329	=>	70
		330	=>	24
		343	=>	73
		357	=>	58
		370	=>	10
		386	=>	31

Class: public com.volmit.iris.util.JarScanner	=>	com.volmit.iris.f.bR
	Source: "JarScanner.java"
	FieldsOf: com.volmit.iris.util.JarScanner
		private final com.volmit.iris.util.KSet classes	=>	c
		private final java.io.File jar	=>	a
		private final java.lang.String superPackage	=>	b
	MethodsOf: com.volmit.iris.util.JarScanner
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String) 	SignatureNotChanged
		private static java.lang.ClassNotFoundException a(java.lang.ClassNotFoundException) 	SignatureNotChanged
		public com.volmit.iris.util.KSet getClasses()	=>	a()
		public java.io.File getJar()	=>	b()
		public void scan()	=>	c()
	LineNumbersOf: com.volmit.iris.util.JarScanner
		22	=>	13
		23	=>	14
		24	=>	19
		25	=>	10
		26	=>	16
		36	=>	1
		37	=>	8
		38	=>	12
		40	=>	3 and 9
		42	=>	21
		44	=>	5
		46	=>	7
		49	=>	18
		51	=>	24
		55	=>	20
		56	=>	11
		59	=>	23
		61	=>	4
		62	=>	2
		67	=>	22
		68	=>	17
		77	=>	15
		87	=>	6

Class: public com.volmit.iris.util.KList	=>	com.volmit.iris.f.t
	Source: "KList.java"
	FieldsOf: com.volmit.iris.util.KList
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KList
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object[]) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged
		public void <init>(java.util.Enumeration) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public com.volmit.iris.util.KList add(java.lang.Object[])	=>	a(java.lang.Object[])
		public com.volmit.iris.util.KList add(java.util.Collection)	=>	a(java.util.Collection)
		private com.volmit.iris.util.KList add(java.util.Enumeration)	=>	a(java.util.Enumeration)
		public com.volmit.iris.util.KList addFrom(java.util.List, java.util.function.Function)	=>	a(java.util.List, java.util.function.Function)
		public com.volmit.iris.util.KList addNonNull(java.lang.Object)	=>	a(java.lang.Object)
		public java.lang.Object[] array()	=>	r()
		public com.volmit.iris.util.KMap asKeys(java.util.function.Function)	=>	a(java.util.function.Function)
		public static com.volmit.iris.util.KList asStringList(java.util.List)	=>	a(java.util.List)
		public com.volmit.iris.util.KMap asValues(java.util.function.Function)	=>	b(java.util.function.Function)
		public com.volmit.iris.util.KList convert(java.util.function.Function)	=>	c(java.util.function.Function)
		public com.volmit.iris.util.KList copy()	=>	n()
		public com.volmit.iris.util.KList dedupe()	=>	c()
		public com.volmit.iris.util.KList divide(int)	=>	c(int)
		public com.volmit.iris.util.KList forceAdd(boolean[])	=>	a(boolean[])
		public com.volmit.iris.util.KList forceAdd(byte[])	=>	a(byte[])
		public com.volmit.iris.util.KList forceAdd(double[])	=>	a(double[])
		public com.volmit.iris.util.KList forceAdd(float[])	=>	a(float[])
		public com.volmit.iris.util.KList forceAdd(int[])	=>	a(int[])
		public com.volmit.iris.util.KList forceAdd(java.lang.Object[])	=>	b(java.lang.Object[])
		public com.volmit.iris.util.KList forceAdd(long[])	=>	a(long[])
		public com.volmit.iris.util.KList forceAdd(short[])	=>	a(short[])
		public static com.volmit.iris.util.KList fromJSONAny(com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.f.a3)
		public java.lang.Object getRandom()	=>	d()
		public boolean hasElements()	=>	b()
		public boolean hasIndex(int)	=>	a(int)
		public boolean isNotEmpty()	=>	m()
		private synthetic void lambda$addFrom$4(java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$asKeys$1(com.volmit.iris.util.KMap, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$asValues$0(com.volmit.iris.util.KMap, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$convert$5(com.volmit.iris.util.KList, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic int lambda$sort$2(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		private static synthetic java.lang.String lambda$toStringList$3(java.lang.Object) 	SignatureNotChanged
		public int last()	=>	a()
		private int middleIndex()	=>	s()
		public java.lang.Object middleValue()	=>	f()
		public java.lang.Object pop()	=>	p()
		public java.lang.Object popLast()	=>	e()
		public java.lang.Object popRandom()	=>	j()
		public com.volmit.iris.util.KList qadd(java.lang.Object)	=>	c(java.lang.Object)
		public com.volmit.iris.util.KList qclear()	=>	q()
		public com.volmit.iris.util.KList qdel(java.lang.Object)	=>	b(java.lang.Object)
		public com.volmit.iris.util.KList remove(java.lang.Object[])	=>	c(java.lang.Object[])
		public com.volmit.iris.util.KList removeLast()	=>	i()
		public com.volmit.iris.util.KList reverse()	=>	g()
		public com.volmit.iris.util.KList rewrite(java.util.function.Function)	=>	d(java.util.function.Function)
		public com.volmit.iris.util.KList shuffle()	=>	k()
		public com.volmit.iris.util.KList sort()	=>	h()
		public com.volmit.iris.util.KList split(int)	=>	b(int)
		public com.volmit.iris.util.KList sub(int, int)	=>	a(int, int)
		public com.volmit.iris.util.KList swapIndexes(int, int)	=>	b(int, int)
		public com.volmit.iris.util.JSONArray toJSONStringArray()	=>	l()
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(java.lang.String)	=>	a(java.lang.String)
		public com.volmit.iris.util.KList toStringList()	=>	o()
	LineNumbersOf: com.volmit.iris.util.KList
		18	=>	97
		19	=>	118
		20	=>	128
		24	=>	28
		25	=>	75
		29	=>	116
		30	=>	8
		31	=>	168
		35	=>	84
		36	=>	6
		37	=>	53
		44	=>	78
		46	=>	42
		51	=>	150
		53	=>	113
		56	=>	23
		61	=>	153
		62	=>	45
		78	=>	65
		79	=>	37 and 91
		80	=>	3
		96	=>	93
		97	=>	22 and 27
		98	=>	141
		110	=>	166
		123	=>	86
		124	=>	77
		125	=>	15
		127	=>	95
		129	=>	103
		131	=>	5
		132	=>	165
		135	=>	26
		136	=>	148
		138	=>	32
		140	=>	154
		143	=>	174
		156	=>	89
		157	=>	122
		159	=>	101
		161	=>	69
		162	=>	11
		164	=>	133
		175	=>	38
		185	=>	132
		195	=>	66
		196	=>	52
		206	=>	50 and 88
		207	=>	62
		217	=>	160
		218	=>	135
		224	=>	131
		236	=>	12
		238	=>	29
		241	=>	64
		243	=>	16
		246	=>	171
		248	=>	39
		250	=>	31
		251	=>	30
		253	=>	76
		263	=>	110 and 145
		279	=>	58 and 111
		280	=>	102
		293	=>	74
		294	=>	79 and 109
		295	=>	21
		307	=>	170
		309	=>	104
		312	=>	117
		327	=>	157
		328	=>	149
		329	=>	9
		330	=>	13
		331	=>	2
		333	=>	44
		346	=>	18 and 48
		348	=>	67
		351	=>	10
		363	=>	68
		364	=>	87
		377	=>	35 and 138
		379	=>	34
		382	=>	139
		394	=>	25
		404	=>	119
		414	=>	120
		415	=>	169
		425	=>	94
		426	=>	125
		436	=>	162
		446	=>	152
		456	=>	70
		458	=>	55
		461	=>	156
		471	=>	99
		473	=>	71
		476	=>	80
		481	=>	7
		483	=>	140
		486	=>	85
		488	=>	159
		491	=>	72
		496	=>	107
		498	=>	92 and 108
		500	=>	126
		503	=>	33
		508	=>	167
		510	=>	47 and 137
		512	=>	130
		515	=>	17
		520	=>	127
		522	=>	60
		524	=>	81
		525	=>	54
		527	=>	134
		532	=>	63
		534	=>	142
		536	=>	82
		537	=>	49
		539	=>	61
		545	=>	100 and 155
		547	=>	51
		550	=>	124
		556	=>	14 and 96
		558	=>	73
		561	=>	143
		567	=>	129 and 172
		569	=>	121
		572	=>	43
		578	=>	19 and 158
		580	=>	114
		583	=>	24
		589	=>	146 and 163
		591	=>	115
		594	=>	106
		600	=>	46 and 151
		602	=>	90
		605	=>	56
		611	=>	136 and 161
		613	=>	57
		616	=>	105
		622	=>	59 and 112
		624	=>	98
		627	=>	20
		632	=>	147
		637	=>	173
		642	=>	41
		644	=>	40
		647	=>	123
		649	=>	36
		652	=>	164
		657	=>	83
		658	=>	1
		663	=>	144
		664	=>	4

Class: public com.volmit.iris.util.KMap	=>	com.volmit.iris.f.aR
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.KMap copy()	=>	f()
		public com.volmit.iris.util.KMap each(com.volmit.iris.util.Consumer2)	=>	a(com.volmit.iris.f.Y)
		public com.volmit.iris.util.Queue enqueue()	=>	b()
		public com.volmit.iris.util.Queue enqueueKeys()	=>	k()
		public com.volmit.iris.util.Queue enqueueValues()	=>	m()
		public com.volmit.iris.util.KMap flip()	=>	e()
		public com.volmit.iris.util.KMap flipFlatten()	=>	d()
		public com.volmit.iris.util.KList k()	=>	c()
		public com.volmit.iris.util.KList keypair()	=>	a()
		private static synthetic void lambda$keypair$0(com.volmit.iris.util.KList, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap put(java.util.Map)	=>	a(java.util.Map)
		public com.volmit.iris.util.KMap putNonNull(java.lang.Object, java.lang.Object)	=>	c(java.lang.Object, java.lang.Object)
		public java.lang.Object putThen(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		public com.volmit.iris.util.KMap putValueList(java.lang.Object, java.lang.Object[])	=>	a(java.lang.Object, java.lang.Object[])
		public com.volmit.iris.util.KMap qclear()	=>	g()
		public com.volmit.iris.util.KMap qput(java.lang.Object, java.lang.Object)	=>	b(java.lang.Object, java.lang.Object)
		public com.volmit.iris.util.KMap rewrite(com.volmit.iris.util.Consumer3)	=>	a(com.volmit.iris.f.am)
		public com.volmit.iris.util.KList sortK()	=>	h()
		public com.volmit.iris.util.KList sortKNumber()	=>	j()
		public com.volmit.iris.util.KList sortV()	=>	i()
		public com.volmit.iris.util.KList sortVNoDedupe()	=>	l()
		public com.volmit.iris.util.KList v()	=>	n()
	LineNumbersOf: com.volmit.iris.util.KMap
		15	=>	44
		16	=>	87
		20	=>	57
		21	=>	61
		22	=>	39
		41	=>	4
		43	=>	75
		45	=>	11
		48	=>	88
		51	=>	67
		54	=>	70
		56	=>	5
		67	=>	79
		68	=>	45
		70	=>	56
		79	=>	68
		81	=>	86
		83	=>	96
		85	=>	83
		87	=>	71
		88	=>	91
		90	=>	14
		91	=>	16
		102	=>	104
		103	=>	92
		105	=>	97
		117	=>	29
		119	=>	43
		121	=>	69
		123	=>	6
		125	=>	25
		126	=>	48
		128	=>	37
		129	=>	93
		141	=>	31
		142	=>	73
		152	=>	105
		164	=>	84
		166	=>	94
		168	=>	20
		169	=>	19
		171	=>	90
		183	=>	53
		185	=>	52
		186	=>	7
		188	=>	23
		198	=>	62
		199	=>	28
		201	=>	106
		203	=>	80
		204	=>	13
		206	=>	99
		216	=>	38
		218	=>	26
		220	=>	12
		222	=>	3
		225	=>	8
		227	=>	17
		230	=>	85
		231	=>	32
		233	=>	40
		243	=>	58
		244	=>	60
		246	=>	1
		255	=>	59
		257	=>	101
		259	=>	21
		261	=>	102
		263	=>	89
		264	=>	54
		266	=>	36
		267	=>	72
		272	=>	2
		273	=>	107
		275	=>	63
		284	=>	103
		286	=>	10
		288	=>	41
		290	=>	77
		292	=>	49
		293	=>	98
		295	=>	30
		305	=>	81
		306	=>	66
		308	=>	64
		310	=>	9
		311	=>	51
		312	=>	74
		314	=>	47
		324	=>	34
		338	=>	33
		339	=>	35
		354	=>	24
		356	=>	27
		359	=>	18
		364	=>	15
		366	=>	100
		369	=>	55
		379	=>	82
		380	=>	22
		390	=>	76
		391	=>	65 and 95
		392	=>	50
		402	=>	46
		412	=>	42
		422	=>	78

Class: com.volmit.iris.util.KMap$1	=>	com.volmit.iris.f.aR$a
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$1
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$1
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.KMap$1
		71	=>	2
		75	=>	1

Class: com.volmit.iris.util.KMap$2	=>	com.volmit.iris.f.aR$d
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$2
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$2
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.KMap$2
		106	=>	2
		110	=>	1
		111	=>	4
		113	=>	3

Class: com.volmit.iris.util.KMap$3	=>	com.volmit.iris.f.aR$b
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$3
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$3
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.KMap$3
		247	=>	1
		251	=>	2

Class: com.volmit.iris.util.KMap$4	=>	com.volmit.iris.f.aR$c
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$4
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$4
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.KMap$4
		276	=>	2
		280	=>	1

Class: public com.volmit.iris.util.KSet	=>	com.volmit.iris.f.D
	Source: "KSet.java"
	FieldsOf: com.volmit.iris.util.KSet
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KSet
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(int, float) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.KSet
		12	=>	4
		13	=>	3
		17	=>	8
		18	=>	2
		22	=>	1
		23	=>	7
		27	=>	5
		28	=>	6

Class: public com.volmit.iris.util.KeyPair	=>	com.volmit.iris.f.a
	Source: "KeyPair.java"
	FieldsOf: com.volmit.iris.util.KeyPair
		private java.lang.Object k	=>	b
		private java.lang.Object v	=>	a
	MethodsOf: com.volmit.iris.util.KeyPair
		public void <init>(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object getK()	=>	a()
		public java.lang.Object getV()	=>	b()
		public void setK(java.lang.Object)	=>	b(java.lang.Object)
		public void setV(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.KeyPair
		21	=>	9
		22	=>	5
		23	=>	10
		24	=>	2
		28	=>	1
		33	=>	4
		34	=>	3
		38	=>	8
		43	=>	7
		44	=>	6

Class: public final com.volmit.iris.util.ListTag	=>	com.volmit.iris.f.ar
	Source: "ListTag.java"
	FieldsOf: com.volmit.iris.util.ListTag
		private final java.lang.Class type	=>	d
		private final java.util.List value	=>	c
	MethodsOf: com.volmit.iris.util.ListTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Class, java.util.List) 	SignatureNotChanged
		public java.lang.Class getType()	=>	e()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.util.List getValue()	=>	d()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ListTag
		44	=>	14
		64	=>	13
		65	=>	2
		66	=>	3
		67	=>	4
		75	=>	9
		80	=>	11
		85	=>	1
		86	=>	10
		87	=>	12
		88	=>	5
		90	=>	6
		91	=>	17
		92	=>	16
		93	=>	7
		94	=>	15
		95	=>	18
		96	=>	8

Class: public final com.volmit.iris.util.LongTag	=>	com.volmit.iris.f.ae
	Source: "LongTag.java"
	FieldsOf: com.volmit.iris.util.LongTag
		private final long value	=>	c
	MethodsOf: com.volmit.iris.util.LongTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, long) 	SignatureNotChanged
		public java.lang.Long getValue()	=>	d()
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.LongTag
		41	=>	9
		55	=>	2
		56	=>	4
		57	=>	5
		61	=>	8
		66	=>	6
		67	=>	7
		68	=>	1
		69	=>	3
		71	=>	10

Class: public abstract com.volmit.iris.util.Looper	=>	com.volmit.iris.f.d
	Source: "Looper.java"
	FieldsOf: com.volmit.iris.util.Looper
	MethodsOf: com.volmit.iris.util.Looper
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected abstract long loop()	=>	a()
		public void run() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.Looper
		5	=>	4
		9	=>	7
		13	=>	6
		15	=>	11
		17	=>	12
		20	=>	1
		23	=>	5
		25	=>	14
		28	=>	10
		30	=>	9
		31	=>	2 and 3
		34	=>	8
		35	=>	13

Class: public com.volmit.iris.util.M	=>	com.volmit.iris.f.aM
	Source: "M.java"
	FieldsOf: com.volmit.iris.util.M
		private static final float[] sin	=>	a
	MethodsOf: com.volmit.iris.util.M
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IndexOutOfBoundsException a(java.lang.IndexOutOfBoundsException) 	SignatureNotChanged
		public static double bilerp(double, double, double, double, double, double)	=>	a(double, double, double, double, double, double)
		public static java.lang.Number clip(java.lang.Number, java.lang.Number, java.lang.Number)	=>	a(java.lang.Number, java.lang.Number, java.lang.Number)
		public static float cos(float)	=>	b(float)
		public static double drand(double, double)	=>	a(double, double)
		public static long epochDays()	=>	b()
		private static long epochDays(long)	=>	b(long)
		public static double evaluate(java.lang.String)	=>	a(java.lang.String)
		public static double evaluate(java.lang.String, java.lang.Double[])	=>	a(java.lang.String, java.lang.Double[])
		public static float frand(float, float)	=>	a(float, float)
		public static int irand(int, int)	=>	a(int, int)
		public static double lerp(double, double, double)	=>	b(double, double, double)
		public static double lerpInverse(double, double, double)	=>	a(double, double, double)
		public static java.lang.Number max(java.lang.Number[])	=>	b(java.lang.Number[])
		public static java.lang.Number min(java.lang.Number[])	=>	a(java.lang.Number[])
		public static long ms()	=>	c()
		public static long ns()	=>	a()
		public static boolean r(java.lang.Double)	=>	a(java.lang.Double)
		public static double rangeScale(double, double, double, double, double)	=>	a(double, double, double, double, double)
		public static float sin(float)	=>	a(float)
		private static float sinLookup(int)	=>	a(int)
		public static float tan(float)	=>	c(float)
		public static double ticksFromNS(long)	=>	a(long)
		public static double tps(long, int)	=>	a(long, int)
		public static double trilerp(double, double, double, double, double, double, double, double, double, double, double)	=>	a(double, double, double, double, double, double, double, double, double, double, double)
		public static boolean within(int, int, int)	=>	a(int, int, int)
	LineNumbersOf: com.volmit.iris.util.M
		14	=>	19
		18	=>	11
		46	=>	36
		64	=>	1
		80	=>	17
		102	=>	25
		134	=>	4
		151	=>	37
		163	=>	46
		165	=>	47
		168	=>	33
		183	=>	29
		195	=>	14
		209	=>	31
		223	=>	44
		237	=>	20
		247	=>	35
		257	=>	7
		269	=>	5
		281	=>	22
		293	=>	34
		294	=>	39
		307	=>	3
		309	=>	9 and 30
		311	=>	15
		313	=>	42
		317	=>	38
		330	=>	24
		332	=>	2 and 32
		334	=>	51
		336	=>	41
		340	=>	48
		362	=>	12 and 13
		364	=>	43
		366	=>	8
		368	=>	26
		372	=>	18
		386	=>	6
		387	=>	28
		389	=>	40
		405	=>	21
		415	=>	10
		427	=>	27
		432	=>	16 and 49
		434	=>	45
		436	=>	23
		440	=>	50

Class: public final com.volmit.iris.util.NBTConstants	=>	com.volmit.iris.f.S
	Source: "NBTConstants.java"
	FieldsOf: com.volmit.iris.util.NBTConstants
		public static final java.nio.charset.Charset CHARSET	=>	j
		public static final int TYPE_BYTE	=>	c
		public static final int TYPE_BYTE_ARRAY	=>	g
		public static final int TYPE_COMPOUND	=>	d
		public static final int TYPE_DOUBLE	=>	h
		public static final int TYPE_END	=>	k
		public static final int TYPE_FLOAT	=>	i
		public static final int TYPE_INT	=>	l
		public static final int TYPE_INT_ARRAY	=>	a
		public static final int TYPE_LIST	=>	m
		public static final int TYPE_LONG	=>	e
		public static final int TYPE_SHORT	=>	b
		public static final int TYPE_STRING	=>	f
	MethodsOf: com.volmit.iris.util.NBTConstants
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.NBTConstants
		52	=>	2
		73	=>	3
		75	=>	1

Class: public final com.volmit.iris.util.NBTInputStream	=>	com.volmit.iris.f.C
	Source: "NBTInputStream.java"
	FieldsOf: com.volmit.iris.util.NBTInputStream
		private final java.io.DataInputStream is	=>	a
	MethodsOf: com.volmit.iris.util.NBTInputStream
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.DataInputStream) 	SignatureNotChanged
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public com.volmit.iris.util.Tag readTag()	=>	a()
		private com.volmit.iris.util.Tag readTag(int)	=>	a(int)
		private com.volmit.iris.util.Tag readTagPayload(int, java.lang.String, int)	=>	a(int, java.lang.String, int)
	LineNumbersOf: com.volmit.iris.util.NBTInputStream
		75	=>	5
		76	=>	42
		77	=>	6
		86	=>	58
		87	=>	60
		88	=>	32
		97	=>	2
		108	=>	52
		111	=>	44
		112	=>	29
		113	=>	40
		114	=>	48
		115	=>	23
		116	=>	39
		117	=>	49
		120	=>	15
		133	=>	11
		135	=>	45
		136	=>	13
		138	=>	56
		141	=>	9
		143	=>	37
		145	=>	47
		147	=>	10
		149	=>	55
		151	=>	12
		153	=>	46
		154	=>	25
		155	=>	14
		156	=>	38
		158	=>	20
		159	=>	41
		160	=>	31
		161	=>	27
		163	=>	4
		164	=>	30
		166	=>	26
		167	=>	50 and 59
		168	=>	18
		169	=>	36
		170	=>	21
		172	=>	17
		175	=>	43
		177	=>	22
		179	=>	53
		180	=>	57
		181	=>	33
		183	=>	51
		185	=>	54
		187	=>	35
		189	=>	28
		190	=>	16
		191	=>	24 and 34
		192	=>	1
		194	=>	19
		196	=>	3
		202	=>	8
		203	=>	7

Class: public final com.volmit.iris.util.NBTOutputStream	=>	com.volmit.iris.f.G
	Source: "NBTOutputStream.java"
	FieldsOf: com.volmit.iris.util.NBTOutputStream
		private final java.io.DataOutputStream os	=>	a
	MethodsOf: com.volmit.iris.util.NBTOutputStream
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.DataOutputStream) 	SignatureNotChanged
		public void <init>(java.io.OutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		private void writeByteArrayTagPayload(com.volmit.iris.util.ByteArrayTag)	=>	a(com.volmit.iris.f.az)
		private void writeByteTagPayload(com.volmit.iris.util.ByteTag)	=>	a(com.volmit.iris.f.au)
		private void writeCompoundTagPayload(com.volmit.iris.util.CompoundTag)	=>	a(com.volmit.iris.f.a9)
		private void writeDoubleTagPayload(com.volmit.iris.util.DoubleTag)	=>	a(com.volmit.iris.f.a7)
		private void writeEndTagPayload(com.volmit.iris.util.EndTag)	=>	a(com.volmit.iris.f.aU)
		private void writeFloatTagPayload(com.volmit.iris.util.FloatTag)	=>	a(com.volmit.iris.f.aY)
		private void writeIntArrayTagPayload(com.volmit.iris.util.IntArrayTag)	=>	a(com.volmit.iris.f.aZ)
		private void writeIntTagPayload(com.volmit.iris.util.IntTag)	=>	a(com.volmit.iris.f.ad)
		private void writeListTagPayload(com.volmit.iris.util.ListTag)	=>	a(com.volmit.iris.f.ar)
		private void writeLongTagPayload(com.volmit.iris.util.LongTag)	=>	a(com.volmit.iris.f.ae)
		private void writeShortTagPayload(com.volmit.iris.util.ShortTag)	=>	a(com.volmit.iris.f.aK)
		private void writeStringTagPayload(com.volmit.iris.util.StringTag)	=>	a(com.volmit.iris.f.av)
		public void writeTag(com.volmit.iris.util.Tag)	=>	a(com.volmit.iris.f.a4)
		private void writeTagPayload(com.volmit.iris.util.Tag)	=>	b(com.volmit.iris.f.a4)
	LineNumbersOf: com.volmit.iris.util.NBTOutputStream
		69	=>	36
		70	=>	19
		71	=>	60
		80	=>	50
		81	=>	24
		82	=>	78
		91	=>	34
		92	=>	45
		93	=>	56
		95	=>	4
		96	=>	77
		97	=>	54
		99	=>	52
		100	=>	31
		103	=>	53
		104	=>	79
		113	=>	67
		114	=>	70
		116	=>	35
		117	=>	64
		119	=>	7
		120	=>	9
		122	=>	41
		123	=>	29
		125	=>	62
		126	=>	86
		128	=>	43
		129	=>	49
		131	=>	26
		132	=>	47
		134	=>	6
		135	=>	12
		137	=>	69
		138	=>	15
		140	=>	10
		141	=>	5
		143	=>	87
		144	=>	72
		146	=>	84
		147	=>	48
		149	=>	63
		150	=>	68
		152	=>	55
		154	=>	83
		163	=>	57
		164	=>	73
		173	=>	38
		174	=>	65
		175	=>	51
		176	=>	8
		186	=>	17
		187	=>	42
		188	=>	76
		189	=>	23
		190	=>	75
		199	=>	44
		200	=>	25
		201	=>	71
		203	=>	37
		204	=>	81
		205	=>	3 and 82
		206	=>	14
		208	=>	13
		217	=>	11
		218	=>	1
		219	=>	22
		220	=>	39
		229	=>	18
		230	=>	58
		239	=>	30
		240	=>	40
		249	=>	59
		250	=>	61
		259	=>	66
		260	=>	32
		269	=>	74
		270	=>	33
		280	=>	80
		289	=>	46
		290	=>	28
		291	=>	16 and 85
		292	=>	21
		294	=>	27
		298	=>	20
		299	=>	2

Class: public final com.volmit.iris.util.NBTUtils	=>	com.volmit.iris.f.o
	Source: "NBTUtils.java"
	FieldsOf: com.volmit.iris.util.NBTUtils
	MethodsOf: com.volmit.iris.util.NBTUtils
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public static java.lang.Class getTypeClass(int)	=>	a(int)
		public static int getTypeCode(java.lang.Class)	=>	b(java.lang.Class)
		public static java.lang.String getTypeName(java.lang.Class)	=>	a(java.lang.Class)
	LineNumbersOf: com.volmit.iris.util.NBTUtils
		54	=>	43
		55	=>	45
		56	=>	36
		57	=>	2
		58	=>	34
		59	=>	58
		60	=>	18
		61	=>	19
		62	=>	50
		63	=>	17
		64	=>	15
		65	=>	16
		66	=>	27
		67	=>	63
		68	=>	35
		69	=>	39
		70	=>	24
		71	=>	44
		72	=>	37
		73	=>	30
		74	=>	46
		75	=>	26
		76	=>	51
		77	=>	11
		79	=>	5
		91	=>	62
		92	=>	9
		93	=>	48
		94	=>	25
		95	=>	7
		96	=>	22
		97	=>	14
		98	=>	33
		99	=>	8
		100	=>	12
		101	=>	54
		102	=>	42
		103	=>	64
		104	=>	3
		105	=>	47
		106	=>	56
		107	=>	31
		108	=>	65
		109	=>	20
		110	=>	66
		111	=>	6
		112	=>	10
		113	=>	1
		114	=>	38
		116	=>	28
		128	=>	4
		130	=>	55
		132	=>	23
		134	=>	41
		136	=>	57
		138	=>	21
		140	=>	53
		142	=>	29
		144	=>	61
		146	=>	13
		148	=>	60
		150	=>	32
		152	=>	49
		154	=>	59
		161	=>	52
		163	=>	40

Class: public abstract com.volmit.iris.util.NastyFunction	=>	com.volmit.iris.f.A
	Source: "NastyFunction.java"
	FieldsOf: com.volmit.iris.util.NastyFunction
	MethodsOf: com.volmit.iris.util.NastyFunction
		public abstract java.lang.Object run(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.NastyFunction

Class: public abstract com.volmit.iris.util.NastyFuture	=>	com.volmit.iris.f.Z
	Source: "NastyFuture.java"
	FieldsOf: com.volmit.iris.util.NastyFuture
	MethodsOf: com.volmit.iris.util.NastyFuture
		public abstract java.lang.Object run()	=>	a()
	LineNumbersOf: com.volmit.iris.util.NastyFuture

Class: public abstract com.volmit.iris.util.NastyRunnable	=>	com.volmit.iris.f.B
	Source: "NastyRunnable.java"
	FieldsOf: com.volmit.iris.util.NastyRunnable
	MethodsOf: com.volmit.iris.util.NastyRunnable
		public abstract void run()	=>	a()
	LineNumbersOf: com.volmit.iris.util.NastyRunnable

Class: public abstract com.volmit.iris.util.NoiseGenerator	=>	com.volmit.iris.f.ai
	Source: "NoiseGenerator.java"
	FieldsOf: com.volmit.iris.util.NoiseGenerator
		protected double offsetX	=>	c
		protected double offsetY	=>	a
		protected double offsetZ	=>	b
		protected final int[] perm	=>	d
	MethodsOf: com.volmit.iris.util.NoiseGenerator
		public void <init>() 	SignatureNotChanged
		protected static double fade(double)	=>	c(double)
		public static int floor(double)	=>	b(double)
		protected static double grad(int, double, double, double)	=>	a(int, double, double, double)
		protected static double lerp(double, double, double)	=>	b(double, double, double)
		public double noise(double)	=>	a(double)
		public double noise(double, double)	=>	a(double, double)
		public abstract double noise(double, double, double)	=>	a(double, double, double)
		public double noise(double, double, double, int, double, double)	=>	a(double, double, double, int, double, double)
		public double noise(double, double, double, int, double, double, boolean)	=>	a(double, double, double, int, double, double, boolean)
		public double noise(double, double, int, double, double)	=>	a(double, double, int, double, double)
		public double noise(double, double, int, double, double, boolean)	=>	a(double, double, int, double, double, boolean)
		public double noise(double, int, double, double)	=>	a(double, int, double, double)
		public double noise(double, int, double, double, boolean)	=>	a(double, int, double, double, boolean)
	LineNumbersOf: com.volmit.iris.util.NoiseGenerator
		6	=>	27
		8	=>	26
		22	=>	14
		27	=>	22
		32	=>	9
		37	=>	17
		38	=>	5
		39	=>	19
		40	=>	10
		52	=>	4
		66	=>	28
		98	=>	18
		119	=>	1
		140	=>	13
		163	=>	15
		186	=>	3
		211	=>	25
		212	=>	23
		213	=>	2
		214	=>	29
		216	=>	8 and 16
		218	=>	12
		219	=>	6
		220	=>	20
		221	=>	21
		224	=>	7
		226	=>	24
		229	=>	11

Class: public abstract com.volmit.iris.util.NoiseInjector	=>	com.volmit.iris.f.U
	Source: "NoiseInjector.java"
	FieldsOf: com.volmit.iris.util.NoiseInjector
	MethodsOf: com.volmit.iris.util.NoiseInjector
		public abstract double[] combine(double, double)	=>	a(double, double)
	LineNumbersOf: com.volmit.iris.util.NoiseInjector

Class: public abstract com.volmit.iris.util.NoiseProvider	=>	com.volmit.iris.f.T
	Source: "NoiseProvider.java"
	FieldsOf: com.volmit.iris.util.NoiseProvider
	MethodsOf: com.volmit.iris.util.NoiseProvider
		public abstract double noise(double, double)	=>	a(double, double)
	LineNumbersOf: com.volmit.iris.util.NoiseProvider

Class: public com.volmit.iris.util.O	=>	com.volmit.iris.f.s
	Source: "O.java"
	FieldsOf: com.volmit.iris.util.O
		private com.volmit.iris.util.KList observers	=>	a
		private java.lang.Object t	=>	b
	MethodsOf: com.volmit.iris.util.O
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.O clearObservers()	=>	d()
		public bridge synthetic com.volmit.iris.util.Observable clearObservers()	=>	b()
		public java.lang.Object get()	=>	a()
		public boolean has()	=>	c()
		private static synthetic void lambda$set$0(java.lang.Object, java.lang.Object, com.volmit.iris.util.Observer) 	SignatureNotChanged
		public com.volmit.iris.util.O observe(com.volmit.iris.util.Observer)	=>	b(com.volmit.iris.f.L)
		public bridge synthetic com.volmit.iris.util.Observable observe(com.volmit.iris.util.Observer)	=>	a(com.volmit.iris.f.L)
		public com.volmit.iris.util.O set(java.lang.Object)	=>	b(java.lang.Object)
		public bridge synthetic com.volmit.iris.util.Observable set(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.O
		3	=>	4, 5, 8 and 19
		5	=>	6
		11	=>	12
		17	=>	14
		18	=>	15
		20	=>	3
		22	=>	1 and 10
		25	=>	11
		31	=>	7
		37	=>	16
		38	=>	9
		44	=>	17
		46	=>	2
		49	=>	13
		51	=>	18

Class: public com.volmit.iris.util.ObjectConverter	=>	com.volmit.iris.f.aI
	Source: "ObjectConverter.java"
	FieldsOf: com.volmit.iris.util.ObjectConverter
	MethodsOf: com.volmit.iris.util.ObjectConverter
		public void <init>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ObjectConverter
		3	=>	1

Class: public com.volmit.iris.util.ObjectResourceLoader	=>	com.volmit.iris.f.Q
	Source: "ObjectResourceLoader.java"
	FieldsOf: com.volmit.iris.util.ObjectResourceLoader
		private com.volmit.iris.util.KMap useCache	=>	k
		private com.volmit.iris.util.ChronoLatch useFlip	=>	j
	MethodsOf: com.volmit.iris.util.ObjectResourceLoader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		public void clean()	=>	d()
		public java.io.File findFile(java.lang.String)	=>	f(java.lang.String)
		private java.lang.String getOldest()	=>	e()
		public int getTotalStorage()	=>	f()
		public com.volmit.iris.object.IrisObject load(java.lang.String)	=>	d(java.lang.String)
		public bridge synthetic com.volmit.iris.object.IrisRegistrant load(java.lang.String)	=>	c(java.lang.String)
		public com.volmit.iris.object.IrisObject loadFile(java.io.File, java.lang.String, java.lang.String)	=>	b(java.io.File, java.lang.String, java.lang.String)
		public bridge synthetic com.volmit.iris.object.IrisRegistrant loadFile(java.io.File, java.lang.String, java.lang.String)	=>	a(java.io.File, java.lang.String, java.lang.String)
		private void unload(java.lang.String)	=>	e(java.lang.String)
		public void unloadLast(long)	=>	a(long)
	LineNumbersOf: com.volmit.iris.util.ObjectResourceLoader
		8	=>	36 and 43
		10	=>	67
		11	=>	86
		15	=>	16
		16	=>	13
		20	=>	35
		22	=>	76
		24	=>	8
		25	=>	39
		27	=>	82
		32	=>	20
		34	=>	64
		36	=>	7
		39	=>	4
		43	=>	32
		45	=>	84
		47	=>	51
		50	=>	30
		52	=>	63
		54	=>	49
		58	=>	24
		59	=>	75
		61	=>	42
		63	=>	79
		64	=>	66
		66	=>	57
		67	=>	72
		69	=>	60
		71	=>	15
		76	=>	56
		77	=>	73
		78	=>	48
		79	=>	14
		80	=>	70
		81	=>	52
		85	=>	62
		88	=>	3
		89	=>	1
		90	=>	44
		91	=>	19
		92	=>	41
		93	=>	74
		94	=>	77
		95	=>	27
		98	=>	11
		100	=>	31
		101	=>	50
		102	=>	45
		108	=>	2
		109	=>	85
		111	=>	6 and 28
		113	=>	58
		115	=>	23
		116	=>	33
		120	=>	69
		122	=>	17
		124	=>	34
		125	=>	9
		127	=>	53
		129	=>	65
		131	=>	80
		132	=>	22
		137	=>	12
		139	=>	59
		141	=>	71
		142	=>	40
		143	=>	5
		146	=>	81
		147	=>	29
		149	=>	55 and 68
		151	=>	61
		153	=>	37
		154	=>	18
		155	=>	10
		159	=>	21
		161	=>	54
		163	=>	38
		164	=>	25
		165	=>	26
		167	=>	47
		169	=>	78
		171	=>	83
		172	=>	46

Class: public abstract com.volmit.iris.util.Observable	=>	com.volmit.iris.f.z
	Source: "Observable.java"
	FieldsOf: com.volmit.iris.util.Observable
	MethodsOf: com.volmit.iris.util.Observable
		public abstract com.volmit.iris.util.Observable clearObservers()	=>	b()
		public abstract java.lang.Object get()	=>	a()
		public abstract boolean has()	=>	c()
		public abstract com.volmit.iris.util.Observable observe(com.volmit.iris.util.Observer)	=>	a(com.volmit.iris.f.L)
		public abstract com.volmit.iris.util.Observable set(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Observable

Class: public abstract com.volmit.iris.util.Observer	=>	com.volmit.iris.f.L
	Source: "Observer.java"
	FieldsOf: com.volmit.iris.util.Observer
	MethodsOf: com.volmit.iris.util.Observer
		public abstract void onChanged(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Observer

Class: abstract com.volmit.iris.util.ParticleSender	=>	com.volmit.iris.f.N
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender
	MethodsOf: com.volmit.iris.util.ParticleSender
		public double color(double)	=>	a(double)
		public abstract java.lang.Object getParticle(com.volmit.iris.util.ParticleType)	=>	a(com.volmit.iris.f.g)
		public abstract boolean isValidData(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		public abstract void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.ParticleSender
		28	=>	1

Class: public com.volmit.iris.util.ParticleSender$ParticleSender1_13	=>	com.volmit.iris.f.N$b
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender$ParticleSender1_13
	MethodsOf: com.volmit.iris.util.ParticleSender$ParticleSender1_13
		public void <init>() 	SignatureNotChanged
		public boolean isValidDataBukkit(org.bukkit.Particle, java.lang.Object)	=>	a(org.bukkit.Particle, java.lang.Object)
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.ParticleSender$ParticleSender1_13
		88	=>	11
		93	=>	6
		95	=>	2
		97	=>	12
		99	=>	14
		101	=>	10
		103	=>	9
		106	=>	15
		108	=>	16
		111	=>	3
		112	=>	5
		117	=>	7
		119	=>	1
		122	=>	13
		124	=>	8
		127	=>	4

Class: public com.volmit.iris.util.ParticleSender$ParticleSenderImpl	=>	com.volmit.iris.f.N$a
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender$ParticleSenderImpl
	MethodsOf: com.volmit.iris.util.ParticleSender$ParticleSenderImpl
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getParticle(com.volmit.iris.util.ParticleType)	=>	a(com.volmit.iris.f.g)
		public org.bukkit.Particle getParticle(com.volmit.iris.util.ParticleType)	=>	b(com.volmit.iris.f.g)
		public boolean isValidData(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		public boolean isValidDataBukkit(org.bukkit.Particle, java.lang.Object)	=>	a(org.bukkit.Particle, java.lang.Object)
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.ParticleSender$ParticleSenderImpl
		31	=>	4 and 11
		37	=>	16
		39	=>	9
		41	=>	3
		43	=>	21
		44	=>	12
		45	=>	13
		46	=>	6
		47	=>	8
		48	=>	5
		50	=>	7
		53	=>	18
		55	=>	20
		57	=>	22
		59	=>	19
		61	=>	1
		68	=>	2
		70	=>	10
		72	=>	14
		79	=>	17
		84	=>	15

Class: com.volmit.iris.util.ParticleSenderLegacy	=>	com.volmit.iris.f.R
	Source: "ParticleSenderLegacy.java"
	FieldsOf: com.volmit.iris.util.ParticleSenderLegacy
		private static final int[] EMPTY	=>	e
		private static final java.lang.Class ENUM_PARTICLE	=>	h
		private static final java.lang.reflect.Constructor PACKET_PARTICLE	=>	c
		private static final java.lang.reflect.Field PLAYER_CONNECTION	=>	f
		private static final java.lang.reflect.Method PLAYER_GET_HANDLE	=>	b
		private static final java.lang.reflect.Method SEND_PACKET	=>	a
		private static final boolean SERVER_IS_1_8	=>	g
		private static final java.lang.reflect.Method WORLD_GET_HANDLE	=>	i
		private static final java.lang.reflect.Method WORLD_SEND_PARTICLE	=>	d
	MethodsOf: com.volmit.iris.util.ParticleSenderLegacy
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.lang.Object getEnumParticle(com.volmit.iris.util.ParticleType)	=>	b(com.volmit.iris.f.g)
		public java.lang.Object getParticle(com.volmit.iris.util.ParticleType)	=>	a(com.volmit.iris.f.g)
		public boolean isValidData(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.f.g, double, double, double, int, double, double, double, double, java.lang.Object)
		private int[] toData(com.volmit.iris.util.ParticleType, java.lang.Object)	=>	a(com.volmit.iris.f.g, java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.ParticleSenderLegacy
		19	=>	63
		32	=>	71
		35	=>	49
		36	=>	15
		39	=>	58
		40	=>	45
		41	=>	55
		42	=>	7
		43	=>	30
		45	=>	70
		46	=>	21
		48	=>	61
		49	=>	48
		52	=>	19
		56	=>	14
		58	=>	54
		62	=>	9
		63	=>	59
		64	=>	64
		65	=>	12
		66	=>	33
		67	=>	51
		68	=>	31
		69	=>	4
		75	=>	65
		77	=>	26
		78	=>	10
		79	=>	20
		80	=>	17
		81	=>	27
		82	=>	35
		83	=>	52
		84	=>	22
		88	=>	2
		89	=>	72
		91	=>	41
		92	=>	5
		94	=>	42
		95	=>	39
		97	=>	29
		100	=>	44
		101	=>	46 and 75
		102	=>	67
		104	=>	34
		105	=>	11 and 50
		106	=>	32
		109	=>	73
		110	=>	6
		111	=>	76
		113	=>	23
		114	=>	36
		115	=>	38
		116	=>	66
		120	=>	3
		125	=>	13
		126	=>	28
		130	=>	68
		131	=>	37
		132	=>	62
		137	=>	1
		141	=>	53
		142	=>	16
		143	=>	18
		144	=>	60
		147	=>	24
		148	=>	74
		151	=>	69
		152	=>	40
		153	=>	43
		156	=>	47
		157	=>	25
		158	=>	57
		160	=>	8
		164	=>	56

Class: public final enum com.volmit.iris.util.ParticleType	=>	com.volmit.iris.f.g
	Source: "ParticleType.java"
	FieldsOf: com.volmit.iris.util.ParticleType
		private static final synthetic com.volmit.iris.util.ParticleType[] $VALUES	=>	b
		public static final enum com.volmit.iris.util.ParticleType BARRIER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BLOCK_CRACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BLOCK_DUST	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BUBBLE_COLUMN_UP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BUBBLE_POP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CAMPFIRE_COSY_SMOKE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CAMPFIRE_SIGNAL_SMOKE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CLOUD	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType COMPOSTER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CRIT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CRIT_MAGIC	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CURRENT_DOWN	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DAMAGE_INDICATOR	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DOLPHIN	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRAGON_BREATH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIPPING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIP_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIP_WATER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType ENCHANTMENT_TABLE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType END_ROD	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_HUGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_LARGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_NORMAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_DUST	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_NECTAR	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_WATER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FIREWORKS_SPARK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FLAME	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FLASH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType HEART	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType ITEM_CRACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LANDING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LANDING_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType MOB_APPEARANCE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType NAUTILUS	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType NOTE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType PORTAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType REDSTONE	NameNotChanged
		private static final int SERVER_VERSION_ID	=>	c
		public static final enum com.volmit.iris.util.ParticleType SLIME	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SMOKE_LARGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SMOKE_NORMAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNEEZE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNOWBALL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNOW_SHOVEL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_INSTANT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_MOB	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_MOB_AMBIENT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_WITCH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPIT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SQUID_INK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SUSPENDED	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SUSPENDED_DEPTH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SWEEP_ATTACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType TOTEM	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType TOWN_AURA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType VILLAGER_ANGRY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType VILLAGER_HAPPY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_BUBBLE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_DROP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_SPLASH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_WAKE	NameNotChanged
		private final java.lang.String legacyName	=>	d
		private final int minimumVersion	=>	e
		private final java.lang.String name	=>	a
	MethodsOf: com.volmit.iris.util.ParticleType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int) 	SignatureNotChanged
		private void <init>(java.lang.String, int, java.lang.String, java.lang.String) 	SignatureNotChanged
		private void <init>(java.lang.String, int, java.lang.String, java.lang.String, int) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public java.lang.Class getDataType()	=>	c()
		public java.lang.String getLegacyName()	=>	e()
		public java.lang.String getName()	=>	b()
		public static com.volmit.iris.util.ParticleType getParticle(java.lang.String)	=>	a(java.lang.String)
		public boolean hasLegacyName()	=>	d()
		public boolean isSupported()	=>	a()
		public static com.volmit.iris.util.ParticleType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.ParticleType[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ParticleType
		10	=>	11, 42 and 54
		14	=>	52
		15	=>	83
		16	=>	79
		17	=>	70
		18	=>	60
		19	=>	59
		20	=>	15
		21	=>	49
		22	=>	35
		23	=>	76
		24	=>	103
		25	=>	25
		26	=>	61
		27	=>	93
		28	=>	29
		29	=>	38
		30	=>	45
		31	=>	84
		32	=>	55
		33	=>	24
		34	=>	90
		35	=>	2
		36	=>	57
		37	=>	28
		38	=>	13
		39	=>	97
		40	=>	47
		41	=>	51
		43	=>	98
		44	=>	56
		45	=>	41
		46	=>	58
		47	=>	85
		48	=>	4
		49	=>	67
		50	=>	95
		51	=>	48
		54	=>	5
		55	=>	32
		56	=>	30
		60	=>	80
		61	=>	64
		62	=>	86
		63	=>	1
		66	=>	102
		69	=>	12
		70	=>	81
		73	=>	37
		74	=>	10
		75	=>	72
		76	=>	53
		77	=>	73
		78	=>	17
		81	=>	66
		82	=>	16
		83	=>	7
		84	=>	88
		85	=>	36
		86	=>	74
		87	=>	100
		88	=>	89
		91	=>	87
		92	=>	8
		93	=>	9
		94	=>	94
		99	=>	68
		100	=>	99
		101	=>	71
		109	=>	14
		110	=>	19
		113	=>	46
		114	=>	96
		115	=>	69
		116	=>	39
		117	=>	23
		120	=>	44
		121	=>	6
		122	=>	91
		123	=>	43
		124	=>	31
		127	=>	92
		131	=>	65
		132	=>	62
		134	=>	77
		138	=>	26
		142	=>	3
		146	=>	22
		148	=>	40
		153	=>	82
		155	=>	50
		157	=>	20
		163	=>	63
		164	=>	75
		165	=>	34 and 101
		166	=>	18
		167	=>	27
		170	=>	21
		171	=>	78
		175	=>	33

Class: synthetic com.volmit.iris.util.ParticleType$1	=>	com.volmit.iris.f.g$a
	Source: "ParticleType.java"
	FieldsOf: com.volmit.iris.util.ParticleType$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$ParticleType	=>	a
	MethodsOf: com.volmit.iris.util.ParticleType$1
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ParticleType$1
		146	=>	1

Class: public com.volmit.iris.util.PerlinNoise	=>	com.volmit.iris.f.bW
	Source: "PerlinNoise.java"
	FieldsOf: com.volmit.iris.util.PerlinNoise
	MethodsOf: com.volmit.iris.util.PerlinNoise
		public void <init>(java.util.Random) 	SignatureNotChanged
		public static int floor(double)	=>	e(double)
		protected double[] get2dNoise(double[], double, double, int, int, double, double, double)	=>	a(double[], double, double, int, int, double, double, double)
		protected double[] get3dNoise(double[], double, double, double, int, int, int, double, double, double, double)	=>	a(double[], double, double, double, int, int, int, double, double, double, double)
		public double[] getNoise(double[], double, double, double, int, int, int, double, double, double, double)	=>	b(double[], double, double, double, int, int, int, double, double, double, double)
	LineNumbersOf: com.volmit.iris.util.PerlinNoise
		15	=>	35
		16	=>	15
		17	=>	65
		18	=>	68
		33	=>	47 and 54
		35	=>	8
		37	=>	13 and 28
		39	=>	77
		40	=>	79
		41	=>	26
		42	=>	51
		43	=>	71
		45	=>	50
		49	=>	63
		50	=>	60
		82	=>	11
		84	=>	78
		88	=>	16
		94	=>	14
		95	=>	2 and 39
		97	=>	67
		98	=>	24
		99	=>	70
		100	=>	58
		101	=>	25
		102	=>	62 and 66
		104	=>	32
		105	=>	64
		106	=>	69
		107	=>	20
		108	=>	34
		110	=>	59
		111	=>	82
		112	=>	56
		113	=>	17
		114	=>	43
		115	=>	27
		116	=>	5
		119	=>	75
		124	=>	3
		125	=>	36
		126	=>	38
		127	=>	74
		128	=>	83
		129	=>	22
		130	=>	30 and 40
		132	=>	37
		133	=>	33
		134	=>	44
		135	=>	84
		136	=>	10
		137	=>	29 and 41
		139	=>	81
		140	=>	48
		141	=>	4
		142	=>	23
		143	=>	12
		144	=>	61 and 72
		146	=>	52
		147	=>	9
		148	=>	7
		149	=>	85
		150	=>	21
		151	=>	57
		153	=>	45
		155	=>	73
		156	=>	19
		157	=>	86
		158	=>	53
		159	=>	55
		160	=>	1
		161	=>	46
		162	=>	18
		163	=>	76
		164	=>	80
		166	=>	6
		167	=>	42
		169	=>	31
		173	=>	49

Class: public com.volmit.iris.util.PhasicBiomeStorage	=>	com.volmit.iris.f.aB
	Source: "PhasicBiomeStorage.java"
	FieldsOf: com.volmit.iris.util.PhasicBiomeStorage
		public static final int a	=>	c
		public static final int b	=>	d
		public static final int c	=>	b
		private static final int e	=>	f
		private static final int f	=>	e
		private final org.bukkit.block.Biome[] g	=>	a
	MethodsOf: com.volmit.iris.util.PhasicBiomeStorage
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(org.bukkit.block.Biome[]) 	SignatureNotChanged
		public static int clamp(int, int, int)	=>	b(int, int, int)
		public org.bukkit.block.Biome getBiome(int, int, int)	=>	a(int, int, int)
		public void setBiome(int, int, int, org.bukkit.block.Biome)	=>	a(int, int, int, org.bukkit.block.Biome)
	LineNumbersOf: com.volmit.iris.util.PhasicBiomeStorage
		7	=>	16
		8	=>	11
		16	=>	20
		17	=>	15
		18	=>	8
		19	=>	10
		22	=>	22
		23	=>	4
		24	=>	21
		28	=>	18
		29	=>	14
		33	=>	23
		35	=>	12
		39	=>	3
		45	=>	1
		46	=>	19
		47	=>	7
		48	=>	2
		53	=>	6
		54	=>	9
		55	=>	13
		56	=>	5
		57	=>	17

Class: public com.volmit.iris.util.PolygonGenerator	=>	com.volmit.iris.f.aJ
	Source: "PolygonGenerator.java"
	FieldsOf: com.volmit.iris.util.PolygonGenerator
		private int bits	=>	b
		private com.volmit.iris.util.CNG[] gen	=>	c
		private int possibilities	=>	e
		private double[] rarity	=>	d
		private boolean useRarity	=>	a
	MethodsOf: com.volmit.iris.util.PolygonGenerator
		public void <init>(com.volmit.iris.util.RNG, int, double, int, java.util.function.Function) 	SignatureNotChanged
		public double getClosestNeighbor(double[])	=>	b(double[])
		public int getIndex(double[])	=>	a(double[])
		public boolean hasBorder(int, double, double[])	=>	a(int, double, double[])
		public boolean hasBorder3D(int, double, double[])	=>	b(int, double, double[])
		public void setRarity(int, double)	=>	a(int, double)
		public com.volmit.iris.util.PolygonGenerator useRarity()	=>	a()
	LineNumbersOf: com.volmit.iris.util.PolygonGenerator
		14	=>	32
		15	=>	57
		16	=>	36
		17	=>	45
		19	=>	63
		21	=>	5
		24	=>	13
		25	=>	4
		26	=>	19
		27	=>	59
		29	=>	10 and 61
		31	=>	1
		32	=>	41
		34	=>	26
		38	=>	27
		39	=>	23
		44	=>	20
		45	=>	35
		49	=>	15
		50	=>	30
		52	=>	50
		54	=>	31 and 38
		56	=>	58
		57	=>	46
		58	=>	7
		60	=>	48
		65	=>	55
		67	=>	44 and 52
		69	=>	68
		70	=>	16
		71	=>	28
		72	=>	71
		74	=>	33
		79	=>	22
		84	=>	56
		85	=>	69
		86	=>	64
		88	=>	72
		90	=>	37 and 67
		92	=>	40
		93	=>	9
		94	=>	8
		95	=>	25
		96	=>	39
		98	=>	24
		100	=>	17
		103	=>	49
		105	=>	14
		111	=>	51
		126	=>	70
		128	=>	6 and 53
		130	=>	66
		132	=>	65
		134	=>	12
		138	=>	2
		143	=>	47
		144	=>	3
		145	=>	43
		147	=>	11 and 62
		149	=>	18
		152	=>	73
		154	=>	21
		157	=>	42
		159	=>	34 and 54
		161	=>	60
		164	=>	29

Class: public com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator	=>	com.volmit.iris.f.aJ$a
	Source: "PolygonGenerator.java"
	FieldsOf: com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator
		private java.lang.Object[] choices	=>	f
	MethodsOf: com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator
		public void <init>(com.volmit.iris.util.RNG, double, int, com.volmit.iris.util.KList, com.volmit.iris.util.KMap, java.util.function.Function) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, double, int, java.lang.Object[], java.util.function.Function) 	SignatureNotChanged
		public java.lang.Object getChoice(double[])	=>	c(double[])
		public void setRarity(java.lang.Object, double)	=>	a(java.lang.Object, double)
		public bridge synthetic com.volmit.iris.util.PolygonGenerator useRarity()	=>	a()
		public com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator useRarity()	=>	b()
	LineNumbersOf: com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator
		167	=>	15
		174	=>	10
		175	=>	20
		176	=>	13
		180	=>	19
		181	=>	8
		187	=>	7
		188	=>	14
		189	=>	18
		191	=>	6
		193	=>	4
		194	=>	3
		195	=>	16
		199	=>	2 and 5
		201	=>	12
		203	=>	1
		204	=>	11
		207	=>	17
		211	=>	9

Class: public com.volmit.iris.util.PrecisionStopwatch	=>	com.volmit.iris.f.bL
	Source: "PrecisionStopwatch.java"
	FieldsOf: com.volmit.iris.util.PrecisionStopwatch
		private long millis	=>	d
		private long nanos	=>	c
		private boolean profiling	=>	f
		private long startMillis	=>	b
		private long startNano	=>	e
		private double time	=>	a
	MethodsOf: com.volmit.iris.util.PrecisionStopwatch
		public void <init>() 	SignatureNotChanged
		public void begin()	=>	l()
		public void end()	=>	e()
		public double getHours()	=>	k()
		public long getMillis()	=>	n()
		public double getMilliseconds()	=>	g()
		public double getMinutes()	=>	d()
		public long getNanos()	=>	p()
		public long getNanoseconds()	=>	m()
		public double getSeconds()	=>	i()
		public long getStartMillis()	=>	h()
		public long getStartNano()	=>	o()
		public double getTicks()	=>	c()
		public double getTime()	=>	a()
		public boolean isProfiling()	=>	b()
		public void reset()	=>	f()
		public static com.volmit.iris.util.PrecisionStopwatch start()	=>	j()
	LineNumbersOf: com.volmit.iris.util.PrecisionStopwatch
		12	=>	28
		13	=>	22
		15	=>	13
		18	=>	16
		19	=>	20
		20	=>	3
		21	=>	14
		24	=>	1
		25	=>	42
		26	=>	2
		27	=>	15
		30	=>	18
		31	=>	39
		34	=>	29
		35	=>	37
		36	=>	24
		37	=>	40
		38	=>	9
		39	=>	38
		42	=>	12
		43	=>	31
		44	=>	27
		45	=>	11
		46	=>	33
		47	=>	10
		48	=>	21
		51	=>	4
		55	=>	6
		59	=>	36
		63	=>	19
		67	=>	41
		68	=>	34
		69	=>	32
		70	=>	30
		71	=>	26
		75	=>	17
		79	=>	35
		83	=>	8
		87	=>	23
		91	=>	25
		95	=>	7
		99	=>	5

Class: public abstract com.volmit.iris.util.Queue	=>	com.volmit.iris.f.bS
	Source: "Queue.java"
	FieldsOf: com.volmit.iris.util.Queue
	MethodsOf: com.volmit.iris.util.Queue
		public abstract com.volmit.iris.util.Queue clear()	=>	d()
		public static com.volmit.iris.util.Queue create(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public static com.volmit.iris.util.Queue create(java.lang.Object[])	=>	a(java.lang.Object[])
		public abstract boolean hasNext()	=>	c()
		public abstract boolean hasNext(int)	=>	a(int)
		public abstract java.lang.Object next()	=>	b()
		public abstract com.volmit.iris.util.KList next(int)	=>	b(int)
		public abstract com.volmit.iris.util.Queue queue(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public abstract com.volmit.iris.util.Queue queue(java.lang.Object)	=>	a(java.lang.Object)
		public abstract int size()	=>	a()
	LineNumbersOf: com.volmit.iris.util.Queue
		23	=>	2
		29	=>	1

Class: public com.volmit.iris.util.QueueExecutor	=>	com.volmit.iris.f.e
	Source: "QueueExecutor.java"
	FieldsOf: com.volmit.iris.util.QueueExecutor
		private com.volmit.iris.util.Queue queue	=>	b
		private boolean shutdown	=>	a
	MethodsOf: com.volmit.iris.util.QueueExecutor
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public double getRunTime()	=>	c()
		protected long loop()	=>	a()
		public com.volmit.iris.util.Queue queue()	=>	d()
		public void shutdown()	=>	b()
	LineNumbersOf: com.volmit.iris.util.QueueExecutor
		9	=>	14
		10	=>	12
		11	=>	13
		12	=>	9
		16	=>	7
		22	=>	8
		26	=>	1
		29	=>	16
		31	=>	3
		32	=>	6 and 10
		35	=>	4
		37	=>	15
		38	=>	11
		41	=>	17
		46	=>	18
		51	=>	5
		52	=>	2

Class: public com.volmit.iris.util.RNG	=>	com.volmit.iris.f.aV
	Source: "RNG.java"
	FieldsOf: com.volmit.iris.util.RNG
		private static final char[] CHARGEN	=>	c
		public static final com.volmit.iris.util.RNG r	=>	a
		private static final long serialVersionUID	NameNotChanged
		private final long sx	=>	b
	MethodsOf: com.volmit.iris.util.RNG
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		public boolean b()	=>	e()
		public boolean b(double)	=>	a(double)
		public char c()	=>	a()
		public double d()	=>	i()
		public double d(double)	=>	b(double)
		public double d(double, double)	=>	a(double, double)
		public double dmax()	=>	g()
		public java.lang.Object e(java.lang.Class)	=>	a(java.lang.Class)
		public float f()	=>	d()
		public float f(float)	=>	a(float)
		public float f(float, float)	=>	a(float, float)
		public float fmax()	=>	c()
		public int i(int)	=>	c(int)
		public int i(int, int)	=>	b(int, int)
		public int imax()	=>	b()
		public long l(long)	=>	a(long)
		public long l(long, long)	=>	a(long, long)
		public long lmax()	=>	h()
		public com.volmit.iris.util.RNG nextParallelRNG(int)	=>	d(int)
		public com.volmit.iris.util.RNG nextRNG()	=>	j()
		public java.lang.String s(int)	=>	a(int)
		public short si()	=>	k()
		public short si(int)	=>	b(int)
		public short si(int, int)	=>	a(int, int)
		public short simax()	=>	f()
	LineNumbersOf: com.volmit.iris.util.RNG
		9	=>	37
		11	=>	32
		15	=>	39
		16	=>	14
		17	=>	16
		21	=>	19
		22	=>	22
		23	=>	3
		33	=>	6
		34	=>	27
		38	=>	8
		44	=>	28
		49	=>	25
		51	=>	18 and 29
		53	=>	36
		56	=>	13
		61	=>	35
		73	=>	34
		74	=>	11
		79	=>	5
		84	=>	1
		89	=>	9
		94	=>	21
		99	=>	20
		104	=>	23
		109	=>	17
		114	=>	12
		119	=>	33
		124	=>	10
		129	=>	7
		134	=>	30
		139	=>	2
		144	=>	38
		149	=>	4
		154	=>	15
		159	=>	24
		164	=>	31
		169	=>	40
		174	=>	26

Class: public com.volmit.iris.util.ResourceLoader	=>	com.volmit.iris.f.P
	Source: "ResourceLoader.java"
	FieldsOf: com.volmit.iris.util.ResourceLoader
		protected java.lang.String cname	=>	a
		protected com.volmit.iris.util.KList folderCache	=>	d
		protected com.volmit.iris.util.KMap folderMapCache	=>	b
		protected java.lang.String folderName	=>	i
		protected com.volmit.iris.util.KMap loadCache	=>	c
		protected java.util.concurrent.locks.ReentrantLock lock	=>	g
		protected java.lang.Class objectClass	=>	f
		protected java.lang.String resourceTypeName	=>	h
		protected java.io.File root	=>	e
	MethodsOf: com.volmit.iris.util.ResourceLoader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String, java.lang.String, java.lang.Class) 	SignatureNotChanged
		public void clearCache()	=>	c()
		public long count()	=>	a()
		public java.io.File fileFor(com.volmit.iris.object.IrisRegistrant)	=>	a(com.volmit.iris.b.m)
		public com.volmit.iris.util.KList getFolders()	=>	b()
		public com.volmit.iris.util.KList getFolders(java.lang.String)	=>	b(java.lang.String)
		public boolean isLoaded(java.lang.String)	=>	a(java.lang.String)
		public com.volmit.iris.object.IrisRegistrant load(java.lang.String)	=>	c(java.lang.String)
		protected com.volmit.iris.object.IrisRegistrant loadFile(java.io.File, java.lang.String, java.lang.String)	=>	a(java.io.File, java.lang.String, java.lang.String)
	LineNumbersOf: com.volmit.iris.util.ResourceLoader
		23	=>	54
		24	=>	52
		25	=>	50
		26	=>	4
		27	=>	41
		28	=>	22
		29	=>	40
		30	=>	35
		31	=>	44
		32	=>	62
		36	=>	26
		43	=>	13
		44	=>	9
		45	=>	63
		46	=>	34
		47	=>	11
		48	=>	27
		49	=>	17
		52	=>	28
		54	=>	19
		55	=>	10
		56	=>	18
		62	=>	37
		64	=>	47
		66	=>	6
		67	=>	20
		70	=>	12
		71	=>	51
		73	=>	36 and 46
		75	=>	21
		77	=>	49
		81	=>	29
		83	=>	23
		85	=>	60
		87	=>	61
		89	=>	65
		91	=>	45
		92	=>	32
		97	=>	38
		99	=>	3
		101	=>	56 and 58
		103	=>	66
		105	=>	7 and 43
		107	=>	48
		109	=>	53
		110	=>	5
		117	=>	70
		122	=>	67
		124	=>	33
		126	=>	68
		128	=>	59
		130	=>	69
		132	=>	30
		135	=>	71
		140	=>	55
		141	=>	14
		142	=>	15
		146	=>	8
		148	=>	24 and 31
		150	=>	64
		152	=>	25
		156	=>	42
		158	=>	39
		160	=>	2
		162	=>	1
		164	=>	16
		169	=>	57

Class: public com.volmit.iris.util.RollingSequence	=>	com.volmit.iris.f.aL
	Source: "RollingSequence.java"
	FieldsOf: com.volmit.iris.util.RollingSequence
		private int dirtyExtremes	=>	l
		private boolean dirtyMedian	=>	j
		private double max	=>	h
		private double median	=>	i
		private double min	=>	g
		private boolean precision	=>	k
	MethodsOf: com.volmit.iris.util.RollingSequence
		public void <init>(int) 	SignatureNotChanged
		public double addLast(int)	=>	a(int)
		public double getMax()	=>	g()
		public double getMedian()	=>	e()
		public double getMin()	=>	j()
		public boolean isPrecision()	=>	f()
		public void put(double)	=>	a(double)
		private void recalculateMedian()	=>	i()
		public void resetExtremes()	=>	h()
		public void setPrecision(boolean)	=>	a(boolean)
	LineNumbersOf: com.volmit.iris.util.RollingSequence
		14	=>	1
		15	=>	30
		16	=>	25
		17	=>	10
		18	=>	7
		19	=>	29
		23	=>	22
		25	=>	19 and 34
		27	=>	12
		30	=>	13
		35	=>	35
		36	=>	15
		40	=>	16
		45	=>	21
		47	=>	3
		50	=>	8
		55	=>	4
		57	=>	24
		60	=>	5
		65	=>	36
		67	=>	27
		70	=>	20
		75	=>	28
		76	=>	31
		77	=>	2
		81	=>	11
		82	=>	40
		84	=>	6 and 26
		86	=>	39
		87	=>	38
		90	=>	17
		91	=>	23
		95	=>	18
		96	=>	32
		97	=>	33
		98	=>	9
		99	=>	14
		100	=>	37

Class: public com.volmit.iris.util.SNG	=>	com.volmit.iris.f.bw
	Source: "SNG.java"
	FieldsOf: com.volmit.iris.util.SNG
		protected static final double F2	=>	j
		protected static final double F3	=>	k
		protected static final double G2	=>	h
		protected static final double G22	=>	i
		protected static final double G3	=>	o
		protected static final double G32	=>	g
		protected static final double G33	=>	m
		protected static final double SQRT_3	=>	l
		private static com.volmit.iris.util.SNG$Grad[] grad3	=>	p
		protected final int[] permMod12	=>	n
	MethodsOf: com.volmit.iris.util.SNG
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.util.Random) 	SignatureNotChanged
		protected static double dot(com.volmit.iris.util.SNG$Grad, double, double)	=>	a(com.volmit.iris.f.bw$a, double, double)
		protected static double dot(com.volmit.iris.util.SNG$Grad, double, double, double)	=>	a(com.volmit.iris.f.bw$a, double, double, double)
		public static int floor(double)	=>	f(double)
		protected double[] get2dNoise(double[], double, double, int, int, double, double, double)	=>	a(double[], double, double, int, int, double, double, double)
		protected double[] get3dNoise(double[], double, double, double, int, int, int, double, double, double, double)	=>	a(double[], double, double, double, int, int, int, double, double, double, double)
		public double noise(double, double)	=>	a(double, double)
		public double noise(double, double, double)	=>	a(double, double, double)
		private double simplex2D(double, double)	=>	c(double, double)
		private double simplex3D(double, double, double)	=>	d(double, double, double)
	LineNumbersOf: com.volmit.iris.util.SNG
		27	=>	1
		28	=>	27
		38	=>	118
		39	=>	42 and 117
		41	=>	73
		43	=>	165
		47	=>	76
		52	=>	115
		57	=>	12
		63	=>	64
		64	=>	22 and 131
		66	=>	162
		67	=>	52 and 98
		69	=>	19
		70	=>	104
		73	=>	146
		79	=>	121
		80	=>	85 and 137
		82	=>	149
		83	=>	31 and 50
		85	=>	61
		86	=>	90 and 113
		88	=>	25
		89	=>	142
		93	=>	160
		99	=>	124
		100	=>	125
		101	=>	116
		107	=>	132
		108	=>	129
		109	=>	2
		110	=>	46
		116	=>	138
		117	=>	147
		118	=>	86
		119	=>	163
		120	=>	56
		121	=>	39
		122	=>	108
		123	=>	48
		130	=>	34
		132	=>	136
		133	=>	107
		137	=>	145
		138	=>	148
		145	=>	14
		146	=>	133
		147	=>	10
		148	=>	99
		151	=>	59
		152	=>	55
		153	=>	60
		154	=>	139
		155	=>	35
		158	=>	38
		160	=>	45
		162	=>	30
		166	=>	75
		167	=>	157
		170	=>	150
		172	=>	88
		174	=>	101
		178	=>	158
		179	=>	65
		182	=>	69
		184	=>	58
		186	=>	51
		190	=>	152
		191	=>	77
		196	=>	26
		202	=>	18
		203	=>	114
		204	=>	119
		205	=>	24
		206	=>	143
		207	=>	57
		208	=>	62
		209	=>	49
		220	=>	82
		221	=>	91
		222	=>	93
		224	=>	29
		226	=>	112
		228	=>	141
		229	=>	83
		230	=>	123
		231	=>	127
		232	=>	66
		233	=>	140
		235	=>	41
		237	=>	8
		238	=>	109
		239	=>	122
		240	=>	87
		241	=>	120
		242	=>	5
		246	=>	47
		247	=>	84
		248	=>	4
		249	=>	102
		250	=>	128
		251	=>	68
		256	=>	11
		258	=>	78
		259	=>	44
		260	=>	130
		261	=>	151
		262	=>	134
		263	=>	156
		265	=>	159
		267	=>	155
		268	=>	20
		269	=>	6
		270	=>	13
		271	=>	63
		272	=>	53
		276	=>	100
		277	=>	154
		278	=>	153
		279	=>	135
		280	=>	80
		281	=>	97
		289	=>	15
		290	=>	67
		291	=>	110
		292	=>	3
		293	=>	106
		294	=>	103
		297	=>	17
		298	=>	28
		299	=>	33
		300	=>	70
		301	=>	144
		302	=>	36
		303	=>	72
		306	=>	94
		308	=>	89
		310	=>	111
		314	=>	9
		315	=>	32
		318	=>	37
		320	=>	74
		322	=>	23
		326	=>	16
		327	=>	164
		330	=>	21
		332	=>	43
		334	=>	105
		338	=>	95
		339	=>	79
		342	=>	161
		343	=>	40
		344	=>	54
		345	=>	92
		347	=>	81
		349	=>	71
		353	=>	7
		354	=>	96
		359	=>	126

Class: com.volmit.iris.util.SNG$Grad	=>	com.volmit.iris.f.bw$a
	Source: "SNG.java"
	FieldsOf: com.volmit.iris.util.SNG$Grad
		public double x	=>	a
		public double y	=>	b
		public double z	=>	c
	MethodsOf: com.volmit.iris.util.SNG$Grad
		void <init>(double, double, double) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.SNG$Grad
		371	=>	5
		372	=>	1
		373	=>	4
		374	=>	3
		375	=>	2

Class: public final enum com.volmit.iris.util.ScoreDirection	=>	com.volmit.iris.f.ax
	Source: "ScoreDirection.java"
	FieldsOf: com.volmit.iris.util.ScoreDirection
		private static final synthetic com.volmit.iris.util.ScoreDirection[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.ScoreDirection DOWN	NameNotChanged
		public static final enum com.volmit.iris.util.ScoreDirection UP	NameNotChanged
	MethodsOf: com.volmit.iris.util.ScoreDirection
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.ScoreDirection valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.ScoreDirection[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ScoreDirection
		7	=>	1, 3, 5 and 6
		8	=>	4
		9	=>	2

Class: public final com.volmit.iris.util.ShortTag	=>	com.volmit.iris.f.aK
	Source: "ShortTag.java"
	FieldsOf: com.volmit.iris.util.ShortTag
		private final short value	=>	c
	MethodsOf: com.volmit.iris.util.ShortTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, short) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.Short getValue()	=>	d()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.ShortTag
		41	=>	5
		55	=>	7
		56	=>	3
		57	=>	2
		61	=>	6
		66	=>	9
		67	=>	4
		68	=>	1
		69	=>	8
		71	=>	10

Class: public com.volmit.iris.util.Shrinkwrap	=>	com.volmit.iris.f.as
	Source: "Shrinkwrap.java"
	FieldsOf: com.volmit.iris.util.Shrinkwrap
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.Shrinkwrap
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object get()	=>	a()
		public void set(java.lang.Object)	=>	a(java.lang.Object)
	LineNumbersOf: com.volmit.iris.util.Shrinkwrap
		8	=>	7
		9	=>	4
		10	=>	2
		14	=>	6
		15	=>	8
		19	=>	3
		24	=>	1
		25	=>	5

Class: public com.volmit.iris.util.ShurikenQueue	=>	com.volmit.iris.f.v
	Source: "ShurikenQueue.java"
	FieldsOf: com.volmit.iris.util.ShurikenQueue
		private com.volmit.iris.util.KList queue	=>	c
		private boolean randomPop	=>	a
		private boolean reversePop	=>	b
	MethodsOf: com.volmit.iris.util.ShurikenQueue
		public void <init>() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Queue clear()	=>	d()
		public com.volmit.iris.util.ShurikenQueue clear()	=>	g()
		public boolean hasNext()	=>	c()
		public boolean hasNext(int)	=>	a(int)
		public java.lang.Object next()	=>	b()
		public com.volmit.iris.util.KList next(int)	=>	b(int)
		public bridge synthetic com.volmit.iris.util.Queue queue(com.volmit.iris.util.KList)	=>	b(com.volmit.iris.f.t)
		public com.volmit.iris.util.ShurikenQueue queue(com.volmit.iris.util.KList)	=>	c(com.volmit.iris.f.t)
		public bridge synthetic com.volmit.iris.util.Queue queue(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.ShurikenQueue queue(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.ShurikenQueue randomMode()	=>	f()
		public com.volmit.iris.util.ShurikenQueue responsiveMode()	=>	e()
		public int size()	=>	a()
	LineNumbersOf: com.volmit.iris.util.ShurikenQueue
		3	=>	9, 20 and 26
		10	=>	12
		11	=>	7
		12	=>	23
		16	=>	25
		17	=>	22
		22	=>	17
		23	=>	15
		29	=>	10
		30	=>	2
		36	=>	1
		37	=>	14
		43	=>	27
		49	=>	16
		55	=>	21
		61	=>	3
		63	=>	8 and 11
		65	=>	18
		67	=>	19
		70	=>	24
		73	=>	4
		79	=>	13
		80	=>	5
		86	=>	6

Class: public final com.volmit.iris.util.StringTag	=>	com.volmit.iris.f.av
	Source: "StringTag.java"
	FieldsOf: com.volmit.iris.util.StringTag
		private final java.lang.String value	=>	c
	MethodsOf: com.volmit.iris.util.StringTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue()	=>	a()
		public java.lang.String getValue()	=>	d()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.StringTag
		41	=>	7
		55	=>	3
		56	=>	5
		57	=>	9
		61	=>	2
		66	=>	8
		67	=>	6
		68	=>	1
		69	=>	4
		71	=>	10

Class: public com.volmit.iris.util.Switch	=>	com.volmit.iris.f.af
	Source: "Switch.java"
	FieldsOf: com.volmit.iris.util.Switch
		private volatile boolean b	=>	a
	MethodsOf: com.volmit.iris.util.Switch
		public void <init>() 	SignatureNotChanged
		public void flip()	=>	a()
		public boolean isFlipped()	=>	c()
		public void reset()	=>	b()
	LineNumbersOf: com.volmit.iris.util.Switch
		11	=>	6
		12	=>	5
		13	=>	7
		17	=>	8
		18	=>	1
		22	=>	4
		27	=>	3
		28	=>	2

Class: public abstract com.volmit.iris.util.Tag	=>	com.volmit.iris.f.a4
	Source: "Tag.java"
	FieldsOf: com.volmit.iris.util.Tag
		private static com.google.gson.TypeAdapter[] a	=>	b
		private final java.lang.String name	=>	a
	MethodsOf: com.volmit.iris.util.Tag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	b()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
		public final java.lang.String getName()	=>	c()
		public abstract java.lang.Object getValue()	=>	a()
	LineNumbersOf: com.volmit.iris.util.Tag
		53	=>	1
		54	=>	2
		55	=>	3
		63	=>	4

Class: public com.volmit.iris.util.TaskExecutor	=>	com.volmit.iris.f.aW
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor
		private java.util.concurrent.ExecutorService service	=>	b
		private int xc	=>	a
	MethodsOf: com.volmit.iris.util.TaskExecutor
		public void <init>(int, int, java.lang.String) 	SignatureNotChanged
		static synthetic int access$008(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		static synthetic java.util.concurrent.ExecutorService access$200(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		public void close()	=>	c()
		public void closeNow()	=>	b()
		private synthetic void lambda$close$2() 	SignatureNotChanged
		private static synthetic java.lang.Thread lambda$new$0(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private synthetic java.lang.Thread lambda$new$1(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskGroup startWork()	=>	a()
	LineNumbersOf: com.volmit.iris.util.TaskExecutor
		13	=>	7 and 25
		19	=>	1
		20	=>	27
		22	=>	22
		24	=>	21
		26	=>	10
		27	=>	24
		28	=>	12
		30	=>	3
		34	=>	23
		36	=>	28
		48	=>	18
		49	=>	2
		53	=>	5
		55	=>	4
		56	=>	15
		57	=>	8
		59	=>	14
		62	=>	20
		66	=>	19
		71	=>	13
		73	=>	9
		74	=>	16
		75	=>	26
		76	=>	11
		80	=>	17
		81	=>	6

Class: com.volmit.iris.util.TaskExecutor$1	=>	com.volmit.iris.f.aW$e
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$1
		final synthetic com.volmit.iris.util.TaskExecutor this$0	NameNotChanged
		final synthetic java.lang.String val$name	NameNotChanged
		final synthetic int val$priority	NameNotChanged
	MethodsOf: com.volmit.iris.util.TaskExecutor$1
		void <init>(com.volmit.iris.util.TaskExecutor, java.lang.String, int) 	SignatureNotChanged
		public java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.TaskExecutor$1
		37	=>	2
		41	=>	4
		42	=>	1
		43	=>	3
		44	=>	5

Class: public com.volmit.iris.util.TaskExecutor$AssignedTask	=>	com.volmit.iris.f.aW$c
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$AssignedTask
		private com.volmit.iris.util.TaskExecutor$TaskState state	=>	a
		private com.volmit.iris.util.NastyRunnable task	=>	b
	MethodsOf: com.volmit.iris.util.TaskExecutor$AssignedTask
		public void <init>(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		static synthetic com.volmit.iris.util.TaskExecutor$TaskState access$100(com.volmit.iris.util.TaskExecutor$AssignedTask) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskState getState()	=>	b()
		public com.volmit.iris.util.NastyRunnable getTask()	=>	a()
		public void go(com.volmit.iris.util.TaskExecutor)	=>	a(com.volmit.iris.f.aW)
		private synthetic void lambda$go$0() 	SignatureNotChanged
		public void setState(com.volmit.iris.util.TaskExecutor$TaskState)	=>	a(com.volmit.iris.f.aW$a)
	LineNumbersOf: com.volmit.iris.util.TaskExecutor$AssignedTask
		192	=>	4
		194	=>	12
		195	=>	17
		198	=>	18
		202	=>	3
		203	=>	13
		204	=>	9
		205	=>	1
		209	=>	16
		211	=>	5
		214	=>	7
		215	=>	14
		218	=>	6
		220	=>	10
		221	=>	2
		222	=>	8
		223	=>	15
		224	=>	11

Class: public com.volmit.iris.util.TaskExecutor$TaskGroup	=>	com.volmit.iris.f.aW$b
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskGroup
		private com.volmit.iris.util.TaskExecutor e	=>	a
		private com.volmit.iris.util.KList tasks	=>	b
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskGroup
		public void <init>(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		private static java.lang.InterruptedException a(java.lang.InterruptedException) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskResult execute()	=>	a()
		private synthetic void lambda$execute$0(com.volmit.iris.util.TaskExecutor$AssignedTask) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskGroup queue(com.volmit.iris.util.KList)	=>	a(com.volmit.iris.f.t)
		public com.volmit.iris.util.TaskExecutor$TaskGroup queue(com.volmit.iris.util.NastyRunnable[])	=>	a(com.volmit.iris.f.B[])
	LineNumbersOf: com.volmit.iris.util.TaskExecutor$TaskGroup
		89	=>	31
		90	=>	8
		91	=>	26
		92	=>	17
		96	=>	2 and 28
		98	=>	1
		101	=>	19
		106	=>	10
		108	=>	21
		109	=>	27
		111	=>	7
		116	=>	6
		117	=>	18
		118	=>	34
		119	=>	32
		120	=>	4 and 22
		121	=>	5
		127	=>	24
		130	=>	35
		133	=>	16
		135	=>	3
		137	=>	25
		139	=>	13
		141	=>	33
		143	=>	30
		145	=>	20
		147	=>	14
		149	=>	11
		154	=>	9
		157	=>	12
		158	=>	23
		160	=>	29
		163	=>	15

Class: public com.volmit.iris.util.TaskExecutor$TaskResult	=>	com.volmit.iris.f.aW$d
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskResult
		public final int tasksCompleted	=>	b
		public final int tasksExecuted	=>	d
		public final int tasksFailed	=>	a
		public final double timeElapsed	=>	c
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(double, int, int, int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.TaskExecutor$TaskResult
		167	=>	7
		171	=>	3
		172	=>	1
		173	=>	6
		174	=>	5
		175	=>	4
		176	=>	2

Class: public final enum com.volmit.iris.util.TaskExecutor$TaskState	=>	com.volmit.iris.f.aW$a
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskState
		private static final synthetic com.volmit.iris.util.TaskExecutor$TaskState[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState COMPLETED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState FAILED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState QUEUED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState RUNNING	NameNotChanged
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskState
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.TaskExecutor$TaskState valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.TaskExecutor$TaskState[] values() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.TaskExecutor$TaskState
		184	=>	1, 3, 6 and 7
		186	=>	8
		187	=>	4
		188	=>	5
		189	=>	2

Class: public com.volmit.iris.util.ThreadMonitor	=>	com.volmit.iris.f.ak
	Source: "ThreadMonitor.java"
	FieldsOf: com.volmit.iris.util.ThreadMonitor
		private com.volmit.iris.util.ChronoLatch cl	=>	a
		int cycles	=>	f
		private java.lang.Thread$State lastState	=>	b
		private java.lang.Thread monitor	=>	e
		private boolean running	=>	d
		private com.volmit.iris.util.RollingSequence sq	=>	g
		private com.volmit.iris.util.PrecisionStopwatch st	=>	c
	MethodsOf: com.volmit.iris.util.ThreadMonitor
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.Thread) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static com.volmit.iris.util.ThreadMonitor bind(java.lang.Thread)	=>	a(java.lang.Thread)
		public void pushState(java.lang.Thread$State)	=>	a(java.lang.Thread$State)
		public void run() 	SignatureNotChanged
		public void unbind()	=>	a()
	LineNumbersOf: com.volmit.iris.util.ThreadMonitor
		19	=>	22
		20	=>	14
		23	=>	4
		24	=>	25
		25	=>	10
		26	=>	8
		27	=>	24
		28	=>	9
		29	=>	29
		30	=>	6
		34	=>	15
		38	=>	27
		39	=>	32
		40	=>	26
		42	=>	28
		43	=>	11
		46	=>	20
		48	=>	30
		50	=>	19
		54	=>	12
		56	=>	13
		57	=>	5
		58	=>	16
		60	=>	31
		64	=>	3
		66	=>	2
		68	=>	7
		75	=>	21
		77	=>	17
		81	=>	1
		82	=>	18
		86	=>	23

Class: public com.volmit.iris.util.VectorMath	=>	com.volmit.iris.f.k
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath
	MethodsOf: com.volmit.iris.util.VectorMath
		public void <init>() 	SignatureNotChanged
		public static org.bukkit.util.Vector angleDown(org.bukkit.util.Vector, float)	=>	b(org.bukkit.util.Vector, float)
		public static org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector, float)	=>	a(org.bukkit.util.Vector, float)
		public static org.bukkit.util.Vector angleRight(org.bukkit.util.Vector, float)	=>	d(org.bukkit.util.Vector, float)
		public static org.bukkit.util.Vector angleUp(org.bukkit.util.Vector, float)	=>	c(org.bukkit.util.Vector, float)
		public static org.bukkit.util.Vector clip(org.bukkit.util.Vector, int)	=>	f(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector direction(org.bukkit.Location, org.bukkit.Location)	=>	a(org.bukkit.Location, org.bukkit.Location)
		public static org.bukkit.util.Vector directionNoNormal(org.bukkit.Location, org.bukkit.Location)	=>	b(org.bukkit.Location, org.bukkit.Location)
		public static org.bukkit.util.Vector getAxis(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction)	=>	a(com.volmit.iris.f.ab, com.volmit.iris.f.ab)
		public static org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector)	=>	b(org.bukkit.util.Vector)
		public static double getSpeed(org.bukkit.util.Vector)	=>	h(org.bukkit.util.Vector)
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector)	=>	a(org.bukkit.entity.Entity, org.bukkit.util.Vector)
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector, double)	=>	a(org.bukkit.entity.Entity, org.bukkit.util.Vector, double)
		public static boolean isLookingNear(org.bukkit.Location, org.bukkit.Location, double)	=>	a(org.bukkit.Location, org.bukkit.Location, double)
		public static org.bukkit.util.Vector reverse(org.bukkit.util.Vector)	=>	f(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector)	=>	i(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction, org.bukkit.util.Vector)	=>	a(com.volmit.iris.f.ab, com.volmit.iris.f.ab, org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction, org.bukkit.util.Vector, int, int, int)	=>	a(com.volmit.iris.f.ab, com.volmit.iris.f.ab, org.bukkit.util.Vector, int, int, int)
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector, int)	=>	g(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector)	=>	e(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector, int)	=>	b(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector)	=>	j(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector, int)	=>	c(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector)	=>	k(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector, int)	=>	d(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector)	=>	g(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector, int)	=>	a(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector)	=>	c(org.bukkit.util.Vector)
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector, int)	=>	e(org.bukkit.util.Vector, int)
		public static org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector, org.bukkit.util.Vector, double)	=>	a(org.bukkit.util.Vector, org.bukkit.util.Vector, double)
		private static double round(double, int)	=>	a(double, int)
		public static org.bukkit.util.Vector scaleStatic(org.bukkit.Axis, org.bukkit.util.Vector, double)	=>	a(org.bukkit.Axis, org.bukkit.util.Vector, double)
		public static org.bukkit.util.Vector scaleX(org.bukkit.util.Vector, double)	=>	b(org.bukkit.util.Vector, double)
		public static org.bukkit.util.Vector scaleY(org.bukkit.util.Vector, double)	=>	a(org.bukkit.util.Vector, double)
		public static org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector, double)	=>	c(org.bukkit.util.Vector, double)
		public static com.volmit.iris.util.KList shift(org.bukkit.util.Vector, com.volmit.iris.util.KList)	=>	a(org.bukkit.util.Vector, com.volmit.iris.f.t)
		public static com.volmit.iris.util.KList split(org.bukkit.block.BlockFace)	=>	a(org.bukkit.block.BlockFace)
		public static org.bukkit.util.Vector toVector(float, float)	=>	a(float, float)
		public static org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector)	=>	d(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.VectorMath
		15	=>	174
		19	=>	231
		22	=>	117
		24	=>	14
		26	=>	267
		29	=>	189
		34	=>	207
		35	=>	3
		36	=>	63
		37	=>	23
		39	=>	214
		44	=>	121
		45	=>	26
		46	=>	261
		47	=>	232
		49	=>	168
		54	=>	150
		55	=>	60
		56	=>	219
		57	=>	97
		59	=>	82
		64	=>	37
		65	=>	41
		66	=>	215
		71	=>	228
		72	=>	75
		74	=>	1
		79	=>	31
		81	=>	162
		84	=>	213
		86	=>	64
		88	=>	36
		93	=>	44
		99	=>	186
		101	=>	176
		103	=>	50
		105	=>	13
		108	=>	175
		111	=>	109
		113	=>	101
		115	=>	223
		118	=>	242
		121	=>	77
		123	=>	120
		125	=>	165
		128	=>	32
		132	=>	79
		143	=>	9
		145	=>	190
		148	=>	119
		150	=>	92
		152	=>	7
		157	=>	250
		163	=>	116
		165	=>	262
		167	=>	105
		169	=>	84
		172	=>	188
		175	=>	72
		177	=>	67
		179	=>	126
		182	=>	107
		185	=>	235
		187	=>	22
		189	=>	86
		192	=>	110
		196	=>	83
		201	=>	255
		206	=>	18
		211	=>	29
		216	=>	216
		221	=>	208
		226	=>	87
		231	=>	167
		236	=>	210
		241	=>	98
		246	=>	54
		251	=>	236
		256	=>	253
		261	=>	194
		263	=>	140
		265	=>	163
		270	=>	179
		272	=>	178
		277	=>	200
		282	=>	69
		287	=>	52
		292	=>	78
		293	=>	153
		294	=>	161
		295	=>	227
		300	=>	201
		303	=>	177
		304	=>	172
		305	=>	256
		306	=>	103
		307	=>	11
		308	=>	34
		309	=>	248
		310	=>	169
		311	=>	209
		313	=>	35
		326	=>	59
		328	=>	114
		331	=>	125
		332	=>	51
		334	=>	95
		335	=>	180
		337	=>	58
		338	=>	249
		339	=>	100
		340	=>	154
		342	=>	21
		343	=>	42
		344	=>	104
		345	=>	199
		347	=>	16
		348	=>	132
		350	=>	27
		351	=>	90
		352	=>	118
		354	=>	206
		355	=>	224
		356	=>	184
		357	=>	225
		359	=>	88
		360	=>	185
		361	=>	123
		362	=>	15
		364	=>	113
		365	=>	264
		366	=>	49
		368	=>	138
		369	=>	141
		371	=>	146
		372	=>	5
		374	=>	198
		375	=>	145
		376	=>	254
		378	=>	85
		379	=>	20
		380	=>	102
		381	=>	196
		383	=>	212
		384	=>	266
		385	=>	93
		386	=>	47
		388	=>	91
		389	=>	144
		390	=>	66
		392	=>	53
		393	=>	40
		395	=>	229
		396	=>	136
		398	=>	202
		399	=>	127
		400	=>	71
		401	=>	70
		403	=>	149
		404	=>	12
		405	=>	263
		406	=>	89
		411	=>	43
		425	=>	17
		430	=>	4
		444	=>	166
		457	=>	55
		458	=>	6
		472	=>	246
		473	=>	171
		474	=>	205
		475	=>	33
		486	=>	143
		488	=>	247
		491	=>	8
		493	=>	108
		496	=>	81
		498	=>	137
		501	=>	61
		513	=>	56
		514	=>	160
		516	=>	139
		530	=>	25 and 147
		537	=>	258
		549	=>	73
		551	=>	133 and 135
		553	=>	19
		555	=>	128
		559	=>	68 and 244
		561	=>	170
		563	=>	124
		567	=>	80 and 265
		569	=>	237
		571	=>	115
		575	=>	57 and 197
		577	=>	181
		579	=>	222
		583	=>	24 and 106
		585	=>	99
		587	=>	45
		591	=>	131
		605	=>	157
		606	=>	239
		607	=>	259
		608	=>	192
		609	=>	62
		610	=>	48
		611	=>	204
		612	=>	46
		613	=>	129
		614	=>	142
		615	=>	191
		617	=>	243
		631	=>	245
		632	=>	159
		633	=>	156
		634	=>	195
		635	=>	111
		636	=>	230
		637	=>	217
		638	=>	233
		639	=>	28
		640	=>	257
		641	=>	96
		643	=>	226
		657	=>	30
		658	=>	151
		659	=>	220
		660	=>	158
		661	=>	2
		662	=>	173
		663	=>	39
		664	=>	252
		666	=>	10
		680	=>	241
		681	=>	155
		682	=>	193
		683	=>	182
		684	=>	130
		685	=>	240
		686	=>	251
		687	=>	122
		689	=>	238
		702	=>	94
		703	=>	112
		705	=>	234
		707	=>	74
		710	=>	152
		712	=>	76
		717	=>	187
		720	=>	38
		722	=>	183
		725	=>	164
		727	=>	218
		732	=>	211
		735	=>	203
		737	=>	260
		740	=>	221
		742	=>	65
		747	=>	134
		750	=>	148

Class: final com.volmit.iris.util.VectorMath$1	=>	com.volmit.iris.f.k$b
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath$1
		final synthetic org.bukkit.util.Vector val$vector	NameNotChanged
	MethodsOf: com.volmit.iris.util.VectorMath$1
		void <init>(org.bukkit.util.Vector) 	SignatureNotChanged
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object)	=>	a(java.lang.Object)
		public org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector)	=>	a(org.bukkit.util.Vector)
	LineNumbersOf: com.volmit.iris.util.VectorMath$1
		531	=>	1 and 2
		535	=>	3

Class: synthetic com.volmit.iris.util.VectorMath$2	=>	com.volmit.iris.f.k$a
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath$2
		static final synthetic int[] $SwitchMap$org$bukkit$Axis	=>	b
		static final synthetic int[] $SwitchMap$org$bukkit$block$BlockFace	=>	a
	MethodsOf: com.volmit.iris.util.VectorMath$2
		static void <clinit>() 	SignatureNotChanged
	LineNumbersOf: com.volmit.iris.util.VectorMath$2
		19	=>	2
		328	=>	1

Class: public com.volmit.iris.util.WeightMap	=>	com.volmit.iris.f.aO
	Source: "WeightMap.java"
	FieldsOf: com.volmit.iris.util.WeightMap
		private double lastWeight	=>	a
		private boolean modified	=>	b
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.WeightMap
		public void <init>() 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public double getPercentChance(java.lang.Object)	=>	b(java.lang.Object)
		public double getWeight(java.lang.Object)	=>	a(java.lang.Object)
		private static synthetic void lambda$totalWeight$0(com.volmit.iris.util.Shrinkwrap, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.WeightMap setWeight(java.lang.Object, double)	=>	a(java.lang.Object, double)
		public double totalWeight()	=>	o()
	LineNumbersOf: com.volmit.iris.util.WeightMap
		3	=>	16
		6	=>	15
		7	=>	3
		11	=>	13
		13	=>	11
		16	=>	20
		21	=>	9
		22	=>	5
		26	=>	10
		27	=>	14
		29	=>	7
		34	=>	8
		39	=>	4
		41	=>	6
		44	=>	17
		45	=>	2
		46	=>	1 and 12
		47	=>	19
		49	=>	18

Class: public com.volmit.iris.util.XML	=>	com.volmit.iris.f.f
	Source: "XML.java"
	FieldsOf: com.volmit.iris.util.XML
		public static final java.lang.Character AMP	=>	f
		public static final java.lang.Character APOS	=>	a
		public static final java.lang.Character BANG	=>	b
		public static final java.lang.Character EQ	=>	h
		public static final java.lang.Character GT	=>	c
		public static final java.lang.Character LT	=>	i
		public static final java.lang.Character QUEST	=>	d
		public static final java.lang.Character QUOT	=>	g
		public static final java.lang.Character SLASH	=>	e
	MethodsOf: com.volmit.iris.util.XML
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static java.lang.String escape(java.lang.String)	=>	d(java.lang.String)
		public static void noSpace(java.lang.String)	=>	b(java.lang.String)
		private static boolean parse(com.volmit.iris.util.XMLTokener, com.volmit.iris.util.JSONObject, java.lang.String)	=>	a(com.volmit.iris.f.bb, com.volmit.iris.f.al, java.lang.String)
		public static java.lang.Object stringToValue(java.lang.String)	=>	a(java.lang.String)
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String)	=>	c(java.lang.String)
		public static java.lang.String toString(java.lang.Object)	=>	a(java.lang.Object)
		public static java.lang.String toString(java.lang.Object, java.lang.String)	=>	a(java.lang.Object, java.lang.String)
	LineNumbersOf: com.volmit.iris.util.XML
		37	=>	30
		41	=>	171
		44	=>	111
		47	=>	147
		50	=>	174
		53	=>	80
		56	=>	68
		59	=>	105
		62	=>	126
		65	=>	162
		83	=>	44
		84	=>	72 and 106
		86	=>	15
		87	=>	145
		90	=>	64
		91	=>	88
		93	=>	124
		94	=>	115
		96	=>	151
		97	=>	114
		99	=>	35
		100	=>	196
		102	=>	93
		103	=>	203
		105	=>	37
		108	=>	31
		121	=>	141
		122	=>	32
		124	=>	47
		126	=>	57 and 201
		128	=>	131
		130	=>	27
		133	=>	184
		151	=>	6
		166	=>	102
		170	=>	12
		172	=>	11
		173	=>	63
		175	=>	46
		177	=>	164
		178	=>	95
		180	=>	202
		181	=>	34
		183	=>	101
		184	=>	150
		186	=>	33
		188	=>	48
		189	=>	91
		191	=>	176
		193	=>	22
		196	=>	140
		198	=>	134
		201	=>	169
		202	=>	76
		204	=>	180
		205	=>	58
		207	=>	103
		208	=>	50
		210	=>	61
		212	=>	53
		213	=>	100
		214	=>	77
		219	=>	94
		220	=>	122
		221	=>	193
		226	=>	83
		227	=>	160
		229	=>	9
		231	=>	78
		233	=>	62
		235	=>	84
		237	=>	194
		239	=>	96
		241	=>	156
		243	=>	97
		249	=>	168
		250	=>	125
		251	=>	123
		254	=>	66
		256	=>	26
		261	=>	56
		263	=>	135
		264	=>	132
		265	=>	16
		267	=>	133
		268	=>	99
		270	=>	92
		272	=>	109
		273	=>	10
		276	=>	3
		281	=>	39
		283	=>	104
		285	=>	161
		287	=>	49
		289	=>	24
		292	=>	188
		294	=>	79
		298	=>	1
		302	=>	167
		303	=>	155
		305	=>	17
		307	=>	71
		309	=>	43
		310	=>	163
		312	=>	195
		313	=>	138
		315	=>	28
		320	=>	40
		322	=>	146
		324	=>	197
		326	=>	113
		327	=>	128
		329	=>	70
		332	=>	2
		334	=>	89
		340	=>	142
		359	=>	29
		361	=>	25
		363	=>	19
		365	=>	173
		367	=>	192
		369	=>	191
		378	=>	86
		379	=>	170
		381	=>	117
		382	=>	189
		384	=>	23
		387	=>	121
		391	=>	120
		392	=>	181
		394	=>	139
		396	=>	143
		398	=>	8
		399	=>	158
		400	=>	116
		421	=>	200
		422	=>	69
		423	=>	21
		425	=>	129
		427	=>	36
		440	=>	82
		455	=>	149
		464	=>	166
		469	=>	54
		471	=>	183
		472	=>	20
		473	=>	172
		478	=>	55
		479	=>	165
		480	=>	112
		482	=>	187
		483	=>	98
		484	=>	175
		486	=>	59
		488	=>	137
		492	=>	110
		494	=>	5
		496	=>	90
		497	=>	4
		498	=>	67 and 177
		500	=>	18
		502	=>	52
		504	=>	14
		508	=>	154
		513	=>	152
		515	=>	41
		516	=>	186
		517	=>	45 and 73
		519	=>	179
		520	=>	157
		522	=>	148
		523	=>	118
		524	=>	87
		525	=>	75
		526	=>	182
		527	=>	85
		528	=>	159
		531	=>	38
		534	=>	60
		536	=>	7
		537	=>	130
		538	=>	144
		544	=>	81
		547	=>	65
		552	=>	108
		553	=>	178
		554	=>	185
		556	=>	42
		564	=>	190
		566	=>	51
		568	=>	74
		570	=>	13
		571	=>	153
		572	=>	119 and 198
		574	=>	107
		576	=>	127
		579	=>	136
		580	=>	199

Class: public com.volmit.iris.util.XMLTokener	=>	com.volmit.iris.f.bb
	Source: "XMLTokener.java"
	FieldsOf: com.volmit.iris.util.XMLTokener
		public static final java.util.HashMap entity	=>	h
	MethodsOf: com.volmit.iris.util.XMLTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public java.lang.String nextCDATA()	=>	g()
		public java.lang.Object nextContent()	=>	i()
		public java.lang.Object nextEntity(char)	=>	f(char)
		public java.lang.Object nextMeta()	=>	h()
		public java.lang.Object nextToken()	=>	j()
		public boolean skipPast(java.lang.String)	=>	c(java.lang.String)
	LineNumbersOf: com.volmit.iris.util.XMLTokener
		46	=>	21
		47	=>	77
		48	=>	67
		49	=>	63
		50	=>	119
		51	=>	112
		52	=>	11
		62	=>	73
		63	=>	121
		76	=>	57
		79	=>	107
		80	=>	25
		82	=>	58
		84	=>	2
		85	=>	75
		86	=>	16
		88	=>	60
		89	=>	41
		109	=>	52
		110	=>	13
		111	=>	115
		113	=>	72
		115	=>	79
		117	=>	94
		119	=>	76
		122	=>	104
		124	=>	80
		125	=>	69
		127	=>	111
		129	=>	97
		132	=>	1
		134	=>	37
		150	=>	82
		153	=>	32
		154	=>	109
		156	=>	118
		157	=>	103
		159	=>	78
		162	=>	85
		164	=>	71
		165	=>	18
		166	=>	96
		167	=>	100
		187	=>	74
		188	=>	39
		189	=>	10
		192	=>	50
		194	=>	105
		196	=>	55
		198	=>	83
		200	=>	122
		202	=>	108
		204	=>	84
		207	=>	87
		210	=>	3
		211	=>	38
		213	=>	123
		215	=>	88
		217	=>	14
		223	=>	90
		224	=>	8
		226	=>	93
		228	=>	20
		239	=>	4
		240	=>	98
		262	=>	66
		263	=>	24
		264	=>	45
		267	=>	114
		269	=>	56
		271	=>	64
		273	=>	116
		275	=>	117
		277	=>	42
		279	=>	23
		285	=>	47
		286	=>	5
		289	=>	27
		290	=>	31
		292	=>	91
		294	=>	44
		296	=>	101
		298	=>	61
		300	=>	36
		303	=>	30
		310	=>	49
		313	=>	22
		314	=>	59
		315	=>	120
		317	=>	70
		319	=>	46
		322	=>	53
		330	=>	81
		331	=>	43
		335	=>	28
		355	=>	62
		356	=>	102
		357	=>	113
		364	=>	33 and 68
		366	=>	9
		367	=>	92
		369	=>	65
		371	=>	34
		378	=>	86
		379	=>	99
		383	=>	17 and 29
		385	=>	40
		387	=>	54
		388	=>	35
		390	=>	89
		391	=>	19
		393	=>	51
		399	=>	12
		401	=>	15
		408	=>	95
		409	=>	110
		411	=>	26
		417	=>	106
		418	=>	7
		419	=>	48
		421	=>	6

Class: public com.volmit.iris.wand.WandController	=>	com.volmit.iris.c.a
	Source: "WandController.java"
	FieldsOf: com.volmit.iris.wand.WandController
		private static java.lang.String a	=>	b
	MethodsOf: com.volmit.iris.wand.WandController
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String a()	=>	b()
		public static void a(java.lang.String)	=>	b(java.lang.String)
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static com.volmit.iris.object.IrisObject createSchematic(org.bukkit.inventory.ItemStack)	=>	b(org.bukkit.inventory.ItemStack)
		public static org.bukkit.inventory.ItemStack createWand()	=>	a()
		public static org.bukkit.inventory.ItemStack createWand(org.bukkit.Location, org.bukkit.Location)	=>	a(org.bukkit.Location, org.bukkit.Location)
		public void draw(org.bukkit.Location[], org.bukkit.entity.Player)	=>	a(org.bukkit.Location[], org.bukkit.entity.Player)
		public static org.bukkit.Location[] getCuboid(org.bukkit.inventory.ItemStack)	=>	c(org.bukkit.inventory.ItemStack)
		public static boolean isWand(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)
		public static boolean isWand(org.bukkit.inventory.ItemStack)	=>	a(org.bukkit.inventory.ItemStack)
		private synthetic void lambda$new$0() 	SignatureNotChanged
		public static java.lang.String locationToString(org.bukkit.Location)	=>	a(org.bukkit.Location)
		public void on(org.bukkit.event.player.PlayerInteractEvent)	=>	a(org.bukkit.event.player.PlayerInteractEvent)
		public static void pasteSchematic(com.volmit.iris.object.IrisObject, org.bukkit.Location)	=>	a(com.volmit.iris.b.q, org.bukkit.Location)
		public static org.bukkit.Location stringToLocation(java.lang.String)	=>	c(java.lang.String)
		public void tick(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		public static org.bukkit.inventory.ItemStack update(boolean, org.bukkit.Location, org.bukkit.inventory.ItemStack)	=>	a(boolean, org.bukkit.Location, org.bukkit.inventory.ItemStack)
	LineNumbersOf: com.volmit.iris.wand.WandController
		35	=>	5
		36	=>	104
		38	=>	85
		40	=>	23
		41	=>	14
		42	=>	68
		43	=>	114
		44	=>	40
		50	=>	43
		52	=>	8
		53	=>	84
		57	=>	106
		60	=>	62
		61	=>	112
		65	=>	38
		66	=>	80
		67	=>	118
		68	=>	17
		70	=>	37
		72	=>	33
		75	=>	81
		77	=>	53
		80	=>	70
		81	=>	121
		82	=>	119
		83	=>	120
		84	=>	98
		85	=>	77
		87	=>	64 and 115
		89	=>	56 and 101
		91	=>	88 and 124
		93	=>	65
		95	=>	12
		96	=>	59
		97	=>	76
		98	=>	66
		99	=>	97
		100	=>	7
		102	=>	73
		104	=>	63
		106	=>	60
		108	=>	117
		111	=>	51
		113	=>	10
		116	=>	126
		118	=>	35
		121	=>	122
		123	=>	25
		126	=>	29
		128	=>	27
		131	=>	32
		133	=>	71
		136	=>	18
		137	=>	95
		138	=>	105
		139	=>	30
		140	=>	86
		141	=>	111
		147	=>	26
		152	=>	74
		154	=>	92
		156	=>	93
		157	=>	31
		158	=>	21
		159	=>	3
		162	=>	108
		164	=>	11
		165	=>	41
		166	=>	129
		167	=>	125
		170	=>	50
		174	=>	55
		175	=>	67
		179	=>	82
		181	=>	128
		186	=>	1
		187	=>	99
		188	=>	20
		189	=>	39
		190	=>	54
		192	=>	102
		194	=>	16
		196	=>	75
		199	=>	90
		200	=>	61
		201	=>	58
		203	=>	13
		206	=>	109
		208	=>	44
		211	=>	107
		218	=>	52
		219	=>	69
		220	=>	123
		223	=>	15
		225	=>	72
		231	=>	28
		233	=>	94
		236	=>	83
		241	=>	6
		246	=>	87
		248	=>	19
		251	=>	46
		252	=>	49
		254	=>	103
		256	=>	47
		259	=>	110
		264	=>	127
		265	=>	48
		266	=>	9
		267	=>	78
		268	=>	36
		269	=>	113
		270	=>	57
		271	=>	91
		273	=>	34
		278	=>	22
		279	=>	100
		284	=>	96
		285	=>	4
		290	=>	42
		292	=>	116
		295	=>	45
		297	=>	89
		300	=>	2
		302	=>	24
		305	=>	79

Class: public javax.vecmath.AxisAngle4d	=>	a.a.c
	Source: "AxisAngle4d.java"
	FieldsOf: javax.vecmath.AxisAngle4d
		public double angle	=>	c
		static final long serialVersionUID	NameNotChanged
		public double x	=>	a
		public double y	=>	d
		public double z	=>	b
	MethodsOf: javax.vecmath.AxisAngle4d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.AxisAngle4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.AxisAngle4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3d, double) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.AxisAngle4d, double)	=>	a(a.a.c, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void get(double[])	=>	b(double[])
		public final double getAngle()	=>	c()
		public double getX()	=>	b()
		public final double getY()	=>	d()
		public double getZ()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public final void set(double, double, double, double)	=>	a(double, double, double, double)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	b(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	a(a.a.U)
		public final void set(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void set(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void set(javax.vecmath.Vector3d, double)	=>	a(a.a.N, double)
		public final void setAngle(double)	=>	d(double)
		public final void setX(double)	=>	c(double)
		public final void setY(double)	=>	a(double)
		public final void setZ(double)	=>	b(double)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.AxisAngle4d
		78	=>	3
		79	=>	87
		80	=>	71
		81	=>	58
		82	=>	208
		83	=>	18
		92	=>	184
		93	=>	17
		94	=>	61
		95	=>	126
		96	=>	77
		97	=>	153
		103	=>	116
		104	=>	156
		105	=>	139
		106	=>	140
		107	=>	16
		108	=>	171
		117	=>	74
		118	=>	129
		119	=>	117
		120	=>	53
		121	=>	113
		122	=>	206
		133	=>	124
		134	=>	92
		135	=>	30
		136	=>	1
		137	=>	164
		138	=>	160
		145	=>	38
		146	=>	86
		147	=>	207
		148	=>	185
		149	=>	174
		150	=>	172
		162	=>	59
		163	=>	22
		164	=>	187
		165	=>	67
		166	=>	5
		175	=>	64
		176	=>	120
		177	=>	200
		178	=>	141
		179	=>	75
		188	=>	26
		189	=>	99
		190	=>	68
		191	=>	81
		192	=>	91
		201	=>	110
		202	=>	151
		203	=>	28
		204	=>	168
		205	=>	47
		217	=>	20
		218	=>	148
		219	=>	149
		220	=>	105
		221	=>	82
		231	=>	119
		232	=>	66
		233	=>	102
		234	=>	108
		235	=>	73
		248	=>	111
		250	=>	177
		252	=>	136
		253	=>	44
		254	=>	50
		255	=>	181
		257	=>	6
		258	=>	135
		259	=>	54
		260	=>	201
		262	=>	112
		264	=>	35
		265	=>	127
		266	=>	190
		267	=>	163
		268	=>	101
		269	=>	210
		270	=>	100
		271	=>	42
		272	=>	13
		274	=>	183
		287	=>	138
		289	=>	150
		291	=>	115
		292	=>	78
		293	=>	157
		295	=>	96
		297	=>	84
		298	=>	14
		300	=>	32
		301	=>	196
		302	=>	33
		304	=>	72
		305	=>	62
		306	=>	123
		307	=>	57
		308	=>	79
		309	=>	19
		310	=>	89
		311	=>	167
		312	=>	203
		314	=>	158
		326	=>	198
		327	=>	192
		328	=>	209
		329	=>	63
		331	=>	76
		332	=>	49
		334	=>	182
		335	=>	188
		336	=>	51
		338	=>	165
		339	=>	128
		340	=>	8
		341	=>	21
		342	=>	161
		343	=>	88
		344	=>	131
		345	=>	199
		346	=>	31
		348	=>	154
		360	=>	103
		361	=>	179
		362	=>	56
		364	=>	36
		366	=>	122
		367	=>	25
		369	=>	173
		370	=>	118
		372	=>	134
		374	=>	43
		375	=>	55
		376	=>	29
		377	=>	12
		378	=>	2
		379	=>	24
		380	=>	15
		381	=>	189
		382	=>	175
		385	=>	4
		398	=>	125
		400	=>	40
		401	=>	107
		402	=>	114
		404	=>	69
		405	=>	193
		406	=>	65
		407	=>	46
		408	=>	11
		409	=>	27
		410	=>	169
		411	=>	98
		412	=>	191
		414	=>	94
		426	=>	143
		428	=>	70
		429	=>	90
		430	=>	85
		432	=>	195
		433	=>	106
		434	=>	186
		435	=>	202
		436	=>	52
		437	=>	83
		438	=>	197
		439	=>	95
		440	=>	9
		442	=>	23
		451	=>	48
		464	=>	39
		467	=>	205
		480	=>	104
		481	=>	162
		484	=>	60
		485	=>	93
		503	=>	144
		504	=>	147
		506	=>	121
		507	=>	180
		509	=>	194
		510	=>	146
		512	=>	41
		513	=>	133
		515	=>	152
		528	=>	97
		529	=>	176
		530	=>	80
		531	=>	142
		532	=>	132
		533	=>	34
		547	=>	137
		548	=>	7
		550	=>	45
		564	=>	109
		577	=>	211
		578	=>	155
		589	=>	145
		601	=>	170
		602	=>	37
		613	=>	130
		625	=>	10
		626	=>	159
		637	=>	204
		649	=>	178
		650	=>	166

Class: public javax.vecmath.AxisAngle4f	=>	a.a.q
	Source: "AxisAngle4f.java"
	FieldsOf: javax.vecmath.AxisAngle4f
		public float angle	=>	b
		static final long serialVersionUID	NameNotChanged
		public float x	=>	d
		public float y	=>	c
		public float z	=>	a
	MethodsOf: javax.vecmath.AxisAngle4f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.AxisAngle4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.AxisAngle4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3f, float) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.AxisAngle4f, float)	=>	a(a.a.q, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void get(float[])	=>	a(float[])
		public final float getAngle()	=>	c()
		public final float getX()	=>	d()
		public final float getY()	=>	b()
		public final float getZ()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public final void set(float, float, float, float)	=>	a(float, float, float, float)
		public final void set(float[])	=>	b(float[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	b(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	a(a.a.U)
		public final void set(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void set(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void set(javax.vecmath.Vector3f, float)	=>	a(a.a.H, float)
		public final void setAngle(float)	=>	a(float)
		public final void setX(float)	=>	d(float)
		public final void setY(float)	=>	b(float)
		public final void setZ(float)	=>	c(float)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.AxisAngle4f
		77	=>	147
		78	=>	113
		79	=>	166
		80	=>	83
		81	=>	93
		82	=>	20
		90	=>	140
		91	=>	31
		92	=>	102
		93	=>	23
		94	=>	202
		95	=>	134
		104	=>	152
		105	=>	70
		106	=>	40
		107	=>	183
		108	=>	98
		109	=>	54
		117	=>	193
		118	=>	16
		119	=>	85
		120	=>	89
		121	=>	158
		122	=>	112
		133	=>	160
		134	=>	38
		135	=>	3
		136	=>	52
		137	=>	14
		138	=>	192
		145	=>	55
		146	=>	95
		147	=>	138
		148	=>	189
		149	=>	5
		150	=>	72
		162	=>	210
		163	=>	80
		164	=>	168
		165	=>	146
		166	=>	132
		176	=>	153
		177	=>	34
		178	=>	175
		179	=>	99
		180	=>	104
		189	=>	114
		190	=>	143
		191	=>	103
		192	=>	62
		193	=>	6
		202	=>	107
		203	=>	129
		204	=>	51
		205	=>	136
		206	=>	181
		218	=>	171
		219	=>	109
		220	=>	170
		221	=>	118
		222	=>	108
		231	=>	42
		232	=>	161
		233	=>	156
		234	=>	130
		235	=>	149
		247	=>	115
		249	=>	30
		250	=>	69
		251	=>	155
		253	=>	173
		254	=>	41
		255	=>	186
		256	=>	207
		257	=>	36
		258	=>	191
		259	=>	84
		260	=>	65
		261	=>	196
		263	=>	185
		275	=>	90
		277	=>	77
		278	=>	172
		279	=>	131
		281	=>	29
		282	=>	9
		283	=>	59
		284	=>	195
		285	=>	63
		286	=>	169
		287	=>	78
		288	=>	167
		289	=>	92
		291	=>	179
		303	=>	127
		305	=>	174
		307	=>	184
		308	=>	124
		309	=>	24
		310	=>	126
		312	=>	47
		313	=>	61
		314	=>	81
		315	=>	97
		317	=>	133
		318	=>	200
		319	=>	206
		320	=>	101
		321	=>	176
		322	=>	43
		323	=>	28
		324	=>	150
		325	=>	120
		326	=>	22
		330	=>	46
		342	=>	58
		344	=>	39
		347	=>	48
		348	=>	27
		349	=>	1
		350	=>	211
		352	=>	17
		353	=>	188
		354	=>	91
		355	=>	145
		356	=>	144
		358	=>	11
		359	=>	187
		360	=>	106
		361	=>	68
		362	=>	164
		363	=>	44
		364	=>	45
		365	=>	197
		366	=>	180
		369	=>	201
		381	=>	125
		382	=>	182
		383	=>	53
		384	=>	209
		385	=>	135
		386	=>	177
		387	=>	162
		388	=>	19
		390	=>	33
		392	=>	121
		393	=>	37
		394	=>	4
		395	=>	194
		396	=>	49
		397	=>	86
		398	=>	67
		399	=>	203
		400	=>	159
		403	=>	141
		416	=>	154
		417	=>	76
		418	=>	199
		419	=>	111
		421	=>	12
		422	=>	208
		423	=>	157
		424	=>	178
		426	=>	139
		428	=>	163
		429	=>	10
		430	=>	2
		431	=>	82
		432	=>	21
		433	=>	105
		434	=>	119
		435	=>	79
		436	=>	123
		438	=>	94
		447	=>	204
		460	=>	151
		463	=>	116
		477	=>	142
		478	=>	96
		481	=>	57
		482	=>	32
		499	=>	26
		500	=>	110
		502	=>	122
		503	=>	25
		505	=>	8
		506	=>	74
		508	=>	15
		509	=>	87
		511	=>	128
		525	=>	73
		526	=>	88
		527	=>	56
		528	=>	165
		529	=>	148
		530	=>	60
		544	=>	35
		545	=>	75
		547	=>	50
		561	=>	7
		574	=>	66
		575	=>	13
		586	=>	190
		598	=>	117
		599	=>	71
		610	=>	198
		622	=>	137
		623	=>	100
		634	=>	64
		646	=>	18
		647	=>	205

Class: public javax.vecmath.Color3b	=>	a.a.t
	Source: "Color3b.java"
	FieldsOf: javax.vecmath.Color3b
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Color3b
		public void <init>() 	SignatureNotChanged
		public void <init>(byte, byte, byte) 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(java.awt.Color) 	SignatureNotChanged
		public void <init>(javax.vecmath.Color3b) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3b) 	SignatureNotChanged
		public final java.awt.Color get()	=>	d()
		public final void set(java.awt.Color)	=>	a(java.awt.Color)
	LineNumbersOf: javax.vecmath.Color3b
		64	=>	5
		65	=>	15
		73	=>	10
		74	=>	17
		82	=>	7
		83	=>	16
		91	=>	8
		92	=>	1
		107	=>	6 and 21
		108	=>	3
		109	=>	13
		110	=>	9
		117	=>	19
		118	=>	12
		132	=>	18
		133	=>	20
		134	=>	14
		135	=>	23
		147	=>	4
		148	=>	2
		149	=>	11
		151	=>	22

Class: public javax.vecmath.Color3f	=>	a.a.E
	Source: "Color3f.java"
	FieldsOf: javax.vecmath.Color3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Color3f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(java.awt.Color) 	SignatureNotChanged
		public void <init>(javax.vecmath.Color3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public final java.awt.Color get()	=>	f()
		public final void set(java.awt.Color)	=>	a(java.awt.Color)
	LineNumbersOf: javax.vecmath.Color3f
		59	=>	15
		60	=>	3
		68	=>	9
		69	=>	21
		77	=>	11
		78	=>	4
		86	=>	7
		87	=>	14
		95	=>	8
		96	=>	1
		111	=>	5 and 22
		112	=>	24
		113	=>	20
		114	=>	18
		121	=>	16
		122	=>	13
		136	=>	25
		137	=>	12
		138	=>	10
		139	=>	6
		151	=>	17
		152	=>	23
		153	=>	2
		155	=>	19

Class: public javax.vecmath.Color4b	=>	a.a.C
	Source: "Color4b.java"
	FieldsOf: javax.vecmath.Color4b
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Color4b
		public void <init>() 	SignatureNotChanged
		public void <init>(byte, byte, byte, byte) 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(java.awt.Color) 	SignatureNotChanged
		public void <init>(javax.vecmath.Color4b) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4b) 	SignatureNotChanged
		public final java.awt.Color get()	=>	e()
		public final void set(java.awt.Color)	=>	a(java.awt.Color)
	LineNumbersOf: javax.vecmath.Color4b
		65	=>	6
		66	=>	14
		74	=>	2
		75	=>	16
		84	=>	9
		85	=>	13
		94	=>	24
		95	=>	15
		110	=>	10 and 17
		111	=>	1
		112	=>	23
		113	=>	19
		114	=>	7
		121	=>	3
		122	=>	25
		136	=>	21
		137	=>	5
		138	=>	4
		139	=>	11
		140	=>	8
		152	=>	22
		153	=>	20
		154	=>	18
		155	=>	12
		157	=>	26

Class: public javax.vecmath.Color4f	=>	a.a.v
	Source: "Color4f.java"
	FieldsOf: javax.vecmath.Color4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Color4f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(java.awt.Color) 	SignatureNotChanged
		public void <init>(javax.vecmath.Color4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final java.awt.Color get()	=>	h()
		public final void set(java.awt.Color)	=>	a(java.awt.Color)
	LineNumbersOf: javax.vecmath.Color4f
		61	=>	22
		62	=>	10
		70	=>	6
		71	=>	8
		79	=>	11
		80	=>	4
		88	=>	28
		89	=>	14
		97	=>	13
		98	=>	2
		113	=>	12 and 15
		114	=>	20
		115	=>	27
		116	=>	9
		117	=>	1
		124	=>	26
		125	=>	5
		139	=>	17
		140	=>	23
		141	=>	7
		142	=>	24
		143	=>	25
		155	=>	21
		156	=>	3
		157	=>	16
		158	=>	19
		160	=>	18

Class: public javax.vecmath.GMatrix	=>	a.a.p
	Source: "GMatrix.java"
	FieldsOf: javax.vecmath.GMatrix
		int nCol	=>	c
		int nRow	=>	b
		static final long serialVersionUID	NameNotChanged
		double[][] values	=>	a
	MethodsOf: javax.vecmath.GMatrix
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int, int, double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.GMatrix) 	SignatureNotChanged
		public final int LUD(javax.vecmath.GMatrix, javax.vecmath.GVector)	=>	a(a.a.p, a.a.f)
		public final int SVD(javax.vecmath.GMatrix, javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	a(a.a.p, a.a.p, a.a.p)
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public final void add(javax.vecmath.GMatrix)	=>	g(a.a.p)
		public final void add(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	f(a.a.p, a.a.p)
		public java.lang.Object clone() 	SignatureNotChanged
		static int computeSVD(javax.vecmath.GMatrix, javax.vecmath.GMatrix, javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	a(a.a.p, a.a.p, a.a.p, a.a.p)
		static int compute_2X2(double, double, double, double[], double[], double[], double[], double[], int)	=>	a(double, double, double, double[], double[], double[], double[], double[], int)
		static void compute_qr(int, int, double[], double[], javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	a(int, int, double[], double[], a.a.p, a.a.p)
		static double compute_rot(double, double, double[], double[])	=>	a(double, double, double[], double[])
		static double compute_shift(double, double, double)	=>	a(double, double, double)
		public final void copySubMatrix(int, int, int, int, int, int, javax.vecmath.GMatrix)	=>	a(int, int, int, int, int, int, a.a.p)
		static double d_sign(double, double)	=>	a(double, double)
		public boolean epsilonEquals(javax.vecmath.GMatrix, double)	=>	a(a.a.p, double)
		public boolean epsilonEquals(javax.vecmath.GMatrix, float)	=>	a(a.a.p, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.GMatrix)	=>	a(a.a.p)
		public final void get(javax.vecmath.GMatrix)	=>	e(a.a.p)
		public final void get(javax.vecmath.Matrix3d)	=>	b(a.a.T)
		public final void get(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void get(javax.vecmath.Matrix4d)	=>	b(a.a.n)
		public final void get(javax.vecmath.Matrix4f)	=>	a(a.a.U)
		public final void getColumn(int, double[])	=>	d(int, double[])
		public final void getColumn(int, javax.vecmath.GVector)	=>	b(int, a.a.f)
		public final double getElement(int, int)	=>	a(int, int)
		public final int getNumCol()	=>	f()
		public final int getNumRow()	=>	i()
		public final void getRow(int, double[])	=>	a(int, double[])
		public final void getRow(int, javax.vecmath.GVector)	=>	d(int, a.a.f)
		public int hashCode() 	SignatureNotChanged
		public final void identityMinus()	=>	b()
		public final void invert()	=>	e()
		public final void invert(javax.vecmath.GMatrix)	=>	d(a.a.p)
		final void invertGeneral(javax.vecmath.GMatrix)	=>	f(a.a.p)
		static void luBacksubstitution(int, double[], int[], double[])	=>	a(int, double[], int[], double[])
		static boolean luDecomposition(int, double[], int[], int[])	=>	a(int, double[], int[], int[])
		static double max(double, double)	=>	c(double, double)
		static double min(double, double)	=>	b(double, double)
		public final void mul(javax.vecmath.GMatrix)	=>	j(a.a.p)
		public final void mul(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	c(a.a.p, a.a.p)
		public final void mul(javax.vecmath.GVector, javax.vecmath.GVector)	=>	a(a.a.f, a.a.f)
		public final void mulTransposeBoth(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	b(a.a.p, a.a.p)
		public final void mulTransposeLeft(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	e(a.a.p, a.a.p)
		public final void mulTransposeRight(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	d(a.a.p, a.a.p)
		public final void negate()	=>	d()
		public final void negate(javax.vecmath.GMatrix)	=>	h(a.a.p)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.GMatrix)	=>	b(a.a.p)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	b(a.a.o)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	b(a.a.U)
		public final void setColumn(int, double[])	=>	c(int, double[])
		public final void setColumn(int, javax.vecmath.GVector)	=>	c(int, a.a.f)
		public final void setElement(int, int, double)	=>	a(int, int, double)
		public final void setIdentity()	=>	c()
		public final void setRow(int, double[])	=>	b(int, double[])
		public final void setRow(int, javax.vecmath.GVector)	=>	a(int, a.a.f)
		public final void setScale(double)	=>	a(double)
		public final void setSize(int, int)	=>	b(int, int)
		public final void setZero()	=>	g()
		public final void sub(javax.vecmath.GMatrix)	=>	c(a.a.p)
		public final void sub(javax.vecmath.GMatrix, javax.vecmath.GMatrix)	=>	a(a.a.p, a.a.p)
		public java.lang.String toString() 	SignatureNotChanged
		public final double trace()	=>	a()
		public final void transpose()	=>	h()
		public final void transpose(javax.vecmath.GMatrix)	=>	i(a.a.p)
		private static void update_u(int, javax.vecmath.GMatrix, double[], double[])	=>	a(int, a.a.p, double[], double[])
		private static void update_v(int, javax.vecmath.GMatrix, double[], double[])	=>	b(int, a.a.p, double[], double[])
	LineNumbersOf: javax.vecmath.GMatrix
		65	=>	571
		66	=>	1128
		67	=>	467
		68	=>	1087
		71	=>	813 and 1030
		72	=>	553 and 852
		73	=>	955
		78	=>	203
		79	=>	726
		81	=>	396
		83	=>	69 and 746
		84	=>	1291
		86	=>	441
		101	=>	733
		102	=>	1027
		103	=>	621
		104	=>	116
		107	=>	806 and 1016
		108	=>	403 and 723
		109	=>	167
		112	=>	714
		120	=>	1114
		121	=>	465
		122	=>	341
		123	=>	664
		126	=>	609 and 881
		127	=>	344 and 1124
		128	=>	686
		131	=>	285
		142	=>	496
		143	=>	384
		144	=>	828
		146	=>	351
		148	=>	760 and 1119
		149	=>	205 and 1057
		150	=>	16
		151	=>	398 and 1298
		152	=>	668
		157	=>	982
		158	=>	756
		170	=>	88
		171	=>	975
		172	=>	1121
		174	=>	210
		176	=>	299 and 984
		177	=>	482 and 1193
		178	=>	505
		179	=>	4 and 971
		180	=>	908
		185	=>	690
		186	=>	276
		200	=>	499
		201	=>	92
		202	=>	556
		204	=>	1147
		205	=>	10
		206	=>	883
		208	=>	59 and 626
		209	=>	229 and 1046
		210	=>	1293
		213	=>	1305
		223	=>	1297
		224	=>	237
		225	=>	411
		227	=>	1257
		228	=>	855
		229	=>	61
		231	=>	36 and 226
		232	=>	679 and 1327
		233	=>	901
		236	=>	1125
		247	=>	645
		248	=>	1251
		249	=>	1299
		251	=>	663
		252	=>	1233
		253	=>	200
		255	=>	326
		256	=>	83
		257	=>	219
		259	=>	271 and 327
		260	=>	890 and 1380
		261	=>	766
		264	=>	637
		274	=>	1331
		275	=>	1203
		276	=>	983
		278	=>	1377
		279	=>	1021
		280	=>	1008
		282	=>	612 and 1239
		283	=>	97 and 115
		284	=>	338
		287	=>	54
		298	=>	249
		299	=>	1180
		300	=>	1023
		302	=>	176
		303	=>	245
		304	=>	808
		306	=>	1149
		307	=>	647
		308	=>	889
		310	=>	154 and 997
		311	=>	460 and 706
		312	=>	963
		315	=>	42
		323	=>	174 and 935
		324	=>	346 and 1223
		325	=>	354
		328	=>	957
		338	=>	1277
		339	=>	1342
		340	=>	1220
		342	=>	156 and 651
		343	=>	573 and 846
		344	=>	898
		347	=>	1271
		355	=>	518 and 1347
		356	=>	538 and 725
		357	=>	311
		362	=>	109
		363	=>	1207
		365	=>	536
		367	=>	144 and 1143
		368	=>	1368
		370	=>	6
		378	=>	503 and 1237
		379	=>	207 and 279
		380	=>	557
		383	=>	928
		393	=>	60 and 1101
		394	=>	1130 and 1361
		395	=>	50
		400	=>	517
		401	=>	1224
		403	=>	105
		405	=>	78 and 1183
		406	=>	1313
		408	=>	368
		416	=>	920
		417	=>	433
		426	=>	697
		427	=>	234
		451	=>	568
		452	=>	522 and 1109
		453	=>	1099 and 1112
		454	=>	777
		459	=>	1169
		460	=>	435 and 509
		461	=>	1142 and 1284
		462	=>	437
		465	=>	622 and 939
		466	=>	350 and 979
		467	=>	1372
		471	=>	896
		482	=>	841
		485	=>	1152
		486	=>	475
		488	=>	215
		490	=>	212
		491	=>	1221
		493	=>	160
		495	=>	297 and 1170
		496	=>	348 and 1285
		497	=>	489
		501	=>	1117
		502	=>	1258
		504	=>	289
		505	=>	1041
		519	=>	845 and 864
		520	=>	139 and 189
		521	=>	385
		524	=>	1159
		534	=>	319
		535	=>	759
		536	=>	1340
		537	=>	1026
		540	=>	128
		541	=>	73
		542	=>	794
		544	=>	791
		545	=>	254
		546	=>	77
		548	=>	884
		549	=>	494
		550	=>	1025
		552	=>	926 and 962
		553	=>	514 and 1158
		554	=>	1074
		557	=>	712
		565	=>	915
		566	=>	1085
		567	=>	581
		568	=>	856
		571	=>	1100
		572	=>	1065
		573	=>	1320
		575	=>	1051
		576	=>	52
		577	=>	755
		579	=>	713
		580	=>	685
		581	=>	627
		583	=>	534 and 563
		584	=>	34 and 259
		585	=>	431
		589	=>	191
		597	=>	524
		598	=>	594
		599	=>	298
		600	=>	206
		603	=>	1217
		604	=>	1171
		605	=>	943
		606	=>	137
		608	=>	611
		609	=>	248
		610	=>	93
		611	=>	1194
		613	=>	173
		614	=>	665
		615	=>	103
		616	=>	945
		618	=>	85
		619	=>	1318
		620	=>	1160
		621	=>	65
		623	=>	91 and 1015
		624	=>	709 and 877
		625	=>	223
		628	=>	792
		636	=>	643
		637	=>	288
		638	=>	296
		639	=>	1083
		642	=>	1181
		643	=>	653
		644	=>	603
		645	=>	937
		647	=>	837
		648	=>	1323
		649	=>	108
		650	=>	787
		652	=>	1104
		653	=>	769
		654	=>	168
		655	=>	470
		657	=>	361
		658	=>	770
		659	=>	294
		660	=>	1260
		662	=>	654 and 1110
		663	=>	782 and 1344
		664	=>	916
		667	=>	374
		677	=>	379
		678	=>	1235
		679	=>	602
		680	=>	708
		683	=>	476 and 1213
		684	=>	429 and 758
		685	=>	502
		689	=>	214 and 1200
		690	=>	566 and 751
		691	=>	615
		694	=>	636
		702	=>	815
		711	=>	12
		722	=>	681
		734	=>	29
		735	=>	970
		744	=>	416 and 1370
		745	=>	264
		747	=>	773
		756	=>	242
		757	=>	778
		759	=>	141 and 744
		760	=>	263
		762	=>	1215
		771	=>	390 and 799
		772	=>	1115
		775	=>	457
		784	=>	1020
		785	=>	717
		787	=>	616 and 1204
		788	=>	419
		790	=>	531
		799	=>	99
		800	=>	1280
		801	=>	619
		802	=>	515
		803	=>	689
		804	=>	721
		805	=>	748
		806	=>	1234
		807	=>	112
		811	=>	1064
		812	=>	572
		813	=>	1268
		814	=>	336
		815	=>	217
		816	=>	1136
		817	=>	1059
		821	=>	911
		822	=>	478
		823	=>	1071
		824	=>	526
		825	=>	1244
		826	=>	600
		827	=>	1245
		835	=>	1151
		836	=>	452
		837	=>	359
		839	=>	754
		840	=>	243
		841	=>	257
		843	=>	19
		844	=>	550
		845	=>	625
		847	=>	466
		857	=>	895
		858	=>	591
		859	=>	448
		860	=>	198
		861	=>	107
		862	=>	493
		863	=>	968
		864	=>	18
		865	=>	274
		869	=>	1219
		870	=>	110
		871	=>	1096
		872	=>	914
		873	=>	1339
		874	=>	863
		875	=>	1168
		879	=>	1359
		880	=>	533
		881	=>	295
		882	=>	1206
		883	=>	1161
		884	=>	952
		885	=>	823
		893	=>	1185
		894	=>	253
		895	=>	1018
		897	=>	290
		898	=>	146
		899	=>	1053
		901	=>	417
		902	=>	1063
		903	=>	1197
		905	=>	303
		914	=>	372
		915	=>	1247
		916	=>	1107
		917	=>	508
		918	=>	366
		919	=>	127
		920	=>	179
		921	=>	25
		922	=>	51
		923	=>	670
		924	=>	1243
		929	=>	649
		930	=>	362
		931	=>	1178
		932	=>	49
		933	=>	592
		934	=>	458
		935	=>	1337
		936	=>	1056
		937	=>	428
		942	=>	400
		943	=>	1324
		944	=>	537
		945	=>	1321
		946	=>	330
		947	=>	197
		948	=>	545
		949	=>	1255
		950	=>	909
		955	=>	1272
		956	=>	325
		957	=>	1137
		958	=>	1077
		959	=>	1013
		960	=>	662
		961	=>	1236
		962	=>	170
		963	=>	404
		973	=>	1084
		974	=>	1355
		975	=>	47
		976	=>	1238
		978	=>	659
		979	=>	1069
		980	=>	818
		981	=>	230
		983	=>	929
		984	=>	677
		985	=>	857
		986	=>	247
		988	=>	523
		989	=>	442
		990	=>	468
		991	=>	1241
		994	=>	549
		1004	=>	177
		1005	=>	1252
		1006	=>	892
		1007	=>	391
		1008	=>	305
		1009	=>	412
		1010	=>	332
		1011	=>	735
		1012	=>	1311
		1013	=>	240
		1014	=>	1002
		1019	=>	807
		1020	=>	946
		1021	=>	113
		1022	=>	1187
		1023	=>	742
		1024	=>	958
		1025	=>	541
		1026	=>	81
		1027	=>	628
		1032	=>	868
		1033	=>	149
		1034	=>	262
		1035	=>	418
		1036	=>	58
		1037	=>	55
		1038	=>	1089
		1039	=>	564
		1040	=>	342
		1045	=>	310
		1046	=>	72
		1047	=>	700
		1048	=>	694
		1049	=>	1211
		1050	=>	96
		1051	=>	1145
		1052	=>	812
		1053	=>	875
		1063	=>	239
		1064	=>	820
		1065	=>	991
		1066	=>	950
		1068	=>	64
		1069	=>	1375
		1070	=>	392
		1071	=>	561
		1073	=>	998
		1074	=>	923
		1075	=>	114
		1076	=>	1179
		1078	=>	1250
		1079	=>	740
		1080	=>	821
		1081	=>	28
		1083	=>	423
		1094	=>	1365
		1095	=>	9
		1097	=>	930
		1099	=>	885
		1100	=>	1017
		1102	=>	650
		1104	=>	41 and 283
		1105	=>	753 and 1052
		1106	=>	831
		1109	=>	1138 and 1371
		1110	=>	421 and 1273
		1111	=>	507
		1114	=>	872 and 891
		1115	=>	143 and 1029
		1116	=>	1167
		1119	=>	134
		1130	=>	159 and 728
		1131	=>	798
		1133	=>	900
		1144	=>	743 and 1003
		1145	=>	135
		1147	=>	848
		1158	=>	623 and 1034
		1159	=>	258
		1161	=>	1363
		1172	=>	631 and 985
		1173	=>	1319
		1176	=>	1364
		1188	=>	194
		1189	=>	634
		1190	=>	803
		1192	=>	178
		1193	=>	1312
		1194	=>	40 and 171
		1195	=>	321 and 699
		1196	=>	1262
		1197	=>	1133 and 1294
		1198	=>	765
		1202	=>	607
		1203	=>	1265
		1204	=>	300 and 1014
		1205	=>	63 and 394
		1206	=>	835
		1207	=>	118 and 1174
		1208	=>	512
		1213	=>	941
		1225	=>	959
		1226	=>	268
		1227	=>	764
		1229	=>	1047
		1230	=>	280
		1231	=>	477 and 565
		1232	=>	138 and 834
		1233	=>	590
		1234	=>	162 and 1376
		1235	=>	1333
		1239	=>	469
		1240	=>	707
		1241	=>	318 and 783
		1242	=>	657 and 879
		1243	=>	927
		1244	=>	667 and 858
		1245	=>	1039
		1251	=>	413
		1264	=>	1175
		1265	=>	1307
		1266	=>	1004
		1268	=>	1
		1269	=>	500
		1270	=>	225 and 532
		1271	=>	399 and 843
		1272	=>	1248
		1273	=>	1049 and 1054
		1274	=>	86
		1278	=>	369
		1279	=>	1332
		1280	=>	233 and 800
		1281	=>	228 and 1154
		1282	=>	739
		1283	=>	218 and 610
		1284	=>	819
		1289	=>	1242
		1299	=>	942
		1301	=>	1253
		1302	=>	1073
		1303	=>	169
		1304	=>	521
		1305	=>	13 and 790
		1306	=>	1043 and 1148
		1307	=>	527
		1310	=>	1231
		1311	=>	267
		1313	=>	1120 and 1177
		1314	=>	535 and 1259
		1315	=>	976
		1316	=>	31
		1317	=>	660
		1321	=>	449
		1331	=>	1140
		1332	=>	209
		1333	=>	1208
		1335	=>	936
		1336	=>	1190 and 1336
		1337	=>	919 and 960
		1338	=>	595
		1342	=>	1306
		1344	=>	165
		1352	=>	387
		1356	=>	589 and 1050
		1357	=>	525 and 934
		1358	=>	702
		1360	=>	586
		1363	=>	317
		1393	=>	1358
		1395	=>	860
		1396	=>	870
		1398	=>	966 and 1289
		1399	=>	21 and 716
		1400	=>	1270
		1404	=>	371
		1419	=>	1198
		1420	=>	1283
		1422	=>	256 and 1195
		1423	=>	569 and 691
		1424	=>	1066
		1425	=>	840
		1428	=>	990
		1430	=>	648
		1431	=>	788
		1445	=>	1378
		1447	=>	974
		1448	=>	897
		1450	=>	954 and 1060
		1451	=>	37 and 1116
		1452	=>	519
		1453	=>	199
		1456	=>	1040
		1458	=>	827
		1459	=>	1006
		1461	=>	186
		1462	=>	718
		1470	=>	1228
		1486	=>	35
		1487	=>	540
		1489	=>	166 and 605
		1490	=>	357 and 684
		1491	=>	844
		1492	=>	530
		1493	=>	506
		1496	=>	1329
		1508	=>	484
		1509	=>	582
		1511	=>	587
		1513	=>	1097
		1514	=>	977 and 1118
		1515	=>	1240
		1517	=>	1264
		1539	=>	1070
		1540	=>	715
		1541	=>	252
		1544	=>	211
		1545	=>	1288
		1546	=>	994
		1549	=>	750
		1550	=>	1022
		1551	=>	180
		1564	=>	309
		1565	=>	1300
		1566	=>	152
		1567	=>	420
		1569	=>	334
		1570	=>	893
		1573	=>	140
		1574	=>	44
		1575	=>	151
		1576	=>	463
		1577	=>	598
		1579	=>	145
		1580	=>	722
		1582	=>	273
		1585	=>	24
		1586	=>	320
		1588	=>	641
		1593	=>	802
		1617	=>	917
		1618	=>	56
		1619	=>	27
		1620	=>	596
		1623	=>	912
		1624	=>	1209
		1625	=>	1199
		1628	=>	1322
		1629	=>	1286
		1630	=>	940
		1633	=>	1334
		1634	=>	492
		1635	=>	1135
		1638	=>	560
		1639	=>	389
		1640	=>	244
		1643	=>	745 and 1094
		1644	=>	183 and 322
		1645	=>	888
		1650	=>	104
		1652	=>	1132
		1653	=>	578
		1656	=>	265 and 1000
		1657	=>	632 and 703
		1658	=>	488
		1662	=>	1044 and 1113
		1663	=>	692
		1666	=>	830
		1678	=>	698
		1679	=>	301
		1681	=>	450
		1683	=>	1222 and 1341
		1684	=>	76 and 763
		1685	=>	461
		1689	=>	861 and 1123
		1690	=>	617
		1692	=>	440
		1703	=>	833
		1704	=>	768
		1705	=>	552
		1706	=>	1153
		1707	=>	973
		1712	=>	1078
		1714	=>	993
		1715	=>	1092
		1719	=>	3 and 281
		1720	=>	181 and 190
		1721	=>	1246
		1726	=>	377
		1728	=>	688
		1729	=>	869
		1733	=>	120 and 185
		1734	=>	1028
		1736	=>	866 and 1214
		1737	=>	882
		1739	=>	182
		1741	=>	102 and 785
		1742	=>	14 and 117
		1743	=>	328
		1746	=>	1111
		1768	=>	331
		1775	=>	737
		1776	=>	75
		1777	=>	953
		1780	=>	925
		1781	=>	1005
		1782	=>	370
		1785	=>	68
		1786	=>	1126
		1787	=>	1172
		1788	=>	453
		1789	=>	965
		1790	=>	315
		1795	=>	886
		1796	=>	1310
		1798	=>	574
		1802	=>	986
		1803	=>	705 and 992
		1809	=>	148 and 1010
		1810	=>	89
		1811	=>	567
		1812	=>	562
		1813	=>	801
		1814	=>	345
		1815	=>	43
		1816	=>	123
		1817	=>	640
		1818	=>	286
		1820	=>	825
		1825	=>	454
		1826	=>	308
		1827	=>	426 and 554
		1828	=>	20
		1829	=>	520
		1830	=>	1295
		1831	=>	221
		1832	=>	809
		1833	=>	487
		1834	=>	1058
		1835	=>	539
		1836	=>	84
		1838	=>	53
		1841	=>	485
		1842	=>	1067
		1843	=>	878
		1847	=>	816
		1848	=>	655
		1852	=>	666
		1854	=>	1157
		1855	=>	1210
		1856	=>	652
		1857	=>	996
		1858	=>	1093
		1859	=>	913
		1860	=>	402
		1864	=>	161
		1865	=>	673
		1869	=>	606
		1872	=>	355
		1873	=>	639
		1877	=>	921
		1878	=>	674
		1879	=>	401
		1880	=>	393
		1881	=>	1075
		1882	=>	1091
		1883	=>	543
		1889	=>	575
		1920	=>	1196
		1923	=>	710 and 772
		1925	=>	894
		1926	=>	33
		1929	=>	555 and 779
		1932	=>	7
		1933	=>	269
		1934	=>	471
		1935	=>	481
		1937	=>	1335
		1938	=>	356 and 579
		1939	=>	1176
		1942	=>	1226
		1943	=>	275
		1945	=>	1080
		1949	=>	278 and 414
		1950	=>	1062
		1951	=>	130
		1952	=>	90
		1953	=>	284 and 585
		1954	=>	1090
		1956	=>	729
		1959	=>	1009
		1969	=>	1281
		1970	=>	132
		1971	=>	195
		1972	=>	795
		1975	=>	1166
		1976	=>	793
		1977	=>	1278
		1979	=>	559
		1980	=>	365
		1983	=>	1267
		1984	=>	204
		1986	=>	235
		1988	=>	196
		1989	=>	529
		1990	=>	380
		1996	=>	376
		1998	=>	732
		1999	=>	1076
		2001	=>	405
		2002	=>	593
		2005	=>	583 and 847
		2008	=>	1282
		2015	=>	1249
		2016	=>	382 and 1127
		2017	=>	497
		2024	=>	122
		2025	=>	656
		2026	=>	292
		2028	=>	1373
		2031	=>	324 and 558
		2032	=>	873
		2035	=>	646
		2036	=>	443 and 1012
		2040	=>	546
		2043	=>	938
		2047	=>	464 and 629
		2048	=>	11 and 95
		2049	=>	672
		2053	=>	339 and 434
		2054	=>	227
		2058	=>	101
		2059	=>	789 and 1275
		2060	=>	1191
		2062	=>	747
		2065	=>	661 and 1141
		2066	=>	633 and 1315
		2067	=>	906
		2068	=>	48 and 445
		2069	=>	8
		2074	=>	438 and 491
		2075	=>	15 and 771
		2076	=>	511
		2086	=>	439 and 676
		2087	=>	408 and 1360
		2088	=>	192
		2089	=>	658 and 836
		2090	=>	1162
		2095	=>	5 and 124
		2096	=>	23 and 829
		2097	=>	880
		2108	=>	1276
		2111	=>	314
		2117	=>	455
		2118	=>	838 and 1131
		2119	=>	931
		2127	=>	1345
		2128	=>	415
		2129	=>	711
		2131	=>	1173
		2132	=>	163
		2135	=>	352 and 479
		2136	=>	406
		2140	=>	839
		2141	=>	924 and 999
		2143	=>	1129
		2146	=>	291
		2150	=>	74 and 501
		2151	=>	126 and 158
		2152	=>	905
		2156	=>	638 and 995
		2157	=>	1216
		2160	=>	432
		2161	=>	871 and 1301
		2162	=>	784
		2164	=>	1266
		2167	=>	1032 and 1287
		2168	=>	918 and 1227
		2169	=>	312
		2170	=>	147 and 1045
		2171	=>	1303
		2176	=>	388 and 724
		2177	=>	767 and 1292
		2178	=>	1188
		2189	=>	1061 and 1155
		2190	=>	155 and 430
		2191	=>	407
		2192	=>	486 and 1189
		2193	=>	1367
		2201	=>	375 and 903
		2202	=>	675 and 1338
		2203	=>	1205
		2212	=>	1019
		2216	=>	727 and 1165
		2217	=>	1202
		2220	=>	202 and 899
		2221	=>	1352
		2234	=>	1108
		2235	=>	678
		2236	=>	964
		2237	=>	378
		2238	=>	1316
		2240	=>	1186
		2243	=>	910
		2244	=>	201
		2246	=>	62
		2250	=>	1079
		2253	=>	781
		2257	=>	542
		2266	=>	687
		2267	=>	1302
		2268	=>	805
		2269	=>	302
		2270	=>	358
		2272	=>	1330
		2273	=>	236
		2297	=>	222
		2298	=>	738
		2299	=>	1309
		2304	=>	752
		2305	=>	822
		2307	=>	810 and 1001
		2308	=>	547 and 1348
		2311	=>	584
		2312	=>	577
		2313	=>	220
		2315	=>	38
		2317	=>	313
		2319	=>	1279
		2320	=>	1343
		2321	=>	951
		2324	=>	1163
		2325	=>	1156
		2326	=>	307
		2328	=>	1274
		2329	=>	988
		2330	=>	635
		2331	=>	1031
		2334	=>	1048
		2338	=>	1296
		2339	=>	510
		2340	=>	1134
		2341	=>	1269
		2343	=>	251
		2345	=>	1357
		2346	=>	395
		2350	=>	381
		2356	=>	480
		2357	=>	734
		2358	=>	277
		2359	=>	588
		2360	=>	804
		2362	=>	1369
		2375	=>	1356
		2376	=>	425
		2380	=>	133 and 216
		2381	=>	340
		2382	=>	456
		2383	=>	306
		2386	=>	948
		2387	=>	842
		2388	=>	490
		2396	=>	580
		2397	=>	343
		2407	=>	570
		2408	=>	1055
		2410	=>	1102
		2411	=>	859
		2415	=>	1192
		2416	=>	1328
		2417	=>	604
		2425	=>	696
		2438	=>	451 and 876
		2439	=>	335
		2440	=>	67
		2442	=>	45
		2445	=>	427
		2587	=>	26 and 741
		2588	=>	701
		2589	=>	704
		2591	=>	1349
		2594	=>	333
		2658	=>	1024
		2659	=>	208
		2661	=>	1317
		2665	=>	1350
		2666	=>	1325
		2668	=>	383
		2676	=>	1346
		2677	=>	1326
		2678	=>	1105
		2679	=>	949
		2680	=>	826
		2682	=>	459
		2683	=>	386
		2684	=>	865
		2686	=>	576
		2689	=>	620
		2690	=>	360
		2691	=>	129
		2692	=>	642
		2693	=>	513
		2694	=>	260
		2695	=>	1150
		2697	=>	1232
		2698	=>	969
		2699	=>	824
		2701	=>	446
		2702	=>	79
		2703	=>	902
		2704	=>	544
		2705	=>	187
		2706	=>	39
		2707	=>	272
		2708	=>	1374
		2713	=>	1038
		2720	=>	80
		2721	=>	761
		2733	=>	410
		2734	=>	57
		2735	=>	1036
		2736	=>	597
		2737	=>	644
		2738	=>	1082
		2739	=>	849
		2741	=>	720
		2742	=>	1314
		2743	=>	287
		2744	=>	422
		2746	=>	776
		2747	=>	874
		2748	=>	1106
		2750	=>	1263
		2752	=>	323
		2753	=>	150
		2754	=>	238
		2755	=>	796
		2756	=>	780
		2757	=>	981
		2758	=>	373
		2759	=>	2
		2763	=>	528
		2764	=>	669
		2765	=>	444
		2766	=>	22
		2767	=>	473
		2768	=>	121
		2769	=>	347
		2770	=>	436
		2771	=>	1007
		2773	=>	987
		2774	=>	932
		2775	=>	157
		2776	=>	255
		2777	=>	1072
		2778	=>	304
		2780	=>	904
		2781	=>	775
		2783	=>	814
		2785	=>	349
		2786	=>	447
		2787	=>	608
		2788	=>	731
		2791	=>	261
		2792	=>	1353
		2793	=>	933
		2795	=>	32
		2797	=>	1146
		2800	=>	947
		2801	=>	224
		2802	=>	495
		2803	=>	1088
		2804	=>	1256
		2806	=>	1362
		2807	=>	1230
		2809	=>	409
		2812	=>	231
		2813	=>	736
		2814	=>	1086
		2815	=>	944
		2816	=>	100
		2817	=>	193
		2818	=>	250
		2819	=>	111
		2821	=>	188
		2823	=>	142
		2824	=>	1351
		2825	=>	887
		2826	=>	961
		2829	=>	695
		2830	=>	1254
		2831	=>	175
		2832	=>	363
		2834	=>	367
		2837	=>	30
		2838	=>	797
		2840	=>	1103
		2841	=>	293
		2842	=>	1098
		2844	=>	1164
		2845	=>	1229
		2847	=>	483
		2850	=>	1122
		2851	=>	862
		2852	=>	867
		2854	=>	66
		2855	=>	98
		2856	=>	972
		2858	=>	614
		2861	=>	1037
		2864	=>	424
		2865	=>	270
		2866	=>	71
		2867	=>	1033
		2868	=>	757
		2871	=>	266
		2872	=>	184
		2873	=>	119
		2874	=>	851
		2875	=>	1354
		2877	=>	1042
		2878	=>	1225
		2879	=>	1212
		2880	=>	316
		2883	=>	504
		2884	=>	671
		2885	=>	213
		2887	=>	601
		2888	=>	1184
		2889	=>	786
		2891	=>	70
		2892	=>	397
		2893	=>	967
		2896	=>	693
		2897	=>	1218
		2898	=>	1366
		2901	=>	131
		2913	=>	164
		2914	=>	551
		2916	=>	1379
		2917	=>	94
		2918	=>	1182
		2919	=>	472
		2920	=>	516
		2921	=>	125
		2922	=>	82
		2923	=>	1035
		2925	=>	832
		2926	=>	613
		2927	=>	1308
		2928	=>	172
		2929	=>	980
		2930	=>	353
		2931	=>	1068
		2932	=>	850
		2933	=>	762
		2934	=>	1290
		2936	=>	817
		2937	=>	136
		2938	=>	1304
		2939	=>	246
		2940	=>	922 and 989
		2941	=>	241
		2943	=>	329
		2944	=>	46
		2945	=>	282
		2946	=>	87
		2947	=>	1201
		2948	=>	630
		2949	=>	749
		2951	=>	1081
		2952	=>	618
		2953	=>	956
		2954	=>	232
		2955	=>	978 and 1144
		2956	=>	1011
		2959	=>	599
		2960	=>	774
		2961	=>	624
		2963	=>	682
		2964	=>	364
		2965	=>	719
		2966	=>	1261
		2969	=>	811
		2970	=>	1139
		2971	=>	106
		2976	=>	1095
		2977	=>	474
		2989	=>	854
		2991	=>	680
		2992	=>	853
		2994	=>	498
		2995	=>	683
		2998	=>	337
		2999	=>	17 and 730
		3000	=>	153 and 907
		3001	=>	462
		3005	=>	548

Class: public javax.vecmath.GVector	=>	a.a.f
	Source: "GVector.java"
	FieldsOf: javax.vecmath.GVector
		private int length	=>	a
		static final long serialVersionUID	NameNotChanged
		double[] values	=>	b
	MethodsOf: javax.vecmath.GVector
		static void <clinit>() 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(double[], int) 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(javax.vecmath.GVector) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final void LUDBackSolve(javax.vecmath.GMatrix, javax.vecmath.GVector, javax.vecmath.GVector)	=>	a(a.a.p, a.a.f, a.a.f)
		public final void SVDBackSolve(javax.vecmath.GMatrix, javax.vecmath.GMatrix, javax.vecmath.GMatrix, javax.vecmath.GVector)	=>	a(a.a.p, a.a.p, a.a.p, a.a.f)
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public final void add(javax.vecmath.GVector)	=>	c(a.a.f)
		public final void add(javax.vecmath.GVector, javax.vecmath.GVector)	=>	b(a.a.f, a.a.f)
		public final double angle(javax.vecmath.GVector)	=>	e(a.a.f)
		public java.lang.Object clone() 	SignatureNotChanged
		public final double dot(javax.vecmath.GVector)	=>	b(a.a.f)
		public boolean epsilonEquals(javax.vecmath.GVector, double)	=>	b(a.a.f, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.GVector)	=>	g(a.a.f)
		public final double getElement(int)	=>	b(int)
		public final int getSize()	=>	e()
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(javax.vecmath.GVector, double)	=>	a(a.a.f, double)
		public final void interpolate(javax.vecmath.GVector, float)	=>	a(a.a.f, float)
		public final void interpolate(javax.vecmath.GVector, javax.vecmath.GVector, double)	=>	a(a.a.f, a.a.f, double)
		public final void interpolate(javax.vecmath.GVector, javax.vecmath.GVector, float)	=>	a(a.a.f, a.a.f, float)
		public final void mul(javax.vecmath.GMatrix, javax.vecmath.GVector)	=>	a(a.a.p, a.a.f)
		public final void mul(javax.vecmath.GVector, javax.vecmath.GMatrix)	=>	a(a.a.f, a.a.p)
		public final void negate()	=>	b()
		public final double norm()	=>	f()
		public final double normSquared()	=>	c()
		public final void normalize()	=>	a()
		public final void normalize(javax.vecmath.GVector)	=>	f(a.a.f)
		public final void scale(double)	=>	a(double)
		public final void scale(double, javax.vecmath.GVector)	=>	a(double, a.a.f)
		public final void scaleAdd(double, javax.vecmath.GVector, javax.vecmath.GVector)	=>	a(double, a.a.f, a.a.f)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.GVector)	=>	a(a.a.f)
		public final void set(javax.vecmath.Tuple2f)	=>	a(a.a.P)
		public final void set(javax.vecmath.Tuple3d)	=>	a(a.a.L)
		public final void set(javax.vecmath.Tuple3f)	=>	a(a.a.D)
		public final void set(javax.vecmath.Tuple4d)	=>	a(a.a.j)
		public final void set(javax.vecmath.Tuple4f)	=>	a(a.a.u)
		public final void setElement(int, double)	=>	a(int, double)
		public final void setSize(int)	=>	a(int)
		public final void sub(javax.vecmath.GVector)	=>	d(a.a.f)
		public final void sub(javax.vecmath.GVector, javax.vecmath.GVector)	=>	a(a.a.f, a.a.f)
		public java.lang.String toString() 	SignatureNotChanged
		public final void zero()	=>	d()
	LineNumbersOf: javax.vecmath.GVector
		55	=>	14
		58	=>	336
		59	=>	29
		60	=>	110
		61	=>	307
		71	=>	330
		74	=>	117
		75	=>	180
		76	=>	287
		77	=>	120
		85	=>	23
		88	=>	205
		89	=>	324
		90	=>	328
		91	=>	135
		99	=>	142
		100	=>	209
		101	=>	124
		102	=>	186
		103	=>	24
		104	=>	45
		112	=>	185
		113	=>	18
		114	=>	74
		115	=>	320
		116	=>	325
		117	=>	265
		118	=>	333
		126	=>	312
		127	=>	271
		128	=>	144
		129	=>	231
		130	=>	165
		131	=>	51
		132	=>	92
		140	=>	174
		141	=>	75
		142	=>	122
		143	=>	249
		144	=>	182
		145	=>	290
		146	=>	309
		147	=>	304
		155	=>	255
		156	=>	239
		157	=>	112
		158	=>	84
		159	=>	297
		160	=>	178
		161	=>	151
		162	=>	39
		174	=>	286
		177	=>	95
		178	=>	79
		179	=>	109 and 141
		180	=>	318
		182	=>	121
		192	=>	302
		195	=>	146 and 241
		196	=>	261
		199	=>	215
		210	=>	272
		213	=>	87 and 194
		214	=>	125
		217	=>	90
		226	=>	61
		229	=>	207
		230	=>	244
		232	=>	132 and 181
		233	=>	85
		237	=>	63
		239	=>	303 and 338
		240	=>	67
		242	=>	32
		250	=>	1
		253	=>	159 and 226
		254	=>	216
		258	=>	28
		260	=>	126 and 213
		261	=>	73
		264	=>	4
		275	=>	48
		276	=>	36
		278	=>	102 and 321
		279	=>	208
		281	=>	147
		291	=>	220 and 331
		292	=>	263
		294	=>	49
		308	=>	76
		309	=>	136
		311	=>	100
		312	=>	229
		314	=>	108 and 199
		315	=>	256
		317	=>	335
		328	=>	260
		329	=>	164
		331	=>	80 and 145
		332	=>	214
		334	=>	251
		346	=>	86
		347	=>	22
		349	=>	270
		350	=>	138
		352	=>	62 and 94
		353	=>	334
		354	=>	314
		365	=>	46
		366	=>	170
		368	=>	204 and 254
		369	=>	72
		371	=>	191
		384	=>	296
		385	=>	197
		387	=>	277
		388	=>	34
		390	=>	160 and 179
		391	=>	71
		392	=>	224
		401	=>	322
		402	=>	189
		404	=>	83
		405	=>	143
		408	=>	43
		409	=>	116
		411	=>	326
		414	=>	101 and 201
		415	=>	250
		416	=>	153 and 238
		417	=>	25
		420	=>	113
		433	=>	44
		434	=>	58
		436	=>	134
		437	=>	223
		440	=>	267
		441	=>	57
		443	=>	131
		446	=>	42 and 276
		447	=>	99
		448	=>	211 and 308
		449	=>	288
		452	=>	8
		458	=>	20 and 115
		459	=>	163
		461	=>	315
		467	=>	17 and 177
		468	=>	306
		470	=>	317
		479	=>	293
		482	=>	230
		483	=>	292
		485	=>	268
		487	=>	219 and 264
		488	=>	259
		490	=>	210
		492	=>	12
		494	=>	245
		503	=>	35 and 162
		504	=>	235
		505	=>	149
		514	=>	139
		515	=>	31
		516	=>	299
		517	=>	221 and 298
		518	=>	130
		520	=>	273 and 337
		521	=>	187
		522	=>	13 and 123
		523	=>	281
		525	=>	127
		533	=>	294
		534	=>	327
		535	=>	53
		537	=>	253
		538	=>	47
		539	=>	41
		541	=>	279
		549	=>	3
		550	=>	274
		551	=>	291
		553	=>	111
		554	=>	77
		555	=>	283
		556	=>	54
		557	=>	171
		565	=>	154
		566	=>	243
		567	=>	69
		569	=>	107
		570	=>	150
		571	=>	38
		572	=>	21
		573	=>	316
		581	=>	332
		582	=>	329
		583	=>	167
		585	=>	158
		586	=>	319
		587	=>	169
		588	=>	222
		589	=>	52
		590	=>	247
		598	=>	258
		599	=>	266
		600	=>	339
		602	=>	237
		603	=>	175
		604	=>	137
		605	=>	9
		606	=>	91
		607	=>	311
		615	=>	106
		625	=>	50
		636	=>	30
		637	=>	68
		644	=>	104
		648	=>	119 and 240
		649	=>	89
		652	=>	16
		667	=>	225
		669	=>	59 and 97
		670	=>	285
		673	=>	173
		686	=>	156
		688	=>	66 and 190
		689	=>	252
		692	=>	246
		694	=>	280
		707	=>	148
		709	=>	7
		711	=>	27 and 275
		712	=>	234
		714	=>	301
		716	=>	323
		717	=>	155
		734	=>	64
		736	=>	6 and 257
		737	=>	192
		738	=>	37
		740	=>	227
		750	=>	33
		751	=>	233
		753	=>	78
		754	=>	98 and 203
		755	=>	60
		757	=>	262
		774	=>	310
		777	=>	114
		780	=>	152
		783	=>	93
		786	=>	11
		787	=>	55
		788	=>	183
		789	=>	218
		790	=>	166
		792	=>	128
		808	=>	278
		810	=>	198
		811	=>	103
		812	=>	184
		815	=>	305
		816	=>	212
		819	=>	81
		820	=>	15
		823	=>	140
		824	=>	19
		827	=>	105 and 289
		828	=>	82 and 96
		829	=>	202
		833	=>	10
		834	=>	206
		835	=>	217
		837	=>	282
		839	=>	228
		840	=>	168
		851	=>	133
		859	=>	26
		860	=>	176
		867	=>	193
		868	=>	40
		880	=>	196
		881	=>	300
		883	=>	313
		884	=>	65
		886	=>	200 and 284
		887	=>	56
		889	=>	2
		899	=>	295
		900	=>	195
		902	=>	88 and 242
		903	=>	248
		905	=>	129
		916	=>	157
		918	=>	161
		919	=>	172
		921	=>	188
		922	=>	236
		925	=>	232
		926	=>	118 and 269
		927	=>	70
		930	=>	5

Class: public javax.vecmath.Matrix3d	=>	a.a.T
	Source: "Matrix3d.java"
	FieldsOf: javax.vecmath.Matrix3d
		public double m00	=>	c
		public double m01	=>	d
		public double m02	=>	e
		public double m10	=>	f
		public double m11	=>	a
		public double m12	=>	g
		public double m20	=>	h
		public double m21	=>	b
		public double m22	=>	i
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Matrix3d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3f) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void add(double)	=>	f(double)
		public final void add(double, javax.vecmath.Matrix3d)	=>	b(double, a.a.T)
		public final void add(javax.vecmath.Matrix3d)	=>	b(a.a.T)
		public final void add(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	f(a.a.T, a.a.T)
		private static final boolean almostEqual(double, double)	=>	d(double, double)
		public java.lang.Object clone() 	SignatureNotChanged
		static int compute_2X2(double, double, double, double[], double[], double[], double[], double[], int)	=>	a(double, double, double, double[], double[], double[], double[], double[], int)
		static int compute_qr(double[], double[], double[], double[])	=>	a(double[], double[], double[], double[])
		static double compute_rot(double, double, double[], double[], int, int)	=>	a(double, double, double[], double[], int, int)
		static double compute_shift(double, double, double)	=>	a(double, double, double)
		static void compute_svd(double[], double[], double[])	=>	a(double[], double[], double[])
		static double d_sign(double, double)	=>	c(double, double)
		public final double determinant()	=>	k()
		public boolean epsilonEquals(javax.vecmath.Matrix3d, double)	=>	a(a.a.T, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Matrix3d)	=>	l(a.a.T)
		public final void getColumn(int, double[])	=>	a(int, double[])
		public final void getColumn(int, javax.vecmath.Vector3d)	=>	a(int, a.a.N)
		public final double getElement(int, int)	=>	a(int, int)
		public final double getM00()	=>	e()
		public final double getM01()	=>	c()
		public final double getM02()	=>	d()
		public final double getM10()	=>	o()
		public final double getM11()	=>	i()
		public final double getM12()	=>	f()
		public final double getM20()	=>	p()
		public final double getM21()	=>	n()
		public final double getM22()	=>	a()
		public final void getRow(int, double[])	=>	c(int, double[])
		public final void getRow(int, javax.vecmath.Vector3d)	=>	d(int, a.a.N)
		public final double getScale()	=>	m()
		final void getScaleRotate(double[], double[])	=>	b(double[], double[])
		public int hashCode() 	SignatureNotChanged
		public final void invert()	=>	q()
		public final void invert(javax.vecmath.Matrix3d)	=>	i(a.a.T)
		private final void invertGeneral(javax.vecmath.Matrix3d)	=>	f(a.a.T)
		static void luBacksubstitution(double[], int[], double[])	=>	a(double[], int[], double[])
		static boolean luDecomposition(double[], int[])	=>	a(double[], int[])
		static void mat_mul(double[], double[], double[])	=>	b(double[], double[], double[])
		static double max(double, double)	=>	b(double, double)
		static double max3(double[])	=>	b(double[])
		static double min(double, double)	=>	a(double, double)
		public final void mul(double)	=>	o(double)
		public final void mul(double, javax.vecmath.Matrix3d)	=>	a(double, a.a.T)
		public final void mul(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void mul(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	e(a.a.T, a.a.T)
		public final void mulNormalize(javax.vecmath.Matrix3d)	=>	c(a.a.T)
		public final void mulNormalize(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	d(a.a.T, a.a.T)
		public final void mulTransposeBoth(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	g(a.a.T, a.a.T)
		public final void mulTransposeLeft(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	b(a.a.T, a.a.T)
		public final void mulTransposeRight(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	c(a.a.T, a.a.T)
		public final void negate()	=>	g()
		public final void negate(javax.vecmath.Matrix3d)	=>	h(a.a.T)
		public final void normalize()	=>	j()
		public final void normalize(javax.vecmath.Matrix3d)	=>	d(a.a.T)
		public final void normalizeCP()	=>	h()
		public final void normalizeCP(javax.vecmath.Matrix3d)	=>	k(a.a.T)
		public final void rotX(double)	=>	a(double)
		public final void rotY(double)	=>	p(double)
		public final void rotZ(double)	=>	m(double)
		public final void set(double)	=>	b(double)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	e(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void set(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void setColumn(int, double, double, double)	=>	a(int, double, double, double)
		public final void setColumn(int, double[])	=>	d(int, double[])
		public final void setColumn(int, javax.vecmath.Vector3d)	=>	b(int, a.a.N)
		public final void setElement(int, int, double)	=>	a(int, int, double)
		public final void setIdentity()	=>	b()
		public final void setM00(double)	=>	h(double)
		public final void setM01(double)	=>	j(double)
		public final void setM02(double)	=>	e(double)
		public final void setM10(double)	=>	n(double)
		public final void setM11(double)	=>	d(double)
		public final void setM12(double)	=>	c(double)
		public final void setM20(double)	=>	l(double)
		public final void setM21(double)	=>	g(double)
		public final void setM22(double)	=>	i(double)
		public final void setRow(int, double, double, double)	=>	b(int, double, double, double)
		public final void setRow(int, double[])	=>	b(int, double[])
		public final void setRow(int, javax.vecmath.Vector3d)	=>	c(int, a.a.N)
		public final void setScale(double)	=>	k(double)
		public final void setZero()	=>	r()
		public final void sub(javax.vecmath.Matrix3d)	=>	g(a.a.T)
		public final void sub(javax.vecmath.Matrix3d, javax.vecmath.Matrix3d)	=>	a(a.a.T, a.a.T)
		static void svdReorder(double[], double[], double[], double[], double[], double[])	=>	a(double[], double[], double[], double[], double[], double[])
		public java.lang.String toString() 	SignatureNotChanged
		public final void transform(javax.vecmath.Tuple3d)	=>	a(a.a.L)
		public final void transform(javax.vecmath.Tuple3d, javax.vecmath.Tuple3d)	=>	a(a.a.L, a.a.L)
		public final void transpose()	=>	l()
		public final void transpose(javax.vecmath.Matrix3d)	=>	j(a.a.T)
		static void transpose_mat(double[], double[])	=>	a(double[], double[])
	LineNumbersOf: javax.vecmath.Matrix3d
		113	=>	204
		114	=>	421
		115	=>	1394
		116	=>	1084
		118	=>	1401
		119	=>	216
		120	=>	533
		122	=>	1419
		123	=>	1430
		124	=>	579
		126	=>	101
		134	=>	1002
		135	=>	1604
		136	=>	1109
		137	=>	1310
		139	=>	868
		140	=>	1166
		141	=>	422
		143	=>	1256
		144	=>	1201
		145	=>	1479
		147	=>	1420
		155	=>	243
		156	=>	1148
		157	=>	544
		158	=>	29
		160	=>	163
		161	=>	1613
		162	=>	1387
		164	=>	860
		165	=>	148
		166	=>	808
		168	=>	1377
		176	=>	191
		177	=>	815
		178	=>	1589
		179	=>	239
		181	=>	758
		182	=>	1499
		183	=>	953
		185	=>	471
		186	=>	1520
		187	=>	390
		189	=>	1530
		195	=>	993
		196	=>	691
		197	=>	314
		198	=>	934
		200	=>	1624
		201	=>	1503
		202	=>	1176
		204	=>	1159
		205	=>	1569
		206	=>	279
		208	=>	1280
		215	=>	1517
		226	=>	293
		227	=>	322
		228	=>	102
		230	=>	337
		231	=>	813
		232	=>	1617
		234	=>	1437
		235	=>	770
		236	=>	731
		237	=>	834
		248	=>	1279
		249	=>	1043
		251	=>	468
		253	=>	561
		254	=>	564
		255	=>	76
		257	=>	773
		258	=>	1081
		259	=>	336
		261	=>	1105
		262	=>	114
		263	=>	1316
		264	=>	1112
		274	=>	97
		277	=>	380
		280	=>	791
		281	=>	1443
		283	=>	933
		284	=>	1223
		286	=>	1108
		287	=>	53
		289	=>	553
		294	=>	1415
		297	=>	1591
		298	=>	674
		300	=>	1438
		301	=>	662
		303	=>	1211
		304	=>	589
		306	=>	1115
		312	=>	302
		315	=>	31
		316	=>	491
		318	=>	412
		319	=>	1284
		321	=>	462
		322	=>	1527
		324	=>	1244
		329	=>	991
		331	=>	249
		342	=>	517
		345	=>	217
		348	=>	960
		350	=>	794
		352	=>	523
		354	=>	42
		358	=>	1423
		361	=>	1525
		363	=>	1092
		365	=>	432
		367	=>	452
		372	=>	1114
		375	=>	214
		377	=>	142
		379	=>	727
		381	=>	15
		389	=>	950
		398	=>	1392
		399	=>	672
		400	=>	1049
		401	=>	509
		402	=>	1149
		403	=>	123
		404	=>	304
		405	=>	955
		406	=>	1184
		407	=>	402
		408	=>	1518
		409	=>	1470
		411	=>	110
		414	=>	1554
		422	=>	117
		423	=>	1027
		424	=>	1435
		425	=>	480
		426	=>	866
		427	=>	1067
		428	=>	538
		429	=>	166
		430	=>	715
		431	=>	1143
		432	=>	259
		433	=>	188
		435	=>	873
		438	=>	924
		447	=>	176
		448	=>	1087
		449	=>	618
		450	=>	1162
		451	=>	906
		452	=>	1414
		453	=>	12
		454	=>	1289
		455	=>	535
		456	=>	1197
		457	=>	479
		458	=>	1034
		460	=>	956
		463	=>	151
		472	=>	1282
		473	=>	755
		474	=>	1190
		475	=>	967
		476	=>	1217
		477	=>	867
		478	=>	460
		479	=>	1601
		480	=>	344
		481	=>	323
		482	=>	1142
		483	=>	529
		485	=>	1541
		488	=>	1444
		500	=>	865
		502	=>	67
		503	=>	665
		504	=>	668
		505	=>	253
		508	=>	1544
		509	=>	298
		510	=>	797
		511	=>	734
		514	=>	182
		515	=>	682
		516	=>	788
		517	=>	44
		520	=>	1483
		522	=>	84
		531	=>	1209
		533	=>	1493
		534	=>	1028
		535	=>	276
		536	=>	820
		539	=>	1014
		540	=>	1576
		541	=>	476
		542	=>	1607
		545	=>	1122
		546	=>	935
		547	=>	612
		548	=>	1038
		551	=>	39
		553	=>	317
		562	=>	1596
		564	=>	1572
		565	=>	25
		566	=>	55
		567	=>	211
		570	=>	1375
		571	=>	552
		572	=>	1324
		573	=>	1093
		576	=>	700
		577	=>	1458
		578	=>	64
		579	=>	210
		582	=>	736
		584	=>	772
		595	=>	855
		597	=>	1024
		598	=>	894
		599	=>	1021
		600	=>	598
		603	=>	723
		604	=>	1230
		605	=>	1445
		606	=>	1182
		609	=>	886
		610	=>	1270
		611	=>	1472
		612	=>	627
		615	=>	1361
		617	=>	327
		626	=>	180
		628	=>	542
		629	=>	1362
		630	=>	809
		631	=>	592
		634	=>	679
		635	=>	519
		636	=>	369
		637	=>	1538
		640	=>	179
		641	=>	9
		642	=>	63
		643	=>	1187
		646	=>	1510
		648	=>	1395
		657	=>	1288
		659	=>	203
		660	=>	301
		661	=>	131
		662	=>	92
		665	=>	1147
		666	=>	666
		667	=>	1259
		668	=>	1271
		671	=>	23
		672	=>	746
		673	=>	921
		674	=>	401
		677	=>	961
		679	=>	1371
		691	=>	147
		692	=>	130
		693	=>	1031
		695	=>	1032
		705	=>	1245
		706	=>	374
		707	=>	423
		709	=>	1402
		710	=>	104
		711	=>	1215
		713	=>	413
		714	=>	443
		715	=>	537
		717	=>	1263
		727	=>	705
		728	=>	1118
		729	=>	16
		731	=>	456
		732	=>	1097
		733	=>	1
		735	=>	789
		736	=>	437
		737	=>	1208
		738	=>	854
		747	=>	869
		748	=>	1618
		749	=>	474
		751	=>	47
		752	=>	949
		753	=>	107
		755	=>	172
		756	=>	1103
		757	=>	713
		758	=>	1192
		766	=>	388
		767	=>	1409
		768	=>	1600
		770	=>	1204
		771	=>	578
		772	=>	351
		774	=>	1365
		775	=>	768
		776	=>	1357
		777	=>	318
		787	=>	486
		788	=>	606
		789	=>	32
		791	=>	152
		792	=>	241
		793	=>	1403
		795	=>	963
		796	=>	1302
		797	=>	81
		798	=>	811
		807	=>	257
		808	=>	1219
		809	=>	801
		811	=>	375
		812	=>	493
		813	=>	1243
		815	=>	274
		816	=>	1372
		817	=>	619
		818	=>	623
		827	=>	197
		828	=>	708
		829	=>	1089
		831	=>	1404
		832	=>	1273
		833	=>	109
		835	=>	79
		836	=>	590
		837	=>	1070
		838	=>	1165
		846	=>	1006
		847	=>	340
		848	=>	620
		849	=>	1364
		851	=>	439
		852	=>	1360
		853	=>	1056
		855	=>	135
		856	=>	49
		857	=>	1048
		859	=>	1385
		860	=>	1546
		869	=>	652
		870	=>	1616
		871	=>	1429
		873	=>	1498
		874	=>	1274
		875	=>	1508
		877	=>	286
		878	=>	1062
		879	=>	874
		880	=>	288
		889	=>	70
		891	=>	601
		892	=>	1295
		893	=>	330
		894	=>	1074
		896	=>	1378
		897	=>	938
		898	=>	1059
		900	=>	1532
		901	=>	1388
		902	=>	195
		904	=>	181
		905	=>	1524
		906	=>	1141
		907	=>	1299
		909	=>	1095
		910	=>	440
		911	=>	1009
		913	=>	1015
		914	=>	365
		915	=>	1396
		917	=>	644
		918	=>	1577
		919	=>	1463
		921	=>	904
		922	=>	558
		923	=>	459
		925	=>	3
		926	=>	978
		927	=>	103
		929	=>	566
		938	=>	918
		939	=>	1094
		940	=>	760
		942	=>	1037
		943	=>	4
		944	=>	595
		946	=>	1464
		947	=>	1549
		948	=>	1611
		949	=>	1507
		958	=>	1400
		959	=>	433
		960	=>	436
		961	=>	1428
		962	=>	387
		964	=>	1334
		965	=>	1189
		966	=>	976
		968	=>	757
		969	=>	688
		970	=>	261
		972	=>	720
		973	=>	699
		974	=>	780
		975	=>	1490
		976	=>	485
		977	=>	521
		978	=>	1348
		980	=>	1294
		981	=>	287
		982	=>	908
		984	=>	1504
		985	=>	1287
		986	=>	221
		988	=>	1558
		989	=>	637
		990	=>	1455
		992	=>	1606
		993	=>	272
		994	=>	1130
		996	=>	1121
		1005	=>	824
		1006	=>	1522
		1007	=>	1543
		1009	=>	273
		1010	=>	547
		1011	=>	511
		1013	=>	136
		1014	=>	222
		1015	=>	1020
		1016	=>	225
		1025	=>	202
		1026	=>	822
		1027	=>	240
		1029	=>	426
		1030	=>	1140
		1031	=>	786
		1033	=>	749
		1034	=>	659
		1035	=>	540
		1036	=>	1134
		1046	=>	496
		1047	=>	86
		1048	=>	843
		1050	=>	34
		1051	=>	851
		1052	=>	1156
		1054	=>	1462
		1055	=>	133
		1056	=>	719
		1058	=>	898
		1067	=>	814
		1068	=>	186
		1075	=>	78
		1076	=>	1526
		1087	=>	173
		1088	=>	429
		1090	=>	438
		1096	=>	33
		1097	=>	638
		1098	=>	600
		1100	=>	1599
		1101	=>	778
		1102	=>	115
		1104	=>	1022
		1105	=>	1422
		1106	=>	717
		1110	=>	1337
		1112	=>	1567
		1116	=>	1614
		1117	=>	1207
		1118	=>	1144
		1120	=>	1131
		1121	=>	574
		1122	=>	1450
		1124	=>	1480
		1125	=>	57
		1126	=>	828
		1128	=>	799
		1129	=>	762
		1130	=>	1185
		1132	=>	198
		1157	=>	449
		1165	=>	545
		1166	=>	1218
		1169	=>	971
		1170	=>	1367
		1171	=>	143
		1174	=>	1104
		1175	=>	870
		1176	=>	649
		1177	=>	1615
		1178	=>	878
		1179	=>	356
		1184	=>	1390
		1185	=>	18
		1187	=>	514
		1195	=>	350
		1198	=>	1329 and 1497
		1204	=>	83 and 154
		1205	=>	1547
		1206	=>	645
		1207	=>	1327
		1208	=>	444
		1209	=>	96
		1210	=>	1551
		1211	=>	20
		1212	=>	1619
		1213	=>	93
		1215	=>	877
		1220	=>	1085
		1221	=>	1135
		1222	=>	190 and 297
		1223	=>	1137
		1224	=>	624
		1225	=>	232
		1226	=>	581
		1227	=>	85
		1228	=>	112
		1229	=>	90
		1230	=>	1580
		1231	=>	218
		1233	=>	1583
		1236	=>	275
		1237	=>	1075
		1238	=>	183
		1242	=>	803
		1243	=>	403
		1247	=>	88
		1249	=>	1155
		1250	=>	19
		1251	=>	1249
		1252	=>	1281
		1253	=>	267
		1254	=>	785
		1255	=>	1012
		1259	=>	599
		1263	=>	1487
		1266	=>	664
		1267	=>	1139
		1271	=>	1461
		1272	=>	305
		1273	=>	10
		1274	=>	980
		1275	=>	230
		1276	=>	399
		1277	=>	587
		1283	=>	1359
		1313	=>	160
		1316	=>	328 and 1069
		1318	=>	111
		1319	=>	1125
		1322	=>	145 and 1451
		1325	=>	625
		1326	=>	458
		1327	=>	236
		1328	=>	880
		1330	=>	943
		1331	=>	738 and 964
		1332	=>	1241
		1335	=>	608
		1336	=>	911
		1338	=>	59
		1343	=>	386
		1344	=>	1386
		1346	=>	1231
		1347	=>	345
		1350	=>	543
		1351	=>	1485
		1356	=>	1057
		1366	=>	196
		1369	=>	622
		1379	=>	1102
		1380	=>	1000
		1381	=>	1305
		1383	=>	887
		1384	=>	1331
		1385	=>	632
		1387	=>	546
		1388	=>	879
		1389	=>	628
		1390	=>	539
		1401	=>	510
		1402	=>	263
		1404	=>	463
		1405	=>	527
		1406	=>	292
		1408	=>	1476
		1409	=>	1253
		1410	=>	171
		1412	=>	1338
		1413	=>	586
		1414	=>	748
		1415	=>	132
		1426	=>	73
		1427	=>	1054
		1429	=>	311
		1430	=>	159
		1431	=>	65
		1433	=>	724
		1434	=>	1474
		1435	=>	1311
		1437	=>	926
		1438	=>	7
		1439	=>	1340
		1440	=>	1160
		1451	=>	1053
		1452	=>	735
		1454	=>	502
		1455	=>	381
		1456	=>	650
		1458	=>	385
		1459	=>	1072
		1460	=>	671
		1462	=>	1030
		1463	=>	1588
		1464	=>	1622
		1465	=>	1232
		1473	=>	1609
		1474	=>	156
		1475	=>	1285
		1477	=>	722
		1478	=>	927
		1479	=>	864
		1481	=>	667
		1482	=>	1045
		1483	=>	701
		1485	=>	1528
		1495	=>	948
		1496	=>	341
		1497	=>	355
		1499	=>	1336
		1500	=>	129
		1501	=>	1008
		1503	=>	348
		1504	=>	802
		1505	=>	1157
		1507	=>	1597
		1520	=>	1123
		1521	=>	916
		1522	=>	1353
		1524	=>	819
		1525	=>	1265
		1526	=>	150
		1528	=>	1174
		1529	=>	1227
		1530	=>	357
		1532	=>	1010
		1533	=>	1325
		1534	=>	1183
		1535	=>	957
		1545	=>	362
		1546	=>	695
		1547	=>	1564
		1548	=>	1509
		1550	=>	990
		1551	=>	912
		1552	=>	1579
		1554	=>	1473
		1555	=>	1308
		1556	=>	418
		1562	=>	1195
		1563	=>	316
		1564	=>	1304
		1566	=>	1496
		1567	=>	146
		1568	=>	1344
		1570	=>	681
		1571	=>	1120
		1572	=>	1442
		1574	=>	694
		1575	=>	1318
		1576	=>	683
		1578	=>	1343
		1588	=>	175
		1589	=>	470
		1590	=>	711
		1592	=>	1333
		1593	=>	324
		1594	=>	920
		1596	=>	1111
		1597	=>	1582
		1598	=>	441
		1600	=>	1454
		1601	=>	1373
		1602	=>	52
		1604	=>	295
		1606	=>	1126
		1607	=>	248
		1608	=>	1229
		1610	=>	359
		1611	=>	1086
		1612	=>	1453
		1614	=>	703
		1615	=>	80
		1616	=>	718
		1618	=>	1220
		1630	=>	1446
		1631	=>	68
		1632	=>	1136
		1634	=>	1408
		1635	=>	1269
		1636	=>	1315
		1638	=>	863
		1639	=>	1004
		1640	=>	1051
		1642	=>	975
		1643	=>	1374
		1644	=>	220
		1646	=>	126
		1648	=>	37
		1649	=>	1181
		1650	=>	818
		1652	=>	1297
		1653	=>	1356
		1654	=>	310
		1656	=>	329
		1657	=>	861
		1658	=>	139
		1660	=>	500
		1670	=>	419
		1671	=>	1447
		1672	=>	503
		1673	=>	1595
		1675	=>	43
		1676	=>	51
		1677	=>	635
		1679	=>	576
		1680	=>	575
		1681	=>	507
		1687	=>	1044
		1688	=>	313
		1689	=>	1605
		1691	=>	850
		1692	=>	817
		1693	=>	522
		1695	=>	120
		1696	=>	534
		1697	=>	888
		1699	=>	616
		1700	=>	923
		1701	=>	1200
		1704	=>	1234
		1714	=>	234
		1715	=>	1587
		1716	=>	1368
		1717	=>	1535
		1719	=>	1581
		1720	=>	653
		1721	=>	294
		1723	=>	212
		1724	=>	947
		1725	=>	872
		1731	=>	995
		1732	=>	740
		1733	=>	779
		1735	=>	515
		1736	=>	1018
		1737	=>	74
		1739	=>	1291
		1740	=>	1164
		1741	=>	782
		1743	=>	446
		1744	=>	1078
		1745	=>	928
		1747	=>	1559
		1757	=>	1460
		1758	=>	504
		1759	=>	161
		1760	=>	454
		1762	=>	106
		1763	=>	1047
		1764	=>	812
		1766	=>	1494
		1767	=>	901
		1768	=>	472
		1774	=>	1571
		1775	=>	862
		1776	=>	830
		1778	=>	567
		1779	=>	1457
		1780	=>	966
		1782	=>	941
		1783	=>	796
		1784	=>	1205
		1786	=>	881
		1787	=>	410
		1788	=>	1268
		1790	=>	1491
		1798	=>	72
		1799	=>	1309
		1801	=>	1320
		1803	=>	1206
		1804	=>	1238
		1805	=>	925
		1807	=>	890
		1808	=>	1459
		1809	=>	1351
		1811	=>	1418
		1812	=>	591
		1813	=>	763
		1815	=>	153
		1825	=>	1152
		1826	=>	847
		1827	=>	339
		1829	=>	400
		1830	=>	704
		1831	=>	952
		1833	=>	842
		1834	=>	1540
		1835	=>	364
		1837	=>	1161
		1838	=>	1405
		1839	=>	61
		1841	=>	1488
		1843	=>	617
		1844	=>	876
		1845	=>	793
		1847	=>	937
		1848	=>	1521
		1849	=>	1312
		1851	=>	1210
		1852	=>	571
		1853	=>	905
		1854	=>	27
		1863	=>	795
		1864	=>	721
		1865	=>	1456
		1866	=>	1537
		1868	=>	840
		1869	=>	119
		1870	=>	1533
		1871	=>	334
		1873	=>	424
		1874	=>	22
		1875	=>	677
		1876	=>	962
		1886	=>	982
		1887	=>	1552
		1888	=>	465
		1889	=>	1393
		1891	=>	759
		1892	=>	140
		1893	=>	1098
		1894	=>	498
		1896	=>	732
		1897	=>	1052
		1898	=>	144
		1899	=>	604
		1910	=>	406
		1914	=>	363
		1928	=>	929
		1929	=>	621
		1933	=>	563
		1934	=>	1248
		1951	=>	1221
		1952	=>	251
		1954	=>	416
		1955	=>	1347
		1957	=>	766
		1958	=>	1313
		1960	=>	998
		1961	=>	233
		1963	=>	1255
		1964	=>	932
		1966	=>	1452
		1967	=>	1099
		1969	=>	580
		1970	=>	1254
		1972	=>	1058
		1973	=>	1379
		1975	=>	505
		1976	=>	1039
		1978	=>	1055
		1991	=>	642
		1992	=>	1222
		1993	=>	1196
		1994	=>	229
		1995	=>	278
		1996	=>	570
		1997	=>	852
		1998	=>	931
		1999	=>	347
		2000	=>	1566
		2001	=>	1620
		2010	=>	428
		2011	=>	349
		2012	=>	942
		2014	=>	488
		2015	=>	467
		2016	=>	675
		2018	=>	205
		2019	=>	127
		2020	=>	1475
		2022	=>	1542
		2029	=>	1625
		2030	=>	1079
		2031	=>	526
		2033	=>	1436
		2034	=>	1358
		2035	=>	754
		2037	=>	1492
		2038	=>	902
		2039	=>	556
		2041	=>	629
		2050	=>	512
		2051	=>	536
		2052	=>	124
		2054	=>	1550
		2055	=>	588
		2056	=>	568
		2058	=>	825
		2059	=>	999
		2060	=>	1560
		2062	=>	405
		2071	=>	597
		2072	=>	289
		2073	=>	1610
		2074	=>	40
		2075	=>	17
		2085	=>	445
		2086	=>	1258
		2087	=>	1132
		2088	=>	1568
		2089	=>	742
		2090	=>	685
		2097	=>	228
		2099	=>	646
		2100	=>	725
		2101	=>	277
		2103	=>	1355
		2104	=>	858
		2105	=>	77
		2107	=>	839
		2108	=>	577
		2109	=>	360
		2110	=>	829
		2112	=>	1586
		2118	=>	165
		2119	=>	871
		2120	=>	1214
		2121	=>	728
		2123	=>	1261
		2124	=>	450
		2126	=>	1082
		2127	=>	900
		2128	=>	572
		2130	=>	1133
		2137	=>	36 and 1345
		2138	=>	244
		2142	=>	1064
		2143	=>	246
		2144	=>	1170
		2145	=>	658
		2146	=>	959
		2147	=>	1138
		2148	=>	435
		2149	=>	1573
		2150	=>	266
		2151	=>	1598
		2152	=>	442
		2154	=>	972
		2155	=>	678
		2156	=>	384
		2158	=>	158
		2159	=>	573
		2160	=>	1515
		2162	=>	1188
		2163	=>	909
		2164	=>	389
		2165	=>	60
		2166	=>	607
		2167	=>	451
		2169	=>	98
		2170	=>	1275
		2171	=>	1519
		2173	=>	453
		2174	=>	744
		2175	=>	1531
		2176	=>	235
		2177	=>	555
		2178	=>	730
		2183	=>	170
		2184	=>	1023
		2185	=>	46
		2186	=>	1150
		2187	=>	1177
		2188	=>	391
		2189	=>	684
		2190	=>	1242
		2192	=>	1585
		2193	=>	1077
		2194	=>	215
		2196	=>	201
		2197	=>	626
		2198	=>	1410
		2199	=>	501
		2200	=>	494
		2201	=>	473
		2203	=>	11
		2204	=>	670
		2205	=>	113
		2207	=>	177
		2208	=>	697
		2209	=>	1466
		2210	=>	1565
		2211	=>	1203
		2212	=>	1495
		2214	=>	741
		2215	=>	696
		2216	=>	28
		2217	=>	857
		2218	=>	1486
		2219	=>	1433
		2221	=>	207
		2222	=>	1213
		2223	=>	549
		2225	=>	82
		2226	=>	1202
		2227	=>	557
		2228	=>	219
		2229	=>	1298
		2230	=>	66
		2231	=>	484
		2236	=>	660
		2237	=>	469
		2238	=>	1363
		2239	=>	425
		2240	=>	833
		2241	=>	1557
		2242	=>	774
		2243	=>	1076
		2244	=>	497
		2245	=>	1264
		2246	=>	1073
		2248	=>	1369
		2249	=>	457
		2250	=>	611
		2252	=>	733
		2253	=>	750
		2254	=>	224
		2256	=>	1397
		2257	=>	309
		2258	=>	1233
		2259	=>	790
		2260	=>	1119
		2261	=>	846
		2263	=>	1171
		2264	=>	492
		2265	=>	307
		2267	=>	641
		2268	=>	1342
		2269	=>	358
		2271	=>	1317
		2272	=>	223
		2273	=>	883
		2278	=>	831
		2279	=>	1505
		2280	=>	321
		2281	=>	238
		2282	=>	771
		2283	=>	1146
		2284	=>	712
		2285	=>	698
		2287	=>	583
		2288	=>	1366
		2289	=>	1448
		2291	=>	657
		2292	=>	1413
		2293	=>	1276
		2294	=>	884
		2295	=>	1512
		2296	=>	781
		2298	=>	1246
		2299	=>	944
		2300	=>	1168
		2303	=>	1163
		2304	=>	226
		2305	=>	155
		2306	=>	528
		2307	=>	1381
		2308	=>	1007
		2310	=>	897
		2311	=>	1352
		2312	=>	1158
		2314	=>	1239
		2315	=>	1417
		2316	=>	1306
		2318	=>	352
		2319	=>	1046
		2320	=>	1561
		2322	=>	1432
		2323	=>	930
		2324	=>	1063
		2326	=>	1383
		2327	=>	169
		2328	=>	281
		2331	=>	237
		2332	=>	836
		2333	=>	24
		2334	=>	1180
		2335	=>	892
		2337	=>	1468
		2340	=>	530
		2343	=>	1563
		2344	=>	816
		2345	=>	1440
		2349	=>	262
		2350	=>	810
		2351	=>	913
		2354	=>	915 and 1319
		2355	=>	1193
		2356	=>	702
		2358	=>	896
		2360	=>	128
		2361	=>	524 and 767
		2362	=>	613
		2364	=>	247
		2369	=>	1116
		2370	=>	989
		2384	=>	614
		2386	=>	162
		2391	=>	194
		2392	=>	551
		2394	=>	739
		2395	=>	245
		2399	=>	141
		2400	=>	983
		2401	=>	783
		2402	=>	121
		2403	=>	951
		2405	=>	977
		2406	=>	856
		2407	=>	1167
		2408	=>	354
		2409	=>	254
		2411	=>	1145
		2412	=>	332
		2413	=>	50
		2414	=>	765
		2415	=>	335
		2418	=>	487
		2421	=>	1539
		2422	=>	639
		2423	=>	100 and 647
		2424	=>	1017
		2426	=>	284 and 373
		2427	=>	769
		2433	=>	1421
		2434	=>	1128
		2435	=>	1292
		2436	=>	569
		2438	=>	1101
		2441	=>	26
		2444	=>	1380
		2445	=>	1350
		2446	=>	379
		2448	=>	303
		2451	=>	1272
		2463	=>	45
		2464	=>	1237
		2465	=>	1556
		2467	=>	343
		2468	=>	54
		2469	=>	62
		2471	=>	14
		2474	=>	213
		2478	=>	382
		2481	=>	1354
		2482	=>	895
		2484	=>	1389
		2487	=>	366
		2491	=>	1349
		2496	=>	596
		2497	=>	1449
		2499	=>	994
		2500	=>	1129
		2502	=>	1575
		2503	=>	761
		2506	=>	91
		2507	=>	1534
		2509	=>	845
		2510	=>	1339
		2512	=>	264
		2513	=>	1029
		2515	=>	6
		2516	=>	13
		2518	=>	996
		2519	=>	1506
		2521	=>	21
		2522	=>	954
		2524	=>	673
		2525	=>	518
		2527	=>	849
		2528	=>	282
		2530	=>	1267
		2531	=>	1523
		2533	=>	368
		2540	=>	656
		2541	=>	315
		2542	=>	1570
		2543	=>	1516
		2544	=>	1035
		2549	=>	792
		2550	=>	434
		2552	=>	192
		2553	=>	242
		2555	=>	483
		2558	=>	430
		2560	=>	1439
		2562	=>	899 and 917
		2563	=>	710
		2564	=>	520
		2565	=>	1013
		2566	=>	1511
		2567	=>	853
		2568	=>	1594
		2569	=>	687
		2570	=>	1431
		2572	=>	593
		2573	=>	636
		2574	=>	1088
		2575	=>	268
		2576	=>	125
		2577	=>	1477
		2578	=>	689
		2580	=>	1252
		2581	=>	970
		2582	=>	1425
		2583	=>	885
		2584	=>	848
		2585	=>	99
		2587	=>	605
		2588	=>	1286
		2589	=>	1225
		2590	=>	827
		2591	=>	945
		2594	=>	271
		2595	=>	907
		2596	=>	973
		2597	=>	777
		2598	=>	706
		2599	=>	714
		2600	=>	1584
		2601	=>	1036
		2602	=>	71
		2604	=>	87
		2605	=>	835
		2606	=>	969
		2607	=>	1173
		2608	=>	508
		2609	=>	409
		2610	=>	30
		2611	=>	903
		2612	=>	1489
		2616	=>	415
		2617	=>	499
		2618	=>	1424
		2619	=>	108
		2620	=>	986
		2621	=>	1621
		2622	=>	1212
		2623	=>	1513
		2624	=>	1003
		2626	=>	193
		2627	=>	594
		2628	=>	1399
		2629	=>	1482
		2630	=>	1090
		2631	=>	464
		2632	=>	1277
		2633	=>	1293
		2634	=>	1096
		2637	=>	376
		2638	=>	367
		2639	=>	1257
		2641	=>	105
		2644	=>	1502
		2645	=>	1019
		2647	=>	1484
		2648	=>	312
		2649	=>	936
		2650	=>	946
		2651	=>	800
		2652	=>	531
		2653	=>	1041
		2654	=>	333
		2655	=>	669
		2659	=>	893
		2660	=>	342
		2661	=>	227
		2662	=>	167
		2663	=>	1216
		2664	=>	837
		2665	=>	346
		2666	=>	1553
		2667	=>	806
		2669	=>	1005
		2671	=>	532
		2672	=>	1411
		2673	=>	1416
		2674	=>	1574
		2675	=>	256
		2676	=>	299
		2677	=>	807
		2678	=>	1290
		2679	=>	482
		2683	=>	707
		2684	=>	89
		2685	=>	361
		2686	=>	250
		2687	=>	489
		2688	=>	747
		2689	=>	398
		2690	=>	1194
		2691	=>	407
		2694	=>	585
		2697	=>	1186
		2698	=>	395
		2700	=>	371
		2703	=>	823
		2704	=>	285
		2706	=>	992
		2710	=>	174
		2711	=>	541
		2719	=>	745
		2720	=>	404
		2721	=>	291
		2722	=>	826
		2723	=>	414
		2724	=>	910
		2725	=>	1301
		2726	=>	1434
		2728	=>	255
		2731	=>	1323
		2732	=>	1236
		2733	=>	370
		2734	=>	1151
		2735	=>	974
		2736	=>	1626
		2737	=>	1321
		2739	=>	756
		2740	=>	753
		2741	=>	654
		2743	=>	1100
		2744	=>	1251
		2745	=>	383
		2746	=>	461
		2747	=>	1322
		2748	=>	651
		2749	=>	582
		2754	=>	353
		2759	=>	338
		2760	=>	138
		2772	=>	633
		2773	=>	1107
		2774	=>	984
		2775	=>	1266
		2776	=>	1536
		2777	=>	283
		2778	=>	844
		2780	=>	231
		2781	=>	891
		2782	=>	1500
		2783	=>	525
		2785	=>	648
		2786	=>	776
		2787	=>	1191
		2789	=>	378
		2791	=>	919
		2792	=>	609
		2793	=>	75
		2794	=>	258
		2795	=>	1370
		2796	=>	1016
		2797	=>	1175
		2798	=>	821
		2801	=>	764
		2802	=>	481
		2803	=>	58
		2805	=>	1260
		2806	=>	1060
		2807	=>	325
		2808	=>	490
		2809	=>	1307
		2810	=>	447
		2812	=>	1612
		2814	=>	1226
		2815	=>	987
		2816	=>	1562
		2818	=>	631
		2819	=>	168
		2820	=>	630
		2821	=>	320
		2823	=>	752
		2825	=>	1071
		2826	=>	326
		2827	=>	1303
		2828	=>	1068
		2831	=>	958
		2833	=>	122
		2834	=>	69
		2836	=>	506
		2838	=>	38
		2841	=>	1300
		2843	=>	1050
		2845	=>	787
		2846	=>	1025
		2847	=>	1061
		2849	=>	94
		2850	=>	1426
		2852	=>	149
		2855	=>	1478
		2857	=>	1555
		2858	=>	838
		2859	=>	427
		2861	=>	1330
		2862	=>	548
		2863	=>	187
		2864	=>	134
		2866	=>	1427
		2868	=>	1548
		2869	=>	940
		2870	=>	784
		2871	=>	988
		2874	=>	751
		2876	=>	1179
		2877	=>	56
		2879	=>	1106
		2881	=>	968
		2884	=>	270
		2886	=>	206
		2888	=>	417
		2889	=>	859
		2890	=>	200
		2892	=>	922
		2893	=>	1314
		2895	=>	584
		2898	=>	615
		2901	=>	680
		2902	=>	1341
		2903	=>	1228
		2905	=>	1467
		2906	=>	804
		2908	=>	306
		2911	=>	1406
		2913	=>	178
		2914	=>	164
		2915	=>	265
		2916	=>	1529
		2917	=>	550
		2920	=>	8
		2921	=>	676
		2922	=>	1001
		2923	=>	331
		2924	=>	1384
		2926	=>	965
		2927	=>	1592
		2928	=>	1124
		2929	=>	116
		2932	=>	199
		2933	=>	1262
		2935	=>	1224
		2936	=>	209
		2938	=>	513
		2939	=>	1042
		2941	=>	396
		2942	=>	1398
		2943	=>	562
		2947	=>	1198
		2958	=>	1127
		2959	=>	602
		2961	=>	1235
		2962	=>	1382
		2963	=>	431
		2964	=>	775
		2965	=>	1178
		2966	=>	1040
		2967	=>	1391
		2968	=>	1113
		2970	=>	1593
		2971	=>	981
		2972	=>	1578
		2973	=>	882
		2974	=>	290
		2975	=>	661
		2976	=>	1172
		2977	=>	832
		2978	=>	1083
		2979	=>	1332
		2981	=>	1199
		2982	=>	252
		2983	=>	805
		2984	=>	1026
		2985	=>	939 and 1471
		2986	=>	997
		2988	=>	408
		2989	=>	1407
		2990	=>	308
		2991	=>	35
		2992	=>	189
		2993	=>	1514
		2994	=>	875
		2996	=>	516
		2997	=>	477
		2998	=>	554
		2999	=>	709
		3000	=>	690 and 841
		3001	=>	260
		3004	=>	643
		3005	=>	377
		3006	=>	5
		3008	=>	1623
		3009	=>	1080
		3010	=>	1247
		3011	=>	610
		3014	=>	1346
		3015	=>	1117
		3016	=>	1335
		3039	=>	296
		3041	=>	185
		3042	=>	495
		3043	=>	319
		3045	=>	137
		3046	=>	693
		3047	=>	2
		3049	=>	393
		3050	=>	743
		3051	=>	269
		3053	=>	729 and 985
		3054	=>	466
		3056	=>	560
		3058	=>	655
		3059	=>	455
		3060	=>	889
		3062	=>	475
		3063	=>	394
		3064	=>	1250
		3066	=>	1154
		3067	=>	1590
		3068	=>	979
		3069	=>	1545
		3071	=>	280
		3072	=>	392
		3073	=>	95
		3075	=>	1011
		3077	=>	565
		3078	=>	1153
		3080	=>	692
		3085	=>	41
		3086	=>	737
		3088	=>	1602
		3089	=>	1278
		3090	=>	1033
		3091	=>	798
		3092	=>	1376
		3093	=>	1066
		3095	=>	118
		3096	=>	1481
		3098	=>	397
		3099	=>	640
		3101	=>	184
		3113	=>	411
		3115	=>	1169
		3116	=>	914
		3118	=>	726
		3119	=>	559
		3122	=>	1240
		3131	=>	1441
		3142	=>	1501
		3143	=>	686
		3153	=>	663
		3164	=>	1603
		3165	=>	208
		3175	=>	634
		3186	=>	48
		3187	=>	478
		3197	=>	603
		3208	=>	716
		3209	=>	1326
		3219	=>	1065
		3230	=>	1091
		3231	=>	1110
		3241	=>	300
		3252	=>	1608
		3253	=>	157
		3263	=>	448
		3274	=>	372
		3275	=>	420
		3285	=>	1283
		3296	=>	1465
		3297	=>	1412
		3307	=>	1296
		3318	=>	1469
		3319	=>	1328

Class: public javax.vecmath.Matrix3f	=>	a.a.o
	Source: "Matrix3f.java"
	FieldsOf: javax.vecmath.Matrix3f
		public float m00	=>	d
		public float m01	=>	i
		public float m02	=>	b
		public float m10	=>	a
		public float m11	=>	e
		public float m12	=>	h
		public float m20	=>	c
		public float m21	=>	f
		public float m22	=>	g
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Matrix3f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float, float, float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3f) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void add(float)	=>	l(float)
		public final void add(float, javax.vecmath.Matrix3f)	=>	b(float, a.a.o)
		public final void add(javax.vecmath.Matrix3f)	=>	f(a.a.o)
		public final void add(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	d(a.a.o, a.a.o)
		public java.lang.Object clone() 	SignatureNotChanged
		public final float determinant()	=>	b()
		public boolean epsilonEquals(javax.vecmath.Matrix3f, float)	=>	a(a.a.o, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Matrix3f)	=>	l(a.a.o)
		public final void getColumn(int, float[])	=>	a(int, float[])
		public final void getColumn(int, javax.vecmath.Vector3f)	=>	d(int, a.a.H)
		public final float getElement(int, int)	=>	a(int, int)
		public final float getM00()	=>	j()
		public final float getM01()	=>	d()
		public final float getM02()	=>	a()
		public final float getM10()	=>	p()
		public final float getM11()	=>	e()
		public final float getM12()	=>	h()
		public final float getM20()	=>	o()
		public final float getM21()	=>	f()
		public final float getM22()	=>	c()
		public final void getRow(int, float[])	=>	c(int, float[])
		public final void getRow(int, javax.vecmath.Vector3f)	=>	c(int, a.a.H)
		public final float getScale()	=>	r()
		void getScaleRotate(double[], double[])	=>	a(double[], double[])
		public int hashCode() 	SignatureNotChanged
		public final void invert()	=>	l()
		public final void invert(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		private final void invertGeneral(javax.vecmath.Matrix3f)	=>	i(a.a.o)
		static void luBacksubstitution(double[], int[], double[])	=>	a(double[], int[], double[])
		static boolean luDecomposition(double[], int[])	=>	a(double[], int[])
		public final void mul(float)	=>	k(float)
		public final void mul(float, javax.vecmath.Matrix3f)	=>	a(float, a.a.o)
		public final void mul(javax.vecmath.Matrix3f)	=>	e(a.a.o)
		public final void mul(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	b(a.a.o, a.a.o)
		public final void mulNormalize(javax.vecmath.Matrix3f)	=>	g(a.a.o)
		public final void mulNormalize(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	g(a.a.o, a.a.o)
		public final void mulTransposeBoth(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	c(a.a.o, a.a.o)
		public final void mulTransposeLeft(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	f(a.a.o, a.a.o)
		public final void mulTransposeRight(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	a(a.a.o, a.a.o)
		public final void negate()	=>	i()
		public final void negate(javax.vecmath.Matrix3f)	=>	d(a.a.o)
		public final void normalize()	=>	n()
		public final void normalize(javax.vecmath.Matrix3f)	=>	j(a.a.o)
		public final void normalizeCP()	=>	m()
		public final void normalizeCP(javax.vecmath.Matrix3f)	=>	c(a.a.o)
		public final void rotX(float)	=>	g(float)
		public final void rotY(float)	=>	j(float)
		public final void rotZ(float)	=>	e(float)
		public final void set(float)	=>	p(float)
		public final void set(float[])	=>	a(float[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	h(a.a.o)
		public final void set(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void set(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void setColumn(int, float, float, float)	=>	a(int, float, float, float)
		public final void setColumn(int, float[])	=>	d(int, float[])
		public final void setColumn(int, javax.vecmath.Vector3f)	=>	a(int, a.a.H)
		public final void setElement(int, int, float)	=>	a(int, int, float)
		public final void setIdentity()	=>	q()
		public final void setM00(float)	=>	a(float)
		public final void setM01(float)	=>	m(float)
		public final void setM02(float)	=>	n(float)
		public final void setM10(float)	=>	h(float)
		public final void setM11(float)	=>	o(float)
		public final void setM12(float)	=>	d(float)
		public final void setM20(float)	=>	c(float)
		public final void setM21(float)	=>	b(float)
		public final void setM22(float)	=>	i(float)
		public final void setRow(int, float, float, float)	=>	b(int, float, float, float)
		public final void setRow(int, float[])	=>	b(int, float[])
		public final void setRow(int, javax.vecmath.Vector3f)	=>	b(int, a.a.H)
		public final void setScale(float)	=>	f(float)
		public final void setZero()	=>	k()
		public final void sub(javax.vecmath.Matrix3f)	=>	b(a.a.o)
		public final void sub(javax.vecmath.Matrix3f, javax.vecmath.Matrix3f)	=>	e(a.a.o, a.a.o)
		public java.lang.String toString() 	SignatureNotChanged
		public final void transform(javax.vecmath.Tuple3f)	=>	a(a.a.D)
		public final void transform(javax.vecmath.Tuple3f, javax.vecmath.Tuple3f)	=>	a(a.a.D, a.a.D)
		public final void transpose()	=>	g()
		public final void transpose(javax.vecmath.Matrix3f)	=>	k(a.a.o)
	LineNumbersOf: javax.vecmath.Matrix3f
		114	=>	918
		115	=>	956
		116	=>	622
		117	=>	934
		119	=>	371
		120	=>	411
		121	=>	566
		123	=>	852
		124	=>	499
		125	=>	33
		127	=>	224
		135	=>	212
		136	=>	177
		137	=>	638
		138	=>	984
		140	=>	239
		141	=>	311
		142	=>	814
		144	=>	83
		145	=>	492
		146	=>	169
		148	=>	754
		156	=>	218
		157	=>	316
		158	=>	757
		159	=>	348
		161	=>	166
		162	=>	322
		163	=>	598
		165	=>	332
		166	=>	437
		167	=>	786
		169	=>	901
		178	=>	31
		179	=>	299
		180	=>	535
		181	=>	646
		183	=>	879
		184	=>	766
		185	=>	401
		187	=>	219
		188	=>	612
		189	=>	978
		191	=>	840
		198	=>	541
		199	=>	104
		200	=>	448
		201	=>	895
		203	=>	334
		204	=>	540
		205	=>	181
		207	=>	48
		208	=>	579
		209	=>	300
		211	=>	863
		218	=>	315
		229	=>	717
		230	=>	349
		231	=>	294
		233	=>	470
		234	=>	408
		235	=>	969
		237	=>	549
		238	=>	380
		239	=>	57
		240	=>	355
		250	=>	73
		251	=>	846
		253	=>	27
		255	=>	557
		256	=>	850
		257	=>	944
		259	=>	56
		260	=>	381
		261	=>	514
		263	=>	970
		264	=>	321
		265	=>	257
		267	=>	917
		277	=>	560
		280	=>	912
		283	=>	865
		284	=>	618
		286	=>	603
		287	=>	187
		289	=>	536
		290	=>	303
		292	=>	456
		297	=>	665
		300	=>	183
		301	=>	559
		303	=>	586
		304	=>	84
		306	=>	466
		307	=>	862
		309	=>	534
		314	=>	882
		317	=>	6
		318	=>	15
		320	=>	318
		321	=>	725
		323	=>	810
		324	=>	825
		327	=>	616
		332	=>	107
		334	=>	112
		342	=>	796
		343	=>	337
		344	=>	981
		345	=>	30
		346	=>	191
		347	=>	76
		348	=>	985
		349	=>	735
		350	=>	375
		351	=>	232
		352	=>	891
		353	=>	887
		355	=>	412
		358	=>	645
		366	=>	350
		367	=>	399
		368	=>	697
		369	=>	625
		370	=>	71
		371	=>	234
		372	=>	670
		373	=>	423
		374	=>	695
		375	=>	260
		376	=>	821
		377	=>	125
		379	=>	443
		382	=>	402
		391	=>	208
		392	=>	258
		393	=>	832
		394	=>	392
		395	=>	759
		396	=>	955
		397	=>	714
		398	=>	256
		399	=>	968
		400	=>	14
		401	=>	12
		402	=>	547
		404	=>	137
		407	=>	972
		416	=>	936
		417	=>	771
		418	=>	236
		419	=>	106
		420	=>	440
		421	=>	176
		422	=>	235
		423	=>	90
		424	=>	150
		425	=>	497
		426	=>	396
		427	=>	476
		429	=>	574
		431	=>	680
		442	=>	682
		445	=>	631
		448	=>	1
		450	=>	823
		452	=>	948
		454	=>	572
		458	=>	382
		461	=>	829
		463	=>	287
		465	=>	779
		467	=>	331
		472	=>	148
		475	=>	602
		477	=>	170
		479	=>	156
		481	=>	152
		488	=>	721
		500	=>	578
		502	=>	581
		503	=>	460
		504	=>	40
		505	=>	824
		508	=>	4
		509	=>	29
		510	=>	215
		511	=>	164
		514	=>	225
		515	=>	393
		516	=>	463
		517	=>	121
		520	=>	962
		522	=>	916
		531	=>	197
		533	=>	666
		534	=>	554
		535	=>	883
		536	=>	425
		539	=>	815
		540	=>	775
		541	=>	502
		542	=>	11
		545	=>	839
		546	=>	498
		547	=>	669
		548	=>	97
		551	=>	500
		553	=>	909
		562	=>	162
		564	=>	773
		565	=>	623
		566	=>	159
		567	=>	473
		570	=>	335
		571	=>	902
		572	=>	160
		573	=>	147
		576	=>	830
		577	=>	259
		578	=>	609
		579	=>	386
		582	=>	378
		584	=>	81
		595	=>	228
		597	=>	545
		598	=>	719
		599	=>	446
		600	=>	474
		603	=>	672
		604	=>	385
		605	=>	576
		606	=>	708
		609	=>	731
		610	=>	493
		611	=>	64
		612	=>	360
		615	=>	292
		617	=>	940
		626	=>	897
		628	=>	489
		629	=>	426
		630	=>	893
		631	=>	422
		634	=>	266
		635	=>	10
		636	=>	428
		637	=>	146
		640	=>	114
		641	=>	629
		642	=>	749
		643	=>	843
		646	=>	450
		648	=>	19
		657	=>	47
		659	=>	533
		660	=>	828
		661	=>	142
		662	=>	44
		665	=>	661
		666	=>	280
		667	=>	467
		668	=>	619
		671	=>	61
		672	=>	194
		673	=>	186
		674	=>	330
		677	=>	374
		679	=>	958
		691	=>	820
		692	=>	240
		693	=>	563
		695	=>	117
		705	=>	37
		706	=>	275
		707	=>	68
		708	=>	844
		709	=>	873
		710	=>	927
		711	=>	553
		712	=>	86
		713	=>	835
		714	=>	250
		724	=>	134
		725	=>	954
		726	=>	308
		727	=>	860
		728	=>	313
		729	=>	49
		730	=>	314
		731	=>	357
		732	=>	730
		733	=>	539
		742	=>	870
		743	=>	615
		744	=>	715
		746	=>	267
		747	=>	802
		748	=>	610
		750	=>	803
		751	=>	907
		752	=>	793
		753	=>	220
		762	=>	306
		763	=>	847
		764	=>	694
		766	=>	24
		767	=>	283
		768	=>	590
		770	=>	937
		771	=>	130
		772	=>	511
		773	=>	488
		783	=>	967
		784	=>	935
		785	=>	457
		787	=>	816
		788	=>	158
		789	=>	561
		791	=>	674
		792	=>	587
		793	=>	415
		794	=>	454
		803	=>	172
		804	=>	513
		805	=>	701
		807	=>	876
		808	=>	777
		809	=>	512
		811	=>	743
		812	=>	136
		813	=>	418
		814	=>	635
		823	=>	851
		824	=>	881
		825	=>	606
		827	=>	320
		828	=>	922
		829	=>	367
		831	=>	226
		832	=>	789
		833	=>	713
		834	=>	791
		842	=>	52
		843	=>	278
		844	=>	530
		845	=>	227
		847	=>	974
		848	=>	790
		849	=>	262
		851	=>	179
		852	=>	648
		853	=>	60
		855	=>	845
		856	=>	667
		865	=>	515
		866	=>	297
		867	=>	217
		869	=>	238
		870	=>	681
		871	=>	800
		873	=>	255
		874	=>	778
		875	=>	543
		876	=>	650
		885	=>	328
		886	=>	368
		887	=>	25
		888	=>	966
		889	=>	388
		891	=>	379
		892	=>	516
		893	=>	678
		895	=>	103
		896	=>	699
		897	=>	449
		899	=>	124
		900	=>	866
		901	=>	857
		902	=>	739
		904	=>	792
		905	=>	78
		906	=>	647
		908	=>	654
		909	=>	660
		910	=>	728
		912	=>	503
		913	=>	319
		914	=>	952
		916	=>	900
		917	=>	173
		918	=>	889
		920	=>	776
		921	=>	16
		922	=>	620
		925	=>	685
		934	=>	58
		935	=>	351
		936	=>	149
		937	=>	135
		938	=>	849
		940	=>	233
		941	=>	113
		942	=>	132
		944	=>	812
		945	=>	270
		946	=>	546
		948	=>	706
		949	=>	304
		950	=>	211
		951	=>	596
		953	=>	950
		954	=>	595
		955	=>	755
		957	=>	930
		958	=>	289
		959	=>	886
		961	=>	668
		962	=>	871
		963	=>	140
		965	=>	982
		966	=>	184
		967	=>	523
		969	=>	210
		970	=>	123
		971	=>	8
		974	=>	702
		983	=>	298
		984	=>	45
		985	=>	637
		987	=>	99
		988	=>	795
		989	=>	688
		991	=>	600
		992	=>	119
		993	=>	976
		994	=>	94
		1004	=>	945
		1005	=>	505
		1006	=>	920
		1008	=>	329
		1009	=>	913
		1010	=>	282
		1012	=>	605
		1013	=>	326
		1014	=>	122
		1017	=>	209
		1026	=>	324
		1027	=>	822
		1028	=>	465
		1030	=>	592
		1031	=>	417
		1032	=>	373
		1034	=>	864
		1035	=>	471
		1036	=>	809
		1038	=>	391
		1048	=>	854
		1049	=>	858
		1050	=>	676
		1052	=>	230
		1053	=>	482
		1054	=>	26
		1056	=>	362
		1057	=>	568
		1058	=>	310
		1060	=>	722
		1070	=>	223
		1071	=>	684
		1078	=>	504
		1079	=>	538
		1090	=>	704
		1091	=>	13
		1092	=>	727
		1099	=>	689
		1100	=>	301
		1101	=>	614
		1103	=>	652
		1104	=>	201
		1105	=>	276
		1107	=>	626
		1108	=>	72
		1109	=>	524
		1113	=>	740
		1115	=>	764
		1119	=>	744
		1120	=>	469
		1121	=>	312
		1123	=>	726
		1124	=>	196
		1125	=>	229
		1127	=>	842
		1128	=>	627
		1129	=>	252
		1131	=>	662
		1132	=>	253
		1133	=>	767
		1135	=>	588
		1160	=>	43
		1168	=>	102
		1169	=>	745
		1172	=>	644
		1173	=>	198
		1174	=>	827
		1177	=>	951
		1178	=>	496
		1179	=>	145
		1180	=>	856
		1181	=>	760
		1182	=>	804
		1187	=>	438
		1188	=>	419
		1190	=>	468
		1198	=>	528
		1201	=>	899 and 957
		1207	=>	364 and 365
		1208	=>	671
		1209	=>	458
		1210	=>	949
		1211	=>	178
		1212	=>	867
		1213	=>	734
		1214	=>	501
		1215	=>	383
		1216	=>	243
		1218	=>	345
		1223	=>	80
		1224	=>	611
		1225	=>	571 and 933
		1226	=>	333
		1227	=>	87
		1228	=>	286
		1229	=>	376
		1230	=>	510
		1231	=>	577
		1232	=>	163
		1233	=>	703
		1234	=>	231
		1236	=>	416
		1239	=>	85
		1240	=>	490
		1241	=>	268
		1245	=>	96
		1246	=>	768
		1250	=>	841
		1252	=>	529
		1253	=>	204
		1254	=>	599
		1255	=>	770
		1256	=>	131
		1257	=>	55
		1258	=>	42
		1262	=>	801
		1266	=>	21
		1269	=>	797
		1270	=>	584
		1274	=>	664
		1275	=>	214
		1276	=>	977
		1277	=>	154
		1278	=>	973
		1279	=>	696
		1280	=>	431
		1286	=>	634
		1316	=>	189
		1319	=>	562 and 711
		1321	=>	894
		1322	=>	155
		1325	=>	9 and 200
		1328	=>	447
		1329	=>	359
		1330	=>	565
		1331	=>	347
		1333	=>	92
		1334	=>	353 and 436
		1335	=>	203
		1338	=>	525
		1339	=>	372
		1341	=>	663
		1346	=>	284
		1347	=>	118
		1349	=>	281
		1350	=>	309
		1353	=>	327
		1354	=>	723
		1359	=>	285
		1367	=>	244
		1370	=>	34
		1380	=>	91
		1381	=>	486
		1382	=>	905
		1384	=>	38
		1385	=>	911
		1386	=>	903
		1388	=>	748
		1389	=>	724
		1390	=>	336
		1391	=>	363
		1402	=>	617
		1403	=>	366
		1405	=>	733
		1406	=>	805
		1407	=>	642
		1409	=>	928
		1410	=>	910
		1411	=>	190
		1413	=>	710
		1414	=>	354
		1415	=>	794
		1416	=>	205
		1427	=>	82
		1428	=>	929
		1430	=>	480
		1431	=>	105
		1432	=>	410
		1434	=>	628
		1435	=>	182
		1436	=>	780
		1438	=>	686
		1439	=>	296
		1440	=>	138
		1441	=>	742
		1452	=>	946
		1453	=>	459
		1455	=>	344
		1456	=>	110
		1457	=>	947
		1459	=>	157
		1460	=>	409
		1461	=>	521
		1463	=>	564
		1464	=>	254
		1465	=>	885
		1466	=>	430
		1474	=>	971
		1475	=>	206
		1476	=>	188
		1478	=>	485
		1479	=>	519
		1480	=>	432
		1482	=>	569
		1483	=>	444
		1484	=>	246
		1485	=>	741
		1495	=>	818
		1496	=>	199
		1497	=>	807
		1499	=>	769
		1500	=>	761
		1501	=>	781
		1503	=>	434
		1504	=>	263
		1505	=>	506
		1507	=>	274
		1520	=>	53
		1521	=>	573
		1522	=>	317
		1524	=>	271
		1525	=>	808
		1526	=>	291
		1528	=>	594
		1529	=>	837
		1530	=>	604
		1532	=>	904
		1533	=>	120
		1534	=>	657
		1535	=>	241
		1545	=>	679
		1546	=>	964
		1547	=>	66
		1548	=>	3
		1550	=>	522
		1551	=>	400
		1552	=>	939
		1554	=>	406
		1555	=>	548
		1556	=>	765
		1562	=>	20
		1563	=>	601
		1564	=>	896
		1566	=>	265
		1567	=>	942
		1568	=>	248
		1570	=>	305
		1571	=>	613
		1572	=>	389
		1574	=>	884
		1575	=>	785
		1576	=>	736
		1578	=>	892
		1588	=>	39
		1589	=>	22
		1590	=>	517
		1592	=>	18
		1593	=>	144
		1594	=>	272
		1596	=>	390
		1597	=>	636
		1598	=>	718
		1600	=>	518
		1601	=>	479
		1602	=>	643
		1604	=>	869
		1606	=>	17
		1607	=>	932
		1608	=>	405
		1610	=>	906
		1611	=>	542
		1612	=>	941
		1614	=>	433
		1615	=>	384
		1616	=>	180
		1618	=>	925
		1629	=>	550
		1630	=>	343
		1631	=>	88
		1634	=>	507
		1635	=>	445
		1636	=>	532
		1638	=>	494
		1639	=>	848
		1640	=>	89
		1642	=>	732
		1643	=>	277
		1644	=>	919
		1646	=>	295
		1648	=>	700
		1649	=>	608
		1650	=>	624
		1652	=>	938
		1653	=>	429
		1654	=>	698
		1656	=>	420
		1657	=>	591
		1658	=>	77
		1659	=>	806
		1669	=>	451
		1670	=>	783
		1671	=>	46
		1672	=>	133
		1674	=>	979
		1675	=>	356
		1676	=>	342
		1678	=>	836
		1679	=>	656
		1680	=>	222
		1686	=>	527
		1687	=>	782
		1688	=>	167
		1690	=>	555
		1691	=>	924
		1692	=>	960
		1694	=>	495
		1695	=>	421
		1696	=>	269
		1698	=>	582
		1699	=>	747
		1700	=>	570
		1703	=>	341
		1714	=>	693
		1715	=>	171
		1716	=>	59
		1717	=>	369
		1719	=>	361
		1720	=>	323
		1721	=>	763
		1723	=>	288
		1724	=>	640
		1725	=>	834
		1731	=>	580
		1732	=>	673
		1733	=>	567
		1735	=>	174
		1736	=>	963
		1737	=>	633
		1739	=>	346
		1740	=>	63
		1741	=>	193
		1743	=>	531
		1744	=>	831
		1745	=>	477
		1747	=>	833
		1757	=>	75
		1758	=>	915
		1759	=>	28
		1760	=>	439
		1762	=>	959
		1763	=>	784
		1764	=>	352
		1766	=>	926
		1767	=>	69
		1768	=>	799
		1774	=>	414
		1775	=>	143
		1776	=>	36
		1778	=>	464
		1779	=>	126
		1780	=>	435
		1782	=>	774
		1783	=>	93
		1784	=>	404
		1786	=>	923
		1787	=>	520
		1788	=>	168
		1790	=>	370
		1797	=>	551
		1798	=>	116
		1799	=>	394
		1801	=>	129
		1802	=>	487
		1803	=>	32
		1805	=>	653
		1806	=>	453
		1807	=>	165
		1809	=>	424
		1810	=>	377
		1811	=>	709
		1813	=>	729
		1821	=>	185
		1822	=>	813
		1823	=>	70
		1825	=>	251
		1826	=>	692
		1827	=>	115
		1829	=>	23
		1830	=>	141
		1831	=>	655
		1833	=>	95
		1834	=>	387
		1835	=>	340
		1837	=>	868
		1839	=>	898
		1840	=>	659
		1841	=>	649
		1843	=>	691
		1844	=>	455
		1845	=>	716
		1847	=>	690
		1848	=>	875
		1849	=>	758
		1851	=>	302
		1858	=>	202
		1859	=>	127
		1860	=>	2
		1861	=>	861
		1863	=>	888
		1864	=>	237
		1865	=>	111
		1866	=>	965
		1868	=>	249
		1869	=>	544
		1870	=>	720
		1872	=>	153
		1881	=>	279
		1882	=>	872
		1883	=>	750
		1884	=>	980
		1886	=>	630
		1887	=>	819
		1888	=>	772
		1889	=>	756
		1891	=>	589
		1892	=>	54
		1893	=>	151
		1895	=>	677
		1907	=>	874
		1911	=>	207
		1926	=>	558
		1927	=>	245
		1931	=>	216
		1932	=>	683
		1946	=>	597
		1948	=>	108
		1949	=>	5
		1950	=>	983
		1952	=>	526
		1953	=>	880
		1954	=>	293
		1956	=>	41
		1957	=>	74
		1958	=>	50
		1960	=>	752
		1974	=>	307
		1975	=>	273
		1976	=>	491
		1977	=>	484
		1978	=>	632
		1979	=>	221
		1980	=>	508
		1981	=>	101
		1982	=>	908
		1983	=>	395
		1984	=>	552
		1993	=>	675
		1994	=>	838
		1995	=>	798
		1997	=>	139
		1998	=>	746
		1999	=>	358
		2001	=>	397
		2002	=>	338
		2003	=>	811
		2005	=>	855
		2012	=>	787
		2013	=>	641
		2014	=>	788
		2016	=>	738
		2017	=>	826
		2018	=>	413
		2020	=>	943
		2021	=>	556
		2022	=>	462
		2024	=>	651
		2033	=>	442
		2034	=>	195
		2035	=>	98
		2037	=>	583
		2038	=>	79
		2039	=>	161
		2041	=>	403
		2042	=>	51
		2043	=>	853
		2045	=>	213
		2054	=>	890
		2055	=>	264
		2056	=>	877
		2057	=>	62
		2058	=>	67
		2068	=>	509
		2069	=>	441
		2070	=>	461
		2071	=>	175
		2072	=>	585
		2073	=>	753
		2080	=>	687
		2081	=>	737
		2082	=>	921
		2083	=>	705
		2084	=>	192
		2085	=>	707
		2086	=>	452
		2087	=>	128
		2088	=>	481
		2089	=>	483
		2090	=>	407
		2092	=>	621
		2105	=>	975
		2107	=>	7
		2108	=>	575
		2110	=>	639
		2111	=>	109
		2112	=>	339
		2124	=>	472
		2135	=>	242
		2136	=>	658
		2147	=>	100
		2158	=>	398
		2159	=>	427
		2169	=>	961
		2180	=>	762
		2181	=>	931
		2191	=>	325
		2202	=>	859
		2203	=>	478
		2213	=>	475
		2224	=>	65
		2225	=>	914
		2235	=>	261
		2244	=>	751
		2245	=>	712
		2255	=>	247
		2266	=>	607
		2267	=>	817
		2277	=>	290
		2288	=>	537
		2289	=>	35
		2299	=>	878
		2310	=>	953
		2311	=>	593

Class: public javax.vecmath.Matrix4d	=>	a.a.n
	Source: "Matrix4d.java"
	FieldsOf: javax.vecmath.Matrix4d
		public double m00	=>	n
		public double m01	=>	b
		public double m02	=>	h
		public double m03	=>	g
		public double m10	=>	f
		public double m11	=>	c
		public double m12	=>	o
		public double m13	=>	k
		public double m20	=>	a
		public double m21	=>	j
		public double m22	=>	p
		public double m23	=>	l
		public double m30	=>	m
		public double m31	=>	e
		public double m32	=>	i
		public double m33	=>	d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Matrix4d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3d, javax.vecmath.Vector3d, double) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3f, javax.vecmath.Vector3d, double) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4d, javax.vecmath.Vector3d, double) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4f, javax.vecmath.Vector3d, double) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void add(double)	=>	r(double)
		public final void add(double, javax.vecmath.Matrix4d)	=>	b(double, a.a.n)
		public final void add(javax.vecmath.Matrix4d)	=>	b(a.a.n)
		public final void add(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	d(a.a.n, a.a.n)
		public java.lang.Object clone() 	SignatureNotChanged
		public final double determinant()	=>	l()
		public boolean epsilonEquals(javax.vecmath.Matrix4d, double)	=>	a(a.a.n, double)
		public boolean epsilonEquals(javax.vecmath.Matrix4d, float)	=>	a(a.a.n, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Matrix4d)	=>	i(a.a.n)
		public final void get(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final double get(javax.vecmath.Matrix3d, javax.vecmath.Vector3d)	=>	a(a.a.T, a.a.N)
		public final void get(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final double get(javax.vecmath.Matrix3f, javax.vecmath.Vector3d)	=>	a(a.a.o, a.a.N)
		public final void get(javax.vecmath.Quat4d)	=>	c(a.a.l)
		public final void get(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void get(javax.vecmath.Vector3d)	=>	c(a.a.N)
		public final void getColumn(int, double[])	=>	d(int, double[])
		public final void getColumn(int, javax.vecmath.Vector4d)	=>	b(int, a.a.m)
		public final double getElement(int, int)	=>	a(int, int)
		public final double getM00()	=>	h()
		public final double getM01()	=>	q()
		public final double getM02()	=>	g()
		public final double getM03()	=>	n()
		public final double getM10()	=>	v()
		public final double getM11()	=>	o()
		public final double getM12()	=>	d()
		public final double getM13()	=>	r()
		public final double getM20()	=>	k()
		public final double getM21()	=>	i()
		public final double getM22()	=>	a()
		public final double getM23()	=>	c()
		public final double getM30()	=>	j()
		public final double getM31()	=>	u()
		public final double getM32()	=>	w()
		public final double getM33()	=>	m()
		public final void getRotationScale(javax.vecmath.Matrix3d)	=>	d(a.a.T)
		public final void getRotationScale(javax.vecmath.Matrix3f)	=>	b(a.a.o)
		public final void getRow(int, double[])	=>	b(int, double[])
		public final void getRow(int, javax.vecmath.Vector4d)	=>	a(int, a.a.m)
		public final double getScale()	=>	e()
		private final void getScaleRotate(double[], double[])	=>	a(double[], double[])
		public int hashCode() 	SignatureNotChanged
		public final void invert()	=>	s()
		public final void invert(javax.vecmath.Matrix4d)	=>	d(a.a.n)
		final void invertGeneral(javax.vecmath.Matrix4d)	=>	h(a.a.n)
		static void luBacksubstitution(double[], int[], double[])	=>	a(double[], int[], double[])
		static boolean luDecomposition(double[], int[])	=>	a(double[], int[])
		public final void mul(double)	=>	f(double)
		public final void mul(double, javax.vecmath.Matrix4d)	=>	a(double, a.a.n)
		public final void mul(javax.vecmath.Matrix4d)	=>	c(a.a.n)
		public final void mul(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	c(a.a.n, a.a.n)
		public final void mulTransposeBoth(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	f(a.a.n, a.a.n)
		public final void mulTransposeLeft(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	e(a.a.n, a.a.n)
		public final void mulTransposeRight(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	b(a.a.n, a.a.n)
		public final void negate()	=>	t()
		public final void negate(javax.vecmath.Matrix4d)	=>	f(a.a.n)
		public final void rotX(double)	=>	m(double)
		public final void rotY(double)	=>	l(double)
		public final void rotZ(double)	=>	c(double)
		public final void set(double)	=>	a(double)
		public final void set(double, javax.vecmath.Vector3d)	=>	a(double, a.a.N)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	b(a.a.T)
		public final void set(javax.vecmath.Matrix3d, javax.vecmath.Vector3d, double)	=>	a(a.a.T, a.a.N, double)
		public final void set(javax.vecmath.Matrix3f)	=>	d(a.a.o)
		public final void set(javax.vecmath.Matrix3f, javax.vecmath.Vector3f, float)	=>	a(a.a.o, a.a.H, float)
		public final void set(javax.vecmath.Matrix4d)	=>	g(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	a(a.a.U)
		public final void set(javax.vecmath.Quat4d)	=>	b(a.a.l)
		public final void set(javax.vecmath.Quat4d, javax.vecmath.Vector3d, double)	=>	a(a.a.l, a.a.N, double)
		public final void set(javax.vecmath.Quat4f)	=>	c(a.a.x)
		public final void set(javax.vecmath.Quat4f, javax.vecmath.Vector3d, double)	=>	a(a.a.x, a.a.N, double)
		public final void set(javax.vecmath.Quat4f, javax.vecmath.Vector3f, float)	=>	a(a.a.x, a.a.H, float)
		public final void set(javax.vecmath.Vector3d)	=>	b(a.a.N)
		public final void set(javax.vecmath.Vector3d, double)	=>	a(a.a.N, double)
		public final void setColumn(int, double, double, double, double)	=>	b(int, double, double, double, double)
		public final void setColumn(int, double[])	=>	c(int, double[])
		public final void setColumn(int, javax.vecmath.Vector4d)	=>	d(int, a.a.m)
		public final void setElement(int, int, double)	=>	a(int, int, double)
		public final void setIdentity()	=>	p()
		public final void setM00(double)	=>	v(double)
		public final void setM01(double)	=>	i(double)
		public final void setM02(double)	=>	n(double)
		public final void setM03(double)	=>	w(double)
		public final void setM10(double)	=>	q(double)
		public final void setM11(double)	=>	e(double)
		public final void setM12(double)	=>	g(double)
		public final void setM13(double)	=>	o(double)
		public final void setM20(double)	=>	p(double)
		public final void setM21(double)	=>	u(double)
		public final void setM22(double)	=>	d(double)
		public final void setM23(double)	=>	s(double)
		public final void setM30(double)	=>	k(double)
		public final void setM31(double)	=>	t(double)
		public final void setM32(double)	=>	j(double)
		public final void setM33(double)	=>	b(double)
		public final void setRotation(javax.vecmath.AxisAngle4d)	=>	b(a.a.c)
		public final void setRotation(javax.vecmath.Matrix3d)	=>	c(a.a.T)
		public final void setRotation(javax.vecmath.Matrix3f)	=>	c(a.a.o)
		public final void setRotation(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void setRotation(javax.vecmath.Quat4f)	=>	b(a.a.x)
		public final void setRotationScale(javax.vecmath.Matrix3d)	=>	e(a.a.T)
		public final void setRotationScale(javax.vecmath.Matrix3f)	=>	e(a.a.o)
		public final void setRow(int, double, double, double, double)	=>	a(int, double, double, double, double)
		public final void setRow(int, double[])	=>	a(int, double[])
		public final void setRow(int, javax.vecmath.Vector4d)	=>	c(int, a.a.m)
		public final void setScale(double)	=>	h(double)
		public final void setTranslation(javax.vecmath.Vector3d)	=>	d(a.a.N)
		public final void setZero()	=>	f()
		public final void sub(javax.vecmath.Matrix4d)	=>	e(a.a.n)
		public final void sub(javax.vecmath.Matrix4d, javax.vecmath.Matrix4d)	=>	a(a.a.n, a.a.n)
		public java.lang.String toString() 	SignatureNotChanged
		public final void transform(javax.vecmath.Point3d)	=>	a(a.a.M)
		public final void transform(javax.vecmath.Point3d, javax.vecmath.Point3d)	=>	a(a.a.M, a.a.M)
		public final void transform(javax.vecmath.Point3f)	=>	a(a.a.F)
		public final void transform(javax.vecmath.Point3f, javax.vecmath.Point3f)	=>	a(a.a.F, a.a.F)
		public final void transform(javax.vecmath.Tuple4d)	=>	a(a.a.j)
		public final void transform(javax.vecmath.Tuple4d, javax.vecmath.Tuple4d)	=>	a(a.a.j, a.a.j)
		public final void transform(javax.vecmath.Tuple4f)	=>	a(a.a.u)
		public final void transform(javax.vecmath.Tuple4f, javax.vecmath.Tuple4f)	=>	a(a.a.u, a.a.u)
		public final void transform(javax.vecmath.Vector3d)	=>	a(a.a.N)
		public final void transform(javax.vecmath.Vector3d, javax.vecmath.Vector3d)	=>	a(a.a.N, a.a.N)
		public final void transform(javax.vecmath.Vector3f)	=>	a(a.a.H)
		public final void transform(javax.vecmath.Vector3f, javax.vecmath.Vector3f)	=>	a(a.a.H, a.a.H)
		public final void transpose()	=>	b()
		public final void transpose(javax.vecmath.Matrix4d)	=>	a(a.a.n)
	LineNumbersOf: javax.vecmath.Matrix4d
		156	=>	1752
		157	=>	783
		158	=>	15
		159	=>	358
		160	=>	1625
		162	=>	1000
		163	=>	325
		164	=>	556
		165	=>	78
		167	=>	1226
		168	=>	613
		169	=>	474
		170	=>	1115
		172	=>	328
		173	=>	628
		174	=>	1511
		175	=>	1379
		177	=>	866
		185	=>	1466
		186	=>	1632
		187	=>	1823
		188	=>	496
		189	=>	943
		191	=>	694
		192	=>	711
		193	=>	1075
		194	=>	1761
		196	=>	153
		197	=>	380
		198	=>	199
		199	=>	1114
		201	=>	423
		202	=>	827
		203	=>	111
		204	=>	1266
		206	=>	1396
		218	=>	539
		219	=>	1473
		220	=>	670
		221	=>	222
		223	=>	1604
		224	=>	1778
		225	=>	1143
		227	=>	1537
		228	=>	1202
		229	=>	1338
		231	=>	717
		232	=>	1463
		233	=>	367
		235	=>	1739
		236	=>	1616
		237	=>	416
		238	=>	994
		240	=>	868
		252	=>	360
		253	=>	971
		254	=>	241
		255	=>	1010
		257	=>	661
		258	=>	864
		259	=>	350
		261	=>	1637
		262	=>	701
		263	=>	369
		265	=>	478
		266	=>	702
		267	=>	1445
		269	=>	1750
		270	=>	1471
		271	=>	1425
		272	=>	90
		274	=>	608
		282	=>	189
		283	=>	893
		284	=>	13
		285	=>	1292
		286	=>	1119
		288	=>	98
		289	=>	235
		290	=>	1713
		291	=>	770
		293	=>	1384
		294	=>	625
		295	=>	1513
		296	=>	1215
		298	=>	787
		299	=>	1022
		300	=>	272
		301	=>	844
		303	=>	548
		311	=>	1179
		312	=>	1319
		313	=>	1694
		314	=>	1515
		315	=>	1636
		317	=>	1540
		318	=>	604
		319	=>	51
		320	=>	871
		322	=>	1263
		323	=>	1734
		324	=>	889
		325	=>	1657
		327	=>	638
		328	=>	1024
		329	=>	1468
		330	=>	1518
		332	=>	532
		344	=>	1341
		345	=>	595
		346	=>	393
		347	=>	596
		348	=>	148
		350	=>	972
		351	=>	1017
		352	=>	1639
		353	=>	1689
		355	=>	5
		356	=>	797
		357	=>	504
		358	=>	128
		360	=>	200
		361	=>	1172
		362	=>	93
		363	=>	1760
		365	=>	1031
		377	=>	208
		378	=>	417
		379	=>	1059
		380	=>	294
		381	=>	231
		383	=>	283
		384	=>	1238
		385	=>	1131
		386	=>	282
		388	=>	1060
		389	=>	300
		390	=>	872
		391	=>	309
		393	=>	714
		394	=>	427
		395	=>	1658
		396	=>	642
		398	=>	1175
		404	=>	1815
		405	=>	1436
		406	=>	525
		407	=>	239
		408	=>	1387
		410	=>	492
		411	=>	1586
		412	=>	251
		413	=>	721
		415	=>	1597
		416	=>	122
		417	=>	963
		418	=>	1055
		420	=>	612
		421	=>	1112
		422	=>	1080
		423	=>	1247
		425	=>	1097
		432	=>	109
		444	=>	1552
		445	=>	1311
		446	=>	1626
		447	=>	775
		449	=>	704
		450	=>	518
		451	=>	1609
		452	=>	996
		454	=>	1443
		455	=>	232
		456	=>	1105
		457	=>	811
		459	=>	520
		460	=>	80
		461	=>	223
		462	=>	1008
		463	=>	214
		473	=>	1672
		476	=>	490
		479	=>	1334
		480	=>	1346
		482	=>	597
		483	=>	87
		485	=>	1661
		486	=>	1807
		488	=>	407
		489	=>	808
		491	=>	1370
		496	=>	1383
		499	=>	1412
		500	=>	327
		502	=>	1742
		503	=>	919
		505	=>	572
		506	=>	1519
		508	=>	793
		509	=>	968
		511	=>	587
		516	=>	1494
		519	=>	1817
		520	=>	1809
		522	=>	485
		523	=>	49
		525	=>	1498
		526	=>	514
		528	=>	41
		529	=>	515
		531	=>	420
		536	=>	140
		539	=>	669
		540	=>	446
		542	=>	581
		543	=>	1320
		545	=>	1273
		546	=>	1056
		548	=>	480
		549	=>	277
		551	=>	332
		556	=>	886
		558	=>	307
		568	=>	9
		571	=>	1596
		574	=>	288
		576	=>	399
		578	=>	1645
		580	=>	1195
		582	=>	544
		586	=>	1314
		589	=>	53
		591	=>	359
		593	=>	1747
		595	=>	1633
		597	=>	104
		602	=>	207
		605	=>	319
		607	=>	422
		609	=>	158
		611	=>	1087
		613	=>	790
		618	=>	527
		621	=>	1204
		623	=>	901
		625	=>	850
		627	=>	545
		629	=>	1476
		636	=>	1536
		645	=>	2
		646	=>	757
		647	=>	183
		648	=>	166
		649	=>	1421
		650	=>	1834
		651	=>	1545
		652	=>	415
		653	=>	1725
		654	=>	1386
		655	=>	1489
		656	=>	898
		657	=>	664
		658	=>	917
		659	=>	910
		660	=>	1484
		661	=>	1356
		662	=>	286
		663	=>	284
		664	=>	695
		666	=>	86
		668	=>	1298
		677	=>	464
		678	=>	816
		679	=>	1531
		680	=>	1470
		681	=>	1279
		682	=>	1688
		683	=>	789
		684	=>	1326
		685	=>	1030
		686	=>	507
		687	=>	1403
		688	=>	986
		689	=>	696
		690	=>	43
		691	=>	1584
		692	=>	911
		693	=>	1113
		694	=>	1012
		695	=>	381
		696	=>	830
		699	=>	1813
		701	=>	108
		712	=>	336
		713	=>	236
		714	=>	689
		715	=>	569
		716	=>	1670
		717	=>	315
		718	=>	1272
		719	=>	1414
		720	=>	913
		721	=>	1262
		722	=>	522
		723	=>	832
		724	=>	526
		725	=>	1101
		726	=>	261
		727	=>	190
		728	=>	1775
		729	=>	39
		730	=>	1782
		731	=>	975
		733	=>	171
		737	=>	451
		748	=>	591
		749	=>	1194
		750	=>	1768
		751	=>	665
		752	=>	1284
		753	=>	1831
		754	=>	1798
		755	=>	1640
		756	=>	370
		757	=>	1177
		758	=>	1381
		759	=>	687
		760	=>	103
		761	=>	990
		762	=>	113
		763	=>	178
		764	=>	291
		765	=>	491
		766	=>	958
		767	=>	69
		769	=>	3
		773	=>	693
		785	=>	293
		786	=>	1198
		787	=>	1254
		789	=>	566
		790	=>	1062
		791	=>	438
		793	=>	227
		794	=>	627
		795	=>	932
		797	=>	1573
		798	=>	74
		799	=>	1565
		801	=>	1020
		812	=>	1801
		813	=>	983
		815	=>	11
		817	=>	503
		818	=>	1366
		819	=>	1500
		821	=>	219
		822	=>	1148
		823	=>	1086
		825	=>	609
		826	=>	238
		827	=>	1402
		828	=>	546
		841	=>	486
		842	=>	197
		843	=>	1376
		845	=>	1122
		846	=>	1141
		847	=>	419
		849	=>	945
		850	=>	1246
		851	=>	1285
		853	=>	484
		854	=>	1499
		855	=>	1084
		857	=>	348
		858	=>	58
		859	=>	1126
		861	=>	1236
		875	=>	799
		876	=>	1257
		877	=>	788
		879	=>	1182
		880	=>	801
		881	=>	813
		883	=>	727
		884	=>	1594
		885	=>	273
		887	=>	1668
		888	=>	1271
		889	=>	1711
		891	=>	8
		892	=>	949
		893	=>	1579
		895	=>	456
		908	=>	271
		909	=>	1702
		910	=>	267
		914	=>	1058
		915	=>	229
		916	=>	1762
		917	=>	1491
		918	=>	817
		919	=>	542
		920	=>	944
		921	=>	1743
		924	=>	1160
		925	=>	36
		926	=>	494
		927	=>	1375
		928	=>	1554
		929	=>	1676
		930	=>	580
		931	=>	450
		934	=>	924
		935	=>	928
		936	=>	537
		937	=>	1654
		938	=>	1364
		939	=>	1145
		942	=>	481
		943	=>	89
		945	=>	1278
		955	=>	225
		956	=>	674
		958	=>	1791
		962	=>	1590
		963	=>	180
		964	=>	754
		965	=>	1577
		966	=>	1106
		967	=>	880
		968	=>	709
		969	=>	1069
		972	=>	1621
		973	=>	1372
		974	=>	1591
		975	=>	1803
		976	=>	181
		977	=>	167
		978	=>	976
		979	=>	1606
		982	=>	1066
		983	=>	796
		984	=>	860
		985	=>	379
		986	=>	1575
		987	=>	647
		990	=>	1618
		991	=>	855
		992	=>	1788
		1000	=>	1281
		1001	=>	510
		1002	=>	1147
		1003	=>	1317
		1012	=>	1408
		1013	=>	991
		1014	=>	460
		1015	=>	761
		1024	=>	683
		1025	=>	692
		1026	=>	501
		1027	=>	52
		1039	=>	607
		1040	=>	1063
		1041	=>	1091
		1043	=>	418
		1054	=>	132
		1055	=>	402
		1056	=>	1607
		1057	=>	1237
		1066	=>	1220
		1067	=>	117
		1068	=>	1664
		1069	=>	1041
		1079	=>	1437
		1080	=>	23
		1082	=>	1767
		1084	=>	531
		1085	=>	1679
		1086	=>	681
		1088	=>	412
		1089	=>	873
		1090	=>	471
		1092	=>	1394
		1093	=>	658
		1094	=>	276
		1096	=>	431
		1108	=>	56
		1110	=>	1804
		1111	=>	1486
		1112	=>	1686
		1113	=>	1825
		1114	=>	765
		1117	=>	1698
		1118	=>	1824
		1119	=>	610
		1120	=>	100
		1121	=>	17
		1124	=>	1475
		1125	=>	935
		1126	=>	782
		1127	=>	1592
		1128	=>	1427
		1131	=>	930
		1132	=>	820
		1133	=>	740
		1134	=>	1089
		1135	=>	856
		1138	=>	1068
		1141	=>	1481
		1150	=>	489
		1152	=>	1539
		1153	=>	1523
		1154	=>	1359
		1155	=>	303
		1156	=>	454
		1159	=>	1092
		1160	=>	1161
		1161	=>	759
		1162	=>	1715
		1163	=>	377
		1166	=>	916
		1167	=>	429
		1168	=>	1299
		1169	=>	530
		1170	=>	1209
		1173	=>	843
		1174	=>	736
		1175	=>	401
		1176	=>	614
		1177	=>	626
		1180	=>	1736
		1182	=>	97
		1191	=>	888
		1193	=>	1358
		1194	=>	1110
		1195	=>	68
		1196	=>	1323
		1197	=>	1336
		1200	=>	810
		1201	=>	334
		1202	=>	942
		1203	=>	1665
		1204	=>	1746
		1207	=>	18
		1208	=>	1568
		1209	=>	154
		1210	=>	1368
		1211	=>	1602
		1214	=>	127
		1215	=>	184
		1216	=>	719
		1217	=>	1571
		1218	=>	463
		1221	=>	22
		1223	=>	424
		1235	=>	1316
		1237	=>	371
		1238	=>	1766
		1239	=>	550
		1240	=>	1103
		1241	=>	246
		1244	=>	1508
		1245	=>	204
		1246	=>	1674
		1247	=>	249
		1248	=>	742
		1251	=>	558
		1252	=>	266
		1253	=>	357
		1254	=>	1543
		1255	=>	1390
		1258	=>	83
		1259	=>	1155
		1260	=>	1234
		1261	=>	182
		1262	=>	1233
		1265	=>	1090
		1267	=>	1729
		1276	=>	24
		1278	=>	285
		1279	=>	321
		1280	=>	724
		1281	=>	1492
		1282	=>	42
		1285	=>	934
		1286	=>	1548
		1287	=>	119
		1288	=>	237
		1289	=>	1706
		1292	=>	874
		1293	=>	1011
		1294	=>	287
		1295	=>	769
		1296	=>	633
		1299	=>	85
		1300	=>	879
		1301	=>	1353
		1302	=>	1455
		1303	=>	376
		1306	=>	1740
		1308	=>	1496
		1317	=>	262
		1319	=>	411
		1320	=>	836
		1321	=>	1769
		1322	=>	677
		1323	=>	413
		1326	=>	1406
		1327	=>	666
		1328	=>	441
		1329	=>	1564
		1330	=>	1354
		1333	=>	1714
		1334	=>	735
		1335	=>	1549
		1336	=>	143
		1337	=>	616
		1340	=>	1325
		1341	=>	988
		1342	=>	215
		1343	=>	575
		1344	=>	552
		1347	=>	826
		1349	=>	899
		1357	=>	1789
		1358	=>	1675
		1359	=>	1442
		1360	=>	1777
		1361	=>	337
		1362	=>	1078
		1363	=>	387
		1364	=>	149
		1365	=>	1380
		1366	=>	915
		1367	=>	859
		1368	=>	1302
		1369	=>	1176
		1370	=>	773
		1371	=>	1144
		1372	=>	854
		1373	=>	682
		1383	=>	1656
		1384	=>	374
		1385	=>	1574
		1386	=>	1418
		1387	=>	1332
		1388	=>	1297
		1389	=>	1703
		1390	=>	914
		1391	=>	1614
		1392	=>	475
		1393	=>	31
		1394	=>	952
		1395	=>	1435
		1396	=>	1764
		1397	=>	1800
		1398	=>	170
		1399	=>	187
		1408	=>	279
		1409	=>	540
		1410	=>	716
		1411	=>	728
		1413	=>	1720
		1414	=>	1707
		1415	=>	1040
		1416	=>	900
		1418	=>	1307
		1419	=>	1036
		1420	=>	1644
		1421	=>	1206
		1423	=>	1290
		1424	=>	1211
		1425	=>	333
		1426	=>	218
		1427	=>	621
		1435	=>	1449
		1436	=>	201
		1437	=>	1157
		1438	=>	1156
		1440	=>	1138
		1441	=>	4
		1442	=>	48
		1443	=>	786
		1445	=>	673
		1446	=>	867
		1447	=>	459
		1448	=>	384
		1450	=>	838
		1451	=>	281
		1452	=>	40
		1453	=>	107
		1454	=>	311
		1464	=>	1125
		1465	=>	1763
		1466	=>	1270
		1467	=>	744
		1469	=>	106
		1470	=>	551
		1471	=>	1527
		1472	=>	529
		1474	=>	1043
		1475	=>	372
		1476	=>	79
		1477	=>	1050
		1479	=>	500
		1480	=>	774
		1481	=>	1497
		1482	=>	644
		1483	=>	708
		1493	=>	554
		1494	=>	1797
		1495	=>	979
		1496	=>	168
		1498	=>	434
		1499	=>	502
		1500	=>	635
		1501	=>	120
		1503	=>	1542
		1504	=>	1255
		1505	=>	1667
		1506	=>	690
		1508	=>	1053
		1509	=>	620
		1510	=>	212
		1511	=>	685
		1512	=>	1629
		1521	=>	258
		1522	=>	1072
		1523	=>	174
		1525	=>	1483
		1526	=>	1167
		1527	=>	760
		1529	=>	1622
		1530	=>	516
		1531	=>	1570
		1533	=>	82
		1534	=>	698
		1535	=>	846
		1537	=>	726
		1538	=>	1479
		1539	=>	1021
		1541	=>	1191
		1542	=>	203
		1543	=>	1701
		1544	=>	1048
		1552	=>	1467
		1553	=>	1277
		1554	=>	1196
		1555	=>	1166
		1556	=>	144
		1558	=>	895
		1559	=>	936
		1560	=>	1269
		1561	=>	659
		1563	=>	1617
		1564	=>	1790
		1565	=>	1704
		1566	=>	487
		1568	=>	883
		1569	=>	458
		1570	=>	1779
		1571	=>	1819
		1573	=>	497
		1574	=>	523
		1584	=>	345
		1585	=>	256
		1586	=>	76
		1587	=>	55
		1588	=>	648
		1589	=>	1044
		1590	=>	1340
		1591	=>	46
		1592	=>	941
		1593	=>	205
		1594	=>	1174
		1595	=>	1150
		1596	=>	259
		1597	=>	756
		1598	=>	965
		1599	=>	777
		1600	=>	791
		1611	=>	521
		1612	=>	425
		1613	=>	1719
		1614	=>	1004
		1615	=>	1027
		1626	=>	217
		1627	=>	839
		1628	=>	1488
		1629	=>	1705
		1630	=>	1093
		1639	=>	1159
		1640	=>	955
		1641	=>	713
		1643	=>	433
		1644	=>	1397
		1645	=>	805
		1647	=>	240
		1648	=>	1717
		1649	=>	741
		1651	=>	1135
		1652	=>	1446
		1653	=>	1260
		1655	=>	1061
		1656	=>	825
		1657	=>	678
		1658	=>	1142
		1659	=>	1605
		1668	=>	993
		1670	=>	1751
		1671	=>	339
		1672	=>	632
		1673	=>	660
		1675	=>	881
		1676	=>	1007
		1677	=>	1452
		1679	=>	1151
		1680	=>	1530
		1681	=>	1259
		1683	=>	1709
		1684	=>	455
		1685	=>	1051
		1686	=>	298
		1688	=>	361
		1689	=>	751
		1690	=>	124
		1692	=>	1608
		1693	=>	1242
		1694	=>	973
		1696	=>	1192
		1697	=>	1428
		1698	=>	1821
		1700	=>	1723
		1701	=>	404
		1702	=>	841
		1704	=>	175
		1705	=>	347
		1706	=>	764
		1709	=>	747
		1710	=>	470
		1711	=>	904
		1713	=>	1137
		1714	=>	1301
		1715	=>	1399
		1716	=>	1520
		1717	=>	953
		1726	=>	1374
		1727	=>	1757
		1728	=>	1355
		1730	=>	1660
		1731	=>	1495
		1732	=>	862
		1734	=>	1019
		1735	=>	169
		1736	=>	105
		1738	=>	1441
		1739	=>	700
		1740	=>	265
		1742	=>	1
		1743	=>	445
		1744	=>	34
		1745	=>	1472
		1746	=>	1588
		1755	=>	1422
		1757	=>	732
		1758	=>	59
		1759	=>	1806
		1760	=>	1516
		1762	=>	997
		1763	=>	1186
		1764	=>	1009
		1766	=>	1154
		1767	=>	1485
		1768	=>	1111
		1770	=>	1409
		1771	=>	1361
		1772	=>	837
		1773	=>	1829
		1775	=>	21
		1776	=>	1033
		1777	=>	1351
		1779	=>	1581
		1780	=>	1681
		1781	=>	1669
		1783	=>	804
		1784	=>	1219
		1785	=>	706
		1787	=>	1079
		1788	=>	1003
		1789	=>	1642
		1791	=>	1300
		1792	=>	1391
		1793	=>	1756
		1795	=>	511
		1796	=>	1522
		1797	=>	1737
		1799	=>	663
		1800	=>	1560
		1801	=>	1832
		1802	=>	870
		1803	=>	329
		1814	=>	1721
		1815	=>	1546
		1816	=>	1663
		1818	=>	974
		1819	=>	536
		1820	=>	1631
		1822	=>	385
		1823	=>	1283
		1824	=>	858
		1826	=>	306
		1827	=>	662
		1828	=>	73
		1830	=>	1293
		1831	=>	193
		1832	=>	1028
		1833	=>	1395
		1834	=>	44
		1845	=>	1168
		1846	=>	1098
		1847	=>	784
		1849	=>	449
		1850	=>	962
		1851	=>	1173
		1853	=>	1253
		1854	=>	589
		1855	=>	688
		1857	=>	656
		1858	=>	263
		1859	=>	1745
		1861	=>	1718
		1862	=>	388
		1863	=>	1240
		1864	=>	101
		1865	=>	1378
		1876	=>	71
		1877	=>	1695
		1878	=>	1251
		1880	=>	819
		1881	=>	1065
		1882	=>	623
		1884	=>	340
		1885	=>	1553
		1886	=>	1005
		1888	=>	1822
		1889	=>	1222
		1890	=>	216
		1892	=>	185
		1893	=>	1407
		1894	=>	758
		1895	=>	1438
		1896	=>	1016
		1905	=>	1308
		1906	=>	16
		1907	=>	1252
		1908	=>	20
		1910	=>	559
		1911	=>	1755
		1912	=>	1064
		1913	=>	848
		1915	=>	1525
		1916	=>	887
		1917	=>	453
		1918	=>	967
		1920	=>	985
		1921	=>	1287
		1922	=>	861
		1923	=>	1232
		1924	=>	1190
		1933	=>	574
		1934	=>	498
		1935	=>	1245
		1936	=>	707
		1938	=>	672
		1939	=>	1504
		1940	=>	795
		1941	=>	561
		1943	=>	1318
		1944	=>	1282
		1945	=>	576
		1946	=>	1363
		1948	=>	1039
		1949	=>	88
		1950	=>	654
		1951	=>	1265
		1952	=>	1812
		1962	=>	1286
		1963	=>	1783
		1970	=>	1820
		1971	=>	1129
		1982	=>	1165
		1983	=>	477
		1988	=>	957
		1990	=>	1567
		1991	=>	289
		1992	=>	211
		1993	=>	1127
		1995	=>	995
		1996	=>	247
		1997	=>	270
		1998	=>	1203
		2000	=>	603
		2001	=>	323
		2002	=>	639
		2003	=>	1193
		2005	=>	1417
		2006	=>	390
		2007	=>	25
		2008	=>	313
		2011	=>	1580
		2013	=>	1185
		2017	=>	1459
		2018	=>	1630
		2019	=>	824
		2021	=>	1827
		2022	=>	1433
		2023	=>	763
		2024	=>	1589
		2026	=>	1478
		2027	=>	1451
		2028	=>	1295
		2029	=>	505
		2031	=>	1662
		2032	=>	1795
		2033	=>	1029
		2034	=>	577
		2036	=>	1613
		2037	=>	157
		2038	=>	1802
		2039	=>	517
		2041	=>	1429
		2066	=>	495
		2074	=>	353
		2075	=>	1555
		2078	=>	213
		2079	=>	1244
		2080	=>	524
		2083	=>	1505
		2084	=>	301
		2085	=>	1434
		2086	=>	1343
		2087	=>	1401
		2088	=>	1315
		2093	=>	1116
		2094	=>	1722
		2096	=>	233
		2104	=>	652
		2107	=>	909 and 1392
		2113	=>	605 and 1107
		2114	=>	1780
		2115	=>	1624
		2116	=>	1566
		2117	=>	224
		2118	=>	95
		2119	=>	1464
		2120	=>	1652
		2121	=>	1458
		2122	=>	123
		2124	=>	885
		2129	=>	1180
		2130	=>	206
		2131	=>	28 and 1601
		2132	=>	865
		2133	=>	1781
		2134	=>	1593
		2135	=>	845
		2136	=>	1671
		2137	=>	1447
		2138	=>	1599
		2139	=>	956
		2140	=>	814
		2142	=>	462
		2145	=>	1416
		2146	=>	1415
		2147	=>	1634
		2151	=>	966
		2152	=>	439
		2156	=>	1413
		2158	=>	1814
		2159	=>	1052
		2160	=>	637
		2161	=>	155
		2162	=>	1787
		2163	=>	368
		2164	=>	1243
		2168	=>	274
		2172	=>	142
		2175	=>	428
		2176	=>	1214
		2180	=>	748
		2181	=>	1544
		2182	=>	1073
		2183	=>	737
		2184	=>	1550
		2185	=>	649
		2186	=>	903
		2192	=>	946
		2222	=>	835
		2225	=>	1082 and 1432
		2227	=>	320
		2228	=>	939
		2231	=>	426 and 1501
		2234	=>	549
		2235	=>	739
		2236	=>	1461
		2237	=>	448
		2239	=>	1013
		2240	=>	81 and 794
		2241	=>	1389
		2244	=>	1208
		2245	=>	851
		2247	=>	126
		2252	=>	1771
		2253	=>	1035
		2255	=>	1102
		2256	=>	296
		2259	=>	6
		2260	=>	1149
		2264	=>	159
		2265	=>	136
		2270	=>	437
		2282	=>	355
		2284	=>	165
		2286	=>	421
		2288	=>	755
		2291	=>	406
		2301	=>	667
		2302	=>	400
		2303	=>	1136
		2304	=>	1152
		2306	=>	469
		2307	=>	1810
		2308	=>	131
		2309	=>	629
		2311	=>	176
		2312	=>	1748
		2313	=>	1509
		2314	=>	1830
		2316	=>	989
		2317	=>	1349
		2318	=>	64
		2319	=>	186
		2320	=>	161
		2329	=>	1169
		2330	=>	290
		2331	=>	680
		2332	=>	1448
		2334	=>	444
		2335	=>	992
		2336	=>	538
		2337	=>	738
		2339	=>	1344
		2340	=>	378
		2341	=>	1218
		2342	=>	1109
		2344	=>	457
		2345	=>	1517
		2346	=>	134
		2347	=>	1700
		2348	=>	723
		2359	=>	1047
		2360	=>	1648
		2361	=>	1313
		2362	=>	1533
		2364	=>	1076
		2365	=>	1716
		2366	=>	563
		2367	=>	655
		2369	=>	248
		2370	=>	468
		2371	=>	1261
		2372	=>	292
		2374	=>	1641
		2375	=>	1431
		2376	=>	1710
		2377	=>	1487
		2378	=>	255
		2389	=>	403
		2390	=>	389
		2391	=>	592
		2392	=>	565
		2394	=>	1784
		2395	=>	398
		2396	=>	1547
		2397	=>	1335
		2399	=>	382
		2400	=>	1230
		2401	=>	1067
		2402	=>	195
		2404	=>	179
		2405	=>	571
		2406	=>	1595
		2407	=>	476
		2408	=>	209
		2420	=>	634
		2421	=>	1018
		2422	=>	1503
		2423	=>	1369
		2425	=>	1026
		2426	=>	636
		2427	=>	461
		2428	=>	1440
		2430	=>	1217
		2431	=>	1042
		2432	=>	1528
		2433	=>	807
		2435	=>	1692
		2436	=>	718
		2437	=>	619
		2438	=>	630
		2439	=>	138
		2452	=>	834
		2453	=>	890
		2454	=>	1046
		2455	=>	606
		2457	=>	600
		2458	=>	1258
		2459	=>	1360
		2460	=>	1163
		2462	=>	302
		2463	=>	876
		2464	=>	268
		2465	=>	156
		2467	=>	921
		2468	=>	908
		2469	=>	1805
		2470	=>	1210
		2471	=>	163
		2481	=>	1524
		2482	=>	1264
		2483	=>	1510
		2484	=>	164
		2495	=>	743
		2496	=>	897
		2498	=>	1651
		2499	=>	1239
		2500	=>	752
		2501	=>	1288
		2503	=>	570
		2504	=>	1583
		2505	=>	488
		2506	=>	12
		2508	=>	564
		2509	=>	1685
		2510	=>	1333
		2511	=>	731
		2513	=>	1490
		2514	=>	1450
		2515	=>	395
		2516	=>	1587
		2517	=>	1130
		2528	=>	812
		2529	=>	1653
		2531	=>	599
		2532	=>	918
		2533	=>	640
		2534	=>	598
		2536	=>	1439
		2537	=>	1201
		2538	=>	1256
		2539	=>	243
		2541	=>	749
		2542	=>	513
		2543	=>	344
		2544	=>	228
		2546	=>	1117
		2547	=>	584
		2548	=>	160
		2549	=>	800
		2550	=>	1342
		2561	=>	177
		2562	=>	1331
		2564	=>	959
		2565	=>	1785
		2566	=>	1267
		2567	=>	981
		2569	=>	1337
		2570	=>	560
		2571	=>	1025
		2572	=>	753
		2574	=>	852
		2575	=>	617
		2576	=>	84
		2577	=>	32
		2579	=>	26
		2580	=>	902
		2581	=>	657
		2582	=>	436
		2583	=>	803
		2591	=>	304
		2592	=>	853
		2593	=>	7
		2594	=>	1735
		2595	=>	57
		2596	=>	1480
		2597	=>	29
		2598	=>	1733
		2599	=>	409
		2600	=>	1786
		2601	=>	1833
		2602	=>	725
		2603	=>	1493
		2604	=>	326
		2605	=>	317
		2606	=>	1329
		2607	=>	863
		2617	=>	1794
		2618	=>	1732
		2619	=>	38
		2620	=>	823
		2621	=>	133
		2622	=>	651
		2623	=>	1628
		2624	=>	1070
		2625	=>	392
		2626	=>	555
		2627	=>	254
		2628	=>	356
		2629	=>	1563
		2630	=>	1465
		2631	=>	583
		2632	=>	568
		2633	=>	61
		2647	=>	312
		2649	=>	152
		2651	=>	1006
		2653	=>	535
		2656	=>	641
		2658	=>	1635
		2660	=>	1727
		2662	=>	710
		2665	=>	466
		2667	=>	1164
		2669	=>	14
		2671	=>	1352
		2674	=>	297
		2676	=>	1393
		2678	=>	91
		2680	=>	578
		2683	=>	1133
		2684	=>	1322
		2685	=>	1423
		2686	=>	1765
		2687	=>	771
		2697	=>	1538
		2699	=>	882
		2701	=>	198
		2703	=>	1551
		2705	=>	1426
		2708	=>	896
		2710	=>	1304
		2712	=>	947
		2714	=>	1569
		2717	=>	295
		2719	=>	557
		2721	=>	1638
		2723	=>	33
		2726	=>	691
		2728	=>	1170
		2730	=>	891
		2732	=>	729
		2741	=>	650
		2742	=>	585
		2743	=>	172
		2744	=>	1049
		2746	=>	833
		2747	=>	1071
		2748	=>	668
		2749	=>	1128
		2751	=>	1014
		2752	=>	1561
		2753	=>	414
		2754	=>	926
		2756	=>	1124
		2757	=>	590
		2758	=>	884
		2759	=>	405
		2761	=>	653
		2762	=>	1693
		2763	=>	1521
		2764	=>	1289
		2767	=>	1371
		2777	=>	45
		2778	=>	847
		2779	=>	1345
		2780	=>	150
		2781	=>	875
		2783	=>	562
		2784	=>	50
		2785	=>	1235
		2786	=>	1457
		2788	=>	1400
		2789	=>	1225
		2790	=>	1474
		2791	=>	768
		2793	=>	264
		2794	=>	822
		2795	=>	1559
		2796	=>	920
		2803	=>	151
		2804	=>	467
		2805	=>	712
		2806	=>	1045
		2808	=>	849
		2809	=>	1347
		2810	=>	493
		2811	=>	10
		2813	=>	1248
		2814	=>	1512
		2815	=>	391
		2816	=>	1294
		2818	=>	1096
		2819	=>	1350
		2820	=>	242
		2821	=>	1099
		2823	=>	675
		2824	=>	645
		2825	=>	1603
		2826	=>	1140
		2829	=>	435
		2841	=>	1100
		2842	=>	528
		2843	=>	324
		2844	=>	280
		2845	=>	828
		2847	=>	305
		2848	=>	383
		2849	=>	1620
		2850	=>	1121
		2852	=>	1001
		2853	=>	1612
		2854	=>	1753
		2855	=>	1310
		2857	=>	1462
		2858	=>	1770
		2859	=>	1741
		2860	=>	938
		2867	=>	586
		2868	=>	1348
		2869	=>	1002
		2870	=>	1037
		2872	=>	1728
		2873	=>	730
		2874	=>	922
		2875	=>	188
		2877	=>	226
		2878	=>	269
		2879	=>	508
		2880	=>	780
		2882	=>	386
		2883	=>	479
		2884	=>	1212
		2885	=>	1330
		2887	=>	1456
		2888	=>	1643
		2889	=>	1057
		2890	=>	1799
		2892	=>	646
		2903	=>	1188
		2904	=>	139
		2905	=>	1200
		2906	=>	115
		2907	=>	948
		2909	=>	582
		2910	=>	506
		2911	=>	1321
		2912	=>	66
		2914	=>	1529
		2915	=>	1280
		2916	=>	715
		2917	=>	686
		2919	=>	308
		2920	=>	1207
		2921	=>	99
		2922	=>	857
		2931	=>	1506
		2932	=>	1749
		2933	=>	840
		2934	=>	1088
		2936	=>	47
		2937	=>	722
		2938	=>	396
		2939	=>	1507
		2941	=>	1120
		2942	=>	1377
		2943	=>	116
		2944	=>	1199
		2946	=>	766
		2947	=>	929
		2948	=>	1224
		2949	=>	310
		2951	=>	1776
		2952	=>	1514
		2953	=>	1213
		2954	=>	1759
		2957	=>	999
		2969	=>	250
		2976	=>	343
		2990	=>	1696
		2991	=>	118
		2998	=>	365
		2999	=>	394
		3006	=>	1659
		3021	=>	1453
		3022	=>	102
		3024	=>	951
		3025	=>	194
		3027	=>	1205
		3028	=>	1430
		3030	=>	829
		3031	=>	512
		3033	=>	1796
		3034	=>	509
		3036	=>	499
		3037	=>	19
		3039	=>	1146
		3040	=>	220
		3042	=>	697
		3043	=>	245
		3045	=>	260
		3046	=>	699
		3048	=>	75
		3049	=>	483
		3051	=>	1411
		3052	=>	624
		3054	=>	1085
		3055	=>	129
		3057	=>	1684
		3058	=>	146
		3060	=>	541
		3061	=>	1385
		3063	=>	1708
		3064	=>	1678
		3066	=>	1241
		3067	=>	1454
		3069	=>	533
		3081	=>	63
		3082	=>	1309
		3083	=>	998
		3084	=>	408
		3085	=>	1398
		3086	=>	335
		3087	=>	354
		3088	=>	1444
		3089	=>	35
		3090	=>	342
		3091	=>	776
		3092	=>	969
		3093	=>	907
		3094	=>	802
		3095	=>	906
		3096	=>	684
		3097	=>	705
		3098	=>	1697
		3111	=>	27
		3113	=>	375
		3115	=>	1649
		3117	=>	940
		3119	=>	351
		3120	=>	1773
		3121	=>	1038
		3122	=>	1171
		3133	=>	1178
		3135	=>	1223
		3137	=>	1249
		3139	=>	331
		3141	=>	1469
		3142	=>	1627
		3143	=>	1015
		3144	=>	1291
		3155	=>	37
		3157	=>	1162
		3159	=>	547
		3161	=>	1611
		3163	=>	252
		3164	=>	567
		3165	=>	1600
		3166	=>	1712
		3177	=>	745
		3179	=>	410
		3181	=>	257
		3183	=>	821
		3185	=>	631
		3186	=>	987
		3187	=>	1585
		3188	=>	1647
		3201	=>	1680
		3202	=>	1228
		3203	=>	110
		3204	=>	950
		3205	=>	1576
		3207	=>	362
		3219	=>	364
		3220	=>	1646
		3221	=>	341
		3222	=>	1187
		3223	=>	1477
		3224	=>	1677
		3238	=>	1216
		3239	=>	173
		3240	=>	593
		3241	=>	330
		3242	=>	318
		3243	=>	1405
		3255	=>	892
		3256	=>	1535
		3257	=>	579
		3258	=>	1610
		3259	=>	1074
		3260	=>	234
		3272	=>	1158
		3273	=>	1774
		3274	=>	1744
		3275	=>	465
		3276	=>	440
		3277	=>	92
		3289	=>	1808
		3290	=>	923
		3291	=>	1731
		3292	=>	130
		3293	=>	1562
		3294	=>	191
		3306	=>	806
		3307	=>	1811
		3308	=>	1357
		3309	=>	137
		3310	=>	980
		3311	=>	779
		3323	=>	798
		3324	=>	1274
		3325	=>	192
		3326	=>	1699
		3327	=>	1229
		3328	=>	1534
		3341	=>	1268
		3342	=>	601
		3344	=>	1424
		3346	=>	960
		3347	=>	1738
		3348	=>	397
		3350	=>	615
		3351	=>	894
		3352	=>	961
		3354	=>	750
		3355	=>	1339
		3356	=>	1532
		3358	=>	1482
		3374	=>	618
		3375	=>	772
		3376	=>	762
		3378	=>	196
		3379	=>	1231
		3380	=>	147
		3382	=>	278
		3383	=>	1275
		3384	=>	778
		3386	=>	818
		3387	=>	1410
		3388	=>	1419
		3389	=>	94
		3402	=>	60
		3403	=>	432
		3404	=>	588
		3406	=>	1650
		3407	=>	703
		3408	=>	842
		3410	=>	622
		3411	=>	1793
		3412	=>	452
		3414	=>	314
		3415	=>	553
		3416	=>	1153
		3418	=>	1818
		3433	=>	927
		3434	=>	352
		3435	=>	1792
		3437	=>	221
		3438	=>	1572
		3439	=>	1032
		3441	=>	346
		3442	=>	373
		3443	=>	482
		3445	=>	162
		3446	=>	785
		3447	=>	734
		3449	=>	1420
		3463	=>	978
		3464	=>	1221
		3466	=>	1502
		3468	=>	1139
		3469	=>	1682
		3470	=>	1619
		3471	=>	1367
		3473	=>	877
		3474	=>	1081
		3475	=>	1460
		3477	=>	1373
		3478	=>	1083
		3479	=>	984
		3481	=>	447
		3482	=>	671
		3483	=>	443
		3485	=>	135
		3486	=>	1184
		3487	=>	1108
		3489	=>	611
		3490	=>	230
		3491	=>	1582
		3493	=>	1615
		3500	=>	964
		3501	=>	141
		3502	=>	1306
		3503	=>	210
		3504	=>	114
		3505	=>	338
		3506	=>	792
		3507	=>	1365
		3508	=>	1132
		3509	=>	1095
		3510	=>	1312
		3511	=>	746
		3512	=>	1690
		3513	=>	594
		3514	=>	244
		3515	=>	1388
		3516	=>	869
		3523	=>	299
		3524	=>	1691
		3525	=>	831
		3526	=>	125
		3527	=>	253
		3528	=>	112
		3529	=>	62
		3530	=>	145
		3531	=>	1118
		3532	=>	1094
		3533	=>	77
		3534	=>	954
		3535	=>	1382
		3536	=>	430
		3537	=>	1250
		3538	=>	767
		3539	=>	1730
		3548	=>	442
		3549	=>	679
		3550	=>	1324
		3551	=>	1123
		3552	=>	275
		3553	=>	1183
		3554	=>	1023
		3555	=>	363
		3556	=>	1034
		3557	=>	815
		3558	=>	573
		3559	=>	1623
		3560	=>	1104
		3561	=>	1816
		3562	=>	1683
		3563	=>	933
		3564	=>	534
		3566	=>	1556
		3567	=>	65
		3568	=>	1054
		3569	=>	676
		3571	=>	1303
		3572	=>	781
		3573	=>	1598
		3575	=>	643
		3576	=>	925
		3577	=>	67
		3579	=>	931
		3581	=>	912
		3593	=>	602
		3595	=>	1726
		3596	=>	366
		3598	=>	543
		3599	=>	1541
		3601	=>	937
		3612	=>	1526
		3624	=>	1687
		3625	=>	1305
		3635	=>	1666
		3646	=>	1296
		3647	=>	905
		3657	=>	1655
		3668	=>	322
		3669	=>	202
		3679	=>	733
		3690	=>	72
		3691	=>	1557
		3701	=>	1828
		3712	=>	349
		3713	=>	1181
		3723	=>	96
		3735	=>	1328
		3736	=>	1134
		3746	=>	1189
		3757	=>	121
		3758	=>	1758
		3768	=>	316
		3779	=>	1724
		3780	=>	1276
		3790	=>	1558
		3801	=>	472
		3802	=>	70
		3812	=>	54
		3823	=>	1673
		3824	=>	878
		3834	=>	1362
		3845	=>	977
		3846	=>	30
		3856	=>	1772
		3867	=>	982
		3868	=>	1754
		3878	=>	1077
		3889	=>	1197
		3890	=>	519
		3900	=>	1327
		3911	=>	970
		3912	=>	473
		3923	=>	1227
		3934	=>	1404
		3935	=>	1826
		3945	=>	1578
		3956	=>	809
		3957	=>	720

Class: public javax.vecmath.Matrix4f	=>	a.a.U
	Source: "Matrix4f.java"
	FieldsOf: javax.vecmath.Matrix4f
		public float m00	=>	j
		public float m01	=>	i
		public float m02	=>	l
		public float m03	=>	d
		public float m10	=>	p
		public float m11	=>	c
		public float m12	=>	f
		public float m13	=>	k
		public float m20	=>	e
		public float m21	=>	g
		public float m22	=>	b
		public float m23	=>	m
		public float m30	=>	h
		public float m31	=>	n
		public float m32	=>	a
		public float m33	=>	o
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Matrix4f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix3f, javax.vecmath.Vector3f, float) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Matrix4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4f, javax.vecmath.Vector3f, float) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void add(float)	=>	e(float)
		public final void add(float, javax.vecmath.Matrix4f)	=>	b(float, a.a.U)
		public final void add(javax.vecmath.Matrix4f)	=>	a(a.a.U)
		public final void add(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	f(a.a.U, a.a.U)
		public java.lang.Object clone() 	SignatureNotChanged
		public final float determinant()	=>	e()
		public boolean epsilonEquals(javax.vecmath.Matrix4f, float)	=>	a(a.a.U, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Matrix4f)	=>	h(a.a.U)
		public final void get(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void get(javax.vecmath.Matrix3f)	=>	d(a.a.o)
		public final float get(javax.vecmath.Matrix3f, javax.vecmath.Vector3f)	=>	a(a.a.o, a.a.H)
		public final void get(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void get(javax.vecmath.Vector3f)	=>	d(a.a.H)
		public final void getColumn(int, float[])	=>	c(int, float[])
		public final void getColumn(int, javax.vecmath.Vector4f)	=>	b(int, a.a.z)
		public final float getElement(int, int)	=>	a(int, int)
		public final float getM00()	=>	r()
		public final float getM01()	=>	v()
		public final float getM02()	=>	g()
		public final float getM03()	=>	d()
		public final float getM10()	=>	s()
		public final float getM11()	=>	j()
		public final float getM12()	=>	f()
		public final float getM13()	=>	u()
		public final float getM20()	=>	p()
		public final float getM21()	=>	k()
		public final float getM22()	=>	c()
		public final float getM23()	=>	i()
		public final float getM30()	=>	n()
		public final float getM31()	=>	a()
		public final float getM32()	=>	o()
		public final float getM33()	=>	h()
		public final void getRotationScale(javax.vecmath.Matrix3f)	=>	b(a.a.o)
		public final void getRow(int, float[])	=>	a(int, float[])
		public final void getRow(int, javax.vecmath.Vector4f)	=>	c(int, a.a.z)
		public final float getScale()	=>	l()
		private final void getScaleRotate(double[], double[])	=>	a(double[], double[])
		public int hashCode() 	SignatureNotChanged
		public final void invert()	=>	b()
		public final void invert(javax.vecmath.Matrix4f)	=>	c(a.a.U)
		final void invertGeneral(javax.vecmath.Matrix4f)	=>	b(a.a.U)
		static void luBacksubstitution(double[], int[], double[])	=>	a(double[], int[], double[])
		static boolean luDecomposition(double[], int[])	=>	a(double[], int[])
		public final void mul(float)	=>	r(float)
		public final void mul(float, javax.vecmath.Matrix4f)	=>	a(float, a.a.U)
		public final void mul(javax.vecmath.Matrix4f)	=>	i(a.a.U)
		public final void mul(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	e(a.a.U, a.a.U)
		public final void mulTransposeBoth(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	b(a.a.U, a.a.U)
		public final void mulTransposeLeft(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	d(a.a.U, a.a.U)
		public final void mulTransposeRight(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	c(a.a.U, a.a.U)
		public final void negate()	=>	t()
		public final void negate(javax.vecmath.Matrix4f)	=>	g(a.a.U)
		public final void rotX(float)	=>	h(float)
		public final void rotY(float)	=>	d(float)
		public final void rotZ(float)	=>	q(float)
		public final void set(float)	=>	s(float)
		public final void set(float, javax.vecmath.Vector3f)	=>	a(float, a.a.H)
		public final void set(float[])	=>	a(float[])
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	b(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	b(a.a.T)
		public final void set(javax.vecmath.Matrix3d, javax.vecmath.Vector3d, double)	=>	a(a.a.T, a.a.N, double)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Matrix3f, javax.vecmath.Vector3f, float)	=>	a(a.a.o, a.a.H, float)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	f(a.a.U)
		public final void set(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void set(javax.vecmath.Quat4d, javax.vecmath.Vector3d, double)	=>	a(a.a.l, a.a.N, double)
		public final void set(javax.vecmath.Quat4f)	=>	c(a.a.x)
		public final void set(javax.vecmath.Quat4f, javax.vecmath.Vector3f, float)	=>	a(a.a.x, a.a.H, float)
		public final void set(javax.vecmath.Vector3f)	=>	a(a.a.H)
		public final void set(javax.vecmath.Vector3f, float)	=>	a(a.a.H, float)
		public final void setColumn(int, float, float, float, float)	=>	b(int, float, float, float, float)
		public final void setColumn(int, float[])	=>	d(int, float[])
		public final void setColumn(int, javax.vecmath.Vector4f)	=>	d(int, a.a.z)
		public final void setElement(int, int, float)	=>	a(int, int, float)
		public final void setIdentity()	=>	m()
		public final void setM00(float)	=>	f(float)
		public final void setM01(float)	=>	t(float)
		public final void setM02(float)	=>	u(float)
		public final void setM03(float)	=>	j(float)
		public final void setM10(float)	=>	a(float)
		public final void setM11(float)	=>	i(float)
		public final void setM12(float)	=>	w(float)
		public final void setM13(float)	=>	l(float)
		public final void setM20(float)	=>	k(float)
		public final void setM21(float)	=>	c(float)
		public final void setM22(float)	=>	p(float)
		public final void setM23(float)	=>	n(float)
		public final void setM30(float)	=>	m(float)
		public final void setM31(float)	=>	g(float)
		public final void setM32(float)	=>	b(float)
		public final void setM33(float)	=>	v(float)
		public final void setRotation(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void setRotation(javax.vecmath.Matrix3d)	=>	c(a.a.T)
		public final void setRotation(javax.vecmath.Matrix3f)	=>	c(a.a.o)
		public final void setRotation(javax.vecmath.Quat4d)	=>	b(a.a.l)
		public final void setRotation(javax.vecmath.Quat4f)	=>	b(a.a.x)
		public final void setRotationScale(javax.vecmath.Matrix3f)	=>	e(a.a.o)
		public final void setRow(int, float, float, float, float)	=>	a(int, float, float, float, float)
		public final void setRow(int, float[])	=>	b(int, float[])
		public final void setRow(int, javax.vecmath.Vector4f)	=>	a(int, a.a.z)
		public final void setScale(float)	=>	o(float)
		public final void setTranslation(javax.vecmath.Vector3f)	=>	b(a.a.H)
		public final void setZero()	=>	w()
		public final void sub(javax.vecmath.Matrix4f)	=>	d(a.a.U)
		public final void sub(javax.vecmath.Matrix4f, javax.vecmath.Matrix4f)	=>	a(a.a.U, a.a.U)
		public java.lang.String toString() 	SignatureNotChanged
		public final void transform(javax.vecmath.Point3f)	=>	a(a.a.F)
		public final void transform(javax.vecmath.Point3f, javax.vecmath.Point3f)	=>	a(a.a.F, a.a.F)
		public final void transform(javax.vecmath.Tuple4f)	=>	a(a.a.u)
		public final void transform(javax.vecmath.Tuple4f, javax.vecmath.Tuple4f)	=>	a(a.a.u, a.a.u)
		public final void transform(javax.vecmath.Vector3f)	=>	c(a.a.H)
		public final void transform(javax.vecmath.Vector3f, javax.vecmath.Vector3f)	=>	a(a.a.H, a.a.H)
		public final void transpose()	=>	q()
		public final void transpose(javax.vecmath.Matrix4f)	=>	e(a.a.U)
	LineNumbersOf: javax.vecmath.Matrix4f
		155	=>	1237
		156	=>	491
		157	=>	1413
		158	=>	699
		159	=>	38
		161	=>	1432
		162	=>	310
		163	=>	629
		164	=>	1614
		166	=>	889
		167	=>	1101
		168	=>	1373
		169	=>	646
		171	=>	1383
		172	=>	240
		173	=>	968
		174	=>	1497
		176	=>	410
		184	=>	836
		185	=>	1657
		186	=>	1624
		187	=>	576
		188	=>	1329
		190	=>	402
		191	=>	846
		192	=>	424
		193	=>	173
		195	=>	458
		196	=>	983
		197	=>	1561
		198	=>	1103
		200	=>	625
		201	=>	1107
		202	=>	1088
		203	=>	308
		205	=>	76
		217	=>	915
		218	=>	1195
		219	=>	542
		220	=>	1021
		222	=>	1258
		223	=>	677
		224	=>	1098
		226	=>	327
		227	=>	1272
		228	=>	1126
		230	=>	1160
		231	=>	35
		232	=>	25
		234	=>	951
		235	=>	758
		236	=>	1545
		237	=>	834
		239	=>	641
		247	=>	263
		248	=>	320
		249	=>	866
		250	=>	1025
		251	=>	1650
		253	=>	449
		254	=>	873
		255	=>	293
		256	=>	214
		258	=>	404
		259	=>	722
		260	=>	1120
		261	=>	60
		263	=>	230
		264	=>	1068
		265	=>	703
		266	=>	401
		268	=>	899
		277	=>	686
		278	=>	430
		279	=>	1145
		280	=>	1386
		281	=>	413
		283	=>	441
		284	=>	1512
		285	=>	1016
		286	=>	903
		288	=>	113
		289	=>	784
		290	=>	255
		291	=>	358
		293	=>	330
		294	=>	1324
		295	=>	1218
		296	=>	317
		298	=>	8
		311	=>	1443
		312	=>	1360
		313	=>	1467
		314	=>	205
		315	=>	328
		317	=>	628
		318	=>	154
		319	=>	597
		320	=>	1156
		322	=>	426
		323	=>	554
		324	=>	1602
		325	=>	690
		327	=>	245
		328	=>	348
		329	=>	553
		330	=>	1649
		332	=>	1093
		339	=>	123
		340	=>	1500
		341	=>	62
		342	=>	1359
		343	=>	374
		345	=>	933
		346	=>	203
		347	=>	1238
		348	=>	223
		350	=>	895
		351	=>	709
		352	=>	565
		353	=>	543
		355	=>	1501
		356	=>	1427
		357	=>	558
		358	=>	1604
		360	=>	1667
		367	=>	502
		379	=>	1481
		380	=>	367
		381	=>	429
		382	=>	405
		384	=>	346
		385	=>	1393
		386	=>	518
		387	=>	1441
		389	=>	1023
		390	=>	170
		391	=>	816
		392	=>	1488
		394	=>	1051
		395	=>	666
		396	=>	1308
		397	=>	237
		398	=>	373
		408	=>	824
		411	=>	908
		414	=>	1517
		415	=>	300
		417	=>	581
		418	=>	1331
		420	=>	1511
		421	=>	1568
		423	=>	1140
		424	=>	667
		426	=>	575
		431	=>	768
		434	=>	721
		435	=>	827
		437	=>	133
		438	=>	1584
		440	=>	701
		441	=>	1551
		443	=>	480
		444	=>	579
		446	=>	809
		451	=>	1050
		454	=>	1241
		455	=>	1437
		457	=>	1003
		458	=>	1590
		460	=>	1320
		461	=>	991
		463	=>	1244
		464	=>	516
		466	=>	431
		471	=>	1017
		474	=>	1380
		475	=>	467
		477	=>	694
		478	=>	1390
		480	=>	524
		481	=>	789
		483	=>	702
		484	=>	1409
		486	=>	857
		491	=>	1669
		493	=>	1269
		503	=>	334
		506	=>	145
		509	=>	1442
		511	=>	26
		513	=>	130
		515	=>	837
		517	=>	772
		521	=>	1185
		524	=>	1635
		526	=>	24
		528	=>	535
		530	=>	1279
		532	=>	1060
		537	=>	1421
		540	=>	1029
		542	=>	869
		544	=>	730
		546	=>	290
		548	=>	80
		553	=>	1066
		556	=>	509
		558	=>	932
		560	=>	525
		562	=>	360
		564	=>	955
		571	=>	1296
		580	=>	757
		581	=>	673
		582	=>	1315
		583	=>	483
		584	=>	1457
		585	=>	1609
		586	=>	54
		587	=>	687
		588	=>	749
		589	=>	287
		590	=>	337
		591	=>	403
		592	=>	609
		593	=>	529
		594	=>	1231
		595	=>	1620
		596	=>	454
		597	=>	964
		598	=>	508
		599	=>	1623
		601	=>	326
		604	=>	904
		612	=>	1254
		613	=>	1362
		614	=>	1010
		615	=>	85
		616	=>	1214
		617	=>	942
		618	=>	1384
		619	=>	126
		620	=>	1644
		621	=>	1593
		622	=>	671
		623	=>	1631
		624	=>	541
		625	=>	1483
		626	=>	1271
		627	=>	1121
		628	=>	142
		629	=>	447
		630	=>	1127
		631	=>	172
		633	=>	783
		636	=>	94
		645	=>	1067
		646	=>	658
		647	=>	18
		648	=>	72
		649	=>	472
		650	=>	45
		651	=>	907
		652	=>	1600
		653	=>	1293
		654	=>	1475
		655	=>	892
		656	=>	319
		657	=>	1642
		658	=>	1130
		659	=>	831
		660	=>	39
		661	=>	910
		662	=>	1454
		663	=>	1342
		664	=>	1235
		666	=>	9
		669	=>	743
		678	=>	710
		679	=>	996
		680	=>	924
		681	=>	1111
		682	=>	823
		683	=>	478
		684	=>	329
		685	=>	1489
		686	=>	653
		687	=>	999
		688	=>	137
		689	=>	642
		690	=>	1132
		691	=>	1112
		692	=>	817
		693	=>	905
		694	=>	664
		695	=>	640
		696	=>	937
		697	=>	1400
		699	=>	188
		702	=>	1186
		713	=>	1201
		714	=>	900
		715	=>	1287
		717	=>	1372
		718	=>	312
		719	=>	1040
		721	=>	1358
		722	=>	586
		723	=>	128
		725	=>	1082
		726	=>	1335
		727	=>	986
		729	=>	1221
		739	=>	1542
		740	=>	801
		742	=>	1157
		744	=>	1363
		745	=>	1591
		746	=>	389
		748	=>	1404
		749	=>	1190
		750	=>	1661
		752	=>	992
		753	=>	459
		754	=>	321
		756	=>	584
		766	=>	633
		767	=>	421
		769	=>	787
		771	=>	34
		772	=>	1472
		773	=>	1175
		775	=>	1470
		776	=>	1370
		777	=>	1055
		779	=>	1535
		780	=>	1340
		781	=>	1233
		783	=>	1246
		796	=>	91
		797	=>	1555
		799	=>	1091
		801	=>	1264
		802	=>	1259
		803	=>	898
		805	=>	1530
		806	=>	1553
		807	=>	763
		809	=>	888
		810	=>	1338
		811	=>	1086
		813	=>	49
		814	=>	1146
		815	=>	87
		817	=>	634
		829	=>	740
		830	=>	1592
		831	=>	306
		835	=>	636
		836	=>	1144
		837	=>	611
		838	=>	307
		839	=>	1664
		840	=>	221
		841	=>	1276
		842	=>	1115
		845	=>	215
		846	=>	227
		847	=>	845
		848	=>	1100
		849	=>	1640
		850	=>	179
		851	=>	762
		852	=>	1411
		855	=>	96
		856	=>	1423
		857	=>	561
		858	=>	1006
		859	=>	1550
		860	=>	296
		863	=>	1148
		864	=>	151
		866	=>	1368
		875	=>	1224
		876	=>	1159
		877	=>	868
		878	=>	1138
		887	=>	1450
		888	=>	655
		889	=>	1083
		890	=>	1194
		901	=>	1250
		902	=>	15
		904	=>	228
		906	=>	299
		918	=>	539
		919	=>	1232
		920	=>	1143
		921	=>	490
		934	=>	1548
		936	=>	1337
		937	=>	512
		938	=>	248
		939	=>	882
		940	=>	1567
		943	=>	527
		944	=>	1179
		945	=>	623
		946	=>	676
		947	=>	1540
		950	=>	695
		951	=>	419
		952	=>	1095
		953	=>	1239
		954	=>	974
		957	=>	1020
		958	=>	1376
		959	=>	744
		960	=>	7
		961	=>	1288
		964	=>	833
		966	=>	1316
		975	=>	1106
		977	=>	396
		978	=>	922
		979	=>	4
		980	=>	217
		981	=>	22
		984	=>	1352
		985	=>	617
		986	=>	552
		987	=>	114
		988	=>	48
		991	=>	923
		992	=>	439
		993	=>	236
		994	=>	972
		995	=>	537
		998	=>	380
		999	=>	918
		1000	=>	1188
		1001	=>	1116
		1002	=>	556
		1005	=>	294
		1007	=>	37
		1017	=>	745
		1019	=>	635
		1020	=>	356
		1021	=>	548
		1022	=>	1679
		1023	=>	1306
		1026	=>	1577
		1027	=>	1167
		1028	=>	698
		1029	=>	659
		1030	=>	1674
		1033	=>	427
		1034	=>	342
		1035	=>	272
		1036	=>	746
		1037	=>	665
		1040	=>	838
		1041	=>	276
		1042	=>	1656
		1043	=>	442
		1044	=>	110
		1047	=>	382
		1049	=>	1328
		1061	=>	1641
		1063	=>	891
		1064	=>	1200
		1065	=>	1274
		1066	=>	481
		1067	=>	1350
		1070	=>	1005
		1071	=>	42
		1072	=>	765
		1073	=>	84
		1074	=>	775
		1077	=>	174
		1078	=>	1566
		1079	=>	212
		1080	=>	138
		1081	=>	997
		1084	=>	53
		1085	=>	685
		1086	=>	297
		1087	=>	557
		1088	=>	1007
		1091	=>	1675
		1093	=>	782
		1102	=>	1487
		1104	=>	156
		1105	=>	1268
		1106	=>	645
		1107	=>	984
		1108	=>	568
		1111	=>	351
		1112	=>	1621
		1113	=>	1651
		1114	=>	29
		1115	=>	196
		1118	=>	939
		1119	=>	392
		1120	=>	168
		1121	=>	798
		1122	=>	395
		1125	=>	1196
		1126	=>	1181
		1127	=>	925
		1128	=>	1438
		1129	=>	286
		1132	=>	790
		1134	=>	759
		1143	=>	1154
		1145	=>	755
		1146	=>	877
		1147	=>	1365
		1148	=>	1460
		1149	=>	1367
		1152	=>	469
		1153	=>	867
		1154	=>	289
		1155	=>	465
		1156	=>	150
		1159	=>	684
		1160	=>	1606
		1161	=>	810
		1162	=>	1543
		1163	=>	700
		1166	=>	13
		1167	=>	1515
		1168	=>	549
		1169	=>	1599
		1170	=>	1278
		1173	=>	1008
		1175	=>	777
		1183	=>	1313
		1184	=>	1357
		1185	=>	1123
		1186	=>	492
		1187	=>	764
		1188	=>	822
		1189	=>	963
		1190	=>	231
		1191	=>	90
		1192	=>	1462
		1193	=>	726
		1194	=>	95
		1195	=>	1052
		1196	=>	102
		1197	=>	1189
		1198	=>	1478
		1199	=>	1594
		1209	=>	475
		1210	=>	67
		1211	=>	1639
		1212	=>	1252
		1213	=>	75
		1214	=>	598
		1215	=>	1571
		1216	=>	437
		1217	=>	73
		1218	=>	239
		1219	=>	1234
		1220	=>	132
		1221	=>	1343
		1222	=>	928
		1223	=>	59
		1224	=>	1339
		1225	=>	588
		1234	=>	1643
		1235	=>	725
		1236	=>	1035
		1237	=>	1677
		1239	=>	189
		1240	=>	760
		1241	=>	93
		1242	=>	1429
		1244	=>	1474
		1245	=>	343
		1246	=>	752
		1247	=>	1253
		1249	=>	1415
		1250	=>	1199
		1251	=>	445
		1252	=>	256
		1253	=>	604
		1262	=>	692
		1263	=>	124
		1264	=>	457
		1265	=>	1610
		1267	=>	218
		1268	=>	1079
		1269	=>	1479
		1270	=>	1402
		1272	=>	474
		1273	=>	1388
		1274	=>	353
		1275	=>	774
		1277	=>	1061
		1278	=>	1366
		1279	=>	121
		1280	=>	886
		1281	=>	238
		1292	=>	398
		1293	=>	1129
		1294	=>	381
		1295	=>	1532
		1297	=>	577
		1298	=>	211
		1299	=>	82
		1300	=>	829
		1302	=>	222
		1303	=>	1136
		1304	=>	1299
		1305	=>	632
		1307	=>	1247
		1308	=>	315
		1309	=>	181
		1310	=>	912
		1311	=>	1626
		1320	=>	506
		1321	=>	1589
		1322	=>	376
		1323	=>	1198
		1325	=>	848
		1326	=>	585
		1327	=>	944
		1328	=>	471
		1330	=>	1108
		1331	=>	815
		1332	=>	1019
		1333	=>	1531
		1335	=>	103
		1336	=>	1
		1337	=>	601
		1338	=>	167
		1339	=>	350
		1348	=>	488
		1349	=>	1009
		1350	=>	870
		1352	=>	1104
		1353	=>	1044
		1354	=>	268
		1356	=>	852
		1357	=>	1407
		1358	=>	959
		1360	=>	1519
		1361	=>	270
		1362	=>	1455
		1364	=>	920
		1365	=>	1546
		1366	=>	1482
		1368	=>	1321
		1369	=>	550
		1370	=>	1508
		1371	=>	149
		1379	=>	1681
		1380	=>	224
		1381	=>	1676
		1382	=>	1133
		1383	=>	1018
		1385	=>	1433
		1386	=>	1267
		1387	=>	627
		1388	=>	818
		1390	=>	594
		1391	=>	1565
		1392	=>	314
		1393	=>	415
		1395	=>	407
		1396	=>	127
		1397	=>	249
		1398	=>	10
		1400	=>	1056
		1401	=>	599
		1410	=>	1528
		1411	=>	89
		1412	=>	1397
		1414	=>	1605
		1415	=>	717
		1416	=>	1158
		1418	=>	832
		1419	=>	1431
		1420	=>	1424
		1422	=>	1426
		1423	=>	1184
		1424	=>	967
		1426	=>	1348
		1427	=>	1222
		1428	=>	1622
		1429	=>	1682
		1430	=>	275
		1439	=>	1536
		1440	=>	938
		1441	=>	187
		1442	=>	979
		1443	=>	849
		1445	=>	259
		1446	=>	1559
		1447	=>	962
		1449	=>	1389
		1450	=>	859
		1451	=>	1128
		1453	=>	668
		1454	=>	799
		1455	=>	155
		1456	=>	1092
		1458	=>	2
		1459	=>	674
		1460	=>	385
		1462	=>	1666
		1463	=>	335
		1464	=>	1420
		1466	=>	1430
		1467	=>	303
		1468	=>	33
		1470	=>	1524
		1471	=>	1164
		1472	=>	797
		1474	=>	1248
		1475	=>	225
		1476	=>	1295
		1478	=>	100
		1479	=>	1109
		1480	=>	349
		1482	=>	1401
		1483	=>	1076
		1484	=>	355
		1485	=>	1452
		1486	=>	1655
		1495	=>	109
		1496	=>	1162
		1497	=>	582
		1499	=>	1227
		1500	=>	618
		1501	=>	1492
		1503	=>	1182
		1504	=>	12
		1505	=>	713
		1507	=>	1203
		1508	=>	368
		1509	=>	36
		1511	=>	1030
		1512	=>	754
		1513	=>	194
		1514	=>	338
		1515	=>	1230
		1524	=>	195
		1526	=>	1502
		1527	=>	258
		1528	=>	533
		1529	=>	1255
		1531	=>	157
		1532	=>	295
		1533	=>	517
		1535	=>	1210
		1536	=>	1033
		1537	=>	1225
		1539	=>	1549
		1540	=>	980
		1541	=>	1341
		1542	=>	739
		1544	=>	313
		1545	=>	620
		1546	=>	292
		1548	=>	1333
		1549	=>	495
		1550	=>	813
		1552	=>	662
		1553	=>	1395
		1554	=>	284
		1556	=>	531
		1557	=>	1054
		1558	=>	323
		1560	=>	786
		1561	=>	1547
		1562	=>	1304
		1564	=>	198
		1565	=>	339
		1566	=>	372
		1568	=>	455
		1569	=>	960
		1570	=>	1147
		1571	=>	171
		1572	=>	1668
		1583	=>	1637
		1584	=>	1572
		1585	=>	210
		1587	=>	341
		1588	=>	820
		1589	=>	1638
		1591	=>	1073
		1592	=>	485
		1593	=>	213
		1595	=>	1305
		1596	=>	191
		1597	=>	990
		1599	=>	153
		1600	=>	691
		1601	=>	732
		1602	=>	43
		1603	=>	160
		1614	=>	1000
		1615	=>	973
		1616	=>	136
		1618	=>	1378
		1619	=>	1155
		1620	=>	1260
		1622	=>	1064
		1623	=>	482
		1624	=>	682
		1626	=>	954
		1627	=>	788
		1628	=>	630
		1630	=>	830
		1631	=>	1071
		1632	=>	819
		1633	=>	1027
		1634	=>	540
		1643	=>	622
		1644	=>	1053
		1645	=>	435
		1646	=>	116
		1648	=>	670
		1649	=>	546
		1650	=>	387
		1651	=>	111
		1653	=>	1014
		1654	=>	884
		1655	=>	578
		1656	=>	781
		1658	=>	735
		1659	=>	1151
		1660	=>	379
		1661	=>	1484
		1662	=>	1277
		1671	=>	344
		1672	=>	1070
		1673	=>	322
		1674	=>	266
		1676	=>	253
		1677	=>	260
		1678	=>	643
		1679	=>	234
		1681	=>	956
		1682	=>	761
		1683	=>	1558
		1684	=>	318
		1686	=>	1251
		1687	=>	1346
		1688	=>	1215
		1689	=>	1595
		1690	=>	1298
		1700	=>	30
		1701	=>	864
		1708	=>	1464
		1709	=>	1283
		1720	=>	736
		1721	=>	1197
		1722	=>	120
		1729	=>	324
		1730	=>	851
		1731	=>	1613
		1732	=>	704
		1734	=>	1496
		1735	=>	1001
		1736	=>	1213
		1737	=>	1013
		1739	=>	1408
		1740	=>	1152
		1741	=>	262
		1742	=>	1031
		1744	=>	125
		1745	=>	1012
		1746	=>	1632
		1747	=>	1219
		1750	=>	473
		1752	=>	1289
		1756	=>	1280
		1757	=>	1113
		1758	=>	716
		1760	=>	1022
		1761	=>	1506
		1762	=>	771
		1763	=>	468
		1765	=>	101
		1766	=>	354
		1767	=>	532
		1768	=>	92
		1770	=>	1058
		1771	=>	1361
		1772	=>	1266
		1773	=>	193
		1775	=>	1141
		1776	=>	185
		1777	=>	5
		1778	=>	693
		1780	=>	1207
		1805	=>	1601
		1813	=>	753
		1814	=>	1425
		1817	=>	461
		1818	=>	1398
		1819	=>	1270
		1822	=>	1672
		1823	=>	590
		1824	=>	1627
		1825	=>	23
		1826	=>	555
		1827	=>	65
		1832	=>	1612
		1833	=>	731
		1835	=>	58
		1843	=>	862
		1846	=>	83 and 647
		1852	=>	593 and 1683
		1853	=>	564
		1854	=>	1503
		1855	=>	487
		1856	=>	298
		1857	=>	711
		1858	=>	108
		1859	=>	27
		1860	=>	769
		1861	=>	105
		1863	=>	1485
		1868	=>	624
		1869	=>	1355
		1870	=>	451 and 652
		1871	=>	792
		1872	=>	115
		1873	=>	1300
		1874	=>	241
		1875	=>	412
		1876	=>	375
		1877	=>	978
		1878	=>	970
		1879	=>	750
		1881	=>	16
		1884	=>	1212
		1885	=>	1191
		1886	=>	1580
		1890	=>	493
		1891	=>	715
		1895	=>	839
		1897	=>	362
		1898	=>	807
		1899	=>	64
		1900	=>	1446
		1901	=>	796
		1902	=>	278
		1903	=>	1178
		1907	=>	1505
		1911	=>	751
		1914	=>	966
		1915	=>	1039
		1919	=>	41
		1920	=>	352
		1921	=>	616
		1922	=>	291
		1923	=>	366
		1924	=>	433
		1925	=>	756
		1931	=>	301
		1961	=>	1217
		1964	=>	708 and 947
		1966	=>	28
		1967	=>	494
		1970	=>	453 and 1307
		1973	=>	945
		1974	=>	723
		1975	=>	428
		1976	=>	140
		1978	=>	949
		1979	=>	1319 and 1381
		1980	=>	1412
		1983	=>	1476
		1984	=>	523
		1986	=>	1080
		1991	=>	1168
		1992	=>	144
		1994	=>	1275
		1995	=>	615
		1998	=>	1618
		1999	=>	242
		2003	=>	1311
		2004	=>	1209
		2009	=>	1371
		2021	=>	1541
		2023	=>	1684
		2025	=>	1526
		2027	=>	86
		2030	=>	961
		2042	=>	994
		2043	=>	1026
		2044	=>	1521
		2045	=>	602
		2046	=>	1169
		2057	=>	456
		2058	=>	254
		2059	=>	520
		2060	=>	365
		2061	=>	97
		2070	=>	204
		2071	=>	446
		2072	=>	247
		2073	=>	1284
		2075	=>	808
		2076	=>	1286
		2077	=>	1285
		2078	=>	748
		2080	=>	688
		2081	=>	1583
		2082	=>	1229
		2083	=>	406
		2085	=>	1436
		2086	=>	384
		2087	=>	44
		2088	=>	112
		2089	=>	450
		2099	=>	470
		2100	=>	1448
		2101	=>	780
		2102	=>	70
		2103	=>	793
		2104	=>	612
		2105	=>	1034
		2106	=>	814
		2107	=>	1451
		2108	=>	443
		2109	=>	804
		2110	=>	1262
		2111	=>	325
		2112	=>	1518
		2113	=>	11
		2114	=>	369
		2115	=>	1648
		2124	=>	805
		2125	=>	1490
		2126	=>	946
		2127	=>	1294
		2129	=>	1118
		2130	=>	283
		2131	=>	1163
		2132	=>	812
		2134	=>	74
		2135	=>	927
		2136	=>	893
		2137	=>	1302
		2139	=>	1582
		2140	=>	235
		2141	=>	434
		2142	=>	1087
		2143	=>	243
		2154	=>	515
		2155	=>	1403
		2156	=>	1242
		2157	=>	1226
		2159	=>	166
		2160	=>	791
		2161	=>	199
		2162	=>	1228
		2164	=>	1089
		2165	=>	46
		2166	=>	436
		2167	=>	1579
		2169	=>	1249
		2170	=>	943
		2171	=>	592
		2172	=>	1202
		2173	=>	71
		2184	=>	1004
		2185	=>	1660
		2186	=>	591
		2187	=>	719
		2189	=>	216
		2190	=>	496
		2191	=>	1456
		2192	=>	1273
		2194	=>	1544
		2195	=>	863
		2196	=>	705
		2197	=>	417
		2199	=>	501
		2200	=>	261
		2201	=>	57
		2202	=>	479
		2203	=>	1379
		2215	=>	1364
		2216	=>	619
		2217	=>	209
		2218	=>	175
		2220	=>	1038
		2221	=>	1520
		2222	=>	1678
		2223	=>	766
		2225	=>	1047
		2226	=>	853
		2227	=>	1525
		2228	=>	995
		2230	=>	1081
		2231	=>	250
		2232	=>	1057
		2233	=>	440
		2234	=>	277
		2246	=>	56
		2247	=>	651
		2248	=>	776
		2249	=>	462
		2251	=>	159
		2252	=>	559
		2253	=>	672
		2254	=>	1588
		2256	=>	1586
		2257	=>	267
		2258	=>	714
		2259	=>	603
		2261	=>	14
		2262	=>	988
		2263	=>	1041
		2264	=>	1135
		2265	=>	134
		2275	=>	1576
		2276	=>	958
		2277	=>	50
		2278	=>	77
		2290	=>	340
		2291	=>	1099
		2293	=>	202
		2294	=>	61
		2295	=>	638
		2296	=>	1110
		2298	=>	1075
		2299	=>	393
		2300	=>	1048
		2301	=>	1078
		2303	=>	1332
		2304	=>	504
		2305	=>	383
		2306	=>	233
		2308	=>	854
		2309	=>	409
		2310	=>	883
		2311	=>	1102
		2312	=>	1495
		2323	=>	1243
		2324	=>	1170
		2326	=>	78
		2327	=>	741
		2328	=>	197
		2329	=>	605
		2331	=>	1406
		2332	=>	1094
		2333	=>	953
		2334	=>	1480
		2336	=>	206
		2337	=>	606
		2338	=>	463
		2339	=>	208
		2341	=>	336
		2342	=>	1653
		2343	=>	914
		2344	=>	20
		2345	=>	811
		2356	=>	386
		2357	=>	264
		2359	=>	875
		2360	=>	1042
		2361	=>	738
		2362	=>	476
		2364	=>	890
		2365	=>	929
		2366	=>	835
		2367	=>	1220
		2369	=>	1603
		2370	=>	1077
		2371	=>	1002
		2372	=>	1183
		2374	=>	1394
		2375	=>	544
		2376	=>	88
		2377	=>	180
		2378	=>	357
		2386	=>	1447
		2387	=>	1630
		2388	=>	1471
		2389	=>	498
		2390	=>	580
		2391	=>	1458
		2392	=>	122
		2393	=>	689
		2394	=>	1142
		2395	=>	1256
		2396	=>	1499
		2397	=>	1491
		2398	=>	569
		2399	=>	1049
		2400	=>	391
		2401	=>	1261
		2402	=>	347
		2412	=>	484
		2413	=>	1290
		2414	=>	311
		2415	=>	370
		2416	=>	397
		2417	=>	1173
		2418	=>	1444
		2419	=>	1607
		2420	=>	510
		2421	=>	965
		2422	=>	1570
		2423	=>	1585
		2424	=>	727
		2425	=>	1680
		2426	=>	1560
		2427	=>	1150
		2428	=>	661
		2442	=>	1011
		2444	=>	55
		2446	=>	1161
		2448	=>	707
		2451	=>	696
		2453	=>	681
		2455	=>	639
		2457	=>	1564
		2460	=>	841
		2462	=>	669
		2464	=>	871
		2466	=>	143
		2469	=>	190
		2471	=>	1117
		2473	=>	31
		2475	=>	1176
		2478	=>	98
		2479	=>	644
		2480	=>	528
		2481	=>	257
		2482	=>	79
		2492	=>	1282
		2494	=>	840
		2496	=>	302
		2498	=>	1396
		2500	=>	420
		2503	=>	282
		2505	=>	1347
		2507	=>	1043
		2509	=>	416
		2512	=>	1317
		2514	=>	1369
		2516	=>	1645
		2518	=>	345
		2521	=>	562
		2523	=>	1059
		2525	=>	1322
		2527	=>	572
		2534	=>	1036
		2535	=>	229
		2536	=>	500
		2537	=>	1318
		2539	=>	399
		2540	=>	1465
		2541	=>	1037
		2542	=>	573
		2544	=>	1314
		2545	=>	720
		2546	=>	1493
		2547	=>	1153
		2549	=>	825
		2550	=>	909
		2551	=>	926
		2552	=>	1172
		2554	=>	1281
		2555	=>	273
		2556	=>	1377
		2557	=>	280
		2559	=>	921
		2569	=>	232
		2570	=>	1616
		2571	=>	998
		2572	=>	861
		2573	=>	489
		2575	=>	795
		2576	=>	571
		2577	=>	1374
		2578	=>	595
		2580	=>	1662
		2581	=>	361
		2582	=>	363
		2583	=>	119
		2585	=>	182
		2586	=>	408
		2587	=>	1434
		2588	=>	162
		2595	=>	1323
		2596	=>	333
		2597	=>	821
		2598	=>	460
		2600	=>	158
		2601	=>	1265
		2602	=>	332
		2603	=>	201
		2605	=>	802
		2606	=>	906
		2607	=>	1534
		2608	=>	706
		2610	=>	1459
		2611	=>	52
		2612	=>	1647
		2613	=>	163
		2615	=>	1414
		2616	=>	1310
		2617	=>	1382
		2618	=>	1131
		2621	=>	534
		2631	=>	164
		2632	=>	207
		2633	=>	536
		2634	=>	1416
		2635	=>	1090
		2637	=>	583
		2638	=>	63
		2639	=>	81
		2640	=>	614
		2642	=>	728
		2643	=>	1334
		2644	=>	563
		2645	=>	1629
		2647	=>	107
		2648	=>	800
		2649	=>	1513
		2650	=>	17
		2657	=>	826
		2658	=>	251
		2659	=>	371
		2660	=>	981
		2662	=>	117
		2663	=>	778
		2664	=>	930
		2665	=>	1236
		2667	=>	271
		2668	=>	1625
		2669	=>	919
		2670	=>	1671
		2672	=>	712
		2673	=>	1654
		2674	=>	656
		2675	=>	847
		2677	=>	411
		2678	=>	1216
		2679	=>	1494
		2680	=>	1245
		2683	=>	1597
		2694	=>	1552
		2695	=>	1633
		2696	=>	987
		2697	=>	178
		2698	=>	183
		2700	=>	1537
		2701	=>	842
		2702	=>	1240
		2703	=>	1045
		2705	=>	226
		2706	=>	513
		2707	=>	304
		2708	=>	32
		2710	=>	985
		2711	=>	567
		2712	=>	1463
		2713	=>	47
		2722	=>	19
		2723	=>	1523
		2724	=>	1473
		2725	=>	1557
		2727	=>	610
		2728	=>	1046
		2729	=>	747
		2730	=>	785
		2732	=>	902
		2733	=>	161
		2734	=>	724
		2735	=>	683
		2737	=>	6
		2738	=>	678
		2739	=>	288
		2740	=>	969
		2742	=>	1028
		2743	=>	1581
		2744	=>	1192
		2745	=>	1291
		2748	=>	911
		2760	=>	878
		2767	=>	993
		2781	=>	1670
		2782	=>	165
		2789	=>	269
		2790	=>	464
		2805	=>	1516
		2807	=>	176
		2808	=>	1522
		2809	=>	184
		2810	=>	1646
		2812	=>	626
		2813	=>	901
		2814	=>	394
		2815	=>	648
		2817	=>	452
		2818	=>	887
		2819	=>	526
		2820	=>	418
		2822	=>	1032
		2823	=>	1351
		2824	=>	950
		2825	=>	1587
		2827	=>	40
		2841	=>	499
		2842	=>	697
		2843	=>	152
		2844	=>	378
		2845	=>	377
		2846	=>	880
		2847	=>	1223
		2848	=>	1538
		2849	=>	940
		2850	=>	936
		2851	=>	779
		2852	=>	1114
		2853	=>	1205
		2854	=>	881
		2855	=>	952
		2856	=>	1533
		2857	=>	1449
		2858	=>	279
		2871	=>	309
		2873	=>	1574
		2875	=>	1445
		2877	=>	767
		2879	=>	477
		2880	=>	657
		2881	=>	1336
		2882	=>	1461
		2894	=>	104
		2896	=>	1435
		2898	=>	1325
		2900	=>	1385
		2902	=>	444
		2903	=>	118
		2904	=>	680
		2905	=>	916
		2917	=>	1074
		2918	=>	1105
		2919	=>	1257
		2920	=>	1636
		2921	=>	545
		2922	=>	850
		2934	=>	1312
		2935	=>	1608
		2936	=>	507
		2937	=>	359
		2938	=>	141
		2939	=>	1063
		2951	=>	1652
		2952	=>	422
		2953	=>	1428
		2954	=>	650
		2955	=>	931
		2956	=>	1354
		2968	=>	414
		2969	=>	1556
		2970	=>	917
		2971	=>	587
		2972	=>	503
		2973	=>	1174
		2988	=>	514
		2989	=>	1617
		2991	=>	770
		2993	=>	1399
		2994	=>	894
		2995	=>	844
		2997	=>	879
		2998	=>	522
		2999	=>	486
		3001	=>	897
		3002	=>	654
		3003	=>	860
		3005	=>	331
		3018	=>	1391
		3019	=>	281
		3021	=>	1417
		3023	=>	1206
		3024	=>	971
		3025	=>	913
		3027	=>	364
		3028	=>	1575
		3029	=>	1193
		3031	=>	1514
		3032	=>	1122
		3033	=>	244
		3034	=>	316
		3047	=>	1529
		3048	=>	1303
		3049	=>	948
		3051	=>	660
		3052	=>	574
		3053	=>	803
		3055	=>	934
		3056	=>	1527
		3057	=>	876
		3059	=>	607
		3060	=>	21
		3061	=>	466
		3063	=>	856
		3077	=>	1015
		3078	=>	1292
		3080	=>	1211
		3082	=>	1468
		3083	=>	885
		3084	=>	285
		3086	=>	1634
		3087	=>	1569
		3088	=>	1665
		3090	=>	773
		3091	=>	1504
		3092	=>	1309
		3093	=>	1596
		3106	=>	1563
		3107	=>	1539
		3109	=>	1466
		3111	=>	613
		3112	=>	631
		3113	=>	1507
		3114	=>	570
		3115	=>	252
		3117	=>	1440
		3118	=>	1024
		3119	=>	1171
		3121	=>	1208
		3122	=>	220
		3123	=>	1149
		3125	=>	68
		3126	=>	1069
		3127	=>	1085
		3128	=>	265
		3130	=>	1418
		3131	=>	865
		3132	=>	596
		3134	=>	566
		3135	=>	1084
		3136	=>	390
		3138	=>	1139
		3139	=>	219
		3140	=>	1375
		3142	=>	511
		3143	=>	139
		3144	=>	1134
		3146	=>	872
		3147	=>	1344
		3148	=>	1554
		3152	=>	828
		3159	=>	1187
		3160	=>	51
		3161	=>	896
		3162	=>	976
		3163	=>	649
		3164	=>	1137
		3165	=>	1498
		3166	=>	305
		3167	=>	1619
		3168	=>	679
		3169	=>	589
		3170	=>	1573
		3171	=>	200
		3172	=>	505
		3173	=>	977
		3174	=>	192
		3175	=>	1330
		3182	=>	69
		3183	=>	729
		3184	=>	1180
		3185	=>	742
		3186	=>	1410
		3187	=>	1658
		3188	=>	843
		3189	=>	1598
		3190	=>	1065
		3191	=>	135
		3192	=>	169
		3193	=>	148
		3194	=>	1392
		3195	=>	538
		3196	=>	497
		3197	=>	941
		3198	=>	1509
		3207	=>	1327
		3208	=>	274
		3209	=>	1301
		3210	=>	935
		3211	=>	147
		3212	=>	177
		3213	=>	425
		3214	=>	388
		3215	=>	1166
		3216	=>	1673
		3217	=>	423
		3218	=>	99
		3219	=>	551
		3220	=>	1119
		3221	=>	1419
		3222	=>	1510
		3223	=>	957
		3226	=>	1124
		3227	=>	1326
		3228	=>	438
		3229	=>	734
		3231	=>	3
		3232	=>	1439
		3233	=>	1096
		3235	=>	1615
		3236	=>	1628
		3237	=>	1578
		3239	=>	1062
		3241	=>	663
		3253	=>	1345
		3255	=>	1659
		3256	=>	186
		3258	=>	1349
		3259	=>	1072
		3261	=>	1263
		3272	=>	106
		3283	=>	858
		3284	=>	1477
		3294	=>	1663
		3305	=>	733
		3306	=>	519
		3316	=>	400
		3327	=>	1469
		3328	=>	146
		3338	=>	560
		3349	=>	129
		3350	=>	621
		3360	=>	1177
		3371	=>	806
		3372	=>	1562
		3382	=>	637
		3393	=>	1611
		3394	=>	246
		3404	=>	131
		3415	=>	1125
		3416	=>	989
		3426	=>	1204
		3437	=>	794
		3438	=>	1405
		3448	=>	547
		3459	=>	432
		3460	=>	1097
		3470	=>	530
		3481	=>	1422
		3482	=>	600
		3492	=>	521
		3503	=>	66
		3504	=>	448
		3514	=>	1356
		3525	=>	608
		3526	=>	1165
		3536	=>	855
		3548	=>	1297
		3549	=>	718
		3559	=>	675
		3570	=>	975
		3571	=>	1453
		3581	=>	1353
		3593	=>	1486
		3594	=>	874
		3604	=>	982
		3615	=>	737
		3616	=>	1387

Class: public javax.vecmath.MismatchedSizeException	=>	a.a.r
	Source: "MismatchedSizeException.java"
	FieldsOf: javax.vecmath.MismatchedSizeException
	MethodsOf: javax.vecmath.MismatchedSizeException
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.MismatchedSizeException
		44	=>	4
		45	=>	1
		53	=>	3
		54	=>	2

Class: public javax.vecmath.Point2d	=>	a.a.h
	Source: "Point2d.java"
	FieldsOf: javax.vecmath.Point2d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point2d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		public final double distance(javax.vecmath.Point2d)	=>	b(a.a.h)
		public final double distanceL1(javax.vecmath.Point2d)	=>	d(a.a.h)
		public final double distanceLinf(javax.vecmath.Point2d)	=>	c(a.a.h)
		public final double distanceSquared(javax.vecmath.Point2d)	=>	a(a.a.h)
	LineNumbersOf: javax.vecmath.Point2d
		53	=>	15
		54	=>	12
		63	=>	1
		64	=>	6
		73	=>	8
		74	=>	9
		83	=>	5
		84	=>	11
		93	=>	17
		94	=>	21
		103	=>	14
		104	=>	18
		112	=>	16
		113	=>	13
		123	=>	20
		124	=>	22
		125	=>	3
		136	=>	4
		137	=>	19
		138	=>	10
		149	=>	7
		160	=>	2

Class: public javax.vecmath.Point2f	=>	a.a.Q
	Source: "Point2f.java"
	FieldsOf: javax.vecmath.Point2f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point2f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		public final float distance(javax.vecmath.Point2f)	=>	c(a.a.Q)
		public final float distanceL1(javax.vecmath.Point2f)	=>	b(a.a.Q)
		public final float distanceLinf(javax.vecmath.Point2f)	=>	a(a.a.Q)
		public final float distanceSquared(javax.vecmath.Point2f)	=>	d(a.a.Q)
	LineNumbersOf: javax.vecmath.Point2f
		53	=>	13
		54	=>	1
		63	=>	12
		64	=>	2
		73	=>	14
		74	=>	20
		82	=>	22
		83	=>	15
		93	=>	4
		94	=>	19
		104	=>	10
		105	=>	3
		113	=>	16
		114	=>	8
		124	=>	6
		125	=>	21
		126	=>	5
		137	=>	9
		138	=>	17
		139	=>	18
		150	=>	7
		161	=>	11

Class: public javax.vecmath.Point2i	=>	a.a.b
	Source: "Point2i.java"
	FieldsOf: javax.vecmath.Point2i
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point2i
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2i) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Point2i
		53	=>	5
		54	=>	1
		62	=>	2
		63	=>	8
		72	=>	4
		73	=>	6
		80	=>	7
		81	=>	3

Class: public javax.vecmath.Point3d	=>	a.a.M
	Source: "Point3d.java"
	FieldsOf: javax.vecmath.Point3d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point3d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public final double distance(javax.vecmath.Point3d)	=>	b(a.a.M)
		public final double distanceL1(javax.vecmath.Point3d)	=>	c(a.a.M)
		public final double distanceLinf(javax.vecmath.Point3d)	=>	d(a.a.M)
		public final double distanceSquared(javax.vecmath.Point3d)	=>	a(a.a.M)
		public final void project(javax.vecmath.Point4d)	=>	a(a.a.k)
	LineNumbersOf: javax.vecmath.Point3d
		54	=>	20
		55	=>	30
		64	=>	22
		65	=>	19
		74	=>	4
		75	=>	1
		84	=>	17
		85	=>	10
		94	=>	18
		95	=>	13
		104	=>	29
		105	=>	5
		113	=>	23
		114	=>	9
		126	=>	27
		127	=>	25
		128	=>	26
		129	=>	24
		142	=>	2
		143	=>	16
		144	=>	14
		145	=>	3
		157	=>	11
		158	=>	12
		171	=>	6
		173	=>	7
		186	=>	28
		187	=>	31
		188	=>	8
		189	=>	15
		191	=>	21

Class: public javax.vecmath.Point3f	=>	a.a.F
	Source: "Point3f.java"
	FieldsOf: javax.vecmath.Point3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point3f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public final float distance(javax.vecmath.Point3f)	=>	c(a.a.F)
		public final float distanceL1(javax.vecmath.Point3f)	=>	a(a.a.F)
		public final float distanceLinf(javax.vecmath.Point3f)	=>	b(a.a.F)
		public final float distanceSquared(javax.vecmath.Point3f)	=>	d(a.a.F)
		public final void project(javax.vecmath.Point4f)	=>	a(a.a.w)
	LineNumbersOf: javax.vecmath.Point3f
		55	=>	8
		56	=>	20
		65	=>	10
		66	=>	4
		75	=>	13
		76	=>	3
		85	=>	23
		86	=>	17
		95	=>	6
		96	=>	16
		105	=>	12
		106	=>	25
		114	=>	30
		115	=>	22
		128	=>	5
		129	=>	15
		130	=>	24
		131	=>	2
		144	=>	28
		145	=>	27
		146	=>	11
		147	=>	1
		160	=>	26
		174	=>	14
		175	=>	18
		189	=>	9
		190	=>	21
		191	=>	19
		192	=>	7
		194	=>	29

Class: public javax.vecmath.Point3i	=>	a.a.K
	Source: "Point3i.java"
	FieldsOf: javax.vecmath.Point3i
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point3i
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3i) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Point3i
		55	=>	5
		56	=>	6
		64	=>	4
		65	=>	3
		74	=>	1
		75	=>	2
		82	=>	8
		83	=>	7

Class: public javax.vecmath.Point4d	=>	a.a.k
	Source: "Point4d.java"
	FieldsOf: javax.vecmath.Point4d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point4d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final double distance(javax.vecmath.Point4d)	=>	b(a.a.k)
		public final double distanceL1(javax.vecmath.Point4d)	=>	a(a.a.k)
		public final double distanceLinf(javax.vecmath.Point4d)	=>	c(a.a.k)
		public final double distanceSquared(javax.vecmath.Point4d)	=>	e(a.a.k)
		public final void project(javax.vecmath.Point4d)	=>	d(a.a.k)
		public final void set(javax.vecmath.Tuple3d)	=>	a(a.a.L)
	LineNumbersOf: javax.vecmath.Point4d
		56	=>	39
		57	=>	18
		66	=>	31
		67	=>	25
		76	=>	10
		77	=>	28
		86	=>	29
		87	=>	3
		96	=>	22
		97	=>	33
		106	=>	23
		107	=>	24
		120	=>	38
		121	=>	19
		129	=>	30
		130	=>	35
		142	=>	37
		143	=>	32
		144	=>	42
		145	=>	2
		146	=>	14
		158	=>	12
		159	=>	6
		160	=>	34
		161	=>	5
		162	=>	20
		175	=>	7
		176	=>	8
		177	=>	36
		178	=>	9
		179	=>	4
		191	=>	1
		192	=>	26
		204	=>	15
		205	=>	17
		207	=>	27
		220	=>	13
		221	=>	11
		222	=>	21
		223	=>	41
		224	=>	40
		226	=>	16

Class: public javax.vecmath.Point4f	=>	a.a.w
	Source: "Point4f.java"
	FieldsOf: javax.vecmath.Point4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point4f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Point4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final float distance(javax.vecmath.Point4f)	=>	b(a.a.w)
		public final float distanceL1(javax.vecmath.Point4f)	=>	e(a.a.w)
		public final float distanceLinf(javax.vecmath.Point4f)	=>	c(a.a.w)
		public final float distanceSquared(javax.vecmath.Point4f)	=>	a(a.a.w)
		public final void project(javax.vecmath.Point4f)	=>	d(a.a.w)
		public final void set(javax.vecmath.Tuple3f)	=>	a(a.a.D)
	LineNumbersOf: javax.vecmath.Point4f
		56	=>	8
		57	=>	29
		66	=>	32
		67	=>	27
		76	=>	24
		77	=>	20
		86	=>	22
		87	=>	40
		96	=>	3
		97	=>	39
		106	=>	34
		107	=>	9
		120	=>	11
		121	=>	38
		129	=>	10
		130	=>	1
		142	=>	19
		143	=>	25
		144	=>	23
		145	=>	12
		146	=>	15
		158	=>	4
		159	=>	17
		160	=>	5
		161	=>	31
		162	=>	16
		175	=>	37
		176	=>	14
		177	=>	33
		178	=>	35
		179	=>	36
		192	=>	30
		206	=>	28
		207	=>	18
		209	=>	13
		223	=>	41
		224	=>	2
		225	=>	26
		226	=>	6
		227	=>	21
		229	=>	7

Class: public javax.vecmath.Point4i	=>	a.a.e
	Source: "Point4i.java"
	FieldsOf: javax.vecmath.Point4i
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Point4i
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int, int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4i) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Point4i
		56	=>	7
		57	=>	5
		65	=>	8
		66	=>	4
		75	=>	1
		76	=>	6
		83	=>	3
		84	=>	2

Class: public javax.vecmath.Quat4d	=>	a.a.l
	Source: "Quat4d.java"
	FieldsOf: javax.vecmath.Quat4d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Quat4d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final void conjugate()	=>	g()
		public final void conjugate(javax.vecmath.Quat4d)	=>	a(a.a.l)
		public final void interpolate(javax.vecmath.Quat4d, double)	=>	a(a.a.l, double)
		public final void interpolate(javax.vecmath.Quat4d, javax.vecmath.Quat4d, double)	=>	a(a.a.l, a.a.l, double)
		public final void inverse()	=>	h()
		public final void inverse(javax.vecmath.Quat4d)	=>	c(a.a.l)
		public final void mul(javax.vecmath.Quat4d)	=>	d(a.a.l)
		public final void mul(javax.vecmath.Quat4d, javax.vecmath.Quat4d)	=>	a(a.a.l, a.a.l)
		public final void mulInverse(javax.vecmath.Quat4d)	=>	e(a.a.l)
		public final void mulInverse(javax.vecmath.Quat4d, javax.vecmath.Quat4d)	=>	b(a.a.l, a.a.l)
		public final void normalize()	=>	i()
		public final void normalize(javax.vecmath.Quat4d)	=>	b(a.a.l)
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	a(a.a.U)
	LineNumbersOf: javax.vecmath.Quat4d
		57	=>	168
		59	=>	229
		60	=>	61
		61	=>	159
		62	=>	132
		63	=>	251
		65	=>	86
		72	=>	31
		74	=>	96
		75	=>	191
		76	=>	243
		77	=>	259
		78	=>	256
		80	=>	233
		88	=>	21
		89	=>	194
		97	=>	204
		98	=>	74
		106	=>	295
		108	=>	109
		109	=>	181
		110	=>	29
		111	=>	304
		112	=>	67
		114	=>	133
		122	=>	283
		124	=>	161
		125	=>	53
		126	=>	75
		127	=>	296
		128	=>	139
		129	=>	166
		137	=>	98
		138	=>	225
		147	=>	78
		148	=>	215
		149	=>	120
		150	=>	102
		151	=>	273
		160	=>	177
		161	=>	113
		162	=>	11
		163	=>	129
		175	=>	154
		176	=>	87
		177	=>	90
		178	=>	195
		179	=>	162
		183	=>	220
		184	=>	5
		185	=>	51
		186	=>	41
		187	=>	160
		188	=>	140
		189	=>	40
		191	=>	151
		203	=>	37
		204	=>	190
		205	=>	240
		206	=>	152
		207	=>	17
		208	=>	136
		209	=>	22
		210	=>	237
		222	=>	81
		224	=>	182
		225	=>	219
		226	=>	231
		238	=>	272
		240	=>	275
		241	=>	46
		242	=>	150
		253	=>	171
		254	=>	158
		255	=>	50
		256	=>	227
		257	=>	36
		258	=>	276
		268	=>	26
		269	=>	55
		270	=>	23
		271	=>	116
		272	=>	65
		273	=>	249
		285	=>	138
		287	=>	189
		288	=>	148
		289	=>	93
		290	=>	32
		291	=>	112
		292	=>	142
		294	=>	252
		295	=>	228
		296	=>	45
		297	=>	94
		299	=>	135
		309	=>	99
		311	=>	245
		312	=>	69
		313	=>	258
		314	=>	260
		315	=>	105
		316	=>	54
		318	=>	6
		319	=>	239
		320	=>	197
		321	=>	119
		323	=>	205
		333	=>	178
		335	=>	137
		336	=>	226
		337	=>	66
		338	=>	246
		339	=>	292
		340	=>	257
		341	=>	271
		342	=>	264
		345	=>	130
		346	=>	4
		347	=>	230
		348	=>	14
		349	=>	44
		352	=>	101
		353	=>	123
		354	=>	285
		355	=>	267
		356	=>	77
		357	=>	170
		358	=>	236
		359	=>	297
		360	=>	156
		363	=>	115
		364	=>	179
		365	=>	254
		366	=>	266
		369	=>	68
		370	=>	110
		371	=>	27
		372	=>	143
		373	=>	278
		374	=>	265
		377	=>	1
		378	=>	25
		379	=>	208
		389	=>	270
		391	=>	185
		392	=>	209
		393	=>	298
		394	=>	62
		395	=>	165
		396	=>	203
		397	=>	255
		398	=>	131
		401	=>	212
		402	=>	153
		403	=>	106
		404	=>	56
		405	=>	144
		408	=>	288
		409	=>	104
		410	=>	134
		411	=>	277
		412	=>	293
		413	=>	287
		414	=>	188
		415	=>	12
		416	=>	48
		419	=>	303
		420	=>	199
		421	=>	214
		422	=>	216
		425	=>	207
		426	=>	100
		427	=>	89
		428	=>	58
		429	=>	187
		430	=>	186
		433	=>	301
		434	=>	169
		435	=>	24
		445	=>	103
		447	=>	73
		448	=>	213
		449	=>	124
		450	=>	280
		451	=>	300
		452	=>	107
		453	=>	7
		454	=>	16
		457	=>	309
		458	=>	127
		459	=>	282
		460	=>	8
		461	=>	147
		464	=>	262
		465	=>	210
		466	=>	167
		467	=>	290
		468	=>	2
		469	=>	294
		470	=>	85
		471	=>	60
		472	=>	224
		475	=>	79
		476	=>	155
		477	=>	71
		478	=>	57
		481	=>	223
		482	=>	88
		483	=>	70
		484	=>	173
		485	=>	95
		488	=>	247
		489	=>	241
		490	=>	47
		500	=>	307
		502	=>	59
		503	=>	117
		504	=>	146
		505	=>	183
		506	=>	221
		507	=>	108
		508	=>	49
		509	=>	43
		512	=>	279
		513	=>	111
		514	=>	244
		515	=>	180
		516	=>	242
		519	=>	149
		520	=>	172
		521	=>	91
		522	=>	200
		523	=>	274
		524	=>	234
		525	=>	253
		526	=>	92
		527	=>	193
		530	=>	3
		531	=>	175
		532	=>	281
		533	=>	202
		536	=>	19
		537	=>	13
		538	=>	20
		539	=>	198
		540	=>	192
		541	=>	222
		544	=>	306
		545	=>	263
		546	=>	176
		559	=>	128
		560	=>	52
		561	=>	163
		562	=>	42
		563	=>	9
		564	=>	28
		566	=>	125
		567	=>	97
		568	=>	18
		569	=>	72
		570	=>	196
		571	=>	305
		574	=>	64
		586	=>	164
		587	=>	302
		588	=>	76
		589	=>	126
		590	=>	250
		591	=>	248
		593	=>	291
		594	=>	206
		595	=>	80
		596	=>	308
		597	=>	157
		598	=>	268
		601	=>	15
		619	=>	30
		621	=>	118
		623	=>	261
		624	=>	34
		627	=>	38
		628	=>	299
		629	=>	289
		630	=>	218
		631	=>	122
		633	=>	33
		634	=>	83
		637	=>	232
		638	=>	63
		639	=>	174
		640	=>	238
		641	=>	269
		659	=>	39
		661	=>	84
		663	=>	217
		664	=>	145
		667	=>	201
		668	=>	211
		669	=>	284
		670	=>	141
		671	=>	82
		673	=>	10
		674	=>	286
		676	=>	114
		677	=>	35
		678	=>	184
		679	=>	235
		680	=>	121

Class: public javax.vecmath.Quat4f	=>	a.a.x
	Source: "Quat4f.java"
	FieldsOf: javax.vecmath.Quat4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Quat4f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Quat4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public final void conjugate()	=>	h()
		public final void conjugate(javax.vecmath.Quat4f)	=>	d(a.a.x)
		public final void interpolate(javax.vecmath.Quat4f, float)	=>	a(a.a.x, float)
		public final void interpolate(javax.vecmath.Quat4f, javax.vecmath.Quat4f, float)	=>	a(a.a.x, a.a.x, float)
		public final void inverse()	=>	i()
		public final void inverse(javax.vecmath.Quat4f)	=>	a(a.a.x)
		public final void mul(javax.vecmath.Quat4f)	=>	c(a.a.x)
		public final void mul(javax.vecmath.Quat4f, javax.vecmath.Quat4f)	=>	b(a.a.x, a.a.x)
		public final void mulInverse(javax.vecmath.Quat4f)	=>	b(a.a.x)
		public final void mulInverse(javax.vecmath.Quat4f, javax.vecmath.Quat4f)	=>	a(a.a.x, a.a.x)
		public final void normalize()	=>	j()
		public final void normalize(javax.vecmath.Quat4f)	=>	e(a.a.x)
		public final void set(javax.vecmath.AxisAngle4d)	=>	a(a.a.c)
		public final void set(javax.vecmath.AxisAngle4f)	=>	a(a.a.q)
		public final void set(javax.vecmath.Matrix3d)	=>	a(a.a.T)
		public final void set(javax.vecmath.Matrix3f)	=>	a(a.a.o)
		public final void set(javax.vecmath.Matrix4d)	=>	a(a.a.n)
		public final void set(javax.vecmath.Matrix4f)	=>	a(a.a.U)
	LineNumbersOf: javax.vecmath.Quat4f
		58	=>	32
		60	=>	105
		61	=>	263
		62	=>	222
		63	=>	157
		64	=>	22
		66	=>	199
		73	=>	147
		75	=>	190
		76	=>	109
		77	=>	106
		78	=>	39
		79	=>	267
		81	=>	63
		90	=>	310
		91	=>	69
		99	=>	156
		100	=>	93
		108	=>	291
		110	=>	123
		111	=>	54
		112	=>	113
		113	=>	191
		114	=>	301
		116	=>	117
		124	=>	119
		126	=>	59
		127	=>	205
		128	=>	77
		129	=>	120
		130	=>	131
		131	=>	285
		139	=>	188
		140	=>	83
		149	=>	111
		150	=>	247
		151	=>	298
		152	=>	227
		153	=>	36
		160	=>	237
		161	=>	233
		162	=>	5
		163	=>	251
		175	=>	152
		176	=>	98
		177	=>	236
		178	=>	15
		179	=>	194
		183	=>	292
		184	=>	3
		185	=>	307
		186	=>	110
		187	=>	245
		188	=>	224
		189	=>	230
		191	=>	8
		203	=>	118
		204	=>	178
		205	=>	265
		206	=>	244
		207	=>	144
		208	=>	168
		209	=>	215
		210	=>	286
		222	=>	293
		224	=>	148
		225	=>	17
		226	=>	20
		238	=>	141
		240	=>	255
		241	=>	6
		242	=>	290
		254	=>	58
		255	=>	10
		256	=>	185
		257	=>	27
		258	=>	43
		259	=>	82
		269	=>	90
		270	=>	87
		271	=>	210
		272	=>	14
		273	=>	241
		274	=>	125
		286	=>	44
		288	=>	163
		289	=>	305
		290	=>	284
		291	=>	55
		292	=>	203
		293	=>	303
		295	=>	252
		296	=>	102
		297	=>	74
		298	=>	206
		300	=>	287
		310	=>	134
		312	=>	264
		313	=>	278
		314	=>	50
		315	=>	12
		316	=>	202
		317	=>	219
		319	=>	181
		320	=>	246
		321	=>	159
		322	=>	254
		324	=>	302
		334	=>	201
		336	=>	121
		337	=>	41
		338	=>	161
		339	=>	154
		340	=>	79
		341	=>	300
		342	=>	160
		343	=>	197
		346	=>	126
		347	=>	95
		348	=>	289
		349	=>	116
		350	=>	53
		353	=>	175
		354	=>	89
		356	=>	169
		357	=>	133
		358	=>	19
		359	=>	30
		360	=>	136
		361	=>	221
		362	=>	212
		365	=>	84
		366	=>	180
		367	=>	308
		368	=>	72
		371	=>	183
		372	=>	38
		374	=>	71
		375	=>	184
		376	=>	64
		377	=>	112
		380	=>	16
		381	=>	213
		382	=>	146
		392	=>	13
		394	=>	309
		395	=>	158
		396	=>	46
		397	=>	75
		398	=>	143
		399	=>	99
		400	=>	31
		401	=>	11
		404	=>	277
		405	=>	276
		406	=>	234
		407	=>	80
		408	=>	26
		411	=>	238
		412	=>	92
		413	=>	86
		414	=>	155
		415	=>	145
		416	=>	282
		417	=>	33
		418	=>	176
		419	=>	135
		422	=>	232
		423	=>	73
		424	=>	29
		425	=>	56
		428	=>	81
		429	=>	182
		430	=>	47
		431	=>	76
		432	=>	114
		433	=>	130
		436	=>	166
		437	=>	66
		438	=>	268
		448	=>	193
		450	=>	52
		451	=>	149
		452	=>	296
		453	=>	91
		454	=>	128
		455	=>	248
		456	=>	218
		457	=>	192
		460	=>	78
		461	=>	139
		462	=>	239
		463	=>	18
		464	=>	150
		467	=>	257
		468	=>	281
		469	=>	211
		470	=>	204
		471	=>	171
		472	=>	162
		473	=>	272
		474	=>	275
		475	=>	177
		478	=>	279
		479	=>	88
		480	=>	228
		481	=>	48
		484	=>	153
		485	=>	274
		486	=>	283
		487	=>	216
		488	=>	67
		489	=>	235
		492	=>	107
		493	=>	127
		494	=>	124
		504	=>	25
		506	=>	214
		507	=>	209
		508	=>	243
		509	=>	129
		510	=>	35
		511	=>	295
		512	=>	34
		513	=>	288
		516	=>	258
		517	=>	200
		518	=>	68
		519	=>	223
		520	=>	164
		523	=>	229
		524	=>	165
		525	=>	57
		526	=>	260
		527	=>	170
		528	=>	104
		529	=>	271
		530	=>	273
		531	=>	61
		534	=>	262
		535	=>	37
		536	=>	85
		537	=>	253
		540	=>	299
		541	=>	137
		542	=>	138
		543	=>	294
		544	=>	108
		545	=>	270
		548	=>	186
		549	=>	167
		550	=>	140
		562	=>	142
		563	=>	4
		564	=>	173
		565	=>	172
		566	=>	225
		567	=>	187
		569	=>	280
		570	=>	179
		571	=>	40
		572	=>	1
		573	=>	115
		574	=>	304
		576	=>	198
		589	=>	195
		591	=>	249
		592	=>	226
		593	=>	45
		594	=>	242
		595	=>	196
		597	=>	217
		598	=>	70
		599	=>	42
		600	=>	207
		601	=>	9
		602	=>	65
		605	=>	97
		625	=>	208
		627	=>	240
		629	=>	7
		630	=>	174
		633	=>	94
		634	=>	269
		635	=>	306
		636	=>	62
		637	=>	51
		639	=>	132
		640	=>	266
		643	=>	103
		644	=>	24
		645	=>	23
		646	=>	231
		647	=>	101
		668	=>	189
		670	=>	220
		672	=>	297
		673	=>	259
		676	=>	49
		677	=>	96
		678	=>	122
		679	=>	100
		680	=>	250
		682	=>	21
		683	=>	261
		685	=>	256
		686	=>	28
		687	=>	2
		688	=>	151
		689	=>	60

Class: public javax.vecmath.SingularMatrixException	=>	a.a.I
	Source: "SingularMatrixException.java"
	FieldsOf: javax.vecmath.SingularMatrixException
	MethodsOf: javax.vecmath.SingularMatrixException
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.SingularMatrixException
		42	=>	1
		43	=>	4
		51	=>	2
		52	=>	3

Class: public javax.vecmath.TexCoord2f	=>	a.a.R
	Source: "TexCoord2f.java"
	FieldsOf: javax.vecmath.TexCoord2f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.TexCoord2f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.TexCoord2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.TexCoord2f
		53	=>	7
		54	=>	1
		63	=>	10
		64	=>	6
		73	=>	9
		74	=>	2
		83	=>	3
		84	=>	4
		92	=>	8
		93	=>	5

Class: public javax.vecmath.TexCoord3f	=>	a.a.G
	Source: "TexCoord3f.java"
	FieldsOf: javax.vecmath.TexCoord3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.TexCoord3f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.TexCoord3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.TexCoord3f
		55	=>	10
		56	=>	12
		65	=>	1
		66	=>	8
		75	=>	6
		76	=>	11
		85	=>	9
		86	=>	5
		95	=>	2
		96	=>	4
		104	=>	3
		105	=>	7

Class: public javax.vecmath.TexCoord4f	=>	a.a.y
	Source: "TexCoord4f.java"
	FieldsOf: javax.vecmath.TexCoord4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.TexCoord4f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.TexCoord4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.TexCoord4f
		57	=>	9
		58	=>	8
		67	=>	12
		68	=>	4
		77	=>	6
		78	=>	10
		87	=>	5
		88	=>	11
		97	=>	2
		98	=>	1
		106	=>	3
		107	=>	7

Class: public abstract javax.vecmath.Tuple2d	=>	a.a.g
	Source: "Tuple2d.java"
	FieldsOf: javax.vecmath.Tuple2d
		static final long serialVersionUID	NameNotChanged
		public double x	=>	b
		public double y	=>	a
	MethodsOf: javax.vecmath.Tuple2d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	c()
		public final void absolute(javax.vecmath.Tuple2d)	=>	c(a.a.g)
		public final void add(javax.vecmath.Tuple2d)	=>	a(a.a.g)
		public final void add(javax.vecmath.Tuple2d, javax.vecmath.Tuple2d)	=>	b(a.a.g, a.a.g)
		public final void clamp(double, double)	=>	a(double, double)
		public final void clamp(double, double, javax.vecmath.Tuple2d)	=>	a(double, double, a.a.g)
		public final void clampMax(double)	=>	b(double)
		public final void clampMax(double, javax.vecmath.Tuple2d)	=>	a(double, a.a.g)
		public final void clampMin(double)	=>	d(double)
		public final void clampMin(double, javax.vecmath.Tuple2d)	=>	d(double, a.a.g)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple2d, double)	=>	b(a.a.g, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple2d)	=>	f(a.a.g)
		public final void get(double[])	=>	b(double[])
		public final double getX()	=>	a()
		public final double getY()	=>	d()
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(javax.vecmath.Tuple2d, double)	=>	a(a.a.g, double)
		public final void interpolate(javax.vecmath.Tuple2d, javax.vecmath.Tuple2d, double)	=>	a(a.a.g, a.a.g, double)
		public final void negate()	=>	b()
		public final void negate(javax.vecmath.Tuple2d)	=>	d(a.a.g)
		public final void scale(double)	=>	e(double)
		public final void scale(double, javax.vecmath.Tuple2d)	=>	b(double, a.a.g)
		public final void scaleAdd(double, javax.vecmath.Tuple2d)	=>	c(double, a.a.g)
		public final void scaleAdd(double, javax.vecmath.Tuple2d, javax.vecmath.Tuple2d)	=>	a(double, a.a.g, a.a.g)
		public final void set(double, double)	=>	b(double, double)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.Tuple2d)	=>	b(a.a.g)
		public final void set(javax.vecmath.Tuple2f)	=>	a(a.a.P)
		public final void setX(double)	=>	c(double)
		public final void setY(double)	=>	a(double)
		public final void sub(javax.vecmath.Tuple2d)	=>	e(a.a.g)
		public final void sub(javax.vecmath.Tuple2d, javax.vecmath.Tuple2d)	=>	a(a.a.g, a.a.g)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple2d
		62	=>	125
		63	=>	87
		64	=>	9
		65	=>	55
		73	=>	5
		74	=>	49
		75	=>	72
		76	=>	133
		84	=>	66
		85	=>	27
		86	=>	106
		87	=>	80
		95	=>	138
		96	=>	22
		97	=>	137
		98	=>	73
		104	=>	42
		105	=>	39
		106	=>	130
		107	=>	84
		117	=>	102
		118	=>	67
		119	=>	7
		129	=>	115
		130	=>	56
		131	=>	135
		140	=>	19
		141	=>	136
		142	=>	11
		151	=>	107
		152	=>	24
		153	=>	64
		161	=>	90
		162	=>	35
		163	=>	29
		173	=>	62
		174	=>	76
		175	=>	113
		184	=>	68
		185	=>	118
		186	=>	96
		197	=>	52
		198	=>	30
		199	=>	46
		209	=>	81
		210	=>	124
		211	=>	14
		220	=>	139
		221	=>	82
		222	=>	38
		230	=>	4
		231	=>	28
		232	=>	95
		243	=>	128
		244	=>	77
		245	=>	33
		255	=>	40
		256	=>	121
		257	=>	110
		269	=>	75
		270	=>	132
		271	=>	74
		282	=>	93
		283	=>	100
		284	=>	10
		297	=>	111
		298	=>	99
		299	=>	32
		300	=>	79
		313	=>	20
		315	=>	78
		329	=>	117
		330	=>	119
		332	=>	50
		333	=>	94
		350	=>	126
		351	=>	25
		352	=>	98
		354	=>	18
		355	=>	103
		356	=>	59
		358	=>	26
		368	=>	8
		381	=>	114
		382	=>	116
		383	=>	83
		384	=>	142
		386	=>	131
		389	=>	123
		390	=>	61
		391	=>	112
		392	=>	54
		394	=>	34
		397	=>	91
		408	=>	70
		409	=>	88
		411	=>	86
		414	=>	17
		415	=>	97
		417	=>	53
		420	=>	48
		431	=>	41
		432	=>	143
		434	=>	140
		437	=>	141
		438	=>	37
		440	=>	89
		443	=>	3
		453	=>	105
		454	=>	108
		455	=>	16
		466	=>	122
		467	=>	6
		468	=>	58
		469	=>	44
		472	=>	36
		473	=>	12
		474	=>	85
		475	=>	2
		478	=>	104
		487	=>	101
		488	=>	129
		489	=>	47
		498	=>	21
		499	=>	109
		500	=>	51
		508	=>	23
		509	=>	60
		510	=>	134
		522	=>	65
		523	=>	31
		524	=>	1
		535	=>	57
		536	=>	71
		538	=>	15
		551	=>	92
		552	=>	13
		554	=>	144
		567	=>	45
		579	=>	69
		580	=>	120
		591	=>	43
		603	=>	127
		604	=>	63

Class: public abstract javax.vecmath.Tuple2f	=>	a.a.P
	Source: "Tuple2f.java"
	FieldsOf: javax.vecmath.Tuple2f
		static final long serialVersionUID	NameNotChanged
		public float x	=>	b
		public float y	=>	a
	MethodsOf: javax.vecmath.Tuple2f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	c()
		public final void absolute(javax.vecmath.Tuple2f)	=>	f(a.a.P)
		public final void add(javax.vecmath.Tuple2f)	=>	a(a.a.P)
		public final void add(javax.vecmath.Tuple2f, javax.vecmath.Tuple2f)	=>	b(a.a.P, a.a.P)
		public final void clamp(float, float)	=>	b(float, float)
		public final void clamp(float, float, javax.vecmath.Tuple2f)	=>	a(float, float, a.a.P)
		public final void clampMax(float)	=>	a(float)
		public final void clampMax(float, javax.vecmath.Tuple2f)	=>	d(float, a.a.P)
		public final void clampMin(float)	=>	e(float)
		public final void clampMin(float, javax.vecmath.Tuple2f)	=>	a(float, a.a.P)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple2f, float)	=>	a(a.a.P, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple2f)	=>	c(a.a.P)
		public final void get(float[])	=>	b(float[])
		public final float getX()	=>	a()
		public final float getY()	=>	b()
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(javax.vecmath.Tuple2f, float)	=>	b(a.a.P, float)
		public final void interpolate(javax.vecmath.Tuple2f, javax.vecmath.Tuple2f, float)	=>	a(a.a.P, a.a.P, float)
		public final void negate()	=>	d()
		public final void negate(javax.vecmath.Tuple2f)	=>	b(a.a.P)
		public final void scale(float)	=>	d(float)
		public final void scale(float, javax.vecmath.Tuple2f)	=>	b(float, a.a.P)
		public final void scaleAdd(float, javax.vecmath.Tuple2f)	=>	c(float, a.a.P)
		public final void scaleAdd(float, javax.vecmath.Tuple2f, javax.vecmath.Tuple2f)	=>	a(float, a.a.P, a.a.P)
		public final void set(float, float)	=>	a(float, float)
		public final void set(float[])	=>	a(float[])
		public final void set(javax.vecmath.Tuple2d)	=>	a(a.a.g)
		public final void set(javax.vecmath.Tuple2f)	=>	e(a.a.P)
		public final void setX(float)	=>	c(float)
		public final void setY(float)	=>	b(float)
		public final void sub(javax.vecmath.Tuple2f)	=>	d(a.a.P)
		public final void sub(javax.vecmath.Tuple2f, javax.vecmath.Tuple2f)	=>	a(a.a.P, a.a.P)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple2f
		62	=>	26
		63	=>	96
		64	=>	138
		65	=>	106
		73	=>	38
		74	=>	37
		75	=>	123
		76	=>	71
		84	=>	103
		85	=>	77
		86	=>	17
		87	=>	133
		95	=>	136
		96	=>	57
		97	=>	118
		98	=>	53
		105	=>	144
		106	=>	24
		107	=>	72
		108	=>	43
		118	=>	92
		119	=>	107
		120	=>	111
		130	=>	88
		131	=>	127
		132	=>	66
		141	=>	16
		142	=>	9
		143	=>	74
		152	=>	65
		153	=>	49
		154	=>	45
		163	=>	46
		164	=>	68
		165	=>	112
		175	=>	80
		176	=>	60
		177	=>	55
		186	=>	141
		187	=>	44
		188	=>	89
		199	=>	54
		200	=>	40
		201	=>	59
		211	=>	76
		212	=>	42
		213	=>	85
		222	=>	114
		223	=>	13
		224	=>	120
		232	=>	20
		233	=>	90
		234	=>	98
		245	=>	125
		246	=>	41
		247	=>	22
		257	=>	140
		258	=>	82
		259	=>	109
		271	=>	87
		272	=>	122
		273	=>	78
		284	=>	1
		285	=>	110
		286	=>	61
		299	=>	23
		300	=>	142
		301	=>	62
		302	=>	105
		315	=>	2
		317	=>	15
		331	=>	124
		332	=>	79
		334	=>	48
		335	=>	5
		352	=>	130
		353	=>	50
		354	=>	52
		356	=>	134
		357	=>	10
		358	=>	137
		360	=>	81
		370	=>	73
		383	=>	12
		384	=>	75
		385	=>	19
		386	=>	58
		388	=>	29
		391	=>	67
		392	=>	101
		393	=>	126
		394	=>	47
		396	=>	7
		399	=>	94
		410	=>	63
		411	=>	91
		413	=>	64
		416	=>	115
		417	=>	116
		419	=>	139
		422	=>	84
		433	=>	99
		434	=>	25
		436	=>	132
		439	=>	6
		440	=>	86
		442	=>	93
		445	=>	4
		455	=>	30
		456	=>	51
		457	=>	34
		468	=>	56
		469	=>	35
		470	=>	70
		471	=>	69
		474	=>	121
		475	=>	18
		476	=>	129
		477	=>	33
		480	=>	97
		489	=>	135
		490	=>	31
		491	=>	28
		500	=>	11
		501	=>	8
		502	=>	3
		510	=>	128
		511	=>	113
		512	=>	14
		524	=>	102
		525	=>	39
		527	=>	95
		539	=>	32
		540	=>	27
		542	=>	117
		555	=>	104
		556	=>	21
		558	=>	83
		571	=>	100
		583	=>	131
		584	=>	36
		595	=>	143
		607	=>	119
		608	=>	108

Class: public abstract javax.vecmath.Tuple2i	=>	a.a.a
	Source: "Tuple2i.java"
	FieldsOf: javax.vecmath.Tuple2i
		static final long serialVersionUID	NameNotChanged
		public int x	=>	a
		public int y	=>	b
	MethodsOf: javax.vecmath.Tuple2i
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2i) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	b()
		public final void absolute(javax.vecmath.Tuple2i)	=>	a(a.a.a)
		public final void add(javax.vecmath.Tuple2i)	=>	b(a.a.a)
		public final void add(javax.vecmath.Tuple2i, javax.vecmath.Tuple2i)	=>	b(a.a.a, a.a.a)
		public final void clamp(int, int)	=>	b(int, int)
		public final void clamp(int, int, javax.vecmath.Tuple2i)	=>	a(int, int, a.a.a)
		public final void clampMax(int)	=>	b(int)
		public final void clampMax(int, javax.vecmath.Tuple2i)	=>	a(int, a.a.a)
		public final void clampMin(int)	=>	e(int)
		public final void clampMin(int, javax.vecmath.Tuple2i)	=>	d(int, a.a.a)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(int[])	=>	b(int[])
		public final void get(javax.vecmath.Tuple2i)	=>	f(a.a.a)
		public final int getX()	=>	a()
		public final int getY()	=>	d()
		public int hashCode() 	SignatureNotChanged
		public final void negate()	=>	c()
		public final void negate(javax.vecmath.Tuple2i)	=>	d(a.a.a)
		public final void scale(int)	=>	a(int)
		public final void scale(int, javax.vecmath.Tuple2i)	=>	c(int, a.a.a)
		public final void scaleAdd(int, javax.vecmath.Tuple2i)	=>	b(int, a.a.a)
		public final void scaleAdd(int, javax.vecmath.Tuple2i, javax.vecmath.Tuple2i)	=>	a(int, a.a.a, a.a.a)
		public final void set(int, int)	=>	a(int, int)
		public final void set(int[])	=>	a(int[])
		public final void set(javax.vecmath.Tuple2i)	=>	c(a.a.a)
		public final void setX(int)	=>	d(int)
		public final void setY(int)	=>	c(int)
		public final void sub(javax.vecmath.Tuple2i)	=>	e(a.a.a)
		public final void sub(javax.vecmath.Tuple2i, javax.vecmath.Tuple2i)	=>	a(a.a.a, a.a.a)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple2i
		63	=>	130
		64	=>	15
		65	=>	78
		66	=>	45
		73	=>	6
		74	=>	121
		75	=>	87
		76	=>	103
		84	=>	57
		85	=>	42
		86	=>	19
		87	=>	31
		93	=>	36
		94	=>	12
		95	=>	120
		96	=>	68
		106	=>	3
		107	=>	67
		108	=>	92
		117	=>	24
		118	=>	125
		119	=>	59
		127	=>	93
		128	=>	90
		129	=>	25
		137	=>	51
		138	=>	98
		139	=>	47
		147	=>	110
		148	=>	95
		149	=>	71
		158	=>	126
		159	=>	55
		160	=>	44
		168	=>	82
		169	=>	29
		170	=>	60
		180	=>	88
		181	=>	52
		182	=>	2
		191	=>	49
		192	=>	58
		193	=>	48
		201	=>	28
		202	=>	74
		203	=>	85
		210	=>	112
		211	=>	20
		212	=>	116
		222	=>	27
		223	=>	64
		224	=>	111
		233	=>	32
		234	=>	1
		235	=>	79
		246	=>	18
		247	=>	86
		248	=>	37
		258	=>	46
		259	=>	61
		260	=>	97
		269	=>	73
		281	=>	26
		282	=>	13
		284	=>	39
		285	=>	7
		287	=>	80
		288	=>	10
		302	=>	54
		303	=>	100
		304	=>	114
		305	=>	123
		317	=>	40
		318	=>	117
		319	=>	53
		320	=>	77
		322	=>	131
		325	=>	119
		326	=>	107
		327	=>	34
		328	=>	122
		330	=>	118
		332	=>	96
		342	=>	83
		343	=>	89
		345	=>	102
		348	=>	9
		349	=>	84
		351	=>	35
		353	=>	14
		363	=>	104
		364	=>	65
		366	=>	8
		369	=>	4
		370	=>	30
		372	=>	50
		374	=>	105
		383	=>	99
		384	=>	127
		385	=>	108
		394	=>	113
		395	=>	81
		396	=>	66
		397	=>	43
		400	=>	16
		401	=>	124
		402	=>	69
		403	=>	75
		405	=>	62
		413	=>	22
		414	=>	23
		416	=>	17
		417	=>	129
		418	=>	91
		426	=>	21
		427	=>	128
		429	=>	94
		430	=>	38
		431	=>	5
		438	=>	70
		439	=>	72
		440	=>	115
		452	=>	56
		453	=>	33
		455	=>	109
		468	=>	101
		480	=>	41
		481	=>	106
		492	=>	11
		504	=>	76
		505	=>	63

Class: public abstract javax.vecmath.Tuple3b	=>	a.a.s
	Source: "Tuple3b.java"
	FieldsOf: javax.vecmath.Tuple3b
		static final long serialVersionUID	NameNotChanged
		public byte x	=>	a
		public byte y	=>	c
		public byte z	=>	b
	MethodsOf: javax.vecmath.Tuple3b
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(byte, byte, byte) 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3b) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple3b)	=>	a(a.a.s)
		public final void get(byte[])	=>	b(byte[])
		public final void get(javax.vecmath.Tuple3b)	=>	c(a.a.s)
		public final byte getX()	=>	a()
		public final byte getY()	=>	b()
		public final byte getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public final void set(byte[])	=>	a(byte[])
		public final void set(javax.vecmath.Tuple3b)	=>	b(a.a.s)
		public final void setX(byte)	=>	a(byte)
		public final void setY(byte)	=>	c(byte)
		public final void setZ(byte)	=>	b(byte)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple3b
		77	=>	29
		78	=>	5
		79	=>	54
		80	=>	37
		81	=>	50
		89	=>	49
		90	=>	8
		91	=>	20
		92	=>	10
		93	=>	26
		101	=>	4
		102	=>	3
		103	=>	45
		104	=>	12
		105	=>	43
		112	=>	51
		113	=>	17
		114	=>	42
		115	=>	28
		116	=>	19
		125	=>	11
		139	=>	21
		140	=>	56
		141	=>	2
		142	=>	31
		152	=>	15
		153	=>	40
		154	=>	27
		155	=>	18
		165	=>	36
		166	=>	55
		167	=>	38
		168	=>	6
		178	=>	52
		179	=>	16
		180	=>	34
		181	=>	22
		193	=>	9
		195	=>	48
		208	=>	35
		209	=>	39
		211	=>	30
		212	=>	7
		225	=>	1
		241	=>	46
		242	=>	47
		244	=>	13
		257	=>	41
		269	=>	24
		270	=>	53
		281	=>	14
		293	=>	32
		294	=>	23
		304	=>	44
		316	=>	33
		317	=>	25

Class: public abstract javax.vecmath.Tuple3d	=>	a.a.L
	Source: "Tuple3d.java"
	FieldsOf: javax.vecmath.Tuple3d
		static final long serialVersionUID	NameNotChanged
		public double x	=>	b
		public double y	=>	a
		public double z	=>	c
	MethodsOf: javax.vecmath.Tuple3d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void absolute()	=>	c()
		public final void absolute(javax.vecmath.Tuple3d)	=>	e(a.a.L)
		public final void add(javax.vecmath.Tuple3d)	=>	f(a.a.L)
		public final void add(javax.vecmath.Tuple3d, javax.vecmath.Tuple3d)	=>	a(a.a.L, a.a.L)
		public final void clamp(double, double)	=>	a(double, double)
		public final void clamp(double, double, javax.vecmath.Tuple3d)	=>	a(double, double, a.a.L)
		public final void clamp(float, float)	=>	a(float, float)
		public final void clamp(float, float, javax.vecmath.Tuple3d)	=>	a(float, float, a.a.L)
		public final void clampMax(double)	=>	d(double)
		public final void clampMax(double, javax.vecmath.Tuple3d)	=>	d(double, a.a.L)
		public final void clampMax(float)	=>	a(float)
		public final void clampMax(float, javax.vecmath.Tuple3d)	=>	a(float, a.a.L)
		public final void clampMin(double)	=>	b(double)
		public final void clampMin(double, javax.vecmath.Tuple3d)	=>	a(double, a.a.L)
		public final void clampMin(float)	=>	b(float)
		public final void clampMin(float, javax.vecmath.Tuple3d)	=>	b(float, a.a.L)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple3d, double)	=>	a(a.a.L, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple3d)	=>	g(a.a.L)
		public final void get(double[])	=>	a(double[])
		public final void get(javax.vecmath.Tuple3d)	=>	a(a.a.L)
		public final double getX()	=>	a()
		public final double getY()	=>	b()
		public final double getZ()	=>	e()
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(javax.vecmath.Tuple3d, double)	=>	b(a.a.L, double)
		public final void interpolate(javax.vecmath.Tuple3d, float)	=>	a(a.a.L, float)
		public final void interpolate(javax.vecmath.Tuple3d, javax.vecmath.Tuple3d, double)	=>	a(a.a.L, a.a.L, double)
		public final void interpolate(javax.vecmath.Tuple3d, javax.vecmath.Tuple3d, float)	=>	a(a.a.L, a.a.L, float)
		public final void negate()	=>	d()
		public final void negate(javax.vecmath.Tuple3d)	=>	c(a.a.L)
		public final void scale(double)	=>	f(double)
		public final void scale(double, javax.vecmath.Tuple3d)	=>	c(double, a.a.L)
		public final void scaleAdd(double, javax.vecmath.Tuple3d)	=>	b(double, a.a.L)
		public final void scaleAdd(double, javax.vecmath.Tuple3d, javax.vecmath.Tuple3d)	=>	a(double, a.a.L, a.a.L)
		public final void scaleAdd(double, javax.vecmath.Tuple3f)	=>	a(double, a.a.D)
		public final void set(double, double, double)	=>	a(double, double, double)
		public final void set(double[])	=>	b(double[])
		public final void set(javax.vecmath.Tuple3d)	=>	d(a.a.L)
		public final void set(javax.vecmath.Tuple3f)	=>	a(a.a.D)
		public final void setX(double)	=>	a(double)
		public final void setY(double)	=>	e(double)
		public final void setZ(double)	=>	c(double)
		public final void sub(javax.vecmath.Tuple3d)	=>	b(a.a.L)
		public final void sub(javax.vecmath.Tuple3d, javax.vecmath.Tuple3d)	=>	b(a.a.L, a.a.L)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple3d
		68	=>	28
		69	=>	150
		70	=>	159
		71	=>	136
		72	=>	56
		79	=>	203
		80	=>	13
		81	=>	173
		82	=>	170
		83	=>	21
		90	=>	68
		91	=>	172
		92	=>	171
		93	=>	210
		94	=>	14
		101	=>	132
		102	=>	147
		103	=>	117
		104	=>	50
		105	=>	52
		111	=>	157
		112	=>	36
		113	=>	44
		114	=>	134
		115	=>	119
		125	=>	71
		126	=>	59
		127	=>	208
		128	=>	74
		137	=>	89
		138	=>	39
		139	=>	149
		140	=>	88
		148	=>	184
		149	=>	4
		150	=>	85
		151	=>	143
		159	=>	140
		160	=>	67
		161	=>	116
		162	=>	45
		171	=>	197
		172	=>	96
		173	=>	103
		174	=>	125
		183	=>	151
		184	=>	24
		185	=>	60
		186	=>	47
		196	=>	204
		197	=>	18
		198	=>	133
		199	=>	155
		208	=>	165
		209	=>	199
		210	=>	158
		211	=>	6
		221	=>	118
		222	=>	205
		223	=>	58
		224	=>	126
		233	=>	190
		234	=>	189
		235	=>	175
		236	=>	138
		245	=>	196
		246	=>	62
		247	=>	131
		248	=>	160
		256	=>	70
		257	=>	69
		258	=>	212
		259	=>	115
		270	=>	121
		271	=>	128
		272	=>	48
		273	=>	31
		283	=>	2
		284	=>	3
		285	=>	27
		286	=>	166
		298	=>	181
		299	=>	22
		300	=>	54
		301	=>	98
		308	=>	129
		309	=>	120
		319	=>	38
		320	=>	206
		321	=>	15
		322	=>	17
		332	=>	55
		345	=>	77
		346	=>	94
		347	=>	144
		348	=>	111
		349	=>	41
		362	=>	30
		364	=>	37
		377	=>	16
		378	=>	114
		380	=>	97
		381	=>	192
		398	=>	130
		399	=>	198
		400	=>	207
		402	=>	100
		403	=>	9
		404	=>	57
		406	=>	123
		407	=>	29
		408	=>	83
		410	=>	25
		419	=>	109
		420	=>	99
		431	=>	135
		432	=>	163
		433	=>	86
		434	=>	91
		436	=>	35
		439	=>	107
		440	=>	177
		441	=>	87
		442	=>	75
		444	=>	162
		447	=>	26
		448	=>	182
		449	=>	92
		450	=>	187
		452	=>	145
		455	=>	23
		462	=>	213
		463	=>	5
		473	=>	142
		474	=>	42
		476	=>	51
		479	=>	72
		480	=>	90
		482	=>	53
		485	=>	209
		486	=>	124
		488	=>	80
		491	=>	127
		498	=>	65
		499	=>	194
		509	=>	81
		510	=>	174
		512	=>	202
		515	=>	19
		516	=>	201
		518	=>	73
		521	=>	79
		522	=>	46
		524	=>	156
		527	=>	152
		537	=>	167
		538	=>	211
		539	=>	84
		541	=>	193
		548	=>	186
		549	=>	102
		558	=>	20
		559	=>	180
		560	=>	141
		561	=>	66
		564	=>	40
		565	=>	106
		566	=>	49
		567	=>	200
		570	=>	11
		571	=>	137
		572	=>	32
		573	=>	105
		576	=>	34
		583	=>	168
		584	=>	139
		592	=>	195
		593	=>	185
		594	=>	95
		596	=>	93
		603	=>	63
		604	=>	64
		612	=>	183
		613	=>	108
		614	=>	10
		615	=>	33
		623	=>	161
		624	=>	104
		625	=>	179
		626	=>	113
		633	=>	176
		634	=>	148
		645	=>	1
		646	=>	154
		647	=>	82
		648	=>	61
		655	=>	122
		656	=>	178
		666	=>	164
		667	=>	153
		668	=>	112
		669	=>	7
		682	=>	8
		683	=>	78
		685	=>	110
		697	=>	169
		709	=>	191
		710	=>	43
		721	=>	12
		733	=>	101
		734	=>	76
		744	=>	146
		756	=>	188
		757	=>	214

Class: public abstract javax.vecmath.Tuple3f	=>	a.a.D
	Source: "Tuple3f.java"
	FieldsOf: javax.vecmath.Tuple3f
		static final long serialVersionUID	NameNotChanged
		public float x	=>	b
		public float y	=>	a
		public float z	=>	c
	MethodsOf: javax.vecmath.Tuple3f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	b()
		public final void absolute(javax.vecmath.Tuple3f)	=>	c(a.a.D)
		public final void add(javax.vecmath.Tuple3f)	=>	e(a.a.D)
		public final void add(javax.vecmath.Tuple3f, javax.vecmath.Tuple3f)	=>	a(a.a.D, a.a.D)
		public final void clamp(float, float)	=>	a(float, float)
		public final void clamp(float, float, javax.vecmath.Tuple3f)	=>	a(float, float, a.a.D)
		public final void clampMax(float)	=>	a(float)
		public final void clampMax(float, javax.vecmath.Tuple3f)	=>	c(float, a.a.D)
		public final void clampMin(float)	=>	c(float)
		public final void clampMin(float, javax.vecmath.Tuple3f)	=>	d(float, a.a.D)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple3f, float)	=>	b(a.a.D, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple3f)	=>	f(a.a.D)
		public final void get(float[])	=>	b(float[])
		public final void get(javax.vecmath.Tuple3f)	=>	d(a.a.D)
		public final float getX()	=>	a()
		public final float getY()	=>	e()
		public final float getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(javax.vecmath.Tuple3f, float)	=>	a(a.a.D, float)
		public final void interpolate(javax.vecmath.Tuple3f, javax.vecmath.Tuple3f, float)	=>	a(a.a.D, a.a.D, float)
		public final void negate()	=>	d()
		public final void negate(javax.vecmath.Tuple3f)	=>	a(a.a.D)
		public final void scale(float)	=>	d(float)
		public final void scale(float, javax.vecmath.Tuple3f)	=>	b(float, a.a.D)
		public final void scaleAdd(float, javax.vecmath.Tuple3f)	=>	a(float, a.a.D)
		public final void scaleAdd(float, javax.vecmath.Tuple3f, javax.vecmath.Tuple3f)	=>	a(float, a.a.D, a.a.D)
		public final void set(float, float, float)	=>	a(float, float, float)
		public final void set(float[])	=>	a(float[])
		public final void set(javax.vecmath.Tuple3d)	=>	a(a.a.L)
		public final void set(javax.vecmath.Tuple3f)	=>	g(a.a.D)
		public final void setX(float)	=>	b(float)
		public final void setY(float)	=>	e(float)
		public final void setZ(float)	=>	f(float)
		public final void sub(javax.vecmath.Tuple3f)	=>	b(a.a.D)
		public final void sub(javax.vecmath.Tuple3f, javax.vecmath.Tuple3f)	=>	b(a.a.D, a.a.D)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple3f
		68	=>	51
		69	=>	102
		70	=>	196
		71	=>	47
		72	=>	144
		80	=>	137
		81	=>	14
		82	=>	62
		83	=>	41
		84	=>	135
		92	=>	97
		93	=>	21
		94	=>	173
		95	=>	86
		96	=>	71
		104	=>	110
		105	=>	189
		106	=>	6
		107	=>	25
		108	=>	153
		115	=>	72
		116	=>	164
		117	=>	174
		118	=>	60
		119	=>	20
		128	=>	100
		140	=>	54
		141	=>	124
		142	=>	75
		143	=>	181
		153	=>	53
		154	=>	188
		155	=>	96
		156	=>	5
		165	=>	79
		166	=>	107
		167	=>	147
		168	=>	159
		177	=>	101
		178	=>	66
		179	=>	160
		180	=>	131
		189	=>	128
		190	=>	125
		191	=>	81
		192	=>	77
		201	=>	46
		202	=>	43
		203	=>	17
		204	=>	190
		214	=>	193
		215	=>	84
		216	=>	194
		217	=>	122
		226	=>	35
		227	=>	179
		228	=>	172
		229	=>	184
		240	=>	162
		241	=>	165
		242	=>	156
		243	=>	120
		253	=>	183
		254	=>	48
		255	=>	78
		256	=>	68
		265	=>	23
		266	=>	7
		267	=>	56
		268	=>	10
		276	=>	1
		277	=>	154
		278	=>	146
		279	=>	90
		290	=>	126
		291	=>	83
		292	=>	112
		293	=>	167
		303	=>	34
		304	=>	95
		305	=>	88
		306	=>	28
		318	=>	59
		319	=>	61
		320	=>	99
		321	=>	104
		333	=>	42
		334	=>	44
		335	=>	191
		336	=>	2
		349	=>	27
		351	=>	103
		363	=>	12
		364	=>	85
		366	=>	11
		367	=>	148
		384	=>	136
		385	=>	152
		386	=>	130
		388	=>	8
		389	=>	37
		390	=>	187
		392	=>	170
		393	=>	76
		394	=>	178
		396	=>	186
		410	=>	15
		411	=>	192
		412	=>	33
		413	=>	80
		414	=>	18
		428	=>	52
		429	=>	106
		430	=>	149
		431	=>	180
		433	=>	182
		436	=>	111
		437	=>	31
		438	=>	113
		439	=>	155
		441	=>	105
		444	=>	29
		445	=>	166
		446	=>	139
		447	=>	93
		449	=>	161
		452	=>	134
		463	=>	24
		464	=>	140
		466	=>	157
		469	=>	109
		470	=>	38
		472	=>	127
		475	=>	129
		476	=>	57
		478	=>	141
		481	=>	39
		492	=>	45
		493	=>	121
		495	=>	58
		498	=>	30
		499	=>	116
		501	=>	151
		504	=>	108
		505	=>	177
		507	=>	87
		510	=>	63
		520	=>	150
		521	=>	138
		522	=>	55
		523	=>	168
		534	=>	185
		535	=>	4
		536	=>	145
		537	=>	16
		540	=>	169
		541	=>	73
		542	=>	92
		543	=>	98
		546	=>	91
		547	=>	65
		548	=>	171
		549	=>	114
		552	=>	50
		561	=>	142
		562	=>	118
		563	=>	115
		565	=>	119
		574	=>	22
		575	=>	123
		576	=>	82
		578	=>	3
		586	=>	176
		587	=>	195
		588	=>	40
		590	=>	9
		602	=>	19
		603	=>	49
		604	=>	94
		607	=>	36
		618	=>	133
		619	=>	175
		620	=>	67
		623	=>	117
		636	=>	70
		637	=>	69
		639	=>	26
		652	=>	143
		664	=>	13
		665	=>	74
		676	=>	158
		688	=>	64
		689	=>	32
		699	=>	163
		711	=>	89
		712	=>	132

Class: public abstract javax.vecmath.Tuple3i	=>	a.a.J
	Source: "Tuple3i.java"
	FieldsOf: javax.vecmath.Tuple3i
		static final long serialVersionUID	NameNotChanged
		public int x	=>	a
		public int y	=>	b
		public int z	=>	c
	MethodsOf: javax.vecmath.Tuple3i
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3i) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	b()
		public final void absolute(javax.vecmath.Tuple3i)	=>	d(a.a.J)
		public final void add(javax.vecmath.Tuple3i)	=>	c(a.a.J)
		public final void add(javax.vecmath.Tuple3i, javax.vecmath.Tuple3i)	=>	a(a.a.J, a.a.J)
		public final void clamp(int, int)	=>	a(int, int)
		public final void clamp(int, int, javax.vecmath.Tuple3i)	=>	a(int, int, a.a.J)
		public final void clampMax(int)	=>	d(int)
		public final void clampMax(int, javax.vecmath.Tuple3i)	=>	b(int, a.a.J)
		public final void clampMin(int)	=>	a(int)
		public final void clampMin(int, javax.vecmath.Tuple3i)	=>	a(int, a.a.J)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(int[])	=>	a(int[])
		public final void get(javax.vecmath.Tuple3i)	=>	b(a.a.J)
		public final int getX()	=>	d()
		public final int getY()	=>	a()
		public final int getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public final void negate()	=>	e()
		public final void negate(javax.vecmath.Tuple3i)	=>	a(a.a.J)
		public final void scale(int)	=>	c(int)
		public final void scale(int, javax.vecmath.Tuple3i)	=>	c(int, a.a.J)
		public final void scaleAdd(int, javax.vecmath.Tuple3i)	=>	d(int, a.a.J)
		public final void scaleAdd(int, javax.vecmath.Tuple3i, javax.vecmath.Tuple3i)	=>	a(int, a.a.J, a.a.J)
		public final void set(int, int, int)	=>	a(int, int, int)
		public final void set(int[])	=>	b(int[])
		public final void set(javax.vecmath.Tuple3i)	=>	e(a.a.J)
		public final void setX(int)	=>	b(int)
		public final void setY(int)	=>	f(int)
		public final void setZ(int)	=>	e(int)
		public final void sub(javax.vecmath.Tuple3i)	=>	f(a.a.J)
		public final void sub(javax.vecmath.Tuple3i, javax.vecmath.Tuple3i)	=>	b(a.a.J, a.a.J)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple3i
		69	=>	64
		70	=>	2
		71	=>	110
		72	=>	168
		73	=>	166
		80	=>	3
		81	=>	48
		82	=>	95
		83	=>	150
		84	=>	14
		92	=>	41
		93	=>	61
		94	=>	161
		95	=>	170
		96	=>	77
		102	=>	37
		103	=>	81
		104	=>	147
		105	=>	57
		106	=>	88
		117	=>	32
		118	=>	122
		119	=>	169
		120	=>	148
		129	=>	138
		130	=>	33
		131	=>	120
		132	=>	50
		140	=>	79
		141	=>	38
		142	=>	18
		143	=>	16
		151	=>	67
		152	=>	132
		153	=>	87
		154	=>	157
		162	=>	145
		163	=>	119
		164	=>	156
		165	=>	158
		174	=>	78
		175	=>	55
		176	=>	72
		177	=>	102
		185	=>	62
		186	=>	112
		187	=>	121
		188	=>	114
		198	=>	84
		199	=>	53
		200	=>	163
		201	=>	75
		210	=>	66
		211	=>	125
		212	=>	80
		213	=>	99
		221	=>	117
		222	=>	34
		223	=>	98
		224	=>	111
		231	=>	1
		232	=>	74
		233	=>	97
		234	=>	60
		244	=>	139
		245	=>	144
		246	=>	92
		247	=>	7
		256	=>	29
		257	=>	160
		258	=>	70
		259	=>	22
		270	=>	82
		271	=>	131
		272	=>	86
		273	=>	31
		283	=>	152
		284	=>	17
		285	=>	94
		286	=>	25
		295	=>	73
		307	=>	103
		308	=>	153
		310	=>	162
		311	=>	159
		313	=>	26
		314	=>	91
		328	=>	107
		329	=>	136
		330	=>	59
		331	=>	154
		332	=>	93
		344	=>	89
		345	=>	46
		346	=>	63
		347	=>	19
		349	=>	128
		352	=>	13
		353	=>	175
		354	=>	100
		355	=>	28
		357	=>	52
		360	=>	113
		361	=>	115
		362	=>	21
		363	=>	143
		365	=>	12
		367	=>	40
		377	=>	133
		378	=>	65
		380	=>	137
		383	=>	142
		384	=>	51
		386	=>	164
		389	=>	124
		390	=>	42
		392	=>	10
		394	=>	165
		404	=>	6
		405	=>	104
		407	=>	140
		410	=>	167
		411	=>	118
		413	=>	5
		416	=>	130
		417	=>	106
		419	=>	105
		421	=>	47
		430	=>	101
		431	=>	96
		432	=>	36
		433	=>	76
		442	=>	127
		443	=>	126
		444	=>	15
		445	=>	30
		448	=>	69
		449	=>	44
		450	=>	109
		451	=>	49
		454	=>	43
		455	=>	56
		456	=>	172
		457	=>	134
		459	=>	123
		467	=>	146
		468	=>	23
		470	=>	27
		471	=>	116
		473	=>	149
		474	=>	83
		475	=>	11
		483	=>	129
		484	=>	35
		486	=>	135
		487	=>	4
		489	=>	155
		490	=>	24
		491	=>	8
		498	=>	108
		499	=>	151
		500	=>	20
		501	=>	68
		514	=>	141
		515	=>	45
		517	=>	90
		530	=>	9
		542	=>	71
		543	=>	85
		554	=>	58
		566	=>	171
		567	=>	174
		576	=>	54
		588	=>	173
		589	=>	39

Class: public abstract javax.vecmath.Tuple4b	=>	a.a.B
	Source: "Tuple4b.java"
	FieldsOf: javax.vecmath.Tuple4b
		static final long serialVersionUID	NameNotChanged
		public byte w	=>	d
		public byte x	=>	b
		public byte y	=>	c
		public byte z	=>	a
	MethodsOf: javax.vecmath.Tuple4b
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(byte, byte, byte, byte) 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4b) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple4b)	=>	a(a.a.B)
		public final void get(byte[])	=>	b(byte[])
		public final void get(javax.vecmath.Tuple4b)	=>	c(a.a.B)
		public final byte getW()	=>	c()
		public final byte getX()	=>	a()
		public final byte getY()	=>	b()
		public final byte getZ()	=>	d()
		public int hashCode() 	SignatureNotChanged
		public final void set(byte[])	=>	a(byte[])
		public final void set(javax.vecmath.Tuple4b)	=>	b(a.a.B)
		public final void setW(byte)	=>	d(byte)
		public final void setX(byte)	=>	b(byte)
		public final void setY(byte)	=>	a(byte)
		public final void setZ(byte)	=>	c(byte)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple4b
		83	=>	26
		84	=>	22
		85	=>	37
		86	=>	38
		87	=>	59
		88	=>	55
		96	=>	49
		97	=>	57
		98	=>	33
		99	=>	50
		100	=>	32
		101	=>	42
		109	=>	41
		110	=>	1
		111	=>	4
		112	=>	13
		113	=>	31
		114	=>	40
		121	=>	48
		122	=>	27
		123	=>	20
		124	=>	53
		125	=>	15
		126	=>	54
		135	=>	46
		149	=>	7
		150	=>	30
		151	=>	23
		152	=>	65
		153	=>	3
		163	=>	19
		164	=>	36
		165	=>	2
		166	=>	35
		167	=>	28
		177	=>	24
		178	=>	34
		179	=>	12
		180	=>	39
		181	=>	56
		191	=>	25
		192	=>	21
		193	=>	58
		194	=>	45
		195	=>	17
		206	=>	11
		209	=>	47
		222	=>	29
		223	=>	52
		226	=>	6
		227	=>	16
		241	=>	10
		258	=>	5
		259	=>	43
		261	=>	8
		274	=>	14
		286	=>	51
		287	=>	67
		298	=>	63
		310	=>	64
		311	=>	44
		321	=>	61
		333	=>	66
		334	=>	60
		345	=>	18
		357	=>	9
		358	=>	62

Class: public abstract javax.vecmath.Tuple4d	=>	a.a.j
	Source: "Tuple4d.java"
	FieldsOf: javax.vecmath.Tuple4d
		static final long serialVersionUID	NameNotChanged
		public double w	=>	c
		public double x	=>	a
		public double y	=>	b
		public double z	=>	d
	MethodsOf: javax.vecmath.Tuple4d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	d()
		public final void absolute(javax.vecmath.Tuple4d)	=>	a(a.a.j)
		public final void add(javax.vecmath.Tuple4d)	=>	g(a.a.j)
		public final void add(javax.vecmath.Tuple4d, javax.vecmath.Tuple4d)	=>	b(a.a.j, a.a.j)
		public final void clamp(double, double)	=>	a(double, double)
		public final void clamp(double, double, javax.vecmath.Tuple4d)	=>	a(double, double, a.a.j)
		public final void clamp(float, float)	=>	a(float, float)
		public final void clamp(float, float, javax.vecmath.Tuple4d)	=>	a(float, float, a.a.j)
		public final void clampMax(double)	=>	e(double)
		public final void clampMax(double, javax.vecmath.Tuple4d)	=>	a(double, a.a.j)
		public final void clampMax(float)	=>	b(float)
		public final void clampMax(float, javax.vecmath.Tuple4d)	=>	c(float, a.a.j)
		public final void clampMin(double)	=>	a(double)
		public final void clampMin(double, javax.vecmath.Tuple4d)	=>	d(double, a.a.j)
		public final void clampMin(float)	=>	a(float)
		public final void clampMin(float, javax.vecmath.Tuple4d)	=>	a(float, a.a.j)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple4d, double)	=>	a(a.a.j, double)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple4d)	=>	d(a.a.j)
		public final void get(double[])	=>	b(double[])
		public final void get(javax.vecmath.Tuple4d)	=>	f(a.a.j)
		public final double getW()	=>	e()
		public final double getX()	=>	f()
		public final double getY()	=>	a()
		public final double getZ()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public void interpolate(javax.vecmath.Tuple4d, double)	=>	b(a.a.j, double)
		public void interpolate(javax.vecmath.Tuple4d, float)	=>	a(a.a.j, float)
		public void interpolate(javax.vecmath.Tuple4d, javax.vecmath.Tuple4d, double)	=>	a(a.a.j, a.a.j, double)
		public void interpolate(javax.vecmath.Tuple4d, javax.vecmath.Tuple4d, float)	=>	a(a.a.j, a.a.j, float)
		public final void negate()	=>	b()
		public final void negate(javax.vecmath.Tuple4d)	=>	e(a.a.j)
		public final void scale(double)	=>	c(double)
		public final void scale(double, javax.vecmath.Tuple4d)	=>	c(double, a.a.j)
		public final void scaleAdd(double, javax.vecmath.Tuple4d)	=>	b(double, a.a.j)
		public final void scaleAdd(double, javax.vecmath.Tuple4d, javax.vecmath.Tuple4d)	=>	a(double, a.a.j, a.a.j)
		public final void scaleAdd(float, javax.vecmath.Tuple4d)	=>	b(float, a.a.j)
		public final void set(double, double, double, double)	=>	a(double, double, double, double)
		public final void set(double[])	=>	a(double[])
		public final void set(javax.vecmath.Tuple4d)	=>	c(a.a.j)
		public final void set(javax.vecmath.Tuple4f)	=>	a(a.a.u)
		public final void setW(double)	=>	b(double)
		public final void setX(double)	=>	d(double)
		public final void setY(double)	=>	f(double)
		public final void setZ(double)	=>	g(double)
		public final void sub(javax.vecmath.Tuple4d)	=>	b(a.a.j)
		public final void sub(javax.vecmath.Tuple4d, javax.vecmath.Tuple4d)	=>	a(a.a.j, a.a.j)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple4d
		74	=>	200
		75	=>	190
		76	=>	132
		77	=>	83
		78	=>	206
		79	=>	29
		88	=>	105
		89	=>	123
		90	=>	108
		91	=>	65
		92	=>	64
		93	=>	248
		101	=>	87
		102	=>	154
		103	=>	101
		104	=>	35
		105	=>	207
		106	=>	209
		114	=>	124
		115	=>	195
		116	=>	218
		117	=>	247
		118	=>	85
		119	=>	256
		126	=>	169
		127	=>	148
		128	=>	76
		129	=>	241
		130	=>	172
		131	=>	262
		143	=>	39
		144	=>	231
		145	=>	139
		146	=>	222
		147	=>	74
		156	=>	140
		157	=>	7
		158	=>	197
		159	=>	185
		160	=>	167
		169	=>	121
		170	=>	244
		171	=>	147
		172	=>	2
		173	=>	260
		182	=>	118
		183	=>	25
		184	=>	30
		185	=>	44
		186	=>	225
		196	=>	36
		197	=>	153
		198	=>	69
		199	=>	159
		200	=>	107
		211	=>	142
		212	=>	160
		213	=>	170
		214	=>	18
		215	=>	246
		225	=>	131
		226	=>	175
		227	=>	210
		228	=>	189
		229	=>	211
		238	=>	1
		239	=>	249
		240	=>	245
		241	=>	143
		242	=>	171
		253	=>	15
		254	=>	129
		255	=>	91
		256	=>	263
		257	=>	230
		267	=>	182
		268	=>	38
		269	=>	70
		270	=>	49
		271	=>	219
		280	=>	22
		281	=>	203
		282	=>	103
		283	=>	52
		284	=>	187
		292	=>	63
		293	=>	214
		294	=>	215
		295	=>	33
		296	=>	237
		307	=>	135
		308	=>	13
		309	=>	109
		310	=>	134
		311	=>	104
		321	=>	196
		322	=>	31
		323	=>	86
		324	=>	23
		325	=>	164
		337	=>	10
		338	=>	149
		339	=>	80
		340	=>	146
		341	=>	261
		349	=>	202
		350	=>	117
		360	=>	48
		361	=>	42
		362	=>	72
		363	=>	180
		364	=>	240
		374	=>	217
		387	=>	21
		390	=>	96
		404	=>	12
		405	=>	227
		408	=>	81
		409	=>	201
		427	=>	157
		428	=>	50
		429	=>	239
		431	=>	205
		432	=>	45
		433	=>	60
		435	=>	119
		436	=>	165
		437	=>	112
		439	=>	156
		440	=>	181
		441	=>	238
		443	=>	221
		457	=>	28
		458	=>	173
		459	=>	51
		460	=>	59
		461	=>	57
		462	=>	32
		470	=>	26
		471	=>	24
		482	=>	100
		483	=>	90
		484	=>	151
		485	=>	198
		487	=>	137
		490	=>	228
		491	=>	243
		492	=>	47
		493	=>	75
		495	=>	84
		498	=>	3
		499	=>	234
		500	=>	208
		501	=>	252
		503	=>	126
		506	=>	82
		507	=>	216
		508	=>	93
		509	=>	130
		511	=>	114
		514	=>	9
		521	=>	11
		522	=>	193
		532	=>	98
		533	=>	127
		535	=>	115
		538	=>	152
		539	=>	125
		541	=>	232
		544	=>	259
		545	=>	158
		547	=>	144
		550	=>	68
		551	=>	136
		553	=>	236
		556	=>	128
		563	=>	62
		564	=>	17
		574	=>	233
		575	=>	8
		577	=>	213
		580	=>	257
		581	=>	162
		583	=>	250
		586	=>	229
		587	=>	14
		589	=>	224
		592	=>	113
		593	=>	177
		595	=>	89
		598	=>	46
		608	=>	27
		609	=>	223
		610	=>	255
		611	=>	212
		613	=>	199
		621	=>	4
		622	=>	155
		631	=>	73
		632	=>	40
		633	=>	106
		634	=>	120
		637	=>	192
		638	=>	138
		639	=>	66
		640	=>	5
		643	=>	56
		644	=>	116
		645	=>	178
		646	=>	43
		649	=>	235
		650	=>	220
		651	=>	251
		652	=>	204
		655	=>	141
		662	=>	6
		663	=>	111
		671	=>	71
		672	=>	253
		673	=>	161
		674	=>	258
		675	=>	78
		682	=>	163
		683	=>	92
		691	=>	166
		692	=>	183
		693	=>	16
		694	=>	79
		696	=>	168
		704	=>	145
		705	=>	174
		706	=>	97
		707	=>	77
		709	=>	176
		716	=>	122
		717	=>	133
		728	=>	242
		729	=>	55
		730	=>	184
		731	=>	88
		732	=>	58
		739	=>	54
		740	=>	41
		750	=>	191
		751	=>	150
		752	=>	95
		753	=>	99
		754	=>	254
		767	=>	19
		768	=>	67
		770	=>	188
		782	=>	110
		794	=>	179
		795	=>	102
		806	=>	94
		818	=>	34
		819	=>	226
		829	=>	53
		841	=>	37
		842	=>	20
		853	=>	194
		865	=>	186
		866	=>	61

Class: public abstract javax.vecmath.Tuple4f	=>	a.a.u
	Source: "Tuple4f.java"
	FieldsOf: javax.vecmath.Tuple4f
		private static java.lang.String a	=>	b
		static final long serialVersionUID	NameNotChanged
		public float w	=>	c
		public float x	=>	f
		public float y	=>	d
		public float z	=>	e
	MethodsOf: javax.vecmath.Tuple4f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public static java.lang.String a()	=>	c()
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public static void a(java.lang.String)	=>	b(java.lang.String)
		public final void absolute()	=>	d()
		public final void absolute(javax.vecmath.Tuple4f)	=>	b(a.a.u)
		public final void add(javax.vecmath.Tuple4f)	=>	e(a.a.u)
		public final void add(javax.vecmath.Tuple4f, javax.vecmath.Tuple4f)	=>	b(a.a.u, a.a.u)
		public final void clamp(float, float)	=>	a(float, float)
		public final void clamp(float, float, javax.vecmath.Tuple4f)	=>	a(float, float, a.a.u)
		public final void clampMax(float)	=>	d(float)
		public final void clampMax(float, javax.vecmath.Tuple4f)	=>	d(float, a.a.u)
		public final void clampMin(float)	=>	f(float)
		public final void clampMin(float, javax.vecmath.Tuple4f)	=>	b(float, a.a.u)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(javax.vecmath.Tuple4f, float)	=>	b(a.a.u, float)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public boolean equals(javax.vecmath.Tuple4f)	=>	g(a.a.u)
		public final void get(float[])	=>	a(float[])
		public final void get(javax.vecmath.Tuple4f)	=>	f(a.a.u)
		public final float getW()	=>	g()
		public final float getX()	=>	b()
		public final float getY()	=>	f()
		public final float getZ()	=>	a()
		public int hashCode() 	SignatureNotChanged
		public void interpolate(javax.vecmath.Tuple4f, float)	=>	a(a.a.u, float)
		public void interpolate(javax.vecmath.Tuple4f, javax.vecmath.Tuple4f, float)	=>	a(a.a.u, a.a.u, float)
		public final void negate()	=>	e()
		public final void negate(javax.vecmath.Tuple4f)	=>	a(a.a.u)
		public final void scale(float)	=>	b(float)
		public final void scale(float, javax.vecmath.Tuple4f)	=>	c(float, a.a.u)
		public final void scaleAdd(float, javax.vecmath.Tuple4f)	=>	a(float, a.a.u)
		public final void scaleAdd(float, javax.vecmath.Tuple4f, javax.vecmath.Tuple4f)	=>	a(float, a.a.u, a.a.u)
		public final void set(float, float, float, float)	=>	a(float, float, float, float)
		public final void set(float[])	=>	b(float[])
		public final void set(javax.vecmath.Tuple4d)	=>	a(a.a.j)
		public final void set(javax.vecmath.Tuple4f)	=>	c(a.a.u)
		public final void setW(float)	=>	c(float)
		public final void setX(float)	=>	e(float)
		public final void setY(float)	=>	g(float)
		public final void setZ(float)	=>	a(float)
		public final void sub(javax.vecmath.Tuple4f)	=>	d(a.a.u)
		public final void sub(javax.vecmath.Tuple4f, javax.vecmath.Tuple4f)	=>	a(a.a.u, a.a.u)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple4f
		74	=>	125
		75	=>	39
		76	=>	237
		77	=>	142
		78	=>	165
		79	=>	45
		87	=>	95
		88	=>	242
		89	=>	167
		90	=>	138
		91	=>	129
		92	=>	13
		100	=>	17
		101	=>	23
		102	=>	223
		103	=>	230
		104	=>	179
		105	=>	178
		113	=>	173
		114	=>	72
		115	=>	155
		116	=>	217
		117	=>	174
		118	=>	46
		125	=>	200
		126	=>	82
		127	=>	77
		128	=>	234
		129	=>	34
		130	=>	221
		142	=>	121
		143	=>	184
		144	=>	64
		145	=>	86
		146	=>	112
		156	=>	185
		157	=>	30
		158	=>	118
		159	=>	59
		160	=>	176
		169	=>	28
		170	=>	74
		171	=>	190
		172	=>	239
		173	=>	116
		182	=>	236
		183	=>	35
		184	=>	56
		185	=>	4
		186	=>	219
		195	=>	144
		196	=>	214
		197	=>	143
		198	=>	102
		199	=>	222
		208	=>	133
		209	=>	201
		210	=>	147
		211	=>	80
		212	=>	12
		222	=>	31
		223	=>	44
		224	=>	163
		225	=>	215
		226	=>	3
		235	=>	127
		236	=>	211
		237	=>	21
		238	=>	78
		239	=>	195
		250	=>	66
		251	=>	111
		252	=>	151
		253	=>	137
		254	=>	205
		264	=>	134
		265	=>	186
		266	=>	187
		267	=>	79
		268	=>	224
		277	=>	210
		278	=>	7
		279	=>	26
		280	=>	196
		281	=>	120
		289	=>	164
		290	=>	218
		291	=>	175
		292	=>	192
		293	=>	154
		304	=>	233
		305	=>	85
		306	=>	42
		307	=>	202
		308	=>	141
		318	=>	103
		319	=>	76
		320	=>	189
		321	=>	123
		322	=>	101
		334	=>	243
		335	=>	168
		336	=>	49
		337	=>	20
		338	=>	8
		349	=>	109
		350	=>	150
		351	=>	32
		352	=>	194
		353	=>	131
		363	=>	107
		375	=>	92
		378	=>	149
		391	=>	37
		392	=>	170
		395	=>	117
		396	=>	19
		414	=>	55
		415	=>	172
		416	=>	169
		418	=>	27
		419	=>	89
		420	=>	110
		422	=>	136
		423	=>	52
		424	=>	70
		426	=>	24
		427	=>	40
		428	=>	122
		430	=>	156
		443	=>	114
		444	=>	158
		445	=>	240
		446	=>	115
		447	=>	181
		448	=>	88
		461	=>	33
		462	=>	38
		463	=>	50
		464	=>	104
		466	=>	226
		469	=>	14
		470	=>	193
		471	=>	159
		472	=>	67
		474	=>	188
		477	=>	87
		478	=>	83
		479	=>	212
		480	=>	177
		482	=>	206
		485	=>	126
		486	=>	15
		487	=>	157
		488	=>	171
		490	=>	94
		493	=>	145
		504	=>	207
		505	=>	69
		507	=>	161
		510	=>	36
		511	=>	204
		513	=>	84
		516	=>	225
		517	=>	99
		519	=>	68
		522	=>	216
		523	=>	65
		525	=>	166
		529	=>	93
		540	=>	128
		541	=>	130
		543	=>	98
		546	=>	183
		547	=>	29
		549	=>	227
		552	=>	241
		553	=>	71
		555	=>	148
		558	=>	58
		559	=>	63
		561	=>	41
		564	=>	245
		574	=>	43
		575	=>	11
		576	=>	73
		577	=>	124
		578	=>	140
		588	=>	152
		589	=>	57
		590	=>	16
		591	=>	108
		594	=>	53
		595	=>	54
		596	=>	160
		597	=>	228
		600	=>	146
		601	=>	5
		602	=>	199
		603	=>	162
		606	=>	235
		607	=>	232
		608	=>	105
		609	=>	60
		612	=>	231
		621	=>	18
		622	=>	97
		623	=>	91
		624	=>	132
		626	=>	203
		635	=>	61
		636	=>	25
		637	=>	180
		638	=>	2
		640	=>	51
		648	=>	90
		649	=>	208
		650	=>	213
		651	=>	153
		652	=>	96
		664	=>	6
		665	=>	75
		666	=>	197
		667	=>	198
		669	=>	244
		680	=>	119
		681	=>	22
		682	=>	220
		683	=>	47
		685	=>	48
		698	=>	191
		699	=>	135
		701	=>	182
		713	=>	100
		725	=>	9
		726	=>	81
		737	=>	106
		749	=>	229
		750	=>	238
		760	=>	209
		772	=>	10
		773	=>	113
		784	=>	1
		796	=>	139
		797	=>	62

Class: public abstract javax.vecmath.Tuple4i	=>	a.a.d
	Source: "Tuple4i.java"
	FieldsOf: javax.vecmath.Tuple4i
		static final long serialVersionUID	NameNotChanged
		public int w	=>	c
		public int x	=>	b
		public int y	=>	d
		public int z	=>	a
	MethodsOf: javax.vecmath.Tuple4i
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(int, int, int, int) 	SignatureNotChanged
		public void <init>(int[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4i) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute()	=>	a()
		public final void absolute(javax.vecmath.Tuple4i)	=>	d(a.a.d)
		public final void add(javax.vecmath.Tuple4i)	=>	b(a.a.d)
		public final void add(javax.vecmath.Tuple4i, javax.vecmath.Tuple4i)	=>	b(a.a.d, a.a.d)
		public final void clamp(int, int)	=>	a(int, int)
		public final void clamp(int, int, javax.vecmath.Tuple4i)	=>	a(int, int, a.a.d)
		public final void clampMax(int)	=>	b(int)
		public final void clampMax(int, javax.vecmath.Tuple4i)	=>	b(int, a.a.d)
		public final void clampMin(int)	=>	a(int)
		public final void clampMin(int, javax.vecmath.Tuple4i)	=>	c(int, a.a.d)
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(int[])	=>	b(int[])
		public final void get(javax.vecmath.Tuple4i)	=>	c(a.a.d)
		public final int getW()	=>	d()
		public final int getX()	=>	f()
		public final int getY()	=>	c()
		public final int getZ()	=>	e()
		public int hashCode() 	SignatureNotChanged
		public final void negate()	=>	b()
		public final void negate(javax.vecmath.Tuple4i)	=>	e(a.a.d)
		public final void scale(int)	=>	f(int)
		public final void scale(int, javax.vecmath.Tuple4i)	=>	d(int, a.a.d)
		public final void scaleAdd(int, javax.vecmath.Tuple4i)	=>	a(int, a.a.d)
		public final void scaleAdd(int, javax.vecmath.Tuple4i, javax.vecmath.Tuple4i)	=>	a(int, a.a.d, a.a.d)
		public final void set(int, int, int, int)	=>	a(int, int, int, int)
		public final void set(int[])	=>	a(int[])
		public final void set(javax.vecmath.Tuple4i)	=>	f(a.a.d)
		public final void setW(int)	=>	e(int)
		public final void setX(int)	=>	g(int)
		public final void setY(int)	=>	d(int)
		public final void setZ(int)	=>	c(int)
		public final void sub(javax.vecmath.Tuple4i)	=>	a(a.a.d)
		public final void sub(javax.vecmath.Tuple4i, javax.vecmath.Tuple4i)	=>	a(a.a.d, a.a.d)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: javax.vecmath.Tuple4i
		75	=>	9
		76	=>	110
		77	=>	202
		78	=>	99
		79	=>	193
		80	=>	206
		87	=>	60
		88	=>	192
		89	=>	150
		90	=>	109
		91	=>	8
		92	=>	155
		100	=>	40
		101	=>	141
		102	=>	144
		103	=>	42
		104	=>	194
		105	=>	27
		111	=>	102
		112	=>	190
		113	=>	153
		114	=>	35
		115	=>	123
		116	=>	137
		128	=>	83
		129	=>	36
		130	=>	124
		131	=>	188
		132	=>	207
		141	=>	4
		142	=>	108
		143	=>	127
		144	=>	180
		145	=>	168
		153	=>	176
		154	=>	113
		155	=>	84
		156	=>	15
		157	=>	92
		165	=>	199
		166	=>	132
		167	=>	76
		168	=>	45
		169	=>	107
		177	=>	197
		178	=>	118
		179	=>	44
		180	=>	204
		181	=>	52
		190	=>	65
		191	=>	177
		192	=>	71
		193	=>	182
		194	=>	211
		202	=>	55
		203	=>	63
		204	=>	25
		205	=>	148
		206	=>	12
		216	=>	117
		217	=>	14
		218	=>	47
		219	=>	214
		220	=>	218
		229	=>	82
		230	=>	41
		231	=>	167
		232	=>	37
		233	=>	39
		241	=>	175
		242	=>	96
		243	=>	59
		244	=>	145
		245	=>	95
		252	=>	164
		253	=>	201
		254	=>	3
		255	=>	165
		256	=>	49
		266	=>	142
		267	=>	50
		268	=>	159
		269	=>	67
		270	=>	171
		279	=>	213
		280	=>	51
		281	=>	53
		282	=>	78
		283	=>	104
		294	=>	151
		295	=>	23
		296	=>	19
		297	=>	11
		298	=>	17
		308	=>	215
		309	=>	34
		310	=>	56
		311	=>	152
		312	=>	139
		321	=>	163
		334	=>	21
		335	=>	112
		338	=>	115
		339	=>	72
		341	=>	89
		342	=>	129
		356	=>	85
		357	=>	13
		358	=>	16
		359	=>	81
		360	=>	140
		361	=>	158
		373	=>	24
		374	=>	97
		375	=>	26
		376	=>	200
		378	=>	5
		381	=>	186
		382	=>	73
		383	=>	57
		384	=>	134
		386	=>	88
		389	=>	172
		390	=>	7
		391	=>	120
		392	=>	100
		394	=>	122
		397	=>	162
		398	=>	69
		399	=>	87
		400	=>	46
		402	=>	86
		404	=>	106
		414	=>	54
		415	=>	198
		417	=>	22
		420	=>	209
		421	=>	189
		423	=>	131
		426	=>	98
		427	=>	157
		429	=>	149
		432	=>	101
		433	=>	29
		435	=>	77
		439	=>	146
		449	=>	64
		450	=>	169
		452	=>	154
		455	=>	191
		456	=>	62
		458	=>	114
		461	=>	103
		462	=>	1
		464	=>	74
		467	=>	210
		468	=>	187
		470	=>	43
		472	=>	68
		481	=>	174
		482	=>	70
		483	=>	208
		484	=>	184
		485	=>	61
		494	=>	18
		495	=>	196
		496	=>	33
		497	=>	128
		500	=>	138
		501	=>	160
		502	=>	130
		503	=>	20
		506	=>	161
		507	=>	147
		508	=>	38
		509	=>	48
		512	=>	203
		513	=>	195
		514	=>	216
		515	=>	126
		517	=>	212
		525	=>	179
		526	=>	217
		528	=>	66
		529	=>	111
		531	=>	178
		532	=>	28
		534	=>	79
		535	=>	119
		536	=>	185
		544	=>	93
		545	=>	170
		547	=>	58
		548	=>	181
		550	=>	205
		551	=>	31
		553	=>	173
		554	=>	90
		555	=>	105
		562	=>	183
		563	=>	91
		564	=>	116
		565	=>	6
		566	=>	135
		579	=>	75
		580	=>	10
		582	=>	30
		596	=>	80
		608	=>	156
		609	=>	133
		620	=>	166
		632	=>	143
		633	=>	32
		643	=>	94
		655	=>	121
		656	=>	2
		665	=>	125
		677	=>	136
		678	=>	219

Class: javax.vecmath.VecMathI18N	=>	a.a.A
	Source: "VecMathI18N.java"
	FieldsOf: javax.vecmath.VecMathI18N
	MethodsOf: javax.vecmath.VecMathI18N
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		static java.lang.String getString(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: javax.vecmath.VecMathI18N
		38	=>	6
		42	=>	7
		44	=>	5
		45	=>	2
		46	=>	1
		47	=>	4
		48	=>	3

Class: javax.vecmath.VecMathUtil	=>	a.a.O
	Source: "VecMathUtil.java"
	FieldsOf: javax.vecmath.VecMathUtil
	MethodsOf: javax.vecmath.VecMathUtil
		private void <init>() 	SignatureNotChanged
		static long doubleToLongBits(double)	=>	a(double)
		static int floatToIntBits(float)	=>	a(float)
	LineNumbersOf: javax.vecmath.VecMathUtil
		60	=>	7
		61	=>	1
		64	=>	2
		89	=>	8
		90	=>	3
		93	=>	4
		101	=>	6
		102	=>	5

Class: public javax.vecmath.Vector2d	=>	a.a.i
	Source: "Vector2d.java"
	FieldsOf: javax.vecmath.Vector2d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector2d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector2f) 	SignatureNotChanged
		public final double angle(javax.vecmath.Vector2d)	=>	c(a.a.i)
		public final double dot(javax.vecmath.Vector2d)	=>	a(a.a.i)
		public final double length()	=>	f()
		public final double lengthSquared()	=>	g()
		public final void normalize()	=>	e()
		public final void normalize(javax.vecmath.Vector2d)	=>	b(a.a.i)
	LineNumbersOf: javax.vecmath.Vector2d
		53	=>	18
		54	=>	14
		63	=>	13
		64	=>	20
		73	=>	21
		74	=>	3
		83	=>	1
		84	=>	27
		93	=>	2
		94	=>	17
		103	=>	25
		104	=>	30
		112	=>	12
		113	=>	28
		122	=>	7
		132	=>	15
		141	=>	6
		152	=>	5
		153	=>	29
		154	=>	9
		155	=>	4
		164	=>	16
		165	=>	26
		166	=>	8
		167	=>	10
		168	=>	22
		179	=>	11
		180	=>	19
		181	=>	23
		182	=>	24

Class: public javax.vecmath.Vector2f	=>	a.a.S
	Source: "Vector2f.java"
	FieldsOf: javax.vecmath.Vector2f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector2f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple2f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector2d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector2f) 	SignatureNotChanged
		public final float angle(javax.vecmath.Vector2f)	=>	c(a.a.S)
		public final float dot(javax.vecmath.Vector2f)	=>	a(a.a.S)
		public final float length()	=>	f()
		public final float lengthSquared()	=>	e()
		public final void normalize()	=>	g()
		public final void normalize(javax.vecmath.Vector2f)	=>	b(a.a.S)
	LineNumbersOf: javax.vecmath.Vector2f
		53	=>	16
		54	=>	10
		63	=>	26
		64	=>	6
		73	=>	7
		74	=>	21
		83	=>	18
		84	=>	20
		93	=>	2
		94	=>	19
		103	=>	29
		104	=>	8
		113	=>	4
		114	=>	3
		123	=>	9
		133	=>	13
		142	=>	17
		153	=>	24
		154	=>	28
		155	=>	23
		156	=>	14
		165	=>	1
		166	=>	5
		167	=>	25
		168	=>	11
		169	=>	22
		180	=>	30
		181	=>	15
		182	=>	27
		183	=>	12

Class: public javax.vecmath.Vector3d	=>	a.a.N
	Source: "Vector3d.java"
	FieldsOf: javax.vecmath.Vector3d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector3d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3f) 	SignatureNotChanged
		public final double angle(javax.vecmath.Vector3d)	=>	b(a.a.N)
		public final void cross(javax.vecmath.Vector3d, javax.vecmath.Vector3d)	=>	a(a.a.N, a.a.N)
		public final double dot(javax.vecmath.Vector3d)	=>	c(a.a.N)
		public final double length()	=>	g()
		public final double lengthSquared()	=>	f()
		public final void normalize()	=>	h()
		public final void normalize(javax.vecmath.Vector3d)	=>	a(a.a.N)
	LineNumbersOf: javax.vecmath.Vector3d
		55	=>	11
		56	=>	26
		65	=>	18
		66	=>	10
		75	=>	1
		76	=>	14
		85	=>	28
		86	=>	33
		95	=>	4
		96	=>	29
		105	=>	32
		106	=>	22
		114	=>	25
		115	=>	12
		127	=>	13
		128	=>	2
		129	=>	8
		130	=>	17
		131	=>	7
		132	=>	31
		143	=>	37
		144	=>	6
		145	=>	16
		146	=>	9
		147	=>	15
		157	=>	35
		158	=>	20
		159	=>	19
		160	=>	21
		161	=>	34
		171	=>	5
		181	=>	30
		191	=>	27
		203	=>	24
		204	=>	36
		205	=>	3
		206	=>	23

Class: public javax.vecmath.Vector3f	=>	a.a.H
	Source: "Vector3f.java"
	FieldsOf: javax.vecmath.Vector3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector3f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector3f) 	SignatureNotChanged
		public final float angle(javax.vecmath.Vector3f)	=>	c(a.a.H)
		public final void cross(javax.vecmath.Vector3f, javax.vecmath.Vector3f)	=>	a(a.a.H, a.a.H)
		public final float dot(javax.vecmath.Vector3f)	=>	a(a.a.H)
		public final float length()	=>	h()
		public final float lengthSquared()	=>	g()
		public final void normalize()	=>	f()
		public final void normalize(javax.vecmath.Vector3f)	=>	b(a.a.H)
	LineNumbersOf: javax.vecmath.Vector3f
		55	=>	19
		56	=>	24
		65	=>	5
		66	=>	6
		75	=>	11
		76	=>	31
		85	=>	37
		86	=>	15
		94	=>	18
		95	=>	14
		103	=>	35
		104	=>	28
		112	=>	26
		113	=>	29
		122	=>	13
		131	=>	33
		132	=>	4
		145	=>	12
		146	=>	7
		147	=>	25
		148	=>	16
		149	=>	23
		150	=>	20
		159	=>	3
		170	=>	27
		171	=>	39
		172	=>	10
		173	=>	8
		174	=>	2
		183	=>	30
		184	=>	34
		185	=>	38
		186	=>	9
		187	=>	36
		188	=>	21
		199	=>	17
		200	=>	22
		201	=>	1
		202	=>	32

Class: public javax.vecmath.Vector4d	=>	a.a.m
	Source: "Vector4d.java"
	FieldsOf: javax.vecmath.Vector4d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector4d
		public void <init>() 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector4f) 	SignatureNotChanged
		public final double angle(javax.vecmath.Vector4d)	=>	a(a.a.m)
		public final double dot(javax.vecmath.Vector4d)	=>	b(a.a.m)
		public final double length()	=>	g()
		public final double lengthSquared()	=>	h()
		public final void normalize()	=>	i()
		public final void normalize(javax.vecmath.Vector4d)	=>	c(a.a.m)
		public final void set(javax.vecmath.Tuple3d)	=>	a(a.a.L)
	LineNumbersOf: javax.vecmath.Vector4d
		55	=>	7
		56	=>	33
		65	=>	21
		66	=>	1
		74	=>	28
		75	=>	9
		83	=>	24
		84	=>	27
		92	=>	34
		93	=>	6
		101	=>	26
		102	=>	17
		115	=>	14
		116	=>	25
		124	=>	16
		125	=>	4
		137	=>	2
		138	=>	11
		139	=>	36
		140	=>	32
		141	=>	37
		150	=>	39
		161	=>	29
		173	=>	15
		185	=>	18
		186	=>	31
		187	=>	3
		188	=>	13
		189	=>	19
		190	=>	38
		200	=>	20
		202	=>	8
		203	=>	22
		204	=>	35
		205	=>	10
		206	=>	23
		218	=>	12
		219	=>	5
		220	=>	40
		221	=>	30

Class: public javax.vecmath.Vector4f	=>	a.a.z
	Source: "Vector4f.java"
	FieldsOf: javax.vecmath.Vector4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: javax.vecmath.Vector4f
		public void <init>() 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple3f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Tuple4f) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector4d) 	SignatureNotChanged
		public void <init>(javax.vecmath.Vector4f) 	SignatureNotChanged
		public final float angle(javax.vecmath.Vector4f)	=>	c(a.a.z)
		public final float dot(javax.vecmath.Vector4f)	=>	a(a.a.z)
		public final float length()	=>	h()
		public final float lengthSquared()	=>	j()
		public final void normalize()	=>	i()
		public final void normalize(javax.vecmath.Vector4f)	=>	b(a.a.z)
		public final void set(javax.vecmath.Tuple3f)	=>	a(a.a.D)
	LineNumbersOf: javax.vecmath.Vector4f
		55	=>	3
		56	=>	4
		65	=>	10
		66	=>	16
		75	=>	31
		76	=>	7
		85	=>	27
		86	=>	5
		95	=>	29
		96	=>	40
		105	=>	32
		106	=>	38
		119	=>	30
		120	=>	28
		128	=>	19
		129	=>	1
		141	=>	34
		142	=>	20
		143	=>	23
		144	=>	6
		145	=>	17
		154	=>	37
		155	=>	13
		165	=>	26
		176	=>	22
		188	=>	14
		190	=>	36
		191	=>	18
		192	=>	8
		193	=>	41
		194	=>	33
		204	=>	2
		206	=>	15
		207	=>	24
		208	=>	35
		209	=>	9
		210	=>	25
		222	=>	12
		223	=>	39
		224	=>	11
		225	=>	21

Class: public abstract org.slf4j.ILoggerFactory	=>	b.a.e
	Source: "ILoggerFactory.java"
	FieldsOf: org.slf4j.ILoggerFactory
	MethodsOf: org.slf4j.ILoggerFactory
		public abstract org.slf4j.Logger getLogger(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.slf4j.ILoggerFactory

Class: public abstract org.slf4j.IMarkerFactory	=>	b.a.d
	Source: "IMarkerFactory.java"
	FieldsOf: org.slf4j.IMarkerFactory
	MethodsOf: org.slf4j.IMarkerFactory
		public abstract boolean detachMarker(java.lang.String)	=>	c(java.lang.String)
		public abstract boolean exists(java.lang.String)	=>	d(java.lang.String)
		public abstract org.slf4j.Marker getDetachedMarker(java.lang.String)	=>	b(java.lang.String)
		public abstract org.slf4j.Marker getMarker(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.slf4j.IMarkerFactory

Class: public abstract org.slf4j.Logger	=>	b.a.i
	Source: "Logger.java"
	FieldsOf: org.slf4j.Logger
		public static final java.lang.String ROOT_LOGGER_NAME	=>	a
	MethodsOf: org.slf4j.Logger
		static void <clinit>() 	SignatureNotChanged
		public abstract void debug(java.lang.String)	=>	b(java.lang.String)
		public abstract void debug(java.lang.String, java.lang.Object)	=>	c(java.lang.String, java.lang.Object)
		public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object)	=>	e(java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void debug(java.lang.String, java.lang.Object[])	=>	e(java.lang.String, java.lang.Object[])
		public abstract void debug(java.lang.String, java.lang.Throwable)	=>	e(java.lang.String, java.lang.Throwable)
		public abstract void debug(org.slf4j.Marker, java.lang.String)	=>	d(b.a.g, java.lang.String)
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	b(b.a.g, java.lang.String, java.lang.Object)
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	d(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	a(b.a.g, java.lang.String, java.lang.Object[])
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	d(b.a.g, java.lang.String, java.lang.Throwable)
		public abstract void error(java.lang.String)	=>	c(java.lang.String)
		public abstract void error(java.lang.String, java.lang.Object)	=>	e(java.lang.String, java.lang.Object)
		public abstract void error(java.lang.String, java.lang.Object, java.lang.Object)	=>	c(java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void error(java.lang.String, java.lang.Object[])	=>	d(java.lang.String, java.lang.Object[])
		public abstract void error(java.lang.String, java.lang.Throwable)	=>	c(java.lang.String, java.lang.Throwable)
		public abstract void error(org.slf4j.Marker, java.lang.String)	=>	e(b.a.g, java.lang.String)
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	e(b.a.g, java.lang.String, java.lang.Object)
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	a(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	b(b.a.g, java.lang.String, java.lang.Object[])
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	b(b.a.g, java.lang.String, java.lang.Throwable)
		public abstract java.lang.String getName()	=>	f()
		public abstract void info(java.lang.String)	=>	d(java.lang.String)
		public abstract void info(java.lang.String, java.lang.Object)	=>	a(java.lang.String, java.lang.Object)
		public abstract void info(java.lang.String, java.lang.Object, java.lang.Object)	=>	b(java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void info(java.lang.String, java.lang.Object[])	=>	c(java.lang.String, java.lang.Object[])
		public abstract void info(java.lang.String, java.lang.Throwable)	=>	b(java.lang.String, java.lang.Throwable)
		public abstract void info(org.slf4j.Marker, java.lang.String)	=>	a(b.a.g, java.lang.String)
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	a(b.a.g, java.lang.String, java.lang.Object)
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	c(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	d(b.a.g, java.lang.String, java.lang.Object[])
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	c(b.a.g, java.lang.String, java.lang.Throwable)
		public abstract boolean isDebugEnabled()	=>	c()
		public abstract boolean isDebugEnabled(org.slf4j.Marker)	=>	d(b.a.g)
		public abstract boolean isErrorEnabled()	=>	d()
		public abstract boolean isErrorEnabled(org.slf4j.Marker)	=>	e(b.a.g)
		public abstract boolean isInfoEnabled()	=>	e()
		public abstract boolean isInfoEnabled(org.slf4j.Marker)	=>	c(b.a.g)
		public abstract boolean isTraceEnabled()	=>	a()
		public abstract boolean isTraceEnabled(org.slf4j.Marker)	=>	a(b.a.g)
		public abstract boolean isWarnEnabled()	=>	b()
		public abstract boolean isWarnEnabled(org.slf4j.Marker)	=>	b(b.a.g)
		public abstract void trace(java.lang.String)	=>	a(java.lang.String)
		public abstract void trace(java.lang.String, java.lang.Object)	=>	d(java.lang.String, java.lang.Object)
		public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object)	=>	d(java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void trace(java.lang.String, java.lang.Object[])	=>	b(java.lang.String, java.lang.Object[])
		public abstract void trace(java.lang.String, java.lang.Throwable)	=>	a(java.lang.String, java.lang.Throwable)
		public abstract void trace(org.slf4j.Marker, java.lang.String)	=>	c(b.a.g, java.lang.String)
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	c(b.a.g, java.lang.String, java.lang.Object)
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	e(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	e(b.a.g, java.lang.String, java.lang.Object[])
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	e(b.a.g, java.lang.String, java.lang.Throwable)
		public abstract void warn(java.lang.String)	=>	e(java.lang.String)
		public abstract void warn(java.lang.String, java.lang.Object)	=>	b(java.lang.String, java.lang.Object)
		public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object)	=>	a(java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void warn(java.lang.String, java.lang.Object[])	=>	a(java.lang.String, java.lang.Object[])
		public abstract void warn(java.lang.String, java.lang.Throwable)	=>	d(java.lang.String, java.lang.Throwable)
		public abstract void warn(org.slf4j.Marker, java.lang.String)	=>	b(b.a.g, java.lang.String)
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	d(b.a.g, java.lang.String, java.lang.Object)
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	b(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	c(b.a.g, java.lang.String, java.lang.Object[])
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	a(b.a.g, java.lang.String, java.lang.Throwable)
	LineNumbersOf: org.slf4j.Logger

Class: public final org.slf4j.LoggerFactory	=>	b.a.h
	Source: "LoggerFactory.java"
	FieldsOf: org.slf4j.LoggerFactory
		private static final java.lang.String[] API_COMPATIBILITY_LIST	=>	e
		static int INITIALIZATION_STATE	=>	c
		static org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY	=>	g
		private static java.lang.String STATIC_LOGGER_BINDER_PATH	=>	a
		static org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY	=>	d
		private static boolean a	=>	f
		static java.lang.Class class$org$slf4j$LoggerFactory	=>	b
	MethodsOf: org.slf4j.LoggerFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static boolean a()	=>	f()
		public static void a(boolean)	=>	b(boolean)
		public static boolean b()	=>	g()
		private static java.lang.Throwable b(java.lang.Throwable) 	SignatureNotChanged
		private static final void bind()	=>	h()
		static java.lang.Class class$(java.lang.String)	=>	b(java.lang.String)
		private static final void emitSubstituteLoggerWarning()	=>	c()
		static void failedBinding(java.lang.Throwable)	=>	a(java.lang.Throwable)
		private static java.util.Set findPossibleStaticLoggerBinderPathSet()	=>	e()
		public static org.slf4j.ILoggerFactory getILoggerFactory()	=>	b()
		public static org.slf4j.Logger getLogger(java.lang.Class)	=>	a(java.lang.Class)
		public static org.slf4j.Logger getLogger(java.lang.String)	=>	c(java.lang.String)
		private static boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)	=>	a(java.util.Set)
		private static boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)	=>	a(java.lang.String)
		private static final void performInitialization()	=>	d()
		private static void reportActualBinding(java.util.Set)	=>	c(java.util.Set)
		private static void reportMultipleBindingAmbiguity(java.util.Set)	=>	b(java.util.Set)
		private static final void versionSanityCheck()	=>	a()
	LineNumbersOf: org.slf4j.LoggerFactory
		73	=>	98
		74	=>	46
		75	=>	59
		84	=>	114
		87	=>	36
		88	=>	28
		107	=>	109
		108	=>	73
		109	=>	69
		111	=>	2
		114	=>	44
		115	=>	93
		116	=>	16
		117	=>	70
		118	=>	90
		119	=>	99
		120	=>	14
		125	=>	66
		126	=>	84
		128	=>	8
		129	=>	95
		130	=>	33
		131	=>	21
		132	=>	91
		133	=>	19
		134	=>	37
		135	=>	105
		136	=>	17
		137	=>	89
		138	=>	65
		141	=>	103
		142	=>	108
		144	=>	27
		145	=>	23
		146	=>	6
		147	=>	113
		148	=>	106
		149	=>	94
		150	=>	48
		152	=>	76
		153	=>	86
		154	=>	68
		155	=>	7
		156	=>	12 and 35
		157	=>	1
		160	=>	75
		161	=>	54
		162	=>	11
		165	=>	49
		166	=>	71
		167	=>	72
		169	=>	104
		170	=>	58
		171	=>	97
		172	=>	47 and 52
		173	=>	22
		174	=>	81
		176	=>	112
		180	=>	31
		182	=>	5
		183	=>	34 and 55
		184	=>	80
		185	=>	26
		188	=>	77
		189	=>	57
		192	=>	64
		194	=>	41
		199	=>	87
		201	=>	96
		202	=>	13 and 100
		203	=>	85
		207	=>	111
		212	=>	50
		214	=>	25 and 38
		217	=>	102
		218	=>	10
		220	=>	4
		223	=>	30
		224	=>	92
		225	=>	88
		226	=>	101
		227	=>	51
		228	=>	82
		229	=>	24
		230	=>	20
		234	=>	61
		243	=>	18
		244	=>	78
		245	=>	67
		246	=>	45
		247	=>	83
		248	=>	62
		249	=>	39
		250	=>	115
		252	=>	29
		255	=>	107
		256	=>	32
		258	=>	60
		269	=>	56
		270	=>	15
		281	=>	79
		293	=>	110
		294	=>	74
		295	=>	9
		297	=>	53
		299	=>	63
		301	=>	3
		303	=>	43
		307	=>	40
		309	=>	42

Class: public org.slf4j.MDC	=>	b.a.c
	Source: "MDC.java"
	FieldsOf: org.slf4j.MDC
		static org.slf4j.spi.MDCAdapter mdcAdapter	=>	a
	MethodsOf: org.slf4j.MDC
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static void clear()	=>	b()
		public static java.lang.String get(java.lang.String)	=>	b(java.lang.String)
		public static java.util.Map getCopyOfContextMap()	=>	c()
		public static org.slf4j.spi.MDCAdapter getMDCAdapter()	=>	a()
		public static void put(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public static void remove(java.lang.String)	=>	a(java.lang.String)
		public static void setContextMap(java.util.Map)	=>	a(java.util.Map)
	LineNumbersOf: org.slf4j.MDC
		69	=>	31
		70	=>	18
		74	=>	41
		75	=>	40
		76	=>	44
		77	=>	27
		78	=>	38
		79	=>	8
		80	=>	11
		81	=>	28
		84	=>	15
		86	=>	14
		88	=>	29
		89	=>	20 and 34
		90	=>	45
		106	=>	12
		107	=>	37
		109	=>	39
		110	=>	3
		113	=>	6
		114	=>	30
		128	=>	9
		129	=>	7
		132	=>	36
		133	=>	23
		136	=>	2
		149	=>	22
		150	=>	5
		153	=>	35
		154	=>	43
		157	=>	25
		158	=>	19
		164	=>	4
		165	=>	13
		168	=>	32
		169	=>	21
		179	=>	16
		180	=>	26
		183	=>	24
		196	=>	10
		197	=>	17
		200	=>	42
		201	=>	33
		210	=>	1

Class: public abstract org.slf4j.Marker	=>	b.a.g
	Source: "Marker.java"
	FieldsOf: org.slf4j.Marker
		public static final java.lang.String ANY_MARKER	=>	b
		public static final java.lang.String ANY_NON_NULL_MARKER	=>	a
	MethodsOf: org.slf4j.Marker
		public abstract void add(org.slf4j.Marker)	=>	b(b.a.g)
		public abstract boolean contains(java.lang.String)	=>	a(java.lang.String)
		public abstract boolean contains(org.slf4j.Marker)	=>	a(b.a.g)
		public abstract boolean equals(java.lang.Object) 	SignatureNotChanged
		public abstract java.lang.String getName()	=>	d()
		public abstract boolean hasChildren()	=>	b()
		public abstract boolean hasReferences()	=>	c()
		public abstract int hashCode() 	SignatureNotChanged
		public abstract java.util.Iterator iterator()	=>	a()
		public abstract boolean remove(org.slf4j.Marker)	=>	c(b.a.g)
	LineNumbersOf: org.slf4j.Marker

Class: public org.slf4j.MarkerFactory	=>	b.a.f
	Source: "MarkerFactory.java"
	FieldsOf: org.slf4j.MarkerFactory
		static org.slf4j.IMarkerFactory markerFactory	=>	a
	MethodsOf: org.slf4j.MarkerFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static org.slf4j.Marker getDetachedMarker(java.lang.String)	=>	b(java.lang.String)
		public static org.slf4j.IMarkerFactory getIMarkerFactory()	=>	a()
		public static org.slf4j.Marker getMarker(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.slf4j.MarkerFactory
		47	=>	1
		48	=>	2
		52	=>	9
		53	=>	11
		54	=>	10
		56	=>	5
		58	=>	8
		59	=>	6 and 13
		60	=>	3
		71	=>	7
		81	=>	4
		93	=>	12

Class: public org.slf4j.helpers.BasicMDCAdapter	=>	b.a.a.c
	Source: "BasicMDCAdapter.java"
	FieldsOf: org.slf4j.helpers.BasicMDCAdapter
		static boolean IS_JDK14	=>	b
		private java.lang.InheritableThreadLocal inheritableThreadLocal	=>	a
	MethodsOf: org.slf4j.helpers.BasicMDCAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.SecurityException a(java.lang.SecurityException) 	SignatureNotChanged
		public void clear()	=>	b()
		public java.lang.String get(java.lang.String)	=>	b(java.lang.String)
		public java.util.Map getCopyOfContextMap()	=>	a()
		public java.util.Set getKeys()	=>	c()
		static boolean isJDK14()	=>	d()
		public void put(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public void remove(java.lang.String)	=>	a(java.lang.String)
		public void setContextMap(java.util.Map)	=>	a(java.util.Map)
	LineNumbersOf: org.slf4j.helpers.BasicMDCAdapter
		44	=>	28
		46	=>	1
		50	=>	41
		51	=>	15
		52	=>	33
		54	=>	3
		58	=>	13
		74	=>	26
		75	=>	25
		77	=>	12
		78	=>	19
		79	=>	23
		80	=>	37
		82	=>	9
		83	=>	21
		89	=>	34
		90	=>	40
		91	=>	22
		93	=>	10
		101	=>	29
		102	=>	32
		103	=>	4
		105	=>	30
		111	=>	6
		112	=>	20
		113	=>	18
		116	=>	24
		117	=>	17
		119	=>	11
		122	=>	8
		131	=>	27
		132	=>	44
		133	=>	45
		135	=>	2
		144	=>	36
		145	=>	16
		146	=>	14
		147	=>	39
		148	=>	38
		149	=>	42
		150	=>	35
		152	=>	31
		157	=>	5
		158	=>	43
		159	=>	7

Class: public org.slf4j.helpers.BasicMarker	=>	b.a.a.k
	Source: "BasicMarker.java"
	FieldsOf: org.slf4j.helpers.BasicMarker
		private static java.lang.String CLOSE	=>	c
		private static java.lang.String OPEN	=>	d
		private static java.lang.String SEP	=>	e
		private final java.lang.String name	=>	f
		private java.util.List refereceList	=>	g
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.BasicMarker
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public synchronized void add(org.slf4j.Marker)	=>	b(b.a.g)
		public boolean contains(java.lang.String)	=>	a(java.lang.String)
		public boolean contains(org.slf4j.Marker)	=>	a(b.a.g)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getName()	=>	d()
		public boolean hasChildren()	=>	b()
		public synchronized boolean hasReferences()	=>	c()
		public int hashCode() 	SignatureNotChanged
		public synchronized java.util.Iterator iterator()	=>	a()
		public synchronized boolean remove(org.slf4j.Marker)	=>	c(b.a.g)
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.slf4j.helpers.BasicMarker
		47	=>	64
		48	=>	29
		49	=>	55
		51	=>	51
		52	=>	37
		55	=>	26
		59	=>	65
		60	=>	27
		65	=>	46
		66	=>	58
		68	=>	68
		70	=>	72
		73	=>	21
		74	=>	17
		76	=>	33
		79	=>	22
		82	=>	38
		86	=>	28
		90	=>	3
		91	=>	18
		93	=>	2
		98	=>	59
		99	=>	71
		102	=>	32
		103	=>	15 and 76
		104	=>	20
		105	=>	34
		106	=>	47
		107	=>	69
		110	=>	53
		114	=>	61
		115	=>	13
		118	=>	11
		119	=>	70
		122	=>	48
		123	=>	7 and 50
		124	=>	74
		125	=>	23
		126	=>	73
		130	=>	10
		137	=>	75
		138	=>	8
		141	=>	4
		142	=>	56
		145	=>	31
		146	=>	5 and 25
		147	=>	42
		148	=>	45
		149	=>	67
		153	=>	54
		156	=>	6
		157	=>	39
		158	=>	62
		162	=>	14
		163	=>	52
		164	=>	41
		165	=>	77
		166	=>	30
		167	=>	24
		169	=>	19
		170	=>	16
		174	=>	43
		178	=>	66
		179	=>	1
		181	=>	12
		183	=>	57
		184	=>	44
		185	=>	36
		186	=>	40
		187	=>	63
		188	=>	9
		189	=>	35
		192	=>	60
		194	=>	49

Class: public org.slf4j.helpers.BasicMarkerFactory	=>	b.a.a.a
	Source: "BasicMarkerFactory.java"
	FieldsOf: org.slf4j.helpers.BasicMarkerFactory
		java.util.Map markerMap	=>	a
	MethodsOf: org.slf4j.helpers.BasicMarkerFactory
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public boolean detachMarker(java.lang.String)	=>	c(java.lang.String)
		public synchronized boolean exists(java.lang.String)	=>	d(java.lang.String)
		public org.slf4j.Marker getDetachedMarker(java.lang.String)	=>	b(java.lang.String)
		public synchronized org.slf4j.Marker getMarker(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.slf4j.helpers.BasicMarkerFactory
		44	=>	4
		52	=>	6
		53	=>	12
		63	=>	17
		64	=>	2
		67	=>	5
		68	=>	13
		69	=>	8
		70	=>	9
		72	=>	1
		79	=>	16
		80	=>	11
		82	=>	3
		86	=>	14
		87	=>	15
		89	=>	10
		94	=>	7

Class: public org.slf4j.helpers.FormattingTuple	=>	b.a.a.d
	Source: "FormattingTuple.java"
	FieldsOf: org.slf4j.helpers.FormattingTuple
		public static org.slf4j.helpers.FormattingTuple NULL	=>	d
		private java.lang.Object[] argArray	=>	c
		private java.lang.String message	=>	b
		private java.lang.Throwable throwable	=>	a
	MethodsOf: org.slf4j.helpers.FormattingTuple
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Object[], java.lang.Throwable) 	SignatureNotChanged
		private static java.lang.IllegalStateException a(java.lang.IllegalStateException) 	SignatureNotChanged
		public java.lang.Object[] getArgArray()	=>	a()
		public java.lang.String getMessage()	=>	c()
		public java.lang.Throwable getThrowable()	=>	b()
		static java.lang.Object[] trimmedCopy(java.lang.Object[])	=>	a(java.lang.Object[])
	LineNumbersOf: org.slf4j.helpers.FormattingTuple
		35	=>	9
		42	=>	17
		43	=>	3
		45	=>	5
		46	=>	4
		47	=>	2
		48	=>	1
		49	=>	6
		51	=>	7
		53	=>	8
		56	=>	13
		57	=>	18
		59	=>	19
		60	=>	16
		61	=>	11
		62	=>	12
		66	=>	10
		70	=>	15
		74	=>	14

Class: public abstract org.slf4j.helpers.MarkerIgnoringBase	=>	b.a.a.i
	Source: "MarkerIgnoringBase.java"
	FieldsOf: org.slf4j.helpers.MarkerIgnoringBase
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.MarkerIgnoringBase
		public void <init>() 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String)	=>	d(b.a.g, java.lang.String)
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	b(b.a.g, java.lang.String, java.lang.Object)
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	d(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	a(b.a.g, java.lang.String, java.lang.Object[])
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	d(b.a.g, java.lang.String, java.lang.Throwable)
		public void error(org.slf4j.Marker, java.lang.String)	=>	e(b.a.g, java.lang.String)
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	e(b.a.g, java.lang.String, java.lang.Object)
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	a(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	b(b.a.g, java.lang.String, java.lang.Object[])
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	b(b.a.g, java.lang.String, java.lang.Throwable)
		public void info(org.slf4j.Marker, java.lang.String)	=>	a(b.a.g, java.lang.String)
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	a(b.a.g, java.lang.String, java.lang.Object)
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	c(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	d(b.a.g, java.lang.String, java.lang.Object[])
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	c(b.a.g, java.lang.String, java.lang.Throwable)
		public boolean isDebugEnabled(org.slf4j.Marker)	=>	d(b.a.g)
		public boolean isErrorEnabled(org.slf4j.Marker)	=>	e(b.a.g)
		public boolean isInfoEnabled(org.slf4j.Marker)	=>	c(b.a.g)
		public boolean isTraceEnabled(org.slf4j.Marker)	=>	a(b.a.g)
		public boolean isWarnEnabled(org.slf4j.Marker)	=>	b(b.a.g)
		public java.lang.String toString() 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String)	=>	c(b.a.g, java.lang.String)
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	c(b.a.g, java.lang.String, java.lang.Object)
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	e(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	e(b.a.g, java.lang.String, java.lang.Object[])
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	e(b.a.g, java.lang.String, java.lang.Throwable)
		public void warn(org.slf4j.Marker, java.lang.String)	=>	b(b.a.g, java.lang.String)
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object)	=>	d(b.a.g, java.lang.String, java.lang.Object)
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)	=>	b(b.a.g, java.lang.String, java.lang.Object, java.lang.Object)
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[])	=>	c(b.a.g, java.lang.String, java.lang.Object[])
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable)	=>	a(b.a.g, java.lang.String, java.lang.Throwable)
	LineNumbersOf: org.slf4j.helpers.MarkerIgnoringBase
		39	=>	55
		44	=>	43
		48	=>	10
		49	=>	36
		52	=>	7
		53	=>	47
		56	=>	14
		57	=>	33
		60	=>	20
		61	=>	51
		64	=>	17
		65	=>	1
		68	=>	49
		72	=>	26
		73	=>	35
		76	=>	37
		77	=>	5
		80	=>	40
		81	=>	2
		84	=>	11
		85	=>	30
		88	=>	54
		89	=>	53
		92	=>	38
		96	=>	24
		97	=>	3
		100	=>	4
		101	=>	19
		104	=>	34
		105	=>	56
		108	=>	52
		109	=>	13
		112	=>	18
		113	=>	31
		116	=>	50
		120	=>	8
		121	=>	28
		124	=>	46
		125	=>	32
		128	=>	16
		129	=>	39
		132	=>	44
		133	=>	45
		136	=>	48
		137	=>	27
		141	=>	57
		145	=>	15
		146	=>	6
		149	=>	23
		150	=>	9
		153	=>	12
		154	=>	29
		157	=>	21
		158	=>	41
		161	=>	42
		162	=>	22
		165	=>	25

Class: public final org.slf4j.helpers.MessageFormatter	=>	b.a.a.g
	Source: "MessageFormatter.java"
	FieldsOf: org.slf4j.helpers.MessageFormatter
	MethodsOf: org.slf4j.helpers.MessageFormatter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static final org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String, java.lang.Object[])	=>	a(java.lang.String, java.lang.Object[])
		private static void booleanArrayAppend(java.lang.StringBuffer, boolean[])	=>	a(java.lang.StringBuffer, boolean[])
		private static void byteArrayAppend(java.lang.StringBuffer, byte[])	=>	a(java.lang.StringBuffer, byte[])
		private static void charArrayAppend(java.lang.StringBuffer, char[])	=>	a(java.lang.StringBuffer, char[])
		private static void deeplyAppendParameter(java.lang.StringBuffer, java.lang.Object, java.util.Map)	=>	a(java.lang.StringBuffer, java.lang.Object, java.util.Map)
		private static void doubleArrayAppend(java.lang.StringBuffer, double[])	=>	a(java.lang.StringBuffer, double[])
		private static void floatArrayAppend(java.lang.StringBuffer, float[])	=>	a(java.lang.StringBuffer, float[])
		public static final org.slf4j.helpers.FormattingTuple format(java.lang.String, java.lang.Object)	=>	a(java.lang.String, java.lang.Object)
		public static final org.slf4j.helpers.FormattingTuple format(java.lang.String, java.lang.Object, java.lang.Object)	=>	a(java.lang.String, java.lang.Object, java.lang.Object)
		static final java.lang.Throwable getThrowableCandidate(java.lang.Object[])	=>	a(java.lang.Object[])
		private static void intArrayAppend(java.lang.StringBuffer, int[])	=>	a(java.lang.StringBuffer, int[])
		static final boolean isDoubleEscaped(java.lang.String, int)	=>	b(java.lang.String, int)
		static final boolean isEscapedDelimeter(java.lang.String, int)	=>	a(java.lang.String, int)
		private static void longArrayAppend(java.lang.StringBuffer, long[])	=>	a(java.lang.StringBuffer, long[])
		private static void objectArrayAppend(java.lang.StringBuffer, java.lang.Object[], java.util.Map)	=>	a(java.lang.StringBuffer, java.lang.Object[], java.util.Map)
		private static void safeObjectAppend(java.lang.StringBuffer, java.lang.Object)	=>	a(java.lang.StringBuffer, java.lang.Object)
		private static void shortArrayAppend(java.lang.StringBuffer, short[])	=>	a(java.lang.StringBuffer, short[])
	LineNumbersOf: org.slf4j.helpers.MessageFormatter
		98	=>	127
		124	=>	80
		152	=>	161
		156	=>	37
		157	=>	128
		160	=>	81
		161	=>	100
		162	=>	94
		164	=>	99
		182	=>	38
		184	=>	71
		185	=>	70
		188	=>	66
		189	=>	149
		192	=>	136
		194	=>	67
		197	=>	10 and 151
		199	=>	48
		201	=>	1
		203	=>	105
		204	=>	68
		208	=>	12
		209	=>	93
		213	=>	118
		214	=>	158
		215	=>	156
		216	=>	119
		217	=>	144
		218	=>	76
		223	=>	36
		224	=>	22
		225	=>	39
		229	=>	43
		230	=>	138
		231	=>	41
		236	=>	7
		237	=>	13
		238	=>	79
		240	=>	15
		247	=>	83
		248	=>	60
		250	=>	90
		251	=>	86
		252	=>	101
		254	=>	134
		260	=>	74
		262	=>	121
		264	=>	148
		271	=>	141
		272	=>	72
		273	=>	6
		275	=>	152
		276	=>	45
		280	=>	32
		281	=>	57
		282	=>	3
		283	=>	92
		284	=>	29
		285	=>	20
		286	=>	91
		287	=>	5
		288	=>	78
		289	=>	155
		290	=>	112
		291	=>	113
		292	=>	4
		293	=>	142
		294	=>	65
		295	=>	111
		297	=>	146
		300	=>	154
		304	=>	133
		305	=>	24
		306	=>	27
		307	=>	165
		310	=>	103
		311	=>	143
		312	=>	108
		314	=>	140
		318	=>	47
		319	=>	25
		320	=>	56
		321	=>	61
		322	=>	120 and 132
		323	=>	89
		324	=>	87
		325	=>	124
		328	=>	64
		329	=>	126
		330	=>	2
		332	=>	131
		333	=>	54
		336	=>	137
		337	=>	166
		338	=>	96 and 163
		339	=>	18
		340	=>	52
		341	=>	107
		343	=>	33
		344	=>	77
		347	=>	125
		348	=>	164
		349	=>	9 and 82
		350	=>	17
		351	=>	135
		352	=>	139
		354	=>	16
		355	=>	31
		358	=>	49
		359	=>	150
		360	=>	159 and 160
		361	=>	116
		362	=>	59
		363	=>	162
		365	=>	8
		366	=>	145
		369	=>	114
		370	=>	157
		371	=>	35 and 84
		372	=>	69
		373	=>	50
		374	=>	153
		376	=>	23
		377	=>	88
		380	=>	40
		381	=>	62
		382	=>	102 and 104
		383	=>	46
		384	=>	30
		385	=>	58
		387	=>	55
		388	=>	53
		391	=>	11
		392	=>	97
		393	=>	75 and 117
		394	=>	106
		395	=>	109
		396	=>	51
		398	=>	130
		399	=>	26
		402	=>	34
		403	=>	122
		404	=>	63 and 129
		405	=>	123
		406	=>	28
		407	=>	95
		409	=>	98
		410	=>	110
		413	=>	42
		414	=>	19
		415	=>	14 and 115
		416	=>	44
		417	=>	85
		418	=>	73
		420	=>	21
		421	=>	147

Class: public org.slf4j.helpers.NOPLogger	=>	b.a.a.j
	Source: "NOPLogger.java"
	FieldsOf: org.slf4j.helpers.NOPLogger
		public static final org.slf4j.helpers.NOPLogger NOP_LOGGER	=>	c
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.NOPLogger
		static void <clinit>() 	SignatureNotChanged
		protected void <init>() 	SignatureNotChanged
		public final void debug(java.lang.String)	=>	b(java.lang.String)
		public final void debug(java.lang.String, java.lang.Object)	=>	c(java.lang.String, java.lang.Object)
		public final void debug(java.lang.String, java.lang.Object, java.lang.Object)	=>	e(java.lang.String, java.lang.Object, java.lang.Object)
		public final void debug(java.lang.String, java.lang.Object[])	=>	e(java.lang.String, java.lang.Object[])
		public final void debug(java.lang.String, java.lang.Throwable)	=>	e(java.lang.String, java.lang.Throwable)
		public final void error(java.lang.String)	=>	c(java.lang.String)
		public final void error(java.lang.String, java.lang.Object)	=>	e(java.lang.String, java.lang.Object)
		public final void error(java.lang.String, java.lang.Object, java.lang.Object)	=>	c(java.lang.String, java.lang.Object, java.lang.Object)
		public final void error(java.lang.String, java.lang.Object[])	=>	d(java.lang.String, java.lang.Object[])
		public final void error(java.lang.String, java.lang.Throwable)	=>	c(java.lang.String, java.lang.Throwable)
		public java.lang.String getName()	=>	f()
		public final void info(java.lang.String)	=>	d(java.lang.String)
		public final void info(java.lang.String, java.lang.Object)	=>	a(java.lang.String, java.lang.Object)
		public final void info(java.lang.String, java.lang.Object, java.lang.Object)	=>	b(java.lang.String, java.lang.Object, java.lang.Object)
		public final void info(java.lang.String, java.lang.Object[])	=>	c(java.lang.String, java.lang.Object[])
		public final void info(java.lang.String, java.lang.Throwable)	=>	b(java.lang.String, java.lang.Throwable)
		public final boolean isDebugEnabled()	=>	c()
		public final boolean isErrorEnabled()	=>	d()
		public final boolean isInfoEnabled()	=>	e()
		public final boolean isTraceEnabled()	=>	a()
		public final boolean isWarnEnabled()	=>	b()
		public final void trace(java.lang.String)	=>	a(java.lang.String)
		public final void trace(java.lang.String, java.lang.Object)	=>	d(java.lang.String, java.lang.Object)
		public final void trace(java.lang.String, java.lang.Object, java.lang.Object)	=>	d(java.lang.String, java.lang.Object, java.lang.Object)
		public final void trace(java.lang.String, java.lang.Object[])	=>	b(java.lang.String, java.lang.Object[])
		public final void trace(java.lang.String, java.lang.Throwable)	=>	a(java.lang.String, java.lang.Throwable)
		public final void warn(java.lang.String)	=>	e(java.lang.String)
		public final void warn(java.lang.String, java.lang.Object)	=>	b(java.lang.String, java.lang.Object)
		public final void warn(java.lang.String, java.lang.Object, java.lang.Object)	=>	a(java.lang.String, java.lang.Object, java.lang.Object)
		public final void warn(java.lang.String, java.lang.Object[])	=>	a(java.lang.String, java.lang.Object[])
		public final void warn(java.lang.String, java.lang.Throwable)	=>	d(java.lang.String, java.lang.Throwable)
	LineNumbersOf: org.slf4j.helpers.NOPLogger
		43	=>	24
		49	=>	23
		50	=>	3
		56	=>	31
		64	=>	11
		70	=>	1
		75	=>	29
		80	=>	17
		85	=>	6
		90	=>	32
		97	=>	2
		103	=>	20
		108	=>	16
		113	=>	30
		118	=>	27
		125	=>	26
		133	=>	18
		140	=>	21
		145	=>	10
		150	=>	28
		155	=>	5
		161	=>	4
		169	=>	12
		175	=>	19
		180	=>	9
		185	=>	14
		190	=>	13
		196	=>	34
		201	=>	15
		207	=>	8
		212	=>	7
		217	=>	33
		222	=>	22
		228	=>	25

Class: public org.slf4j.helpers.NOPLoggerFactory	=>	b.a.a.l
	Source: "NOPLoggerFactory.java"
	FieldsOf: org.slf4j.helpers.NOPLoggerFactory
	MethodsOf: org.slf4j.helpers.NOPLoggerFactory
		public void <init>() 	SignatureNotChanged
		public org.slf4j.Logger getLogger(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.slf4j.helpers.NOPLoggerFactory
		41	=>	3
		43	=>	2
		46	=>	1

Class: public org.slf4j.helpers.NOPMDCAdapter	=>	b.a.a.e
	Source: "NOPMDCAdapter.java"
	FieldsOf: org.slf4j.helpers.NOPMDCAdapter
	MethodsOf: org.slf4j.helpers.NOPMDCAdapter
		public void <init>() 	SignatureNotChanged
		public void clear()	=>	b()
		public java.lang.String get(java.lang.String)	=>	b(java.lang.String)
		public java.util.Map getCopyOfContextMap()	=>	a()
		public void put(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public void remove(java.lang.String)	=>	a(java.lang.String)
		public void setContextMap(java.util.Map)	=>	a(java.util.Map)
	LineNumbersOf: org.slf4j.helpers.NOPMDCAdapter
		40	=>	1
		43	=>	5
		46	=>	2
		50	=>	3
		53	=>	7
		56	=>	6
		61	=>	4

Class: abstract org.slf4j.helpers.NamedLoggerBase	=>	b.a.a.h
	Source: "NamedLoggerBase.java"
	FieldsOf: org.slf4j.helpers.NamedLoggerBase
		protected java.lang.String name	=>	b
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.NamedLoggerBase
		void <init>() 	SignatureNotChanged
		public java.lang.String getName()	=>	f()
		protected java.lang.Object readResolve() 	SignatureNotChanged
	LineNumbersOf: org.slf4j.helpers.NamedLoggerBase
		40	=>	1
		47	=>	2
		67	=>	3

Class: public org.slf4j.helpers.SubstituteLoggerFactory	=>	b.a.a.b
	Source: "SubstituteLoggerFactory.java"
	FieldsOf: org.slf4j.helpers.SubstituteLoggerFactory
		final java.util.List loggerNameList	=>	a
	MethodsOf: org.slf4j.helpers.SubstituteLoggerFactory
		public void <init>() 	SignatureNotChanged
		public org.slf4j.Logger getLogger(java.lang.String)	=>	a(java.lang.String)
		public java.util.List getLoggerNameList()	=>	a()
	LineNumbersOf: org.slf4j.helpers.SubstituteLoggerFactory
		44	=>	6
		47	=>	3
		50	=>	2
		51	=>	4
		52	=>	1
		53	=>	7
		57	=>	5
		58	=>	10
		59	=>	11
		60	=>	8
		61	=>	9

Class: public org.slf4j.helpers.Util	=>	b.a.a.f
	Source: "Util.java"
	FieldsOf: org.slf4j.helpers.Util
		private static com.google.gson.TypeAdapter[] a	=>	b
	MethodsOf: org.slf4j.helpers.Util
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	b()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
		public static final void report(java.lang.String)	=>	a(java.lang.String)
		public static final void report(java.lang.String, java.lang.Throwable)	=>	a(java.lang.String, java.lang.Throwable)
	LineNumbersOf: org.slf4j.helpers.Util
		34	=>	2
		37	=>	3
		38	=>	4
		39	=>	5
		40	=>	1
		43	=>	6
		44	=>	7

Class: public abstract org.slf4j.spi.LocationAwareLogger	=>	b.a.b.b
	Source: "LocationAwareLogger.java"
	FieldsOf: org.slf4j.spi.LocationAwareLogger
		public static final int DEBUG_INT	=>	f
		public static final int ERROR_INT	=>	c
		public static final int INFO_INT	=>	e
		public static final int TRACE_INT	=>	b
		public static final int WARN_INT	=>	d
	MethodsOf: org.slf4j.spi.LocationAwareLogger
		public abstract void log(org.slf4j.Marker, java.lang.String, int, java.lang.String, java.lang.Object[], java.lang.Throwable)	=>	a(b.a.g, java.lang.String, int, java.lang.String, java.lang.Object[], java.lang.Throwable)
	LineNumbersOf: org.slf4j.spi.LocationAwareLogger

Class: public abstract org.slf4j.spi.LoggerFactoryBinder	=>	b.a.b.c
	Source: "LoggerFactoryBinder.java"
	FieldsOf: org.slf4j.spi.LoggerFactoryBinder
	MethodsOf: org.slf4j.spi.LoggerFactoryBinder
		public abstract org.slf4j.ILoggerFactory getLoggerFactory()	=>	b()
		public abstract java.lang.String getLoggerFactoryClassStr()	=>	a()
	LineNumbersOf: org.slf4j.spi.LoggerFactoryBinder

Class: public abstract org.slf4j.spi.MDCAdapter	=>	b.a.b.d
	Source: "MDCAdapter.java"
	FieldsOf: org.slf4j.spi.MDCAdapter
	MethodsOf: org.slf4j.spi.MDCAdapter
		public abstract void clear()	=>	b()
		public abstract java.lang.String get(java.lang.String)	=>	b(java.lang.String)
		public abstract java.util.Map getCopyOfContextMap()	=>	a()
		public abstract void put(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public abstract void remove(java.lang.String)	=>	a(java.lang.String)
		public abstract void setContextMap(java.util.Map)	=>	a(java.util.Map)
	LineNumbersOf: org.slf4j.spi.MDCAdapter

Class: public abstract org.slf4j.spi.MarkerFactoryBinder	=>	b.a.b.a
	Source: "MarkerFactoryBinder.java"
	FieldsOf: org.slf4j.spi.MarkerFactoryBinder
	MethodsOf: org.slf4j.spi.MarkerFactoryBinder
		public abstract org.slf4j.IMarkerFactory getMarkerFactory()	=>	a()
		public abstract java.lang.String getMarkerFactoryClassStr()	=>	b()
	LineNumbersOf: org.slf4j.spi.MarkerFactoryBinder

Class: public org.zeroturnaround.zip.ByteSource	=>	b.b.a.g
	Source: "ByteSource.java"
	FieldsOf: org.zeroturnaround.zip.ByteSource
		private final byte[] bytes	=>	c
		private final int compressionMethod	=>	d
		private final long crc	=>	b
		private final java.lang.String path	=>	e
		private final long time	=>	a
	MethodsOf: org.zeroturnaround.zip.ByteSource
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte[]) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], int) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], long) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], long, int) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.util.zip.ZipEntry getEntry()	=>	c()
		public java.io.InputStream getInputStream()	=>	b()
		public java.lang.String getPath()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.ByteSource
		33	=>	7
		34	=>	2
		37	=>	13
		38	=>	20
		40	=>	8
		41	=>	22
		43	=>	15
		44	=>	25
		45	=>	4
		46	=>	21
		47	=>	23
		48	=>	18
		49	=>	10
		50	=>	26
		51	=>	12
		52	=>	27
		53	=>	16
		55	=>	19
		58	=>	6
		62	=>	14
		63	=>	32
		64	=>	5
		66	=>	9
		67	=>	17
		69	=>	24
		70	=>	1
		72	=>	28
		73	=>	31
		77	=>	3
		78	=>	30
		81	=>	11
		86	=>	29

Class: org.zeroturnaround.zip.CloseShieldInputStream	=>	b.b.a.o
	Source: "CloseShieldInputStream.java"
	FieldsOf: org.zeroturnaround.zip.CloseShieldInputStream
	MethodsOf: org.zeroturnaround.zip.CloseShieldInputStream
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.CloseShieldInputStream
		27	=>	3
		28	=>	2
		33	=>	1

Class: public org.zeroturnaround.zip.FileSource	=>	b.b.a.l
	Source: "FileSource.java"
	FieldsOf: org.zeroturnaround.zip.FileSource
		private final java.io.File file	=>	b
		private final java.lang.String path	=>	a
	MethodsOf: org.zeroturnaround.zip.FileSource
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.io.File) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.util.zip.ZipEntry getEntry()	=>	c()
		public java.io.InputStream getInputStream()	=>	b()
		public java.lang.String getPath()	=>	a()
		public static org.zeroturnaround.zip.FileSource[] pair(java.io.File[], java.lang.String[])	=>	a(java.io.File[], java.lang.String[])
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.FileSource
		35	=>	1
		36	=>	5
		37	=>	9
		38	=>	10
		41	=>	17
		45	=>	3
		46	=>	2
		50	=>	7
		51	=>	11
		54	=>	18
		59	=>	13
		76	=>	8
		77	=>	12
		81	=>	16
		82	=>	4 and 6
		83	=>	14
		85	=>	15

Class: final org.zeroturnaround.zip.IdentityNameMapper	=>	b.b.a.h
	Source: "IdentityNameMapper.java"
	FieldsOf: org.zeroturnaround.zip.IdentityNameMapper
		public static final org.zeroturnaround.zip.NameMapper INSTANCE	=>	a
	MethodsOf: org.zeroturnaround.zip.IdentityNameMapper
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public java.lang.String map(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.IdentityNameMapper
		27	=>	1
		29	=>	3
		32	=>	2

Class: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy	=>	b.b.a.y
	Source: "Java6FileApiPermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy
		private final java.lang.reflect.Method canExecuteMethod	=>	b
		private final java.lang.reflect.Method setExecutableMethod	=>	d
		private final java.lang.reflect.Method setReadableMethod	=>	a
		private final java.lang.reflect.Method setWritableMethod	=>	c
	MethodsOf: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private boolean canExecute(java.io.File)	=>	b(java.io.File)
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File)	=>	a(java.io.File)
		private boolean setExecutable(java.io.File, boolean, boolean)	=>	c(java.io.File, boolean, boolean)
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.io.File, b.b.a.m)
		private boolean setReadable(java.io.File, boolean, boolean)	=>	a(java.io.File, boolean, boolean)
		private boolean setWritable(java.io.File, boolean, boolean)	=>	b(java.io.File, boolean, boolean)
	LineNumbersOf: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy
		12	=>	6
		13	=>	2
		14	=>	27
		15	=>	22
		16	=>	7
		17	=>	16
		20	=>	3
		22	=>	8
		24	=>	17
		26	=>	19
		29	=>	4
		32	=>	9
		33	=>	5
		34	=>	20
		35	=>	24
		39	=>	1
		40	=>	10
		41	=>	23
		42	=>	14
		45	=>	21
		49	=>	28
		50	=>	25
		51	=>	18
		52	=>	15
		55	=>	13
		59	=>	12
		63	=>	11
		67	=>	26

Class: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy	=>	b.b.a.z
	Source: "Java7Nio2ApiPermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy
		private final java.lang.Object GROUP_EXECUTE	=>	h
		private final java.lang.Object GROUP_READ	=>	c
		private final java.lang.Object GROUP_WRITE	=>	q
		private final java.lang.Object OTHERS_EXECUTE	=>	m
		private final java.lang.Object OTHERS_READ	=>	e
		private final java.lang.Object OTHERS_WRITE	=>	i
		private final java.lang.Object OWNER_EXECUTE	=>	p
		private final java.lang.Object OWNER_READ	=>	k
		private final java.lang.Object OWNER_WRITE	=>	d
		private final java.lang.Class filesClass	=>	l
		private final java.lang.reflect.Method getPosixFilePermissionsMethod	=>	n
		private final java.lang.Class linkOptionClass	=>	b
		private final java.lang.Enum[] linkOptionsArray	=>	a
		private final java.lang.Class pathClass	=>	f
		private final java.lang.Class posixFilePermissionClass	=>	g
		private final java.lang.reflect.Method setPosixFilePermissionsMethod	=>	o
		private final java.lang.reflect.Method toPathMethod	=>	j
	MethodsOf: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private void addIf(boolean, java.util.Set, java.lang.Object)	=>	a(boolean, java.util.Set, java.lang.Object)
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File)	=>	a(java.io.File)
		private java.util.Set getPosixFilePermissions(java.io.File)	=>	c(java.io.File)
		private static boolean isPosix()	=>	a()
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.io.File, b.b.a.m)
		private void setPosixFilePermissions(java.io.File, java.util.Set)	=>	a(java.io.File, java.util.Set)
		private java.lang.Object toPath(java.io.File)	=>	b(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy
		37	=>	62
		38	=>	42
		39	=>	34
		42	=>	54
		43	=>	67
		44	=>	24
		45	=>	3
		46	=>	22
		47	=>	58
		48	=>	11
		49	=>	63
		50	=>	5
		51	=>	55
		52	=>	60
		53	=>	14
		55	=>	7
		56	=>	38
		57	=>	59
		58	=>	33
		60	=>	27
		61	=>	30
		63	=>	52
		64	=>	44
		65	=>	45
		66	=>	35
		69	=>	51
		70	=>	10
		72	=>	26
		74	=>	46
		75	=>	50
		76	=>	53
		78	=>	31
		79	=>	48
		80	=>	49
		82	=>	66
		83	=>	29
		84	=>	6
		86	=>	1
		90	=>	18
		91	=>	64
		92	=>	20
		93	=>	16
		94	=>	19
		96	=>	25
		97	=>	37
		98	=>	28
		100	=>	15
		101	=>	32
		102	=>	13
		104	=>	17
		105	=>	61
		108	=>	40
		109	=>	57
		111	=>	8
		121	=>	56
		126	=>	2
		127	=>	43
		131	=>	4
		136	=>	12 and 36
		137	=>	65
		138	=>	9 and 39
		139	=>	41
		141	=>	47
		143	=>	21
		145	=>	23

Class: public org.zeroturnaround.zip.MaliciousZipException	=>	b.b.a.r
	Source: "MaliciousZipException.java"
	FieldsOf: org.zeroturnaround.zip.MaliciousZipException
	MethodsOf: org.zeroturnaround.zip.MaliciousZipException
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String) 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.MaliciousZipException
		8	=>	2
		9	=>	1

Class: public abstract org.zeroturnaround.zip.NameMapper	=>	b.b.a.x
	Source: "NameMapper.java"
	FieldsOf: org.zeroturnaround.zip.NameMapper
	MethodsOf: org.zeroturnaround.zip.NameMapper
		public abstract java.lang.String map(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.NameMapper

Class: org.zeroturnaround.zip.ZTFilePermissions	=>	b.b.a.m
	Source: "ZTFilePermissions.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissions
		private boolean groupCanExecute	=>	b
		private boolean groupCanRead	=>	f
		private boolean groupCanWrite	=>	i
		private boolean isDirectory	=>	g
		private boolean othersCanExecute	=>	h
		private boolean othersCanRead	=>	e
		private boolean othersCanWrite	=>	j
		private boolean ownerCanExecute	=>	c
		private boolean ownerCanRead	=>	a
		private boolean ownerCanWrite	=>	d
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissions
		void <init>() 	SignatureNotChanged
		boolean isGroupCanExecute()	=>	a()
		boolean isGroupCanRead()	=>	d()
		boolean isGroupCanWrite()	=>	h()
		boolean isOthersCanExecute()	=>	g()
		boolean isOthersCanRead()	=>	b()
		boolean isOthersCanWrite()	=>	c()
		boolean isOwnerCanExecute()	=>	e()
		boolean isOwnerCanRead()	=>	i()
		boolean isOwnerCanWrite()	=>	f()
		void setDirectory(boolean)	=>	a(boolean)
		void setGroupCanExecute(boolean)	=>	h(boolean)
		void setGroupCanRead(boolean)	=>	c(boolean)
		void setGroupCanWrite(boolean)	=>	i(boolean)
		void setOthersCanExecute(boolean)	=>	f(boolean)
		void setOthersCanRead(boolean)	=>	e(boolean)
		void setOthersCanWrite(boolean)	=>	d(boolean)
		void setOwnerCanExecute(boolean)	=>	j(boolean)
		void setOwnerCanRead(boolean)	=>	b(boolean)
		void setOwnerCanWrite(boolean)	=>	g(boolean)
	LineNumbersOf: org.zeroturnaround.zip.ZTFilePermissions
		8	=>	30
		28	=>	22
		29	=>	17
		32	=>	4
		36	=>	11
		37	=>	23
		40	=>	5
		44	=>	14
		45	=>	28
		48	=>	1
		52	=>	16
		53	=>	8
		56	=>	3
		60	=>	19
		61	=>	25
		64	=>	21
		68	=>	6
		69	=>	9
		72	=>	12
		76	=>	15
		77	=>	24
		80	=>	7
		84	=>	2
		85	=>	27
		88	=>	18
		92	=>	13
		93	=>	29
		96	=>	26
		100	=>	20
		101	=>	10

Class: public abstract org.zeroturnaround.zip.ZTFilePermissionsStrategy	=>	b.b.a.n
	Source: "ZTFilePermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsStrategy
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsStrategy
		public abstract org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File)	=>	a(java.io.File)
		public abstract void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.io.File, b.b.a.m)
	LineNumbersOf: org.zeroturnaround.zip.ZTFilePermissionsStrategy

Class: org.zeroturnaround.zip.ZTFilePermissionsUtil	=>	b.b.a.v
	Source: "ZTFilePermissionsUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil
		private static final org.zeroturnaround.zip.ZTFilePermissionsStrategy DEFAULT_STRATEGY	=>	b
		private static final org.zeroturnaround.zip.ZTFilePermissionsStrategy NOP_STRATEGY	=>	a
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private static int addFlag(boolean, int)	=>	a(boolean, int)
		private static org.zeroturnaround.zip.ZTFilePermissionsStrategy fetchDefaultStrategy()	=>	a()
		static org.zeroturnaround.zip.ZTFilePermissions fromPosixFileMode(int)	=>	a(int)
		static org.zeroturnaround.zip.ZTFilePermissionsStrategy getDefaultStategy()	=>	b()
		static int toPosixFileMode(org.zeroturnaround.zip.ZTFilePermissions)	=>	a(b.b.a.m)
		private static org.zeroturnaround.zip.ZTFilePermissionsStrategy tryInstantiateStrategy(java.lang.Class)	=>	a(java.lang.Class)
	LineNumbersOf: org.zeroturnaround.zip.ZTFilePermissionsUtil
		12	=>	34
		13	=>	21
		33	=>	23
		44	=>	29
		46	=>	12
		47	=>	33
		48	=>	25
		50	=>	13
		51	=>	7
		52	=>	1
		54	=>	14
		55	=>	32
		56	=>	36
		58	=>	35
		62	=>	24
		72	=>	30
		74	=>	5
		75	=>	15
		76	=>	26
		78	=>	31
		79	=>	3
		80	=>	16
		82	=>	11
		83	=>	22
		84	=>	2
		86	=>	8
		92	=>	18
		103	=>	37
		106	=>	17
		108	=>	10
		109	=>	6
		112	=>	28
		113	=>	20
		116	=>	4
		121	=>	9
		123	=>	27
		125	=>	19

Class: final org.zeroturnaround.zip.ZTFilePermissionsUtil$1	=>	b.b.a.v$a
	Source: "ZTFilePermissionsUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil$1
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil$1
		void <init>() 	SignatureNotChanged
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File)	=>	a(java.io.File)
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.io.File, b.b.a.m)
	LineNumbersOf: org.zeroturnaround.zip.ZTFilePermissionsUtil$1
		92	=>	3
		95	=>	2
		99	=>	1

Class: public final org.zeroturnaround.zip.ZTFileUtil	=>	b.b.a.t
	Source: "ZTFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFileUtil
	MethodsOf: org.zeroturnaround.zip.ZTFileUtil
		private void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private static void innerListFiles(java.io.File, java.util.Collection, java.io.FileFilter)	=>	a(java.io.File, java.util.Collection, java.io.FileFilter)
		public static java.util.Collection listFiles(java.io.File)	=>	a(java.io.File)
		public static java.util.Collection listFiles(java.io.File, java.io.FileFilter)	=>	a(java.io.File, java.io.FileFilter)
	LineNumbersOf: org.zeroturnaround.zip.ZTFileUtil
		24	=>	17
		25	=>	1
		28	=>	6
		32	=>	2
		34	=>	10
		35	=>	15
		38	=>	16
		40	=>	8
		47	=>	14
		48	=>	3
		53	=>	12
		55	=>	19
		56	=>	13 and 18
		57	=>	5
		58	=>	20
		59	=>	9
		62	=>	4
		63	=>	7
		68	=>	11

Class: final org.zeroturnaround.zip.ZTFileUtil$1	=>	b.b.a.t$a
	Source: "ZTFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFileUtil$1
	MethodsOf: org.zeroturnaround.zip.ZTFileUtil$1
		void <init>() 	SignatureNotChanged
		public boolean accept(java.io.File) 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.ZTFileUtil$1
		40	=>	2
		42	=>	1

Class: org.zeroturnaround.zip.ZTZipReflectionUtil	=>	b.b.a.j
	Source: "ZTZipReflectionUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTZipReflectionUtil
	MethodsOf: org.zeroturnaround.zip.ZTZipReflectionUtil
		private void <init>() 	SignatureNotChanged
		static java.lang.Class getClassForName(java.lang.String, java.lang.Class)	=>	a(java.lang.String, java.lang.Class)
		static java.lang.reflect.Method getDeclaredMethod(java.lang.Class, java.lang.String, java.lang.Class[])	=>	a(java.lang.Class, java.lang.String, java.lang.Class[])
		static java.lang.Object invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])	=>	a(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])
	LineNumbersOf: org.zeroturnaround.zip.ZTZipReflectionUtil
		8	=>	6
		9	=>	5
		13	=>	12
		15	=>	13
		16	=>	16
		18	=>	4
		19	=>	15
		25	=>	10
		27	=>	11
		28	=>	17
		34	=>	8
		36	=>	7
		37	=>	14
		39	=>	1
		40	=>	3
		42	=>	9
		43	=>	2

Class: public org.zeroturnaround.zip.ZipBreakException	=>	b.b.a.B
	Source: "ZipBreakException.java"
	FieldsOf: org.zeroturnaround.zip.ZipBreakException
	MethodsOf: org.zeroturnaround.zip.ZipBreakException
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Exception) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.ZipBreakException
		5	=>	5
		6	=>	3
		9	=>	6
		10	=>	4
		13	=>	1
		14	=>	2

Class: public abstract org.zeroturnaround.zip.ZipEntryCallback	=>	b.b.a.s
	Source: "ZipEntryCallback.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryCallback
	MethodsOf: org.zeroturnaround.zip.ZipEntryCallback
		public abstract void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipEntryCallback

Class: org.zeroturnaround.zip.ZipEntryOrInfoAdapter	=>	b.b.a.k
	Source: "ZipEntryOrInfoAdapter.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryOrInfoAdapter
		private final org.zeroturnaround.zip.ZipEntryCallback entryCallback	=>	b
		private final org.zeroturnaround.zip.ZipInfoCallback infoCallback	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipEntryOrInfoAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.zeroturnaround.zip.ZipEntryCallback, org.zeroturnaround.zip.ZipInfoCallback) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
		public void process(java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipEntryOrInfoAdapter
		12	=>	2
		13	=>	12
		14	=>	9
		16	=>	1
		17	=>	11
		18	=>	8
		21	=>	4
		22	=>	3
		25	=>	10
		26	=>	7
		29	=>	5
		31	=>	6

Class: public abstract org.zeroturnaround.zip.ZipEntrySource	=>	b.b.a.A
	Source: "ZipEntrySource.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntrySource
	MethodsOf: org.zeroturnaround.zip.ZipEntrySource
		public abstract java.util.zip.ZipEntry getEntry()	=>	c()
		public abstract java.io.InputStream getInputStream()	=>	b()
		public abstract java.lang.String getPath()	=>	a()
	LineNumbersOf: org.zeroturnaround.zip.ZipEntrySource

Class: org.zeroturnaround.zip.ZipEntryUtil	=>	b.b.a.e
	Source: "ZipEntryUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryUtil
	MethodsOf: org.zeroturnaround.zip.ZipEntryUtil
		private void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		static void addEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)	=>	a(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)
		static java.util.zip.ZipEntry copy(java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry)
		static java.util.zip.ZipEntry copy(java.util.zip.ZipEntry, java.lang.String)	=>	a(java.util.zip.ZipEntry, java.lang.String)
		static void copyEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)	=>	b(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)
		static void copyEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream, boolean)	=>	a(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream, boolean)
		static java.util.zip.ZipEntry fromFile(java.lang.String, java.io.File)	=>	a(java.lang.String, java.io.File)
		private static org.zeroturnaround.zip.extra.AsiExtraField getFirstAsiExtraField(java.util.List)	=>	a(java.util.List)
		static org.zeroturnaround.zip.ZTFilePermissions getZTFilePermissions(java.util.zip.ZipEntry)	=>	b(java.util.zip.ZipEntry)
		static boolean setZTFilePermissions(java.util.zip.ZipEntry, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.util.zip.ZipEntry, b.b.a.m)
	LineNumbersOf: org.zeroturnaround.zip.ZipEntryUtil
		40	=>	51
		41	=>	16
		50	=>	57
		61	=>	14
		62	=>	20
		63	=>	8
		65	=>	50
		66	=>	22
		68	=>	59
		69	=>	28
		71	=>	49
		72	=>	27
		75	=>	47
		76	=>	43
		77	=>	2
		91	=>	32
		92	=>	31
		106	=>	54
		108	=>	35
		109	=>	23
		112	=>	9
		115	=>	26
		116	=>	61
		129	=>	10
		130	=>	60
		131	=>	55
		133	=>	19
		134	=>	17
		144	=>	48
		145	=>	36
		146	=>	56
		148	=>	53
		150	=>	1
		151	=>	15
		152	=>	45
		154	=>	21
		166	=>	41
		167	=>	46
		168	=>	6
		169	=>	12
		170	=>	24
		173	=>	7
		174	=>	25
		175	=>	29
		176	=>	11
		178	=>	58
		179	=>	13
		192	=>	3
		193	=>	18
		194	=>	42
		195	=>	38
		196	=>	62
		197	=>	34
		199	=>	4
		201	=>	30
		202	=>	39
		207	=>	37
		208	=>	52
		209	=>	5
		210	=>	33
		212	=>	44
		213	=>	40

Class: public org.zeroturnaround.zip.ZipException	=>	b.b.a.q
	Source: "ZipException.java"
	FieldsOf: org.zeroturnaround.zip.ZipException
		private static com.google.gson.TypeAdapter[] a	=>	b
	MethodsOf: org.zeroturnaround.zip.ZipException
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.Exception) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public static com.google.gson.TypeAdapter[] a()	=>	b()
		public static void a(com.google.gson.TypeAdapter[])	=>	b(com.a.a.p[])
	LineNumbersOf: org.zeroturnaround.zip.ZipException
		5	=>	2
		6	=>	3
		9	=>	6
		10	=>	4
		13	=>	5
		14	=>	1

Class: org.zeroturnaround.zip.ZipExceptionUtil	=>	b.b.a.i
	Source: "ZipExceptionUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipExceptionUtil
	MethodsOf: org.zeroturnaround.zip.ZipExceptionUtil
		void <init>() 	SignatureNotChanged
		static org.zeroturnaround.zip.ZipException rethrow(java.io.IOException)	=>	a(java.io.IOException)
	LineNumbersOf: org.zeroturnaround.zip.ZipExceptionUtil
		5	=>	2
		11	=>	1

Class: org.zeroturnaround.zip.ZipFileUtil	=>	b.b.a.f
	Source: "ZipFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipFileUtil
	MethodsOf: org.zeroturnaround.zip.ZipFileUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.NoSuchMethodException a(java.lang.NoSuchMethodException) 	SignatureNotChanged
		static java.util.zip.ZipInputStream createZipInputStream(java.io.InputStream, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.nio.charset.Charset)
		static java.util.zip.ZipOutputStream createZipOutputStream(java.io.BufferedOutputStream, java.nio.charset.Charset)	=>	a(java.io.BufferedOutputStream, java.nio.charset.Charset)
		static java.util.zip.ZipFile getZipFile(java.io.File, java.nio.charset.Charset)	=>	a(java.io.File, java.nio.charset.Charset)
	LineNumbersOf: org.zeroturnaround.zip.ZipFileUtil
		27	=>	42
		28	=>	2
		34	=>	37
		35	=>	7
		38	=>	13
		39	=>	16
		41	=>	14
		42	=>	25
		44	=>	39
		45	=>	38
		47	=>	4
		48	=>	32
		50	=>	9
		51	=>	19
		53	=>	28
		54	=>	43
		63	=>	29
		64	=>	23
		67	=>	15
		68	=>	24
		70	=>	21
		71	=>	33
		73	=>	40
		74	=>	6
		76	=>	35
		77	=>	26
		79	=>	12
		80	=>	31
		82	=>	8
		83	=>	34
		91	=>	36
		92	=>	18
		96	=>	11
		97	=>	17
		99	=>	3
		100	=>	22
		102	=>	27
		103	=>	41
		105	=>	30
		106	=>	1
		108	=>	20
		109	=>	10
		111	=>	44
		112	=>	5

Class: public abstract org.zeroturnaround.zip.ZipInfoCallback	=>	b.b.a.p
	Source: "ZipInfoCallback.java"
	FieldsOf: org.zeroturnaround.zip.ZipInfoCallback
	MethodsOf: org.zeroturnaround.zip.ZipInfoCallback
		public abstract void process(java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipInfoCallback

Class: public final org.zeroturnaround.zip.ZipUtil	=>	b.b.a.w
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil
		public static final int DEFAULT_COMPRESSION_LEVEL	=>	a
		private static final org.slf4j.Logger log	=>	b
	MethodsOf: org.zeroturnaround.zip.ZipUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		static synthetic java.io.File access$100(java.io.File, java.lang.String) 	SignatureNotChanged
		static synthetic org.slf4j.Logger access$200() 	SignatureNotChanged
		static synthetic java.io.File access$300(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		static synthetic void access$700(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[])	=>	b(java.io.File, b.b.a.A[])
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File)	=>	c(java.io.File, b.b.a.A[], java.io.File)
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream)	=>	a(java.io.File, b.b.a.A[], java.io.OutputStream)
		public static void addEntries(java.io.InputStream, org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream)	=>	a(java.io.InputStream, b.b.a.A[], java.io.OutputStream)
		public static void addEntry(java.io.File, java.lang.String, byte[])	=>	b(java.io.File, java.lang.String, byte[])
		public static void addEntry(java.io.File, java.lang.String, byte[], int)	=>	a(java.io.File, java.lang.String, byte[], int)
		public static void addEntry(java.io.File, java.lang.String, byte[], java.io.File)	=>	b(java.io.File, java.lang.String, byte[], java.io.File)
		public static void addEntry(java.io.File, java.lang.String, byte[], java.io.File, int)	=>	a(java.io.File, java.lang.String, byte[], java.io.File, int)
		public static void addEntry(java.io.File, java.lang.String, java.io.File)	=>	e(java.io.File, java.lang.String, java.io.File)
		public static void addEntry(java.io.File, java.lang.String, java.io.File, java.io.File)	=>	a(java.io.File, java.lang.String, java.io.File, java.io.File)
		public static void addEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource)	=>	b(java.io.File, b.b.a.A)
		public static void addEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource, java.io.File)	=>	a(java.io.File, b.b.a.A, java.io.File)
		private static void addEntry(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)	=>	a(b.b.a.A, java.util.zip.ZipOutputStream)
		public static void addOrReplaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[])	=>	c(java.io.File, b.b.a.A[])
		public static void addOrReplaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File)	=>	b(java.io.File, b.b.a.A[], java.io.File)
		public static boolean archiveEquals(java.io.File, java.io.File)	=>	b(java.io.File, java.io.File)
		private static boolean archiveEqualsInternal(java.io.File, java.io.File)	=>	f(java.io.File, java.io.File)
		private static java.io.File checkDestinationFileForTraversal(java.io.File, java.lang.String, java.io.File)	=>	b(java.io.File, java.lang.String, java.io.File)
		public static void closeQuietly(java.util.zip.ZipFile)	=>	a(java.util.zip.ZipFile)
		public static boolean containsAnyEntry(java.io.File, java.lang.String[])	=>	a(java.io.File, java.lang.String[])
		public static boolean containsEntry(java.io.File, java.lang.String)	=>	f(java.io.File, java.lang.String)
		private static void copyEntries(java.io.File, java.util.zip.ZipOutputStream)	=>	a(java.io.File, java.util.zip.ZipOutputStream)
		private static void copyEntries(java.io.File, java.util.zip.ZipOutputStream, java.util.Set)	=>	a(java.io.File, java.util.zip.ZipOutputStream, java.util.Set)
		private static void copyEntries(java.io.InputStream, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipOutputStream)
		public static void createEmpty(java.io.File)	=>	c(java.io.File)
		private static boolean doEntryEquals(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)	=>	a(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)
		private static byte[] doUnpackEntry(java.util.zip.ZipFile, java.lang.String)	=>	b(java.util.zip.ZipFile, java.lang.String)
		private static boolean doUnpackEntry(java.util.zip.ZipFile, java.lang.String, java.io.File)	=>	b(java.util.zip.ZipFile, java.lang.String, java.io.File)
		static java.util.Map entriesByPath(org.zeroturnaround.zip.ZipEntrySource[])	=>	a(b.b.a.A[])
		public static boolean entryEquals(java.io.File, java.io.File, java.lang.String)	=>	b(java.io.File, java.io.File, java.lang.String)
		public static boolean entryEquals(java.io.File, java.io.File, java.lang.String, java.lang.String)	=>	a(java.io.File, java.io.File, java.lang.String, java.lang.String)
		public static boolean entryEquals(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)	=>	b(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)
		public static void explode(java.io.File)	=>	b(java.io.File)
		static java.util.Set filterDirEntries(java.io.File, java.util.Collection)	=>	a(java.io.File, java.util.Collection)
		public static int getCompressionLevelOfEntry(java.io.File, java.lang.String)	=>	b(java.io.File, java.lang.String)
		public static int getCompressionMethodOfEntry(java.io.File, java.lang.String)	=>	c(java.io.File, java.lang.String)
		public static boolean handle(java.io.File, java.lang.String, org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.File, java.lang.String, b.b.a.s)
		public static boolean handle(java.io.InputStream, java.lang.String, org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.InputStream, java.lang.String, b.b.a.s)
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.File, java.lang.String[], b.b.a.s)
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset)	=>	a(java.io.File, java.lang.String[], b.b.a.s, java.nio.charset.Charset)
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipInfoCallback)	=>	a(java.io.File, java.lang.String[], b.b.a.p)
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.File, b.b.a.s)
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset)	=>	a(java.io.File, b.b.a.s, java.nio.charset.Charset)
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipInfoCallback)	=>	a(java.io.File, b.b.a.p)
		public static void iterate(java.io.InputStream, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.InputStream, java.lang.String[], b.b.a.s)
		public static void iterate(java.io.InputStream, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.lang.String[], b.b.a.s, java.nio.charset.Charset)
		public static void iterate(java.io.InputStream, org.zeroturnaround.zip.ZipEntryCallback)	=>	a(java.io.InputStream, b.b.a.s)
		public static void iterate(java.io.InputStream, org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset)	=>	a(java.io.InputStream, b.b.a.s, java.nio.charset.Charset)
		private static java.io.File makeDestinationFile(java.io.File, java.lang.String)	=>	d(java.io.File, java.lang.String)
		private static boolean metaDataEquals(java.lang.String, java.util.zip.ZipEntry, java.util.zip.ZipEntry)	=>	a(java.lang.String, java.util.zip.ZipEntry, java.util.zip.ZipEntry)
		private static java.util.zip.ZipInputStream newCloseShieldZipInputStream(java.io.InputStream, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.nio.charset.Charset)
		private static boolean operateInPlace(java.io.File, org.zeroturnaround.zip.ZipUtil$InPlaceAction)	=>	a(java.io.File, b.b.a.w$F)
		public static void pack(java.io.File, java.io.File)	=>	e(java.io.File, java.io.File)
		public static void pack(java.io.File, java.io.File, boolean)	=>	a(java.io.File, java.io.File, boolean)
		public static void pack(java.io.File, java.io.File, int)	=>	b(java.io.File, java.io.File, int)
		public static void pack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	b(java.io.File, java.io.File, b.b.a.x)
		public static void pack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper, int)	=>	a(java.io.File, java.io.File, b.b.a.x, int)
		public static void pack(java.io.File, java.io.OutputStream)	=>	a(java.io.File, java.io.OutputStream)
		public static void pack(java.io.File, java.io.OutputStream, int)	=>	a(java.io.File, java.io.OutputStream, int)
		public static void pack(java.io.File, java.io.OutputStream, org.zeroturnaround.zip.NameMapper)	=>	a(java.io.File, java.io.OutputStream, b.b.a.x)
		public static void pack(java.io.File, java.io.OutputStream, org.zeroturnaround.zip.NameMapper, int)	=>	a(java.io.File, java.io.OutputStream, b.b.a.x, int)
		private static void pack(java.io.File, java.util.zip.ZipOutputStream, org.zeroturnaround.zip.NameMapper, java.lang.String, boolean)	=>	a(java.io.File, java.util.zip.ZipOutputStream, b.b.a.x, java.lang.String, boolean)
		public static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.File)	=>	a(b.b.a.A[], java.io.File)
		public static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream)	=>	a(b.b.a.A[], java.io.OutputStream)
		private static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream, boolean)	=>	a(b.b.a.A[], java.io.OutputStream, boolean)
		public static void packEntries(java.io.File[], java.io.File)	=>	a(java.io.File[], java.io.File)
		public static void packEntries(java.io.File[], java.io.File, int)	=>	a(java.io.File[], java.io.File, int)
		public static void packEntries(java.io.File[], java.io.File, org.zeroturnaround.zip.NameMapper)	=>	a(java.io.File[], java.io.File, b.b.a.x)
		public static void packEntries(java.io.File[], java.io.File, org.zeroturnaround.zip.NameMapper, int)	=>	a(java.io.File[], java.io.File, b.b.a.x, int)
		public static byte[] packEntry(java.io.File)	=>	a(java.io.File)
		public static void packEntry(java.io.File, java.io.File)	=>	d(java.io.File, java.io.File)
		public static void packEntry(java.io.File, java.io.File, java.lang.String)	=>	a(java.io.File, java.io.File, java.lang.String)
		public static void packEntry(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	c(java.io.File, java.io.File, b.b.a.x)
		public static void removeEntries(java.io.File, java.lang.String[])	=>	b(java.io.File, java.lang.String[])
		public static void removeEntries(java.io.File, java.lang.String[], java.io.File)	=>	a(java.io.File, java.lang.String[], java.io.File)
		public static void removeEntries(java.io.File, java.lang.String[], java.io.OutputStream)	=>	a(java.io.File, java.lang.String[], java.io.OutputStream)
		public static void removeEntry(java.io.File, java.lang.String)	=>	a(java.io.File, java.lang.String)
		public static void removeEntry(java.io.File, java.lang.String, java.io.File)	=>	a(java.io.File, java.lang.String, java.io.File)
		public static void repack(java.io.File, int)	=>	b(java.io.File, int)
		public static void repack(java.io.File, java.io.File, int)	=>	a(java.io.File, java.io.File, int)
		public static void repack(java.io.InputStream, java.io.File, int)	=>	a(java.io.InputStream, java.io.File, int)
		public static boolean replaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[])	=>	a(java.io.File, b.b.a.A[])
		public static boolean replaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File)	=>	a(java.io.File, b.b.a.A[], java.io.File)
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[])	=>	a(java.io.File, java.lang.String, byte[])
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[], int)	=>	b(java.io.File, java.lang.String, byte[], int)
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[], java.io.File)	=>	a(java.io.File, java.lang.String, byte[], java.io.File)
		public static boolean replaceEntry(java.io.File, java.lang.String, java.io.File)	=>	c(java.io.File, java.lang.String, java.io.File)
		public static boolean replaceEntry(java.io.File, java.lang.String, java.io.File, java.io.File)	=>	b(java.io.File, java.lang.String, java.io.File, java.io.File)
		public static boolean replaceEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource)	=>	a(java.io.File, b.b.a.A)
		public static boolean replaceEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource, java.io.File)	=>	b(java.io.File, b.b.a.A, java.io.File)
		public static boolean transformEntries(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[])	=>	a(java.io.File, b.b.a.b.c[])
		public static boolean transformEntries(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[], java.io.File)	=>	a(java.io.File, b.b.a.b.c[], java.io.File)
		public static boolean transformEntries(java.io.InputStream, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[], java.io.OutputStream)	=>	a(java.io.InputStream, b.b.a.b.c[], java.io.OutputStream)
		public static boolean transformEntry(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer)	=>	a(java.io.File, java.lang.String, b.b.a.b.f)
		public static boolean transformEntry(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.File)	=>	a(java.io.File, java.lang.String, b.b.a.b.f, java.io.File)
		public static boolean transformEntry(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry)	=>	a(java.io.File, b.b.a.b.c)
		public static boolean transformEntry(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry, java.io.File)	=>	a(java.io.File, b.b.a.b.c, java.io.File)
		public static boolean transformEntry(java.io.InputStream, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.OutputStream)	=>	a(java.io.InputStream, java.lang.String, b.b.a.b.f, java.io.OutputStream)
		public static boolean transformEntry(java.io.InputStream, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry, java.io.OutputStream)	=>	a(java.io.InputStream, b.b.a.b.c, java.io.OutputStream)
		static java.util.Map transformersByPath(java.util.List)	=>	a(java.util.List)
		public static void unexplode(java.io.File)	=>	d(java.io.File)
		public static void unexplode(java.io.File, int)	=>	a(java.io.File, int)
		public static void unpack(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		public static void unpack(java.io.File, java.io.File, java.nio.charset.Charset)	=>	a(java.io.File, java.io.File, java.nio.charset.Charset)
		public static void unpack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	d(java.io.File, java.io.File, b.b.a.x)
		public static void unpack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper, java.nio.charset.Charset)	=>	a(java.io.File, java.io.File, b.b.a.x, java.nio.charset.Charset)
		public static void unpack(java.io.InputStream, java.io.File)	=>	b(java.io.InputStream, java.io.File)
		public static void unpack(java.io.InputStream, java.io.File, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.io.File, java.nio.charset.Charset)
		public static void unpack(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	b(java.io.InputStream, java.io.File, b.b.a.x)
		public static void unpack(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.io.File, b.b.a.x, java.nio.charset.Charset)
		public static byte[] unpackEntry(java.io.File, java.lang.String)	=>	e(java.io.File, java.lang.String)
		public static boolean unpackEntry(java.io.File, java.lang.String, java.io.File)	=>	d(java.io.File, java.lang.String, java.io.File)
		public static boolean unpackEntry(java.io.File, java.lang.String, java.io.File, java.nio.charset.Charset)	=>	a(java.io.File, java.lang.String, java.io.File, java.nio.charset.Charset)
		public static byte[] unpackEntry(java.io.File, java.lang.String, java.nio.charset.Charset)	=>	a(java.io.File, java.lang.String, java.nio.charset.Charset)
		public static byte[] unpackEntry(java.io.InputStream, java.lang.String)	=>	a(java.io.InputStream, java.lang.String)
		public static boolean unpackEntry(java.io.InputStream, java.lang.String, java.io.File)	=>	a(java.io.InputStream, java.lang.String, java.io.File)
		public static byte[] unpackEntry(java.util.zip.ZipFile, java.lang.String)	=>	a(java.util.zip.ZipFile, java.lang.String)
		public static boolean unpackEntry(java.util.zip.ZipFile, java.lang.String, java.io.File)	=>	a(java.util.zip.ZipFile, java.lang.String, java.io.File)
		public static void unwrap(java.io.File, java.io.File)	=>	c(java.io.File, java.io.File)
		public static void unwrap(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	a(java.io.File, java.io.File, b.b.a.x)
		public static void unwrap(java.io.InputStream, java.io.File)	=>	a(java.io.InputStream, java.io.File)
		public static void unwrap(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper)	=>	a(java.io.InputStream, java.io.File, b.b.a.x)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil
		62	=>	148, 495, 806 and 871
		70	=>	583
		72	=>	852
		73	=>	188
		87	=>	369
		89	=>	335
		90	=>	138 and 866
		92	=>	769
		93	=>	650
		96	=>	250 and 513
		97	=>	490
		114	=>	566
		128	=>	429
		130	=>	340
		131	=>	614
		132	=>	839
		133	=>	90 and 317
		135	=>	474 and 629
		137	=>	656
		138	=>	1
		141	=>	58, 160 and 829
		142	=>	794
		156	=>	825
		158	=>	271
		159	=>	643 and 800
		160	=>	21
		161	=>	367 and 392
		164	=>	57 and 799
		166	=>	585
		167	=>	845
		170	=>	84, 220 and 834
		171	=>	243
		184	=>	158
		186	=>	787
		187	=>	596 and 819
		189	=>	81
		190	=>	254
		193	=>	405 and 863
		194	=>	619
		211	=>	541
		213	=>	172
		214	=>	155
		217	=>	408
		219	=>	213 and 798
		221	=>	88
		222	=>	152
		225	=>	604 and 841
		226	=>	864
		240	=>	385
		242	=>	274
		243	=>	373
		257	=>	185
		258	=>	146
		259	=>	877
		262	=>	300
		264	=>	625 and 782
		267	=>	107 and 294
		268	=>	612
		281	=>	422
		282	=>	620
		283	=>	733
		284	=>	134
		319	=>	15
		338	=>	361
		340	=>	104
		341	=>	60
		344	=>	394
		346	=>	50 and 551
		348	=>	831
		349	=>	463
		352	=>	166 and 694
		353	=>	151
		370	=>	632
		372	=>	639
		373	=>	842
		390	=>	401
		391	=>	49
		394	=>	102
		395	=>	816
		396	=>	587
		399	=>	205
		400	=>	679
		401	=>	865
		403	=>	234
		404	=>	731
		406	=>	231
		409	=>	744
		411	=>	747
		414	=>	384 and 494
		415	=>	142 and 783
		416	=>	591
		433	=>	708
		472	=>	462
		473	=>	568
		493	=>	199
		495	=>	133
		496	=>	745
		499	=>	257
		502	=>	896
		503	=>	786
		504	=>	262
		506	=>	256
		508	=>	287
		510	=>	263
		511	=>	621
		513	=>	216
		517	=>	393 and 472
		518	=>	215 and 889
		519	=>	382
		521	=>	554
		522	=>	648
		525	=>	218 and 571
		526	=>	105 and 359
		527	=>	145
		545	=>	542
		546	=>	208
		566	=>	114
		568	=>	121
		569	=>	319
		572	=>	601
		575	=>	280 and 803
		576	=>	746
		577	=>	222
		578	=>	672
		580	=>	720
		582	=>	674
		584	=>	113
		585	=>	735
		587	=>	653
		591	=>	8 and 286
		592	=>	87 and 178
		595	=>	386
		596	=>	895
		599	=>	128 and 501
		600	=>	552 and 844
		601	=>	365
		618	=>	447
		620	=>	201
		622	=>	530
		623	=>	519
		624	=>	244
		626	=>	453
		628	=>	444
		629	=>	870
		631	=>	544
		632	=>	785
		633	=>	165
		634	=>	886
		636	=>	511
		637	=>	536
		640	=>	397 and 788
		641	=>	44 and 350
		642	=>	640
		660	=>	436
		662	=>	651
		664	=>	288 and 491
		665	=>	103
		666	=>	475
		667	=>	320
		670	=>	600
		672	=>	738
		673	=>	209
		675	=>	353
		676	=>	774
		677	=>	454
		680	=>	183
		681	=>	251
		684	=>	613 and 741
		685	=>	743 and 827
		686	=>	277
		706	=>	421
		708	=>	666
		710	=>	837
		712	=>	420
		714	=>	843
		715	=>	715
		717	=>	302
		718	=>	627
		719	=>	41
		723	=>	108 and 853
		724	=>	25 and 681
		726	=>	539
		728	=>	478
		729	=>	516
		730	=>	141
		731	=>	622
		746	=>	766
		747	=>	402
		767	=>	314
		768	=>	550 and 840
		769	=>	345
		772	=>	96
		774	=>	35
		776	=>	555
		777	=>	68
		779	=>	518
		782	=>	403
		784	=>	358
		785	=>	691
		787	=>	634
		788	=>	689
		789	=>	179
		793	=>	505 and 677
		794	=>	30 and 181
		796	=>	157
		798	=>	897
		799	=>	595
		800	=>	11
		801	=>	749
		818	=>	415
		819	=>	324
		826	=>	89
		827	=>	610
		828	=>	644
		830	=>	838
		848	=>	428
		850	=>	306
		852	=>	772
		853	=>	452
		854	=>	82 and 109
		857	=>	776
		859	=>	321
		862	=>	99 and 298
		863	=>	399 and 540
		864	=>	22 and 546
		866	=>	2
		867	=>	327
		870	=>	355, 362 and 820
		871	=>	210
		890	=>	732
		891	=>	375
		892	=>	363
		939	=>	814
		940	=>	28
		958	=>	407
		959	=>	4
		976	=>	515
		977	=>	379
		978	=>	349
		995	=>	69
		996	=>	150
		997	=>	533
		1012	=>	372
		1013	=>	736
		1030	=>	492
		1031	=>	211
		1032	=>	713
		1045	=>	228
		1046	=>	187
		1061	=>	295
		1062	=>	528
		1077	=>	450
		1078	=>	116
		1095	=>	440
		1096	=>	577
		1097	=>	433
		1112	=>	12
		1113	=>	65
		1130	=>	115
		1131	=>	292
		1132	=>	611
		1135	=>	267
		1143	=>	368
		1144	=>	76
		1146	=>	434
		1324	=>	561
		1327	=>	247
		1330	=>	163
		1333	=>	707
		1334	=>	792
		1337	=>	301
		1338	=>	496
		1339	=>	573
		1340	=>	147
		1351	=>	726
		1353	=>	484
		1355	=>	647
		1356	=>	156
		1357	=>	431
		1359	=>	773
		1362	=>	326 and 879
		1363	=>	507 and 652
		1364	=>	593
		1366	=>	73
		1367	=>	253
		1368	=>	793
		1369	=>	867
		1386	=>	62
		1387	=>	576
		1403	=>	862
		1404	=>	226
		1420	=>	878
		1421	=>	673
		1422	=>	5
		1427	=>	296
		1429	=>	370
		1431	=>	232
		1444	=>	703
		1445	=>	711
		1460	=>	122
		1465	=>	78
		1480	=>	341
		1481	=>	489
		1494	=>	140
		1495	=>	43
		1510	=>	537
		1511	=>	457
		1527	=>	812
		1528	=>	318
		1546	=>	761
		1548	=>	562
		1549	=>	581
		1551	=>	778
		1552	=>	763
		1553	=>	598
		1555	=>	225 and 817
		1556	=>	266
		1558	=>	61
		1559	=>	861
		1560	=>	874
		1561	=>	92
		1564	=>	311
		1565	=>	238
		1568	=>	32 and 752
		1569	=>	416 and 884
		1570	=>	305 and 750
		1571	=>	56
		1586	=>	224
		1587	=>	467
		1604	=>	473
		1605	=>	756
		1606	=>	6
		1608	=>	42
		1610	=>	136
		1611	=>	83
		1612	=>	486
		1614	=>	417
		1615	=>	26
		1618	=>	290 and 693
		1619	=>	381 and 848
		1620	=>	291
		1635	=>	446
		1636	=>	308
		1653	=>	425
		1654	=>	310
		1671	=>	471
		1672	=>	858
		1691	=>	16
		1692	=>	13
		1693	=>	721
		1695	=>	194
		1696	=>	809
		1698	=>	175
		1699	=>	503
		1700	=>	753
		1702	=>	888
		1703	=>	729
		1706	=>	23, 169 and 706
		1708	=>	184, 357 and 398
		1709	=>	504, 810 and 830
		1711	=>	348, 667 and 887
		1712	=>	139, 276 and 875
		1713	=>	14, 219, 645, 828 and 832
		1715	=>	125
		1716	=>	432
		1717	=>	455
		1719	=>	419
		1736	=>	190
		1737	=>	144
		1738	=>	762
		1739	=>	459
		1741	=>	609
		1744	=>	466
		1745	=>	193
		1748	=>	730 and 765
		1749	=>	899
		1750	=>	535
		1751	=>	223
		1752	=>	690
		1753	=>	574
		1754	=>	709
		1758	=>	532
		1759	=>	200
		1760	=>	575
		1762	=>	524
		1765	=>	603
		1766	=>	558
		1769	=>	565
		1773	=>	510
		1774	=>	338
		1777	=>	212
		1792	=>	824
		1794	=>	129
		1797	=>	740
		1800	=>	71 and 329
		1801	=>	543 and 850
		1802	=>	882
		1817	=>	859
		1819	=>	669
		1822	=>	285
		1825	=>	189 and 813
		1826	=>	97 and 242
		1827	=>	315
		1840	=>	742
		1842	=>	85
		1845	=>	661
		1846	=>	722
		1850	=>	589
		1852	=>	98
		1853	=>	176
		1854	=>	120
		1855	=>	527
		1864	=>	214
		1866	=>	80
		1867	=>	339
		1869	=>	684
		1870	=>	126
		1873	=>	322 and 822
		1874	=>	468 and 671
		1875	=>	119
		1918	=>	569
		1919	=>	149
		1938	=>	272
		1941	=>	258
		1944	=>	435
		1947	=>	67
		1949	=>	849
		1950	=>	716
		1951	=>	282
		1952	=>	427
		1965	=>	770
		1966	=>	130
		1968	=>	606
		1969	=>	821
		1973	=>	675
		1974	=>	718 and 751
		1975	=>	791
		1977	=>	618
		1978	=>	628
		1979	=>	642
		1980	=>	284
		1983	=>	441
		1984	=>	506
		1985	=>	654
		1986	=>	523
		1997	=>	458
		1998	=>	191
		2001	=>	197
		2003	=>	270
		2004	=>	162
		2006	=>	195
		2007	=>	857
		2010	=>	112 and 687
		2011	=>	36 and 388
		2012	=>	27
		2027	=>	617
		2028	=>	869
		2041	=>	588
		2047	=>	202
		2062	=>	630
		2063	=>	289
		2080	=>	118
		2081	=>	351
		2094	=>	586
		2100	=>	45
		2115	=>	182
		2121	=>	607
		2134	=>	668
		2135	=>	633
		2146	=>	456
		2152	=>	662
		2165	=>	599
		2166	=>	364
		2169	=>	493
		2171	=>	53
		2172	=>	559
		2174	=>	106
		2175	=>	514
		2178	=>	19, 299 and 699
		2179	=>	168, 323 and 352
		2180	=>	502
		2193	=>	316
		2194	=>	512
		2197	=>	719
		2199	=>	584
		2200	=>	712
		2201	=>	469 and 517
		2202	=>	626
		2204	=>	377
		2206	=>	779
		2207	=>	547
		2208	=>	204
		2209	=>	79
		2224	=>	768
		2225	=>	33
		2228	=>	683
		2230	=>	261
		2231	=>	480
		2232	=>	534 and 579
		2233	=>	237
		2235	=>	521
		2237	=>	564
		2238	=>	59
		2239	=>	174
		2240	=>	835
		2251	=>	570
		2257	=>	400
		2271	=>	124
		2272	=>	602
		2284	=>	24
		2290	=>	230
		2304	=>	413
		2305	=>	698
		2308	=>	171
		2310	=>	704
		2311	=>	227
		2313	=>	328
		2314	=>	360
		2317	=>	404 and 892
		2318	=>	437 and 710
		2319	=>	412
		2333	=>	714
		2334	=>	477
		2337	=>	430
		2339	=>	893
		2340	=>	331
		2343	=>	342 and 796
		2344	=>	309 and 695
		2345	=>	47
		2357	=>	414
		2363	=>	737
		2375	=>	265
		2376	=>	391
		2387	=>	46
		2399	=>	646
		2400	=>	94
		2411	=>	167
		2424	=>	592
		2425	=>	333
		2426	=>	411
		2447	=>	380
		2459	=>	847
		2460	=>	410
		2461	=>	337
		2463	=>	777
		2465	=>	482
		2466	=>	281
		2467	=>	460
		2468	=>	724
		2469	=>	529
		2470	=>	387
		2472	=>	655
		2474	=>	70
		2477	=>	725
		2480	=>	682
		2481	=>	804
		2484	=>	161, 325 and 688
		2485	=>	196, 448 and 739
		2486	=>	52
		2503	=>	637
		2518	=>	451
		2539	=>	303
		2554	=>	815
		2576	=>	17
		2595	=>	64
		2608	=>	553
		2627	=>	54
		2628	=>	374
		2631	=>	304
		2632	=>	597
		2634	=>	330
		2636	=>	499
		2637	=>	273
		2655	=>	177 and 658
		2656	=>	332 and 508
		2658	=>	771
		2659	=>	93
		2660	=>	252
		2661	=>	111
		2674	=>	509
		2692	=>	497
		2693	=>	638
		2697	=>	615
		2699	=>	470
		2702	=>	279
		2703	=>	371
		2721	=>	660
		2722	=>	246
		2723	=>	728
		2726	=>	75 and 881
		2727	=>	100 and 346
		2729	=>	117
		2730	=>	898
		2731	=>	836
		2732	=>	818
		2743	=>	826
		2749	=>	347
		2755	=>	854
		2756	=>	549 and 873
		2757	=>	164
		2758	=>	795
		2760	=>	34
		2778	=>	680
		2780	=>	7
		2795	=>	293
		2814	=>	241
		2827	=>	63
		2846	=>	229
		2847	=>	249
		2850	=>	538
		2852	=>	51
		2853	=>	851
		2854	=>	823 and 900
		2857	=>	439 and 488
		2858	=>	236
		2860	=>	221
		2861	=>	334
		2875	=>	700
		2896	=>	74
		2911	=>	548
		2926	=>	101
		2927	=>	641
		2930	=>	3
		2931	=>	449
		2932	=>	697
		2935	=>	717
		2936	=>	423
		2938	=>	649
		2939	=>	390
		2984	=>	727
		2985	=>	663
		2986	=>	616
		2987	=>	608
		2988	=>	855
		3000	=>	784
		3001	=>	481
		3002	=>	665
		3004	=>	802
		3007	=>	9 and 767
		3008	=>	775 and 856
		3010	=>	891
		3011	=>	461
		3051	=>	217
		3052	=>	248
		3055	=>	522
		3057	=>	526
		3058	=>	885
		3059	=>	580
		3060	=>	383
		3061	=>	876
		3063	=>	808
		3065	=>	790
		3066	=>	635
		3067	=>	701
		3072	=>	734
		3073	=>	748
		3075	=>	131
		3076	=>	343
		3079	=>	801
		3080	=>	72
		3081	=>	685 and 758
		3094	=>	10
		3095	=>	754
		3096	=>	127
		3097	=>	110
		3098	=>	479
		3101	=>	55
		3102	=>	336 and 389
		3106	=>	894
		3107	=>	676
		3109	=>	445
		3110	=>	797
		3112	=>	132
		3113	=>	692
		3114	=>	465 and 498
		3118	=>	66, 95 and 657
		3119	=>	20, 443 and 807
		3120	=>	192 and 868
		3121	=>	180
		3124	=>	29, 48, 239, 406 and 424
		3125	=>	313, 356, 366, 487 and 670
		3126	=>	664 and 686
		3128	=>	590
		3130	=>	520
		3154	=>	623
		3155	=>	233
		3156	=>	143
		3160	=>	705
		3161	=>	297
		3162	=>	582
		3165	=>	396
		3166	=>	409
		3169	=>	275
		3170	=>	631
		3171	=>	557
		3175	=>	395
		3176	=>	702
		3177	=>	483
		3178	=>	764
		3179	=>	235
		3183	=>	418
		3184	=>	198
		3185	=>	545
		3186	=>	636
		3187	=>	378
		3191	=>	624
		3192	=>	18
		3193	=>	203
		3194	=>	833
		3195	=>	255
		3199	=>	39
		3215	=>	426
		3232	=>	31
		3233	=>	572
		3236	=>	556
		3237	=>	268
		3239	=>	206 and 344
		3241	=>	123
		3242	=>	563
		3245	=>	464 and 525
		3246	=>	186 and 781
		3247	=>	678
		3265	=>	805
		3267	=>	40
		3268	=>	260
		3286	=>	37
		3287	=>	789
		3289	=>	476
		3290	=>	354
		3292	=>	880
		3293	=>	269 and 883
		3296	=>	38
		3297	=>	135 and 760
		3300	=>	723
		3301	=>	442
		3302	=>	578
		3303	=>	567 and 755
		3305	=>	500
		3306	=>	207 and 376
		3309	=>	560 and 594
		3312	=>	153, 173, 240, 264, 283 and 531
		3313	=>	77, 137, 278, 659, 696 and 811
		3314	=>	438
		3325	=>	170
		3326	=>	485
		3329	=>	757
		3330	=>	307
		3331	=>	91
		3358	=>	245
		3360	=>	154
		3361	=>	860
		3362	=>	86
		3363	=>	846
		3364	=>	872
		3366	=>	780 and 890
		3368	=>	259
		3369	=>	159
		3372	=>	312 and 605
		3373	=>	759

Class: final org.zeroturnaround.zip.ZipUtil$1	=>	b.b.a.w$y
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$1
		final synthetic java.lang.String val$parentName	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$1
		void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String map(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$1
		1422	=>	1
		1424	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$10	=>	b.b.a.w$k
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$10
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$10
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$10
		2376	=>	7
		2378	=>	3
		2379	=>	1
		2380	=>	4
		2382	=>	6
		2383	=>	5
		2385	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$11	=>	b.b.a.w$l
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$11
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$11
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$11
		2400	=>	5
		2402	=>	7
		2403	=>	4
		2404	=>	1
		2406	=>	3
		2407	=>	6
		2409	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$12	=>	b.b.a.w$m
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$12
		final synthetic java.util.Set val$dirNames	NameNotChanged
		final synthetic java.util.Set val$ignoredEntries	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$12
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Set, java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$12
		2426	=>	10
		2428	=>	5
		2429	=>	3
		2430	=>	12
		2433	=>	4
		2434	=>	9
		2435	=>	7
		2437	=>	1
		2439	=>	2
		2440	=>	6
		2442	=>	11
		2443	=>	8
		2445	=>	13

Class: final org.zeroturnaround.zip.ZipUtil$13	=>	b.b.a.w$n
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$13
		final synthetic java.io.File val$file	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$13
		void <init>(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$13
		2518	=>	1
		2520	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$14	=>	b.b.a.w$h
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$14
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$14
		void <init>(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$14
		2554	=>	1
		2556	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$15	=>	b.b.a.w$i
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$15
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic int val$compressionMethod	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$15
		void <init>(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$15
		2576	=>	2
		2578	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$16	=>	b.b.a.w$j
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$16
		final synthetic org.zeroturnaround.zip.ZipEntrySource val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$16
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$16
		2608	=>	2
		2610	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$17	=>	b.b.a.w$c
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$17
		final synthetic java.util.Map val$entryByPath	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$17
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Map, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$17
		2637	=>	3
		2639	=>	6
		2640	=>	2
		2641	=>	5
		2642	=>	8
		2645	=>	7
		2647	=>	10
		2648	=>	9
		2649	=>	4
		2651	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$18	=>	b.b.a.w$o
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$18
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$18
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$18
		2674	=>	1
		2676	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$19	=>	b.b.a.w$p
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$19
		final synthetic java.util.Map val$entryByPath	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$19
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Map, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$19
		2703	=>	1
		2705	=>	8
		2706	=>	10
		2707	=>	6
		2708	=>	9
		2711	=>	7
		2713	=>	4
		2714	=>	3
		2715	=>	5
		2717	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$2	=>	b.b.a.w$x
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$2
		final synthetic java.lang.String val$fileName	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$2
		void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String map(java.lang.String)	=>	a(java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$2
		1460	=>	1
		1462	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$20	=>	b.b.a.w$q
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$20
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$20
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$20
		2743	=>	3
		2745	=>	1
		2746	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$21	=>	b.b.a.w$d
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$21
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformer val$transformer	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$21
		void <init>(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$21
		2795	=>	2
		2797	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$22	=>	b.b.a.w$e
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$22
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformerEntry val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$22
		void <init>(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$22
		2827	=>	2
		2829	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$23	=>	b.b.a.w$f
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$23
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$23
		void <init>(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$23
		2875	=>	2
		2877	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$3	=>	b.b.a.w$A
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$3
		final synthetic java.io.File val$file	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$3
		void <init>(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$3
		2041	=>	1
		2043	=>	3
		2044	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$4	=>	b.b.a.w$z
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$4
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$4
		void <init>(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$4
		2094	=>	3
		2096	=>	2
		2097	=>	1

Class: final org.zeroturnaround.zip.ZipUtil$5	=>	b.b.a.w$t
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$5
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic int val$compressionMethod	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$5
		void <init>(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$5
		2115	=>	2
		2117	=>	1
		2118	=>	3

Class: final org.zeroturnaround.zip.ZipUtil$6	=>	b.b.a.w$s
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$6
		final synthetic org.zeroturnaround.zip.ZipEntrySource val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$6
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$6
		2146	=>	3
		2148	=>	1
		2149	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$7	=>	b.b.a.w$v
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$7
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$7
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$7
		2251	=>	3
		2253	=>	1
		2254	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$8	=>	b.b.a.w$u
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$8
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$8
		void <init>(java.io.File, java.lang.String) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$8
		2284	=>	3
		2286	=>	1
		2287	=>	2

Class: final org.zeroturnaround.zip.ZipUtil$9	=>	b.b.a.w$r
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$9
		final synthetic java.lang.String[] val$paths	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$9
		void <init>(java.io.File, java.lang.String[]) 	SignatureNotChanged
		public boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$9
		2357	=>	3
		2359	=>	1
		2360	=>	2

Class: public org.zeroturnaround.zip.ZipUtil$BackslashUnpacker	=>	b.b.a.w$G
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker
		private final org.zeroturnaround.zip.NameMapper mapper	=>	a
		private final java.io.File outputDir	=>	b
	MethodsOf: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker
		1202	=>	23
		1203	=>	15
		1204	=>	18
		1205	=>	6
		1208	=>	19
		1209	=>	3
		1212	=>	22
		1213	=>	8
		1224	=>	2
		1225	=>	4
		1226	=>	12
		1229	=>	9 and 10
		1230	=>	13
		1231	=>	7
		1232	=>	1
		1234	=>	16
		1236	=>	21
		1239	=>	14
		1240	=>	20
		1243	=>	11
		1245	=>	5
		1248	=>	17

Class: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker	=>	b.b.a.w$D
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker
		private byte[] bytes	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		public byte[] getBytes()	=>	a()
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker
		292	=>	4 and 5
		297	=>	3
		298	=>	1
		301	=>	2

Class: org.zeroturnaround.zip.ZipUtil$FileUnpacker	=>	b.b.a.w$B
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$FileUnpacker
		private final java.io.File file	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$FileUnpacker
		public void <init>(java.io.File) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$FileUnpacker
		445	=>	1
		446	=>	4
		447	=>	2
		450	=>	3
		451	=>	5

Class: abstract org.zeroturnaround.zip.ZipUtil$InPlaceAction	=>	b.b.a.w$F
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$InPlaceAction
	MethodsOf: org.zeroturnaround.zip.ZipUtil$InPlaceAction
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		abstract boolean act(java.io.File)	=>	a(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$InPlaceAction
		3338	=>	1 and 2

Class: final org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback	=>	b.b.a.w$b
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback
		private java.util.zip.ZipOutputStream out	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback
		private void <init>(java.io.File, int) 	SignatureNotChanged
		synthetic void <init>(java.io.File, int, org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		static synthetic void access$500(org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback) 	SignatureNotChanged
		private void closeStream()	=>	a()
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback
		1882	=>	10 and 11
		1886	=>	3
		1888	=>	9
		1889	=>	5
		1891	=>	12
		1892	=>	2
		1893	=>	8
		1894	=>	6
		1897	=>	7
		1898	=>	4
		1901	=>	13
		1902	=>	1

Class: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback	=>	b.b.a.w$C
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback
		private final org.zeroturnaround.zip.ZipEntryCallback action	=>	c
		private boolean found	=>	b
		private final java.lang.String name	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback
		public void <init>(java.lang.String, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public boolean found()	=>	a()
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback
		908	=>	5
		909	=>	7
		910	=>	6
		911	=>	4
		914	=>	2
		915	=>	8
		916	=>	1
		918	=>	3
		921	=>	9

Class: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback	=>	b.b.a.w$g
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback
		private final java.util.Map entryByPath	=>	c
		private final int entryCount	=>	b
		private final java.util.Set names	=>	a
		private final java.util.zip.ZipOutputStream out	=>	d
	MethodsOf: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.util.List, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public boolean found()	=>	a()
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback
		2948	=>	8
		2950	=>	12
		2951	=>	9
		2952	=>	6
		2953	=>	10
		2954	=>	4
		2957	=>	1
		2958	=>	15
		2959	=>	2
		2960	=>	14
		2963	=>	5
		2965	=>	7
		2966	=>	3
		2967	=>	13
		2969	=>	11
		2975	=>	16

Class: org.zeroturnaround.zip.ZipUtil$Unpacker	=>	b.b.a.w$E
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$Unpacker
		private final org.zeroturnaround.zip.NameMapper mapper	=>	b
		private final java.io.File outputDir	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$Unpacker
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$Unpacker
		1159	=>	11
		1160	=>	15
		1161	=>	9
		1162	=>	2
		1165	=>	5
		1166	=>	8
		1167	=>	3
		1169	=>	13
		1170	=>	6
		1173	=>	7
		1175	=>	17
		1176	=>	4
		1179	=>	12
		1182	=>	10
		1183	=>	1
		1184	=>	14
		1187	=>	16

Class: org.zeroturnaround.zip.ZipUtil$Unwrapper	=>	b.b.a.w$a
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$Unwrapper
		private final org.zeroturnaround.zip.NameMapper mapper	=>	b
		private final java.io.File outputDir	=>	c
		private java.lang.String rootDir	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$Unwrapper
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.lang.String getRootName(java.lang.String)	=>	a(java.lang.String)
		private java.lang.String getUnrootedName(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.ZipUtil$Unwrapper
		1263	=>	16
		1264	=>	3
		1265	=>	18
		1266	=>	6
		1269	=>	14
		1270	=>	9
		1271	=>	11
		1273	=>	13
		1274	=>	24
		1277	=>	1
		1278	=>	21
		1279	=>	7
		1281	=>	4
		1282	=>	2
		1285	=>	22
		1287	=>	5
		1288	=>	8
		1291	=>	15
		1294	=>	10
		1297	=>	25
		1301	=>	19
		1302	=>	12
		1303	=>	20
		1304	=>	17
		1306	=>	23

Class: public org.zeroturnaround.zip.Zips	=>	b.b.a.u
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips
		private java.util.List changedEntries	=>	a
		private java.nio.charset.Charset charset	=>	d
		private java.io.File dest	=>	g
		private org.zeroturnaround.zip.NameMapper nameMapper	=>	c
		private boolean preserveTimestamps	=>	h
		private java.util.Set removedEntries	=>	e
		private final java.io.File src	=>	f
		private java.util.List transformers	=>	b
		private boolean unpackedResult	=>	i
	MethodsOf: org.zeroturnaround.zip.Zips
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.io.File) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addEntries(org.zeroturnaround.zip.ZipEntrySource[])	=>	a(b.b.a.A[])
		public org.zeroturnaround.zip.Zips addEntry(org.zeroturnaround.zip.ZipEntrySource)	=>	a(b.b.a.A)
		public org.zeroturnaround.zip.Zips addFile(java.io.File)	=>	a(java.io.File)
		public org.zeroturnaround.zip.Zips addFile(java.io.File, boolean)	=>	a(java.io.File, boolean)
		public org.zeroturnaround.zip.Zips addFile(java.io.File, boolean, java.io.FileFilter)	=>	a(java.io.File, boolean, java.io.FileFilter)
		public org.zeroturnaround.zip.Zips addFile(java.io.File, java.io.FileFilter)	=>	a(java.io.File, java.io.FileFilter)
		public org.zeroturnaround.zip.Zips addTransformer(java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer)	=>	a(java.lang.String, b.b.a.b.f)
		public org.zeroturnaround.zip.Zips charset(java.nio.charset.Charset)	=>	a(java.nio.charset.Charset)
		public boolean containsEntry(java.lang.String)	=>	b(java.lang.String)
		public static org.zeroturnaround.zip.Zips create()	=>	a()
		public org.zeroturnaround.zip.Zips destination(java.io.File)	=>	d(java.io.File)
		public static org.zeroturnaround.zip.Zips get(java.io.File)	=>	c(java.io.File)
		private java.io.File getDestinationFile()	=>	d()
		public byte[] getEntry(java.lang.String)	=>	c(java.lang.String)
		private java.lang.String getRelativePath(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		private java.util.zip.ZipFile getZipFile()	=>	e()
		private void handleInPlaceActions(java.io.File)	=>	b(java.io.File)
		private boolean isEntryInDir(java.util.Set, java.lang.String)	=>	a(java.util.Set, java.lang.String)
		private boolean isInPlace()	=>	f()
		private boolean isUnpack()	=>	b()
		public void iterate(org.zeroturnaround.zip.ZipEntryCallback)	=>	a(b.b.a.s)
		public void iterate(org.zeroturnaround.zip.ZipInfoCallback)	=>	a(b.b.a.p)
		private void iterateChangedAndAdded(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	c(b.b.a.k)
		private void iterateExistingExceptRemoved(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	a(b.b.a.k)
		public org.zeroturnaround.zip.Zips nameMapper(org.zeroturnaround.zip.NameMapper)	=>	a(b.b.a.x)
		public org.zeroturnaround.zip.Zips preserveTimestamps()	=>	g()
		public void process()	=>	c()
		private void processAllEntries(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	b(b.b.a.k)
		public org.zeroturnaround.zip.Zips removeEntries(java.lang.String[])	=>	a(java.lang.String[])
		public org.zeroturnaround.zip.Zips removeEntry(java.lang.String)	=>	a(java.lang.String)
		public org.zeroturnaround.zip.Zips setPreserveTimestamps(boolean)	=>	a(boolean)
		public org.zeroturnaround.zip.Zips unpack()	=>	h()
	LineNumbersOf: org.zeroturnaround.zip.Zips
		78	=>	102
		83	=>	32
		88	=>	30
		102	=>	27
		103	=>	98
		104	=>	126
		113	=>	162
		123	=>	33
		134	=>	24
		135	=>	25
		146	=>	83
		147	=>	73
		158	=>	149
		171	=>	165
		183	=>	6
		197	=>	82
		198	=>	13
		199	=>	54
		202	=>	150
		203	=>	79
		204	=>	45
		205	=>	163
		207	=>	28
		208	=>	168
		210	=>	118
		212	=>	155
		213	=>	127
		215	=>	62
		216	=>	137
		218	=>	5
		219	=>	134
		220	=>	94
		224	=>	104
		225	=>	37
		226	=>	3
		227	=>	95
		229	=>	39
		239	=>	1
		240	=>	151
		250	=>	108
		251	=>	157
		260	=>	158
		261	=>	36
		271	=>	85
		272	=>	18
		282	=>	184
		283	=>	86
		296	=>	34
		297	=>	101
		306	=>	19
		307	=>	146
		311	=>	44
		312	=>	68
		319	=>	179
		326	=>	110
		337	=>	116
		338	=>	21
		346	=>	66
		347	=>	133
		350	=>	97
		352	=>	132
		353	=>	119
		354	=>	130
		356	=>	80
		357	=>	47
		358	=>	56
		361	=>	142
		364	=>	175
		367	=>	40 and 84
		368	=>	11 and 147
		369	=>	77
		371	=>	172
		372	=>	26
		375	=>	31, 114 and 170
		377	=>	75, 93 and 156
		379	=>	69
		380	=>	125
		383	=>	42
		384	=>	43
		385	=>	72
		388	=>	140
		389	=>	17
		390	=>	61
		391	=>	59
		392	=>	138
		393	=>	70
		396	=>	15
		398	=>	41
		399	=>	183
		400	=>	143
		401	=>	20
		403	=>	58
		408	=>	173
		409	=>	103
		412	=>	185
		414	=>	35
		415	=>	164
		417	=>	167
		436	=>	92
		437	=>	67
		438	=>	166
		454	=>	181
		456	=>	154
		457	=>	64
		468	=>	9
		469	=>	23
		471	=>	57
		482	=>	128
		483	=>	74
		485	=>	112
		496	=>	96
		498	=>	120
		500	=>	113
		502	=>	89
		504	=>	141
		507	=>	55
		508	=>	117
		509	=>	176
		510	=>	174
		511	=>	178
		513	=>	180
		516	=>	90
		517	=>	160
		518	=>	99
		519	=>	115
		521	=>	50
		523	=>	148
		527	=>	136
		529	=>	88
		531	=>	139
		535	=>	100 and 182
		536	=>	12 and 105
		537	=>	107
		539	=>	111
		540	=>	22
		543	=>	29, 38 and 60
		544	=>	65, 106 and 159
		545	=>	87
		554	=>	63
		555	=>	52
		557	=>	109
		558	=>	48
		559	=>	8
		560	=>	7
		563	=>	10
		565	=>	76
		568	=>	169
		569	=>	46
		571	=>	152
		574	=>	124
		575	=>	49
		578	=>	16, 51, 53, 129 and 135
		579	=>	4, 161 and 177
		580	=>	14
		581	=>	123
		589	=>	144
		591	=>	131
		592	=>	122
		593	=>	171
		596	=>	78
		599	=>	71
		610	=>	121
		611	=>	91
		612	=>	153
		614	=>	145
		615	=>	2
		628	=>	81

Class: synthetic org.zeroturnaround.zip.Zips$1	=>	b.b.a.u$c
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$1
	MethodsOf: org.zeroturnaround.zip.Zips$1
	LineNumbersOf: org.zeroturnaround.zip.Zips$1

Class: org.zeroturnaround.zip.Zips$CopyingCallback	=>	b.b.a.u$a
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$CopyingCallback
		private final java.util.Map entryByPath	=>	c
		private final java.util.zip.ZipOutputStream out	=>	a
		private final boolean preserveTimestapms	=>	b
		private final java.util.Set visitedNames	=>	d
	MethodsOf: org.zeroturnaround.zip.Zips$CopyingCallback
		private void <init>(java.util.List, java.util.zip.ZipOutputStream, boolean) 	SignatureNotChanged
		synthetic void <init>(java.util.List, java.util.zip.ZipOutputStream, boolean, org.zeroturnaround.zip.Zips$1) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.Zips$CopyingCallback
		631	=>	4
		638	=>	2
		639	=>	11
		640	=>	14
		641	=>	10
		642	=>	13
		643	=>	6
		646	=>	1
		648	=>	3
		649	=>	12
		651	=>	15
		653	=>	16
		654	=>	8
		655	=>	7
		658	=>	5
		660	=>	9

Class: org.zeroturnaround.zip.Zips$UnpackingCallback	=>	b.b.a.u$b
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$UnpackingCallback
		private final java.io.File destination	=>	b
		private final java.util.Map entryByPath	=>	c
		private final java.util.Set visitedNames	=>	a
	MethodsOf: org.zeroturnaround.zip.Zips$UnpackingCallback
		private void <init>(java.util.List, java.io.File) 	SignatureNotChanged
		synthetic void <init>(java.util.List, java.io.File, org.zeroturnaround.zip.Zips$1) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry)	=>	a(java.io.InputStream, java.util.zip.ZipEntry)
		private void transformIntoFile(org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.InputStream, java.util.zip.ZipEntry, java.io.File)	=>	a(b.b.a.b.f, java.io.InputStream, java.util.zip.ZipEntry, java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.Zips$UnpackingCallback
		663	=>	25
		669	=>	40
		670	=>	46
		671	=>	10
		672	=>	36
		673	=>	4
		676	=>	44
		678	=>	48
		679	=>	11
		681	=>	28
		683	=>	42
		684	=>	26
		685	=>	13
		686	=>	17
		689	=>	30
		690	=>	9
		693	=>	3
		694	=>	37
		695	=>	23
		698	=>	29
		700	=>	20
		703	=>	16
		704	=>	31
		706	=>	6
		707	=>	38
		709	=>	14
		712	=>	2
		722	=>	7
		723	=>	27
		726	=>	35
		727	=>	21 and 41
		729	=>	15 and 47
		731	=>	43 and 49
		733	=>	1 and 8
		734	=>	39 and 45
		735	=>	12 and 24
		736	=>	32 and 34
		737	=>	18 and 33
		738	=>	19 and 22
		740	=>	5

Class: org.zeroturnaround.zip.Zips$UnpackingCallback$1	=>	b.b.a.u$b$a
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$UnpackingCallback$1
		final synthetic org.zeroturnaround.zip.Zips$UnpackingCallback this$0	NameNotChanged
		final synthetic java.io.InputStream val$entryIn	NameNotChanged
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformer val$transformer	NameNotChanged
		final synthetic java.util.zip.ZipEntry val$zipEntry	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$zipOut	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.Zips$UnpackingCallback$1
		void <init>(org.zeroturnaround.zip.Zips$UnpackingCallback, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		public void run() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.Zips$UnpackingCallback$1
		712	=>	6
		715	=>	2
		717	=>	3
		718	=>	5
		719	=>	4
		720	=>	1

Class: public org.zeroturnaround.zip.commons.FileExistsException	=>	b.b.a.d.a
	Source: "FileExistsException.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileExistsException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.commons.FileExistsException
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.commons.FileExistsException
		39	=>	5
		40	=>	2
		48	=>	4
		49	=>	1
		57	=>	3
		58	=>	6

Class: public org.zeroturnaround.zip.commons.FileUtils	=>	b.b.a.d.c
	Source: "FileUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileUtils
	MethodsOf: org.zeroturnaround.zip.commons.FileUtils
		public void <init>() 	SignatureNotChanged
		public static void copy(java.io.File, java.io.OutputStream)	=>	a(java.io.File, java.io.OutputStream)
		public static void copy(java.io.InputStream, java.io.File)	=>	a(java.io.InputStream, java.io.File)
		public static java.io.File getTempFileFor(java.io.File)	=>	o(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.commons.FileUtils
		22	=>	8
		23	=>	3
		34	=>	18
		36	=>	7
		39	=>	14 and 15
		40	=>	2 and 5
		41	=>	11
		54	=>	20
		56	=>	21
		59	=>	4 and 12
		60	=>	9 and 17
		61	=>	19
		70	=>	1
		71	=>	16
		73	=>	6
		75	=>	10
		77	=>	13
		78	=>	22

Class: public org.zeroturnaround.zip.commons.FileUtilsV2_2	=>	b.b.a.d.b
	Source: "FileUtilsV2_2.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileUtilsV2_2
		public static final java.io.File[] EMPTY_FILE_ARRAY	=>	g
		public static final long ONE_EB	=>	a
		public static final long ONE_GB	=>	d
		public static final long ONE_KB	=>	i
		public static final long ONE_MB	=>	c
		public static final long ONE_PB	=>	e
		public static final long ONE_TB	=>	h
		public static final java.math.BigInteger ONE_YB	=>	f
		public static final java.math.BigInteger ONE_ZB	=>	b
	MethodsOf: org.zeroturnaround.zip.commons.FileUtilsV2_2
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static void cleanDirectory(java.io.File)	=>	i(java.io.File)
		private static void cleanDirectoryOnExit(java.io.File)	=>	d(java.io.File)
		public static boolean contentEquals(java.io.File, java.io.File)	=>	c(java.io.File, java.io.File)
		public static void copyDirectory(java.io.File, java.io.File)	=>	b(java.io.File, java.io.File)
		public static void copyDirectory(java.io.File, java.io.File, boolean)	=>	a(java.io.File, java.io.File, boolean)
		public static void copyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean)	=>	a(java.io.File, java.io.File, java.io.FileFilter, boolean)
		public static void copyFile(java.io.File, java.io.File)	=>	e(java.io.File, java.io.File)
		public static void copyFile(java.io.File, java.io.File, boolean)	=>	d(java.io.File, java.io.File, boolean)
		public static void copyFileToDirectory(java.io.File, java.io.File)	=>	f(java.io.File, java.io.File)
		public static void copyFileToDirectory(java.io.File, java.io.File, boolean)	=>	b(java.io.File, java.io.File, boolean)
		public static void deleteDirectory(java.io.File)	=>	l(java.io.File)
		private static void deleteDirectoryOnExit(java.io.File)	=>	a(java.io.File)
		public static boolean deleteQuietly(java.io.File)	=>	b(java.io.File)
		private static void doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean, java.util.List)	=>	a(java.io.File, java.io.File, java.io.FileFilter, boolean, java.util.List)
		private static void doCopyFile(java.io.File, java.io.File, boolean)	=>	c(java.io.File, java.io.File, boolean)
		public static void forceDelete(java.io.File)	=>	h(java.io.File)
		public static void forceDeleteOnExit(java.io.File)	=>	n(java.io.File)
		public static void forceMkdir(java.io.File)	=>	e(java.io.File)
		public static boolean isSymlink(java.io.File)	=>	f(java.io.File)
		public static void moveDirectory(java.io.File, java.io.File)	=>	d(java.io.File, java.io.File)
		public static void moveFile(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		public static java.io.FileInputStream openInputStream(java.io.File)	=>	k(java.io.File)
		public static java.io.FileOutputStream openOutputStream(java.io.File)	=>	j(java.io.File)
		public static java.io.FileOutputStream openOutputStream(java.io.File, boolean)	=>	a(java.io.File, boolean)
		public static java.lang.String readFileToString(java.io.File)	=>	g(java.io.File)
		public static java.lang.String readFileToString(java.io.File, java.lang.String)	=>	a(java.io.File, java.lang.String)
		public static long sizeOf(java.io.File)	=>	m(java.io.File)
		public static long sizeOfDirectory(java.io.File)	=>	c(java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.commons.FileUtilsV2_2
		62	=>	297
		63	=>	274
		103	=>	75
		108	=>	66
		113	=>	188
		135	=>	228
		136	=>	298
		137	=>	142
		139	=>	127
		140	=>	122
		143	=>	89
		145	=>	205
		170	=>	149
		196	=>	225
		197	=>	49
		198	=>	129
		200	=>	60
		201	=>	195
		204	=>	33
		205	=>	257
		206	=>	132
		207	=>	299
		211	=>	211
		231	=>	276
		232	=>	304
		233	=>	153
		236	=>	164
		238	=>	78
		241	=>	172
		243	=>	220
		246	=>	52
		248	=>	233
		251	=>	11
		253	=>	175
		256	=>	287
		257	=>	223
		259	=>	139
		260	=>	106
		261	=>	105 and 283
		264	=>	97 and 234
		265	=>	98 and 145
		266	=>	232
		292	=>	28
		293	=>	294
		321	=>	242
		322	=>	141
		324	=>	56
		325	=>	109
		327	=>	177
		328	=>	71
		329	=>	238
		353	=>	174
		354	=>	155
		382	=>	286
		383	=>	201
		385	=>	10
		386	=>	249
		388	=>	83
		389	=>	147
		391	=>	275
		392	=>	176
		394	=>	119
		395	=>	24
		397	=>	107
		398	=>	206
		399	=>	80
		400	=>	64
		403	=>	14
		404	=>	184
		406	=>	101
		407	=>	196
		418	=>	144
		419	=>	185
		422	=>	282
		423	=>	157
		424	=>	243
		425	=>	213
		427	=>	231
		428	=>	251
		429	=>	288
		430	=>	7
		431	=>	161
		432	=>	226
		433	=>	18
		434	=>	166
		435	=>	116
		436	=>	23
		439	=>	21 and 247
		440	=>	48 and 63
		441	=>	3 and 150
		442	=>	92 and 114
		443	=>	85 and 128
		445	=>	90
		446	=>	277
		449	=>	268
		450	=>	167
		452	=>	193
		479	=>	86
		480	=>	222
		510	=>	240
		511	=>	267
		561	=>	26
		562	=>	301
		564	=>	300
		565	=>	5
		567	=>	191
		568	=>	200
		570	=>	159
		571	=>	41
		573	=>	252
		574	=>	279
		578	=>	146
		579	=>	180
		580	=>	160
		581	=>	108
		582	=>	194
		583	=>	53 and 296
		584	=>	76
		585	=>	271
		589	=>	265
		590	=>	110
		606	=>	198
		607	=>	212
		608	=>	113
		610	=>	295
		611	=>	266
		612	=>	173
		615	=>	29
		616	=>	207
		619	=>	156
		620	=>	261
		622	=>	51 and 269
		623	=>	102
		624	=>	310
		625	=>	16
		626	=>	293
		628	=>	17
		634	=>	103
		635	=>	67
		637	=>	289
		647	=>	133
		648	=>	94
		651	=>	136
		652	=>	170
		655	=>	143
		656	=>	258
		658	=>	6
		660	=>	229
		678	=>	39
		679	=>	27
		682	=>	244
		683	=>	262
		685	=>	308
		686	=>	302
		689	=>	131
		690	=>	219
		691	=>	15
		702	=>	309
		703	=>	253
		704	=>	178
		707	=>	237
		708	=>	246
		709	=>	214
		712	=>	123
		713	=>	171
		714	=>	31
		717	=>	168
		718	=>	74 and 163
		720	=>	126
		721	=>	203
		722	=>	181
		723	=>	120
		726	=>	55
		727	=>	245
		729	=>	70
		743	=>	58
		745	=>	152
		746	=>	134 and 303
		748	=>	62 and 182
		749	=>	239
		763	=>	34
		783	=>	263
		784	=>	260
		786	=>	88
		787	=>	57
		788	=>	280
		789	=>	20
		791	=>	13
		793	=>	45
		796	=>	165
		807	=>	121
		808	=>	117
		810	=>	93
		812	=>	81
		822	=>	183
		823	=>	82
		826	=>	186
		827	=>	148
		828	=>	37
		830	=>	284
		840	=>	248
		841	=>	72
		842	=>	65
		845	=>	158
		846	=>	278
		847	=>	215
		850	=>	241
		851	=>	292
		852	=>	154
		855	=>	224
		856	=>	162 and 202
		858	=>	95
		859	=>	69
		860	=>	291
		861	=>	221
		864	=>	61
		865	=>	79
		867	=>	100
		881	=>	124
		882	=>	190
		883	=>	305
		888	=>	209
		891	=>	255
		894	=>	187
		896	=>	25
		898	=>	30
		902	=>	22
		925	=>	236
		926	=>	281
		927	=>	43
		930	=>	118
		931	=>	42
		933	=>	36
		946	=>	311
		947	=>	256
		948	=>	96
		951	=>	235
		952	=>	285
		953	=>	264
		956	=>	54
		958	=>	50
		959	=>	169
		960	=>	9
		962	=>	44 and 84
		963	=>	140
		966	=>	125
		983	=>	12
		984	=>	47
		986	=>	91
		987	=>	87
		989	=>	112
		990	=>	135
		992	=>	306
		993	=>	254
		995	=>	227
		996	=>	230
		998	=>	217
		999	=>	192
		1000	=>	270
		1001	=>	2
		1003	=>	179
		1004	=>	104
		1005	=>	38
		1006	=>	46
		1010	=>	35
		1026	=>	137
		1027	=>	218
		1029	=>	73
		1030	=>	4
		1032	=>	199
		1033	=>	1
		1035	=>	290
		1036	=>	204
		1038	=>	8
		1039	=>	130
		1041	=>	208
		1042	=>	115
		1044	=>	19
		1045	=>	189
		1046	=>	99
		1047	=>	151
		1048	=>	32
		1049	=>	197
		1053	=>	272
		1070	=>	273
		1071	=>	59
		1073	=>	138
		1074	=>	210
		1076	=>	68
		1077	=>	216
		1078	=>	250
		1080	=>	77
		1081	=>	259
		1084	=>	307
		1085	=>	40
		1087	=>	111

Class: public org.zeroturnaround.zip.commons.FilenameUtils	=>	b.b.a.d.d
	Source: "FilenameUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.FilenameUtils
		public static final char EXTENSION_SEPARATOR	=>	c
		public static final java.lang.String EXTENSION_SEPARATOR_STR	=>	a
		private static final char SYSTEM_SEPARATOR	=>	b
	MethodsOf: org.zeroturnaround.zip.commons.FilenameUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int getPrefixLength(java.lang.String)	=>	a(java.lang.String)
		private static boolean isSeparator(char)	=>	a(char)
		static boolean isSystemWindows()	=>	a()
	LineNumbersOf: org.zeroturnaround.zip.commons.FilenameUtils
		100	=>	19
		115	=>	3
		121	=>	29
		122	=>	12
		131	=>	14
		142	=>	22
		176	=>	9
		177	=>	41
		179	=>	23
		180	=>	24
		181	=>	39
		183	=>	1
		184	=>	42
		185	=>	25
		187	=>	27
		188	=>	6
		189	=>	34
		191	=>	10
		194	=>	30
		195	=>	20
		196	=>	32
		197	=>	36
		198	=>	5
		200	=>	4
		201	=>	13
		202	=>	18
		204	=>	16
		205	=>	33
		206	=>	35
		207	=>	21
		208	=>	43
		209	=>	40
		211	=>	15
		213	=>	26
		216	=>	31
		217	=>	8
		218	=>	38
		219	=>	11
		220	=>	28
		222	=>	17
		223	=>	37
		224	=>	7
		227	=>	2

Class: public org.zeroturnaround.zip.commons.IOUtils	=>	b.b.a.d.e
	Source: "IOUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.IOUtils
		public static final char DIR_SEPARATOR	=>	e
		public static final char DIR_SEPARATOR_UNIX	=>	d
		public static final char DIR_SEPARATOR_WINDOWS	=>	a
		public static final java.lang.String LINE_SEPARATOR	=>	g
		public static final java.lang.String LINE_SEPARATOR_UNIX	=>	b
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	=>	f
		private static int a	=>	c
	MethodsOf: org.zeroturnaround.zip.commons.IOUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int a()	=>	b()
		public static void a(int)	=>	b(int)
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public static int b()	=>	c()
		public static void closeQuietly(java.io.Closeable)	=>	a(java.io.Closeable)
		public static void closeQuietly(java.io.InputStream)	=>	a(java.io.InputStream)
		public static void closeQuietly(java.io.OutputStream)	=>	a(java.io.OutputStream)
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream)	=>	a(java.io.InputStream, java.io.InputStream)
		public static int copy(java.io.InputStream, java.io.OutputStream)	=>	a(java.io.InputStream, java.io.OutputStream)
		public static void copy(java.io.InputStream, java.io.Writer)	=>	a(java.io.InputStream, java.io.Writer)
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String)	=>	a(java.io.InputStream, java.io.Writer, java.lang.String)
		public static int copy(java.io.Reader, java.io.Writer)	=>	a(java.io.Reader, java.io.Writer)
		public static long copyLarge(java.io.InputStream, java.io.OutputStream)	=>	b(java.io.InputStream, java.io.OutputStream)
		public static long copyLarge(java.io.InputStream, java.io.OutputStream, byte[])	=>	a(java.io.InputStream, java.io.OutputStream, byte[])
		public static long copyLarge(java.io.Reader, java.io.Writer)	=>	b(java.io.Reader, java.io.Writer)
		public static long copyLarge(java.io.Reader, java.io.Writer, char[])	=>	a(java.io.Reader, java.io.Writer, char[])
		public static byte[] toByteArray(java.io.InputStream)	=>	b(java.io.InputStream)
		public static java.lang.String toString(java.io.InputStream, java.lang.String)	=>	a(java.io.InputStream, java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.commons.IOUtils
		84	=>	35
		100	=>	50
		101	=>	1
		102	=>	7
		103	=>	17
		104	=>	27
		105	=>	41
		119	=>	9
		120	=>	29
		146	=>	42
		147	=>	44
		174	=>	4
		175	=>	33
		202	=>	67
		203	=>	49
		205	=>	63
		207	=>	34
		208	=>	6
		224	=>	11
		225	=>	57
		226	=>	51
		247	=>	36
		248	=>	43
		249	=>	59
		274	=>	24
		275	=>	47
		276	=>	31
		278	=>	8
		299	=>	62
		320	=>	14
		321	=>	54
		322	=>	2
		323	=>	10
		324	=>	26
		326	=>	55
		346	=>	22
		347	=>	64
		348	=>	58
		371	=>	21
		372	=>	40
		374	=>	5
		375	=>	13
		377	=>	25
		400	=>	18
		401	=>	65
		402	=>	53
		404	=>	45
		423	=>	39
		442	=>	15
		443	=>	23
		444	=>	61
		445	=>	52
		446	=>	48
		448	=>	66
		469	=>	20
		470	=>	3
		472	=>	19
		473	=>	12
		476	=>	60
		477	=>	38
		478	=>	16
		479	=>	46
		480	=>	28
		482	=>	30
		483	=>	37
		485	=>	32
		486	=>	56

Class: public org.zeroturnaround.zip.commons.StringBuilderWriter	=>	b.b.a.d.f
	Source: "StringBuilderWriter.java"
	FieldsOf: org.zeroturnaround.zip.commons.StringBuilderWriter
		private final java.lang.StringBuilder builder	=>	a
	MethodsOf: org.zeroturnaround.zip.commons.StringBuilderWriter
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(java.lang.StringBuilder) 	SignatureNotChanged
		public java.io.Writer append(char) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(char) 	SignatureNotChanged
		public java.io.Writer append(java.lang.CharSequence) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(java.lang.CharSequence) 	SignatureNotChanged
		public java.io.Writer append(java.lang.CharSequence, int, int) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(java.lang.CharSequence, int, int) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void flush() 	SignatureNotChanged
		public java.lang.StringBuilder getBuilder()	=>	a()
		public java.lang.String toString() 	SignatureNotChanged
		public void write(char[], int, int) 	SignatureNotChanged
		public void write(java.lang.String) 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.commons.StringBuilderWriter
		34	=>	2, 14 and 21
		41	=>	7
		42	=>	25
		43	=>	23
		50	=>	17
		51	=>	13
		52	=>	9
		59	=>	6
		60	=>	8
		61	=>	10
		71	=>	12
		72	=>	19
		83	=>	24
		84	=>	27
		97	=>	22
		98	=>	16
		106	=>	20
		113	=>	4
		123	=>	5
		124	=>	11
		126	=>	26
		137	=>	1
		138	=>	15
		140	=>	18
		148	=>	28
		158	=>	3

Class: public org.zeroturnaround.zip.extra.AsiExtraField	=>	b.b.a.c.a
	Source: "AsiExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.AsiExtraField
		final int DEFAULT_DIR_PERM	=>	c
		final int DEFAULT_FILE_PERM	=>	b
		final int DEFAULT_LINK_PERM	=>	m
		final int DIR_FLAG	=>	k
		final int FILE_FLAG	=>	g
		private static final org.zeroturnaround.zip.extra.ZipShort HEADER_ID	=>	n
		final int LINK_FLAG	=>	l
		final int PERM_MASK	=>	i
		private java.util.zip.CRC32 crc	=>	j
		private boolean dirFlag	=>	h
		private int gid	=>	a
		private java.lang.String link	=>	f
		private int mode	=>	e
		private int uid	=>	d
	MethodsOf: org.zeroturnaround.zip.extra.AsiExtraField
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public byte[] getCentralDirectoryData()	=>	a()
		public org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength()	=>	e()
		public int getGroupId()	=>	g()
		public org.zeroturnaround.zip.extra.ZipShort getHeaderId()	=>	b()
		public java.lang.String getLinkedFile()	=>	j()
		public byte[] getLocalFileDataData()	=>	d()
		public org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength()	=>	c()
		public int getMode()	=>	k()
		protected int getMode(int)	=>	b(int)
		public int getUserId()	=>	h()
		public boolean isDirectory()	=>	i()
		public boolean isLink()	=>	f()
		public void parseFromLocalFileData(byte[], int, int)	=>	a(byte[], int, int)
		public void setDirectory(boolean)	=>	a(boolean)
		public void setGroupId(int)	=>	c(int)
		public void setLinkedFile(java.lang.String)	=>	a(java.lang.String)
		public void setMode(int)	=>	d(int)
		public void setUserId(int)	=>	a(int)
	LineNumbersOf: org.zeroturnaround.zip.extra.AsiExtraField
		70	=>	70
		76	=>	28
		82	=>	80
		88	=>	52
		100	=>	63
		106	=>	47
		112	=>	62
		114	=>	45
		121	=>	37
		127	=>	12
		133	=>	33
		143	=>	15
		149	=>	24
		156	=>	79
		159	=>	16
		160	=>	73
		169	=>	20
		180	=>	4 and 60
		185	=>	66
		196	=>	48
		208	=>	74
		209	=>	84
		211	=>	31
		213	=>	65
		216	=>	22
		218	=>	69
		221	=>	11
		224	=>	38
		225	=>	18
		226	=>	64
		228	=>	21
		229	=>	13
		230	=>	53
		231	=>	57
		241	=>	77
		251	=>	43
		252	=>	10
		261	=>	85
		271	=>	14
		272	=>	26
		281	=>	19
		293	=>	23
		294	=>	41
		295	=>	67
		306	=>	61
		316	=>	50
		326	=>	71
		327	=>	36
		336	=>	6
		346	=>	59
		347	=>	17
		348	=>	82
		357	=>	9
		372	=>	51
		373	=>	8
		374	=>	1
		375	=>	32
		376	=>	40
		377	=>	58
		378	=>	7
		379	=>	76
		380	=>	44
		382	=>	34
		385	=>	27
		387	=>	42
		388	=>	39
		389	=>	2
		391	=>	25
		392	=>	78
		395	=>	54
		396	=>	3
		399	=>	35
		400	=>	72
		401	=>	55
		411	=>	29
		412	=>	56
		413	=>	75
		415	=>	68
		416	=>	86
		418	=>	5
		424	=>	30
		425	=>	46
		426	=>	49
		428	=>	81
		430	=>	83

Class: public org.zeroturnaround.zip.extra.ExtraFieldUtils	=>	b.b.a.c.c
	Source: "ExtraFieldUtils.java"
	FieldsOf: org.zeroturnaround.zip.extra.ExtraFieldUtils
		private static final java.util.Map implementations	=>	a
	MethodsOf: org.zeroturnaround.zip.extra.ExtraFieldUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.InstantiationException a(java.lang.InstantiationException) 	SignatureNotChanged
		public static org.zeroturnaround.zip.extra.ZipExtraField createExtraField(org.zeroturnaround.zip.extra.ZipShort)	=>	a(b.b.a.c.f)
		public static byte[] mergeLocalFileDataData(java.util.List)	=>	a(java.util.List)
		public static java.util.List parse(byte[])	=>	a(byte[])
		public static org.zeroturnaround.zip.extra.ZipExtraField[] parseA(byte[])	=>	b(byte[])
		public static void register(java.lang.Class)	=>	a(java.lang.Class)
	LineNumbersOf: org.zeroturnaround.zip.extra.ExtraFieldUtils
		36	=>	29
		48	=>	19
		49	=>	27
		50	=>	18
		65	=>	23
		66	=>	11
		68	=>	39
		69	=>	28
		71	=>	13
		72	=>	5
		74	=>	40
		75	=>	54
		76	=>	53
		77	=>	33
		90	=>	24
		91	=>	12
		92	=>	30
		94	=>	35
		95	=>	8
		96	=>	3
		100	=>	51
		101	=>	6
		102	=>	52
		115	=>	17
		116	=>	38
		117	=>	47
		119	=>	41
		120	=>	1
		121	=>	37
		122	=>	58
		123	=>	32
		124	=>	25
		132	=>	56
		133	=>	44
		134	=>	57
		136	=>	14
		137	=>	16
		139	=>	26
		140	=>	34
		141	=>	49
		142	=>	21
		143	=>	22
		144	=>	10
		155	=>	31
		157	=>	2
		158	=>	48
		159	=>	43
		160	=>	9
		162	=>	45
		163	=>	15
		164	=>	4
		165	=>	46
		167	=>	7
		169	=>	42
		170	=>	20
		171	=>	36
		172	=>	50
		173	=>	55

Class: public org.zeroturnaround.zip.extra.UnrecognizedExtraField	=>	b.b.a.c.b
	Source: "UnrecognizedExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.UnrecognizedExtraField
		private byte[] centralData	=>	c
		private org.zeroturnaround.zip.extra.ZipShort headerId	=>	a
		private byte[] localData	=>	b
	MethodsOf: org.zeroturnaround.zip.extra.UnrecognizedExtraField
		public void <init>() 	SignatureNotChanged
		private static byte[] copy(byte[])	=>	a(byte[])
		public byte[] getCentralDirectoryData()	=>	a()
		public org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength()	=>	e()
		public org.zeroturnaround.zip.extra.ZipShort getHeaderId()	=>	b()
		public byte[] getLocalFileDataData()	=>	d()
		public org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength()	=>	c()
		public void parseFromCentralDirectoryData(byte[], int, int)	=>	b(byte[], int, int)
		public void parseFromLocalFileData(byte[], int, int)	=>	a(byte[], int, int)
		public void setCentralDirectoryData(byte[])	=>	b(byte[])
		public void setHeaderId(org.zeroturnaround.zip.extra.ZipShort)	=>	a(b.b.a.c.f)
		public void setLocalFileDataData(byte[])	=>	c(byte[])
	LineNumbersOf: org.zeroturnaround.zip.extra.UnrecognizedExtraField
		34	=>	2
		49	=>	27
		50	=>	29
		58	=>	16
		76	=>	5
		77	=>	15
		85	=>	7
		94	=>	24
		111	=>	22
		112	=>	8
		121	=>	14
		122	=>	23
		124	=>	3
		133	=>	13
		134	=>	9
		136	=>	28
		146	=>	26
		147	=>	17
		148	=>	10
		149	=>	30
		158	=>	4
		159	=>	18
		160	=>	11
		161	=>	31
		162	=>	12
		164	=>	20
		171	=>	21
		172	=>	1
		173	=>	25
		174	=>	6
		176	=>	19

Class: final org.zeroturnaround.zip.extra.ZipConstants	=>	b.b.a.c.d
	Source: "ZipConstants.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipConstants
	MethodsOf: org.zeroturnaround.zip.extra.ZipConstants
		private void <init>() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.extra.ZipConstants
		28	=>	2
		29	=>	1

Class: public abstract org.zeroturnaround.zip.extra.ZipExtraField	=>	b.b.a.c.e
	Source: "ZipExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipExtraField
	MethodsOf: org.zeroturnaround.zip.extra.ZipExtraField
		public abstract byte[] getCentralDirectoryData()	=>	a()
		public abstract org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength()	=>	e()
		public abstract org.zeroturnaround.zip.extra.ZipShort getHeaderId()	=>	b()
		public abstract byte[] getLocalFileDataData()	=>	d()
		public abstract org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength()	=>	c()
		public abstract void parseFromLocalFileData(byte[], int, int)	=>	a(byte[], int, int)
	LineNumbersOf: org.zeroturnaround.zip.extra.ZipExtraField

Class: public final org.zeroturnaround.zip.extra.ZipLong	=>	b.b.a.c.g
	Source: "ZipLong.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipLong
		public static final org.zeroturnaround.zip.extra.ZipLong CFH_SIG	=>	c
		public static final org.zeroturnaround.zip.extra.ZipLong DD_SIG	=>	d
		public static final org.zeroturnaround.zip.extra.ZipLong LFH_SIG	=>	b
		static final org.zeroturnaround.zip.extra.ZipLong ZIP64_MAGIC	=>	e
		private final long value	=>	a
	MethodsOf: org.zeroturnaround.zip.extra.ZipLong
		static void <clinit>() 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(byte[], int) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public byte[] getBytes()	=>	b()
		public static byte[] getBytes(long)	=>	a(long)
		public long getValue()	=>	a()
		public static long getValue(byte[])	=>	a(byte[])
		public static long getValue(byte[], int)	=>	a(byte[], int)
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.extra.ZipLong
		52	=>	32
		55	=>	6
		60	=>	17
		66	=>	19
		74	=>	33
		75	=>	34
		76	=>	3
		85	=>	4
		86	=>	13
		95	=>	20
		96	=>	21
		97	=>	9
		106	=>	2
		116	=>	31
		126	=>	24
		127	=>	11
		128	=>	30
		129	=>	23
		130	=>	7
		131	=>	5
		142	=>	12
		143	=>	25
		144	=>	27
		145	=>	16
		146	=>	29
		156	=>	15
		168	=>	18
		169	=>	26
		171	=>	10
		182	=>	1
		188	=>	22
		190	=>	28
		192	=>	8
		198	=>	14

Class: public final org.zeroturnaround.zip.extra.ZipShort	=>	b.b.a.c.f
	Source: "ZipShort.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipShort
		private static int a	=>	b
		private final int value	=>	a
	MethodsOf: org.zeroturnaround.zip.extra.ZipShort
		static void <clinit>() 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(byte[], int) 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public static int a()	=>	b()
		public static void a(int)	=>	b(int)
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public static int b()	=>	d()
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public byte[] getBytes()	=>	c()
		public static byte[] getBytes(int)	=>	c(int)
		public int getValue()	=>	a()
		public static int getValue(byte[])	=>	a(byte[])
		public static int getValue(byte[], int)	=>	a(byte[], int)
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.extra.ZipShort
		44	=>	3
		45	=>	25
		46	=>	13
		55	=>	8
		56	=>	1
		65	=>	22
		66	=>	19
		67	=>	15
		76	=>	12
		77	=>	16
		78	=>	4
		79	=>	27
		89	=>	2
		99	=>	21
		100	=>	24
		101	=>	9
		102	=>	11
		113	=>	26
		114	=>	20
		115	=>	14
		125	=>	29
		137	=>	5
		138	=>	10
		140	=>	28
		151	=>	18
		157	=>	17
		159	=>	7
		161	=>	23
		167	=>	6

Class: public org.zeroturnaround.zip.timestamps.Java8TimestampStrategy	=>	b.b.a.a.b
	Source: "Java8TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy
		public void <init>() 	SignatureNotChanged
		public void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy
		27	=>	2
		31	=>	11
		32	=>	10
		33	=>	9
		37	=>	3
		38	=>	1
		39	=>	8
		43	=>	7
		44	=>	6
		45	=>	4
		48	=>	5

Class: public org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy	=>	b.b.a.a.c
	Source: "PreJava8TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy
		public void <init>() 	SignatureNotChanged
		public void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy
		24	=>	3
		27	=>	1
		28	=>	5
		29	=>	2
		31	=>	4

Class: public abstract org.zeroturnaround.zip.timestamps.TimestampStrategy	=>	b.b.a.a.a
	Source: "TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.TimestampStrategy
		public abstract void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry, java.util.zip.ZipEntry)
	LineNumbersOf: org.zeroturnaround.zip.timestamps.TimestampStrategy

Class: public org.zeroturnaround.zip.timestamps.TimestampStrategyFactory	=>	b.b.a.a.d
	Source: "TimestampStrategyFactory.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory
		public static boolean HAS_ZIP_ENTRY_FILE_TIME_METHODS	=>	b
		private static org.zeroturnaround.zip.timestamps.TimestampStrategy INSTANCE	=>	a
		private static int[] a	=>	c
	MethodsOf: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static int[] a()	=>	c()
		public static void a(int[])	=>	b(int[])
		public static org.zeroturnaround.zip.timestamps.TimestampStrategy getInstance()	=>	a()
		private static org.zeroturnaround.zip.timestamps.TimestampStrategy getStrategy()	=>	b()
		private static boolean hasZipEntryFileTimeMethods()	=>	d()
	LineNumbersOf: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory
		28	=>	3
		30	=>	2
		32	=>	10
		33	=>	8
		37	=>	7
		38	=>	9
		40	=>	4
		41	=>	1
		46	=>	5
		47	=>	6
		50	=>	11
		55	=>	12

Class: public abstract org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer	=>	b.b.a.b.g
	Source: "ByteArrayZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		protected boolean preserveTimestamps()	=>	a()
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
		protected abstract byte[] transform(java.util.zip.ZipEntry, byte[])	=>	a(java.util.zip.ZipEntry, byte[])
	LineNumbersOf: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer
		11	=>	3
		40	=>	4
		41	=>	5
		45	=>	8
		46	=>	6
		49	=>	1
		52	=>	2
		53	=>	9
		61	=>	7

Class: public abstract org.zeroturnaround.zip.transform.FileZipEntryTransformer	=>	b.b.a.b.a
	Source: "FileZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.FileZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.FileZipEntryTransformer
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		private static void copy(java.io.InputStream, java.io.File)	=>	a(java.io.InputStream, java.io.File)
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
		protected abstract void transform(java.util.zip.ZipEntry, java.io.File, java.io.File)	=>	a(java.util.zip.ZipEntry, java.io.File, java.io.File)
	LineNumbersOf: org.zeroturnaround.zip.transform.FileZipEntryTransformer
		16	=>	13
		47	=>	1
		48	=>	4
		50	=>	6
		51	=>	9
		52	=>	19
		53	=>	2
		54	=>	3
		55	=>	16
		58	=>	7 and 21
		59	=>	5 and 20
		60	=>	12 and 18
		61	=>	23
		64	=>	15
		66	=>	8
		69	=>	10 and 14
		70	=>	11 and 22
		71	=>	17

Class: public abstract org.zeroturnaround.zip.transform.StreamZipEntryTransformer	=>	b.b.a.b.b
	Source: "StreamZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.StreamZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.StreamZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
		protected abstract void transform(java.util.zip.ZipEntry, java.io.InputStream, java.io.OutputStream)	=>	a(java.util.zip.ZipEntry, java.io.InputStream, java.io.OutputStream)
	LineNumbersOf: org.zeroturnaround.zip.transform.StreamZipEntryTransformer
		10	=>	7
		37	=>	5
		38	=>	6
		39	=>	3
		40	=>	4
		41	=>	2
		42	=>	1

Class: public abstract org.zeroturnaround.zip.transform.StringZipEntryTransformer	=>	b.b.a.b.e
	Source: "StringZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.StringZipEntryTransformer
		private final java.lang.String encoding	=>	a
	MethodsOf: org.zeroturnaround.zip.transform.StringZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
		protected abstract java.lang.String transform(java.util.zip.ZipEntry, java.lang.String)	=>	a(java.util.zip.ZipEntry, java.lang.String)
	LineNumbersOf: org.zeroturnaround.zip.transform.StringZipEntryTransformer
		19	=>	2
		20	=>	9
		22	=>	1
		23	=>	4
		24	=>	8
		41	=>	6
		42	=>	11
		43	=>	3
		44	=>	10
		45	=>	7
		46	=>	5

Class: public org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer	=>	b.b.a.b.d
	Source: "ZipEntrySourceZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer
		private final org.zeroturnaround.zip.ZipEntrySource source	=>	a
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer
		public void <init>(org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		static void addEntry(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)	=>	a(b.b.a.A, java.util.zip.ZipOutputStream)
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
	LineNumbersOf: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer
		15	=>	4
		16	=>	9
		17	=>	5
		20	=>	3
		21	=>	12
		32	=>	8
		33	=>	15
		34	=>	13
		36	=>	14
		39	=>	2 and 6
		40	=>	10 and 11
		42	=>	7
		43	=>	1

Class: public abstract org.zeroturnaround.zip.transform.ZipEntryTransformer	=>	b.b.a.b.f
	Source: "ZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntryTransformer
		public abstract void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream)
	LineNumbersOf: org.zeroturnaround.zip.transform.ZipEntryTransformer

Class: public org.zeroturnaround.zip.transform.ZipEntryTransformerEntry	=>	b.b.a.b.c
	Source: "ZipEntryTransformerEntry.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry
		private static boolean a	=>	b
		private final java.lang.String path	=>	c
		private final org.zeroturnaround.zip.transform.ZipEntryTransformer transformer	=>	d
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public static boolean a()	=>	b()
		public static void a(boolean)	=>	b(boolean)
		public static boolean b()	=>	d()
		public java.lang.String getPath()	=>	a()
		public org.zeroturnaround.zip.transform.ZipEntryTransformer getTransformer()	=>	c()
		public java.lang.String toString() 	SignatureNotChanged
	LineNumbersOf: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry
		14	=>	2
		15	=>	3
		16	=>	5
		17	=>	4
		20	=>	7
		24	=>	6
		28	=>	1


AutoReflectionClass: com.volmit.iris.f.ba


TraceBackClass: com.google.gson.TypeAdapter	Data: 5907 a907 b907 e
ForwardClass: com.google.gson.JsonParseException Package: com.google.gson	Data: 3904 a904 b904 N
ForwardClass: com.google.gson.internal.ConstructorConstructor Package: com.google.gson.internal	Data: 51046 a1046 b1046 B
ForwardClass: com.google.gson.internal.bind.TypeAdapters Package: com.google.gson.internal.bind	Data: M1183 a1183 b1183 o
ForwardClass: com.google.gson.internal.bind.util.ISO8601Utils Package: com.google.gson.internal.bind.util	Data: 11326 a1326 b1326 c1327 q
ForwardClass: com.google.gson.reflect.TypeToken Package: com.google.gson.reflect	Data: M1036 a1036 b1036 Q
ForwardClass: com.google.gson.stream.JsonReader Package: com.google.gson.stream	Data: 41042 a1042 b1042 J
ForwardClass: com.google.gson.stream.JsonWriter Package: com.google.gson.internal.reflect	Data: 51041 a1041 b1041 w
ForwardClass: com.volmit.iris.Iris Package: com.volmit.iris	Data: 42114 a2114 b2114 n
ForwardClass: com.volmit.iris.generator.ContextualChunkGenerator Package: com.volmit.iris.generator	Data: 21951 a1951 b1951 c1952 D
ForwardClass: com.volmit.iris.layer.GenLayerBiome Package: com.volmit.iris.layer	Data: 41950 a1950 b1950 O
ForwardClass: com.volmit.iris.layer.post.PostWallPatcher Package: com.volmit.iris.layer.post	Data: 12097 a2097 b2097 c2098 x
ForwardClass: com.volmit.iris.object.IrisRegistrant Package: com.volmit.iris.object	Data: M1961 a1961 b1961 B
ForwardClass: com.volmit.iris.object.atomics.AtomicSliverMap Package: com.volmit.iris.object.atomics	Data: 42095 a2095 b2095 L
ForwardClass: com.volmit.iris.tetris.TetrisObject Package: com.volmit.iris.tetris	Data: 21952 a1952 b1952 c1953 X
ForwardClass: com.volmit.iris.util.Tag Package: com.volmit.iris.util	Data: M2005 a2005 b2005 H
ForwardClass: com.volmit.iris.wand.WandController Package: com.volmit.iris.wand	Data: 31950 a1950 b1950 n
ForwardClass: javax.vecmath.Tuple4f Package: javax.vecmath	Data: 3546 a546 b546 a
ForwardClass: org.slf4j.LoggerFactory Package: org.slf4j	Data: 1534 a534 b534 c535 W
ForwardClass: org.slf4j.helpers.Util Package: org.slf4j.helpers	Data: M676 a676 b676 D
ForwardClass: org.zeroturnaround.zip.ZipException Package: org.zeroturnaround.zip	Data: M688 a688 b688 Q
ForwardClass: org.zeroturnaround.zip.commons.IOUtils Package: org.zeroturnaround.zip.commons	Data: 2823 a823 b823 c824 p
ForwardClass: org.zeroturnaround.zip.extra.ZipShort Package: org.zeroturnaround.zip.extra	Data: 2823 a823 b823 c824 G
ForwardClass: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory Package: org.zeroturnaround.zip.timestamps	Data: 4819 a819 b819 f
ForwardClass: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry Package: org.zeroturnaround.zip.transform	Data: 1819 a819 b819 c820 u
MemberClass: com.google.gson.DefaultDateTypeAdapter	Data: 768
MemberClass: com.google.gson.FieldAttributes	Data: 721
MemberClass: com.google.gson.FieldNamingPolicy	Data: 773
MemberClass: com.google.gson.FieldNamingPolicy$1	Data: 906
MemberClass: com.google.gson.FieldNamingPolicy$2	Data: 907
MemberClass: com.google.gson.FieldNamingPolicy$3	Data: 908
MemberClass: com.google.gson.FieldNamingPolicy$4	Data: 909
MemberClass: com.google.gson.FieldNamingPolicy$5	Data: 910
MemberClass: com.google.gson.FieldNamingPolicy$6	Data: 911
MemberClass: com.google.gson.Gson	Data: 776 O
MemberClass: com.google.gson.Gson$1	Data: 912
MemberClass: com.google.gson.Gson$2	Data: 913
MemberClass: com.google.gson.Gson$3	Data: 910
MemberClass: com.google.gson.Gson$4	Data: 911
MemberClass: com.google.gson.Gson$5	Data: 909
MemberClass: com.google.gson.Gson$FutureTypeAdapter	Data: 914
MemberClass: com.google.gson.GsonBuilder	Data: 757 y
MemberClass: com.google.gson.JsonArray	Data: 759
MemberClass: com.google.gson.JsonElement	Data: 758
MemberClass: com.google.gson.JsonIOException	Data: 765
MemberClass: com.google.gson.JsonNull	Data: 760
MemberClass: com.google.gson.JsonObject	Data: 761
MemberClass: com.google.gson.JsonParseException	Data: 764
MemberClass: com.google.gson.JsonParser	Data: 775
MemberClass: com.google.gson.JsonPrimitive	Data: 762
MemberClass: com.google.gson.JsonStreamParser	Data: 772
MemberClass: com.google.gson.JsonSyntaxException	Data: 766
MemberClass: com.google.gson.LongSerializationPolicy	Data: 722
MemberClass: com.google.gson.LongSerializationPolicy$1	Data: 855
MemberClass: com.google.gson.LongSerializationPolicy$2	Data: 856
MemberClass: com.google.gson.TypeAdapter	Data: 767
MemberClass: com.google.gson.TypeAdapter$1	Data: 900
MemberClass: com.google.gson.internal.$Gson$Preconditions	Data: 909
MemberClass: com.google.gson.internal.$Gson$Types	Data: 908
MemberClass: com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl	Data: 1043
MemberClass: com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl	Data: 1041
MemberClass: com.google.gson.internal.$Gson$Types$WildcardTypeImpl	Data: 1042
MemberClass: com.google.gson.internal.ConstructorConstructor	Data: 907
MemberClass: com.google.gson.internal.ConstructorConstructor$1	Data: 1044
MemberClass: com.google.gson.internal.ConstructorConstructor$10	Data: 1053
MemberClass: com.google.gson.internal.ConstructorConstructor$11	Data: 1043
MemberClass: com.google.gson.internal.ConstructorConstructor$12	Data: 1050
MemberClass: com.google.gson.internal.ConstructorConstructor$13	Data: 1046
MemberClass: com.google.gson.internal.ConstructorConstructor$14	Data: 1047
MemberClass: com.google.gson.internal.ConstructorConstructor$2	Data: 1045
MemberClass: com.google.gson.internal.ConstructorConstructor$3	Data: 1054
MemberClass: com.google.gson.internal.ConstructorConstructor$4	Data: 1041
MemberClass: com.google.gson.internal.ConstructorConstructor$5	Data: 1040
MemberClass: com.google.gson.internal.ConstructorConstructor$6	Data: 1052
MemberClass: com.google.gson.internal.ConstructorConstructor$7	Data: 1051
MemberClass: com.google.gson.internal.ConstructorConstructor$8	Data: 1042
MemberClass: com.google.gson.internal.ConstructorConstructor$9	Data: 1048
MemberClass: com.google.gson.internal.Excluder	Data: 903
MemberClass: com.google.gson.internal.Excluder$1	Data: 1036
MemberClass: com.google.gson.internal.GsonBuildConfig	Data: 911
MemberClass: com.google.gson.internal.JavaVersion	Data: 905
MemberClass: com.google.gson.internal.JsonReaderInternalAccess	Data: 904
MemberClass: com.google.gson.internal.LazilyParsedNumber	Data: 900
MemberClass: com.google.gson.internal.LinkedHashTreeMap	Data: 901
MemberClass: com.google.gson.internal.LinkedHashTreeMap$1	Data: 1036
MemberClass: com.google.gson.internal.LinkedHashTreeMap$AvlBuilder	Data: 1039 E
MemberClass: com.google.gson.internal.LinkedHashTreeMap$AvlIterator	Data: 1041
MemberClass: com.google.gson.internal.LinkedHashTreeMap$EntrySet	Data: 1038
MemberClass: com.google.gson.internal.LinkedHashTreeMap$EntrySet$1	Data: 1171
MemberClass: com.google.gson.internal.LinkedHashTreeMap$KeySet	Data: 1040
MemberClass: com.google.gson.internal.LinkedHashTreeMap$KeySet$1	Data: 1173
MemberClass: com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator	Data: 1035
MemberClass: com.google.gson.internal.LinkedHashTreeMap$Node	Data: 1034 y
MemberClass: com.google.gson.internal.LinkedTreeMap	Data: 912
MemberClass: com.google.gson.internal.LinkedTreeMap$1	Data: 1046
MemberClass: com.google.gson.internal.LinkedTreeMap$EntrySet	Data: 1049
MemberClass: com.google.gson.internal.LinkedTreeMap$EntrySet$1	Data: 1182
MemberClass: com.google.gson.internal.LinkedTreeMap$KeySet	Data: 1047
MemberClass: com.google.gson.internal.LinkedTreeMap$KeySet$1	Data: 1180
MemberClass: com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator	Data: 1045
MemberClass: com.google.gson.internal.LinkedTreeMap$Node	Data: 1048
MemberClass: com.google.gson.internal.PreJava9DateFormatProvider	Data: 910
MemberClass: com.google.gson.internal.Primitives	Data: 914
MemberClass: com.google.gson.internal.Streams	Data: 906
MemberClass: com.google.gson.internal.Streams$AppendableWriter	Data: 1039
MemberClass: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite	Data: 1173
MemberClass: com.google.gson.internal.UnsafeAllocator	Data: 913
MemberClass: com.google.gson.internal.UnsafeAllocator$1	Data: 1046
MemberClass: com.google.gson.internal.UnsafeAllocator$2	Data: 1047
MemberClass: com.google.gson.internal.UnsafeAllocator$3	Data: 1048
MemberClass: com.google.gson.internal.UnsafeAllocator$4	Data: 1049
MemberClass: com.google.gson.internal.bind.ArrayTypeAdapter	Data: 1047
MemberClass: com.google.gson.internal.bind.ArrayTypeAdapter$1	Data: 1180
MemberClass: com.google.gson.internal.bind.CollectionTypeAdapterFactory	Data: 1056
MemberClass: com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter	Data: 1189
MemberClass: com.google.gson.internal.bind.DateTypeAdapter	Data: 1048
MemberClass: com.google.gson.internal.bind.DateTypeAdapter$1	Data: 1181
MemberClass: com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory	Data: 1046
MemberClass: com.google.gson.internal.bind.JsonTreeReader	Data: 1057
MemberClass: com.google.gson.internal.bind.JsonTreeReader$1	Data: 1190
MemberClass: com.google.gson.internal.bind.JsonTreeWriter	Data: 1054
MemberClass: com.google.gson.internal.bind.JsonTreeWriter$1	Data: 1187
MemberClass: com.google.gson.internal.bind.MapTypeAdapterFactory	Data: 1055
MemberClass: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter	Data: 1188
MemberClass: com.google.gson.internal.bind.ObjectTypeAdapter	Data: 1049
MemberClass: com.google.gson.internal.bind.ObjectTypeAdapter$1	Data: 1182
MemberClass: com.google.gson.internal.bind.ObjectTypeAdapter$2	Data: 1183
MemberClass: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory	Data: 1058
MemberClass: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1	Data: 1191
MemberClass: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter	Data: 1192
MemberClass: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField	Data: 1193
MemberClass: com.google.gson.internal.bind.SqlDateTypeAdapter	Data: 1050
MemberClass: com.google.gson.internal.bind.SqlDateTypeAdapter$1	Data: 1183
MemberClass: com.google.gson.internal.bind.TimeTypeAdapter	Data: 1051
MemberClass: com.google.gson.internal.bind.TimeTypeAdapter$1	Data: 1184
MemberClass: com.google.gson.internal.bind.TreeTypeAdapter	Data: 1052
MemberClass: com.google.gson.internal.bind.TreeTypeAdapter$1	Data: 1185
MemberClass: com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl	Data: 1187
MemberClass: com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory	Data: 1186 S
MemberClass: com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper	Data: 1053
MemberClass: com.google.gson.internal.bind.TypeAdapters	Data: 1045
MemberClass: com.google.gson.internal.bind.TypeAdapters$1	Data: 1180
MemberClass: com.google.gson.internal.bind.TypeAdapters$10	Data: 1181 n
MemberClass: com.google.gson.internal.bind.TypeAdapters$11	Data: 1182
MemberClass: com.google.gson.internal.bind.TypeAdapters$12	Data: 1183
MemberClass: com.google.gson.internal.bind.TypeAdapters$13	Data: 1184
MemberClass: com.google.gson.internal.bind.TypeAdapters$14	Data: 1185
MemberClass: com.google.gson.internal.bind.TypeAdapters$15	Data: 1186
MemberClass: com.google.gson.internal.bind.TypeAdapters$16	Data: 1187
MemberClass: com.google.gson.internal.bind.TypeAdapters$17	Data: 1188
MemberClass: com.google.gson.internal.bind.TypeAdapters$18	Data: 1189
MemberClass: com.google.gson.internal.bind.TypeAdapters$19	Data: 1190
MemberClass: com.google.gson.internal.bind.TypeAdapters$2	Data: 1191
MemberClass: com.google.gson.internal.bind.TypeAdapters$20	Data: 1192
MemberClass: com.google.gson.internal.bind.TypeAdapters$21	Data: 1193
MemberClass: com.google.gson.internal.bind.TypeAdapters$22	Data: 1194
MemberClass: com.google.gson.internal.bind.TypeAdapters$23	Data: 1195
MemberClass: com.google.gson.internal.bind.TypeAdapters$24	Data: 1196
MemberClass: com.google.gson.internal.bind.TypeAdapters$25	Data: 1197
MemberClass: com.google.gson.internal.bind.TypeAdapters$26	Data: 1178
MemberClass: com.google.gson.internal.bind.TypeAdapters$26$1	Data: 1313
MemberClass: com.google.gson.internal.bind.TypeAdapters$27	Data: 1198
MemberClass: com.google.gson.internal.bind.TypeAdapters$28	Data: 1199
MemberClass: com.google.gson.internal.bind.TypeAdapters$29	Data: 1200
MemberClass: com.google.gson.internal.bind.TypeAdapters$3	Data: 1201
MemberClass: com.google.gson.internal.bind.TypeAdapters$30	Data: 1154
MemberClass: com.google.gson.internal.bind.TypeAdapters$31	Data: 1155
MemberClass: com.google.gson.internal.bind.TypeAdapters$32	Data: 1157
MemberClass: com.google.gson.internal.bind.TypeAdapters$33	Data: 1153
MemberClass: com.google.gson.internal.bind.TypeAdapters$34	Data: 1156
MemberClass: com.google.gson.internal.bind.TypeAdapters$35	Data: 1151
MemberClass: com.google.gson.internal.bind.TypeAdapters$35$1	Data: 1284
MemberClass: com.google.gson.internal.bind.TypeAdapters$36	Data: 1152
MemberClass: com.google.gson.internal.bind.TypeAdapters$4	Data: 1202
MemberClass: com.google.gson.internal.bind.TypeAdapters$5	Data: 1203
MemberClass: com.google.gson.internal.bind.TypeAdapters$6	Data: 1146
MemberClass: com.google.gson.internal.bind.TypeAdapters$7	Data: 1147
MemberClass: com.google.gson.internal.bind.TypeAdapters$8	Data: 1148
MemberClass: com.google.gson.internal.bind.TypeAdapters$9	Data: 1149
MemberClass: com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter	Data: 1150
MemberClass: com.google.gson.internal.bind.util.ISO8601Utils	Data: 1189 Qr
MemberClass: com.google.gson.internal.reflect.PreJava9ReflectionAccessor	Data: 1048
MemberClass: com.google.gson.internal.reflect.ReflectionAccessor	Data: 1047
MemberClass: com.google.gson.internal.reflect.UnsafeReflectionAccessor	Data: 1049 U
MemberClass: com.google.gson.reflect.TypeToken	Data: 900
MemberClass: com.google.gson.stream.JsonReader	Data: 907 X
MemberClass: com.google.gson.stream.JsonReader$1	Data: 1040
MemberClass: com.google.gson.stream.JsonScope	Data: 904
MemberClass: com.google.gson.stream.JsonToken	Data: 903
MemberClass: com.google.gson.stream.JsonWriter	Data: 906
MemberClass: com.google.gson.stream.MalformedJsonException	Data: 905 j
MemberClass: com.volmit.iris.GeneratedChunk	Data: 1680
MemberClass: com.volmit.iris.Iris	Data: 1983
MemberClass: com.volmit.iris.IrisContext	Data: 1681
MemberClass: com.volmit.iris.IrisDataManager	Data: 1682 S
MemberClass: com.volmit.iris.IrisHotloadManager	Data: 1679
MemberClass: com.volmit.iris.IrisMetrics	Data: 1683 u
MemberClass: com.volmit.iris.generator.BiomeChunkGenerator	Data: 1823
MemberClass: com.volmit.iris.generator.CeilingChunkGenerator	Data: 1828
MemberClass: com.volmit.iris.generator.ContextualChunkGenerator	Data: 1821 L
MemberClass: com.volmit.iris.generator.DimensionChunkGenerator	Data: 1822
MemberClass: com.volmit.iris.generator.IrisChunkGenerator	Data: 1829
MemberClass: com.volmit.iris.generator.ParallaxChunkGenerator	Data: 1826
MemberClass: com.volmit.iris.generator.ParallelChunkGenerator	Data: 1824 z
MemberClass: com.volmit.iris.generator.PostBlockChunkGenerator	Data: 1827
MemberClass: com.volmit.iris.generator.TerrainChunkGenerator	Data: 1825
MemberClass: com.volmit.iris.layer.BiomeDataProvider	Data: 1820
MemberClass: com.volmit.iris.layer.GenLayerBiome	Data: 1821 As
MemberClass: com.volmit.iris.layer.GenLayerCarve	Data: 1822
MemberClass: com.volmit.iris.layer.GenLayerCave	Data: 1823
MemberClass: com.volmit.iris.layer.post.Post	Data: 1964
MemberClass: com.volmit.iris.layer.post.PostFloatingNibDeleter	Data: 1965
MemberClass: com.volmit.iris.layer.post.PostNibSmoother	Data: 1966 j
MemberClass: com.volmit.iris.layer.post.PostPotholeFiller	Data: 1967 S
MemberClass: com.volmit.iris.layer.post.PostSlabber	Data: 1968
MemberClass: com.volmit.iris.layer.post.PostWallPatcher	Data: 1969
MemberClass: com.volmit.iris.layer.post.PostWaterlogger	Data: 1970
MemberClass: com.volmit.iris.object.DecorationPart	Data: 1844
MemberClass: com.volmit.iris.object.Dispersion	Data: 1827
MemberClass: com.volmit.iris.object.Envelope	Data: 1824
MemberClass: com.volmit.iris.object.InferredType	Data: 1829
MemberClass: com.volmit.iris.object.InterpolationMethod	Data: 1841
MemberClass: com.volmit.iris.object.IrisAxisRotationClamp	Data: 1825
MemberClass: com.volmit.iris.object.IrisBiome	Data: 1835
MemberClass: com.volmit.iris.object.IrisBiomeDecorator	Data: 1846
MemberClass: com.volmit.iris.object.IrisBiomeGeneratorLink	Data: 1843
MemberClass: com.volmit.iris.object.IrisBiomeMutation	Data: 1823
MemberClass: com.volmit.iris.object.IrisBiomePaletteLayer	Data: 1847
MemberClass: com.volmit.iris.object.IrisBiomePaletteLayer$1	Data: 1980
MemberClass: com.volmit.iris.object.IrisDepositGenerator	Data: 1831
MemberClass: com.volmit.iris.object.IrisDimension	Data: 1836 M
MemberClass: com.volmit.iris.object.IrisDimension$1	Data: 1969
MemberClass: com.volmit.iris.object.IrisGenerator	Data: 1837
MemberClass: com.volmit.iris.object.IrisNoiseGenerator	Data: 1832
MemberClass: com.volmit.iris.object.IrisObject	Data: 1838
MemberClass: com.volmit.iris.object.IrisObjectPlacement	Data: 1845
MemberClass: com.volmit.iris.object.IrisObjectReplace	Data: 1830
MemberClass: com.volmit.iris.object.IrisObjectRotation	Data: 1840
MemberClass: com.volmit.iris.object.IrisObjectTranslate	Data: 1828
MemberClass: com.volmit.iris.object.IrisPostProcessor	Data: 1842
MemberClass: com.volmit.iris.object.IrisRegion	Data: 1839 g
MemberClass: com.volmit.iris.object.IrisRegion$1	Data: 1972
MemberClass: com.volmit.iris.object.IrisRegionRidge	Data: 1833
MemberClass: com.volmit.iris.object.IrisRegionSpot	Data: 1826
MemberClass: com.volmit.iris.object.IrisRegistrant	Data: 1834
MemberClass: com.volmit.iris.object.atomics.AtomicRegionData	Data: 1970
MemberClass: com.volmit.iris.object.atomics.AtomicSliver	Data: 1971 Ny
MemberClass: com.volmit.iris.object.atomics.AtomicSliverMap	Data: 1969
MemberClass: com.volmit.iris.object.atomics.AtomicWorldData	Data: 1968
MemberClass: com.volmit.iris.object.atomics.MasterLock	Data: 1967
MemberClass: com.volmit.iris.tetris.TetrisGenerator	Data: 1828
MemberClass: com.volmit.iris.tetris.TetrisObject	Data: 1827 Nl
MemberClass: com.volmit.iris.util.Average	Data: 1948
MemberClass: com.volmit.iris.util.Axis	Data: 1941
MemberClass: com.volmit.iris.util.BasePerlinNoiseGenerator	Data: 1929 A
MemberClass: com.volmit.iris.util.BiomeDominance	Data: 1882
MemberClass: com.volmit.iris.util.BiomeMap	Data: 1807
MemberClass: com.volmit.iris.util.BiomeRarityCellGenerator	Data: 1942
MemberClass: com.volmit.iris.util.BiomeResult	Data: 1924
MemberClass: com.volmit.iris.util.BlockDataTools	Data: 1941
MemberClass: com.volmit.iris.util.BlockPosition	Data: 1885
MemberClass: com.volmit.iris.util.Board	Data: 1840
MemberClass: com.volmit.iris.util.Board$1	Data: 1973
MemberClass: com.volmit.iris.util.BoardEntry	Data: 1899
MemberClass: com.volmit.iris.util.BoardManager	Data: 1883
MemberClass: com.volmit.iris.util.BoardProvider	Data: 1877
MemberClass: com.volmit.iris.util.BoardSettings	Data: 1841
MemberClass: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder	Data: 1974
MemberClass: com.volmit.iris.util.BoardUpdateTask	Data: 1845
MemberClass: com.volmit.iris.util.BorderCheck	Data: 1879
MemberClass: com.volmit.iris.util.Borders	Data: 1933
MemberClass: com.volmit.iris.util.ByteArrayTag	Data: 1951
MemberClass: com.volmit.iris.util.ByteTag	Data: 1946
MemberClass: com.volmit.iris.util.CDou	Data: 1899
MemberClass: com.volmit.iris.util.CNG	Data: 1950
MemberClass: com.volmit.iris.util.Callback	Data: 1805
MemberClass: com.volmit.iris.util.CallbackCV	Data: 1939
MemberClass: com.volmit.iris.util.CaveResult	Data: 1928
MemberClass: com.volmit.iris.util.CellGenerator	Data: 1917
MemberClass: com.volmit.iris.util.ChronoLatch	Data: 1900
MemberClass: com.volmit.iris.util.ChunkPosition	Data: 1818
MemberClass: com.volmit.iris.util.Chunker	Data: 1819
MemberClass: com.volmit.iris.util.CompoundTag	Data: 1886
MemberClass: com.volmit.iris.util.Consumer2	Data: 1821
MemberClass: com.volmit.iris.util.Consumer3	Data: 1938
MemberClass: com.volmit.iris.util.Contained	Data: 1909
MemberClass: com.volmit.iris.util.Cuboid	Data: 1836
MemberClass: com.volmit.iris.util.Cuboid$1	Data: 1970
MemberClass: com.volmit.iris.util.Cuboid$CuboidDirection	Data: 1971
MemberClass: com.volmit.iris.util.Cuboid$CuboidIterator	Data: 1969
MemberClass: com.volmit.iris.util.CuboidException	Data: 1878
MemberClass: com.volmit.iris.util.DOP	Data: 1837
MemberClass: com.volmit.iris.util.Desc	Data: 1838
MemberClass: com.volmit.iris.util.Dimension	Data: 1846
MemberClass: com.volmit.iris.util.DimensionFace	Data: 1901
MemberClass: com.volmit.iris.util.Direction	Data: 1927
MemberClass: com.volmit.iris.util.Direction$1	Data: 2070
MemberClass: com.volmit.iris.util.Direction$10	Data: 2061
MemberClass: com.volmit.iris.util.Direction$11	Data: 2060
MemberClass: com.volmit.iris.util.Direction$2	Data: 2064
MemberClass: com.volmit.iris.util.Direction$3	Data: 2065
MemberClass: com.volmit.iris.util.Direction$4	Data: 2062
MemberClass: com.volmit.iris.util.Direction$5	Data: 2063
MemberClass: com.volmit.iris.util.Direction$6	Data: 2068
MemberClass: com.volmit.iris.util.Direction$7	Data: 2069
MemberClass: com.volmit.iris.util.Direction$8	Data: 2066
MemberClass: com.volmit.iris.util.Direction$9	Data: 2067
MemberClass: com.volmit.iris.util.DontObfuscate	Data: 1945
MemberClass: com.volmit.iris.util.DoubleArrayUtils	Data: 1801
MemberClass: com.volmit.iris.util.DoubleTag	Data: 1884
MemberClass: com.volmit.iris.util.EndTag	Data: 1914
MemberClass: com.volmit.iris.util.FastNoise	Data: 1811
MemberClass: com.volmit.iris.util.FastNoise$1	Data: 1950
MemberClass: com.volmit.iris.util.FastNoise$CellularDistanceFunction	Data: 1944
MemberClass: com.volmit.iris.util.FastNoise$CellularReturnType	Data: 1945
MemberClass: com.volmit.iris.util.FastNoise$Float2	Data: 1947
MemberClass: com.volmit.iris.util.FastNoise$Float3	Data: 1949
MemberClass: com.volmit.iris.util.FastNoise$FractalType	Data: 1951
MemberClass: com.volmit.iris.util.FastNoise$Interp	Data: 1948
MemberClass: com.volmit.iris.util.FastNoise$NoiseType	Data: 1946
MemberClass: com.volmit.iris.util.FastParticle	Data: 1852
MemberClass: com.volmit.iris.util.FastReflection	Data: 1897
MemberClass: com.volmit.iris.util.FileWatcher	Data: 1851
MemberClass: com.volmit.iris.util.FloatTag	Data: 1918
MemberClass: com.volmit.iris.util.Form	Data: 1842
MemberClass: com.volmit.iris.util.Function2	Data: 1830
MemberClass: com.volmit.iris.util.Function3	Data: 1913
MemberClass: com.volmit.iris.util.Function4	Data: 1932
MemberClass: com.volmit.iris.util.GBiset	Data: 1897
MemberClass: com.volmit.iris.util.GListAdapter	Data: 1849
MemberClass: com.volmit.iris.util.GenLayer	Data: 1806
MemberClass: com.volmit.iris.util.GroupedExecutor	Data: 1896
MemberClass: com.volmit.iris.util.GroupedExecutor$1	Data: 2029
MemberClass: com.volmit.iris.util.HTTP	Data: 1894
MemberClass: com.volmit.iris.util.HTTPTokener	Data: 1934
MemberClass: com.volmit.iris.util.HeightMap	Data: 1809
MemberClass: com.volmit.iris.util.ING	Data: 1935
MemberClass: com.volmit.iris.util.IO	Data: 1802
MemberClass: com.volmit.iris.util.IObjectPlacer	Data: 1820
MemberClass: com.volmit.iris.util.IPostBlockAccess	Data: 1804
MemberClass: com.volmit.iris.util.IntArrayTag	Data: 1919
MemberClass: com.volmit.iris.util.IntTag	Data: 1929
MemberClass: com.volmit.iris.util.InterpolationType	Data: 1831
MemberClass: com.volmit.iris.util.InvertedBiomeGrid	Data: 1940
MemberClass: com.volmit.iris.util.IrisInterpolation	Data: 1844 i
MemberClass: com.volmit.iris.util.IrisPostBlockFilter	Data: 1916
MemberClass: com.volmit.iris.util.J	Data: 1853
MemberClass: com.volmit.iris.util.J$1	Data: 1986
MemberClass: com.volmit.iris.util.JSONArray	Data: 1880
MemberClass: com.volmit.iris.util.JSONException	Data: 1910
MemberClass: com.volmit.iris.util.JSONML	Data: 1907
MemberClass: com.volmit.iris.util.JSONObject	Data: 1937
MemberClass: com.volmit.iris.util.JSONObject$1	Data: 2071
MemberClass: com.volmit.iris.util.JSONObject$Null	Data: 2070
MemberClass: com.volmit.iris.util.JSONString	Data: 1926
MemberClass: com.volmit.iris.util.JSONStringer	Data: 1912
MemberClass: com.volmit.iris.util.JSONTokener	Data: 1911
MemberClass: com.volmit.iris.util.JSONWriter	Data: 1898
MemberClass: com.volmit.iris.util.JarScanner	Data: 1912
MemberClass: com.volmit.iris.util.KList	Data: 1848
MemberClass: com.volmit.iris.util.KMap	Data: 1911
MemberClass: com.volmit.iris.util.KMap$1	Data: 2044
MemberClass: com.volmit.iris.util.KMap$2	Data: 2047
MemberClass: com.volmit.iris.util.KMap$3	Data: 2045
MemberClass: com.volmit.iris.util.KMap$4	Data: 2046
MemberClass: com.volmit.iris.util.KSet	Data: 1800
MemberClass: com.volmit.iris.util.KeyPair	Data: 1829
MemberClass: com.volmit.iris.util.ListTag	Data: 1943
MemberClass: com.volmit.iris.util.LongTag	Data: 1930
MemberClass: com.volmit.iris.util.Looper	Data: 1832
MemberClass: com.volmit.iris.util.M	Data: 1906
MemberClass: com.volmit.iris.util.NBTConstants	Data: 1815
MemberClass: com.volmit.iris.util.NBTInputStream	Data: 1799
MemberClass: com.volmit.iris.util.NBTOutputStream	Data: 1803
MemberClass: com.volmit.iris.util.NBTUtils	Data: 1843
MemberClass: com.volmit.iris.util.NastyFunction	Data: 1797
MemberClass: com.volmit.iris.util.NastyFuture	Data: 1822
MemberClass: com.volmit.iris.util.NastyRunnable	Data: 1798
MemberClass: com.volmit.iris.util.NoiseGenerator	Data: 1934
MemberClass: com.volmit.iris.util.NoiseInjector	Data: 1817
MemberClass: com.volmit.iris.util.NoiseProvider	Data: 1816
MemberClass: com.volmit.iris.util.O	Data: 1847
MemberClass: com.volmit.iris.util.ObjectConverter	Data: 1902
MemberClass: com.volmit.iris.util.ObjectResourceLoader	Data: 1813
MemberClass: com.volmit.iris.util.Observable	Data: 1854
MemberClass: com.volmit.iris.util.Observer	Data: 1808
MemberClass: com.volmit.iris.util.ParticleSender	Data: 1810
MemberClass: com.volmit.iris.util.ParticleSender$ParticleSender1_13	Data: 1944
MemberClass: com.volmit.iris.util.ParticleSender$ParticleSenderImpl	Data: 1943
MemberClass: com.volmit.iris.util.ParticleSenderLegacy	Data: 1814
MemberClass: com.volmit.iris.util.ParticleType	Data: 1835
MemberClass: com.volmit.iris.util.ParticleType$1	Data: 1968
MemberClass: com.volmit.iris.util.PerlinNoise	Data: 1917
MemberClass: com.volmit.iris.util.PhasicBiomeStorage	Data: 1895
MemberClass: com.volmit.iris.util.PolygonGenerator	Data: 1903
MemberClass: com.volmit.iris.util.PolygonGenerator$EnumPolygonGenerator	Data: 2036
MemberClass: com.volmit.iris.util.PrecisionStopwatch	Data: 1906
MemberClass: com.volmit.iris.util.Queue	Data: 1913
MemberClass: com.volmit.iris.util.QueueExecutor	Data: 1833
MemberClass: com.volmit.iris.util.RNG	Data: 1915
MemberClass: com.volmit.iris.util.ResourceLoader	Data: 1812
MemberClass: com.volmit.iris.util.RollingSequence	Data: 1905
MemberClass: com.volmit.iris.util.SNG	Data: 1949
MemberClass: com.volmit.iris.util.SNG$Grad	Data: 2082
MemberClass: com.volmit.iris.util.ScoreDirection	Data: 1949
MemberClass: com.volmit.iris.util.ShortTag	Data: 1904
MemberClass: com.volmit.iris.util.Shrinkwrap	Data: 1944
MemberClass: com.volmit.iris.util.ShurikenQueue	Data: 1850
MemberClass: com.volmit.iris.util.StringTag	Data: 1947
MemberClass: com.volmit.iris.util.Switch	Data: 1931
MemberClass: com.volmit.iris.util.Tag	Data: 1881
MemberClass: com.volmit.iris.util.TaskExecutor	Data: 1916
MemberClass: com.volmit.iris.util.TaskExecutor$1	Data: 2053
MemberClass: com.volmit.iris.util.TaskExecutor$AssignedTask	Data: 2051
MemberClass: com.volmit.iris.util.TaskExecutor$TaskGroup	Data: 2050
MemberClass: com.volmit.iris.util.TaskExecutor$TaskResult	Data: 2052
MemberClass: com.volmit.iris.util.TaskExecutor$TaskState	Data: 2049
MemberClass: com.volmit.iris.util.ThreadMonitor	Data: 1936
MemberClass: com.volmit.iris.util.VectorMath	Data: 1839
MemberClass: com.volmit.iris.util.VectorMath$1	Data: 1973
MemberClass: com.volmit.iris.util.VectorMath$2	Data: 1972
MemberClass: com.volmit.iris.util.WeightMap	Data: 1908
MemberClass: com.volmit.iris.util.XML	Data: 1834
MemberClass: com.volmit.iris.util.XMLTokener	Data: 1928
MemberClass: com.volmit.iris.wand.WandController	Data: 1829 J
MemberClass: javax.vecmath.AxisAngle4d	Data: 408
MemberClass: javax.vecmath.AxisAngle4f	Data: 422
MemberClass: javax.vecmath.Color3b	Data: 425
MemberClass: javax.vecmath.Color3f	Data: 378
MemberClass: javax.vecmath.Color4b	Data: 376
MemberClass: javax.vecmath.Color4f	Data: 427
MemberClass: javax.vecmath.GMatrix	Data: 421
MemberClass: javax.vecmath.GVector	Data: 411
MemberClass: javax.vecmath.Matrix3d	Data: 393
MemberClass: javax.vecmath.Matrix3f	Data: 420
MemberClass: javax.vecmath.Matrix4d	Data: 419 Nk
MemberClass: javax.vecmath.Matrix4f	Data: 394
MemberClass: javax.vecmath.MismatchedSizeException	Data: 423
MemberClass: javax.vecmath.Point2d	Data: 413
MemberClass: javax.vecmath.Point2f	Data: 390
MemberClass: javax.vecmath.Point2i	Data: 407
MemberClass: javax.vecmath.Point3d	Data: 386
MemberClass: javax.vecmath.Point3f	Data: 379
MemberClass: javax.vecmath.Point3i	Data: 384
MemberClass: javax.vecmath.Point4d	Data: 416
MemberClass: javax.vecmath.Point4f	Data: 428
MemberClass: javax.vecmath.Point4i	Data: 410
MemberClass: javax.vecmath.Quat4d	Data: 417
MemberClass: javax.vecmath.Quat4f	Data: 429
MemberClass: javax.vecmath.SingularMatrixException	Data: 382
MemberClass: javax.vecmath.TexCoord2f	Data: 391
MemberClass: javax.vecmath.TexCoord3f	Data: 380
MemberClass: javax.vecmath.TexCoord4f	Data: 430
MemberClass: javax.vecmath.Tuple2d	Data: 412
MemberClass: javax.vecmath.Tuple2f	Data: 389
MemberClass: javax.vecmath.Tuple2i	Data: 406
MemberClass: javax.vecmath.Tuple3b	Data: 424
MemberClass: javax.vecmath.Tuple3d	Data: 385
MemberClass: javax.vecmath.Tuple3f	Data: 377
MemberClass: javax.vecmath.Tuple3i	Data: 383
MemberClass: javax.vecmath.Tuple4b	Data: 375
MemberClass: javax.vecmath.Tuple4d	Data: 415
MemberClass: javax.vecmath.Tuple4f	Data: 426
MemberClass: javax.vecmath.Tuple4i	Data: 409
MemberClass: javax.vecmath.VecMathI18N	Data: 374
MemberClass: javax.vecmath.VecMathUtil	Data: 388
MemberClass: javax.vecmath.Vector2d	Data: 414
MemberClass: javax.vecmath.Vector2f	Data: 392
MemberClass: javax.vecmath.Vector3d	Data: 387
MemberClass: javax.vecmath.Vector3f	Data: 381
MemberClass: javax.vecmath.Vector4d	Data: 418
MemberClass: javax.vecmath.Vector4f	Data: 431
MemberClass: org.slf4j.LoggerFactory	Data: 415
MemberClass: org.slf4j.MDC	Data: 410 Vz
MemberClass: org.slf4j.MarkerFactory	Data: 413
MemberClass: org.slf4j.helpers.BasicMDCAdapter	Data: 555 Z
MemberClass: org.slf4j.helpers.BasicMarker	Data: 563
MemberClass: org.slf4j.helpers.BasicMarkerFactory	Data: 553
MemberClass: org.slf4j.helpers.FormattingTuple	Data: 556
MemberClass: org.slf4j.helpers.MarkerIgnoringBase	Data: 561
MemberClass: org.slf4j.helpers.MessageFormatter	Data: 559
MemberClass: org.slf4j.helpers.NOPLogger	Data: 562
MemberClass: org.slf4j.helpers.NOPLoggerFactory	Data: 564
MemberClass: org.slf4j.helpers.NOPMDCAdapter	Data: 557
MemberClass: org.slf4j.helpers.NamedLoggerBase	Data: 560
MemberClass: org.slf4j.helpers.SubstituteLoggerFactory	Data: 554 o
MemberClass: org.slf4j.helpers.Util	Data: 558
MemberClass: org.zeroturnaround.zip.ByteSource	Data: 561
MemberClass: org.zeroturnaround.zip.CloseShieldInputStream	Data: 569
MemberClass: org.zeroturnaround.zip.FileSource	Data: 566
MemberClass: org.zeroturnaround.zip.IdentityNameMapper	Data: 562
MemberClass: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy	Data: 579
MemberClass: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy	Data: 580 S
MemberClass: org.zeroturnaround.zip.MaliciousZipException	Data: 572
MemberClass: org.zeroturnaround.zip.ZTFilePermissions	Data: 567
MemberClass: org.zeroturnaround.zip.ZTFilePermissionsUtil	Data: 576 g
MemberClass: org.zeroturnaround.zip.ZTFilePermissionsUtil$1	Data: 709
MemberClass: org.zeroturnaround.zip.ZTFileUtil	Data: 574
MemberClass: org.zeroturnaround.zip.ZTFileUtil$1	Data: 707
MemberClass: org.zeroturnaround.zip.ZTZipReflectionUtil	Data: 564
MemberClass: org.zeroturnaround.zip.ZipBreakException	Data: 524
MemberClass: org.zeroturnaround.zip.ZipEntryOrInfoAdapter	Data: 565
MemberClass: org.zeroturnaround.zip.ZipEntryUtil	Data: 559
MemberClass: org.zeroturnaround.zip.ZipException	Data: 571
MemberClass: org.zeroturnaround.zip.ZipExceptionUtil	Data: 563
MemberClass: org.zeroturnaround.zip.ZipFileUtil	Data: 560
MemberClass: org.zeroturnaround.zip.ZipUtil	Data: 577
MemberClass: org.zeroturnaround.zip.ZipUtil$1	Data: 734
MemberClass: org.zeroturnaround.zip.ZipUtil$10	Data: 720
MemberClass: org.zeroturnaround.zip.ZipUtil$11	Data: 721
MemberClass: org.zeroturnaround.zip.ZipUtil$12	Data: 722
MemberClass: org.zeroturnaround.zip.ZipUtil$13	Data: 723
MemberClass: org.zeroturnaround.zip.ZipUtil$14	Data: 717
MemberClass: org.zeroturnaround.zip.ZipUtil$15	Data: 718
MemberClass: org.zeroturnaround.zip.ZipUtil$16	Data: 719
MemberClass: org.zeroturnaround.zip.ZipUtil$17	Data: 712
MemberClass: org.zeroturnaround.zip.ZipUtil$18	Data: 724
MemberClass: org.zeroturnaround.zip.ZipUtil$19	Data: 725
MemberClass: org.zeroturnaround.zip.ZipUtil$2	Data: 733
MemberClass: org.zeroturnaround.zip.ZipUtil$20	Data: 726
MemberClass: org.zeroturnaround.zip.ZipUtil$21	Data: 713
MemberClass: org.zeroturnaround.zip.ZipUtil$22	Data: 714
MemberClass: org.zeroturnaround.zip.ZipUtil$23	Data: 715
MemberClass: org.zeroturnaround.zip.ZipUtil$3	Data: 678
MemberClass: org.zeroturnaround.zip.ZipUtil$4	Data: 735
MemberClass: org.zeroturnaround.zip.ZipUtil$5	Data: 729
MemberClass: org.zeroturnaround.zip.ZipUtil$6	Data: 728
MemberClass: org.zeroturnaround.zip.ZipUtil$7	Data: 731
MemberClass: org.zeroturnaround.zip.ZipUtil$8	Data: 730
MemberClass: org.zeroturnaround.zip.ZipUtil$9	Data: 727
MemberClass: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker	Data: 684
MemberClass: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker	Data: 681
MemberClass: org.zeroturnaround.zip.ZipUtil$FileUnpacker	Data: 679
MemberClass: org.zeroturnaround.zip.ZipUtil$InPlaceAction	Data: 683
MemberClass: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback	Data: 711
MemberClass: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback	Data: 680
MemberClass: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback	Data: 716
MemberClass: org.zeroturnaround.zip.ZipUtil$Unpacker	Data: 682
MemberClass: org.zeroturnaround.zip.ZipUtil$Unwrapper	Data: 710
MemberClass: org.zeroturnaround.zip.Zips	Data: 575
MemberClass: org.zeroturnaround.zip.Zips$1	Data: 710
MemberClass: org.zeroturnaround.zip.Zips$CopyingCallback	Data: 708
MemberClass: org.zeroturnaround.zip.Zips$UnpackingCallback	Data: 709
MemberClass: org.zeroturnaround.zip.Zips$UnpackingCallback$1	Data: 842
MemberClass: org.zeroturnaround.zip.commons.FileExistsException	Data: 703
MemberClass: org.zeroturnaround.zip.commons.FileUtils	Data: 705 d
MemberClass: org.zeroturnaround.zip.commons.FileUtilsV2_2	Data: 704 E
MemberClass: org.zeroturnaround.zip.commons.FilenameUtils	Data: 706
MemberClass: org.zeroturnaround.zip.commons.IOUtils	Data: 707
MemberClass: org.zeroturnaround.zip.commons.StringBuilderWriter	Data: 708
MemberClass: org.zeroturnaround.zip.extra.AsiExtraField	Data: 703 Yj
MemberClass: org.zeroturnaround.zip.extra.ExtraFieldUtils	Data: 705
MemberClass: org.zeroturnaround.zip.extra.UnrecognizedExtraField	Data: 704
MemberClass: org.zeroturnaround.zip.extra.ZipConstants	Data: 706
MemberClass: org.zeroturnaround.zip.extra.ZipLong	Data: 709
MemberClass: org.zeroturnaround.zip.extra.ZipShort	Data: 708
MemberClass: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy	Data: 703 U
MemberClass: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy	Data: 704 d
MemberClass: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory	Data: 705
MemberClass: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer	Data: 712
MemberClass: org.zeroturnaround.zip.transform.FileZipEntryTransformer	Data: 706 O
MemberClass: org.zeroturnaround.zip.transform.StreamZipEntryTransformer	Data: 707
MemberClass: org.zeroturnaround.zip.transform.StringZipEntryTransformer	Data: 710 b
MemberClass: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer	Data: 709
MemberClass: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry	Data: 708
