// ["ChangeLog.txt" version=13.0.0 encoding="UTF-8" 2020.08.25 15:54:38]
// DO NOT EDIT THIS FILE. You need it to interpret exception stack traces.


Package: com	NameNotChanged
Package: com.volmit	NameNotChanged
Package: com.volmit.iris	NameNotChanged
Package: com.volmit.iris.command	NameNotChanged
Package: com.volmit.iris.gen	NameNotChanged
Package: com.volmit.iris.gen.atomics	NameNotChanged
Package: com.volmit.iris.gen.layer	NameNotChanged
Package: com.volmit.iris.gen.parallax	NameNotChanged
Package: com.volmit.iris.gen.post	NameNotChanged
Package: com.volmit.iris.gui	NameNotChanged
Package: com.volmit.iris.noise	NameNotChanged
Package: com.volmit.iris.object	NameNotChanged
Package: com.volmit.iris.util	NameNotChanged
Package: com.volmit.iris.util.inventory	NameNotChanged
Package: com.volmit.iris.util.vec	NameNotChanged
Package: org	NameNotChanged
Package: org.slf4j	NameNotChanged
Package: org.slf4j.helpers	NameNotChanged
Package: org.slf4j.spi	NameNotChanged
Package: org.zeroturnaround	NameNotChanged
Package: org.zeroturnaround.zip	NameNotChanged
Package: org.zeroturnaround.zip.commons	NameNotChanged
Package: org.zeroturnaround.zip.extra	NameNotChanged
Package: org.zeroturnaround.zip.timestamps	NameNotChanged
Package: org.zeroturnaround.zip.transform	NameNotChanged

Class: public com.volmit.iris.GeneratedChunk	NameNotChanged
	Source: "GeneratedChunk.java"
	FieldsOf: com.volmit.iris.GeneratedChunk
		private org.bukkit.generator.ChunkGenerator$ChunkData data	=>	c
		private org.bukkit.generator.ChunkGenerator$BiomeGrid grid	=>	a
		private com.volmit.iris.util.ChunkPosition pos	=>	b
	MethodsOf: com.volmit.iris.GeneratedChunk
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$ChunkData getData() 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$BiomeGrid getGrid() 	SignatureNotChanged
		public com.volmit.iris.util.ChunkPosition getPos() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setData(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void setGrid(org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void setPos(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.Iris	NameNotChanged
	Source: "Iris.java"
	FieldsOf: com.volmit.iris.Iris
		private static java.lang.String[] b	=>	j
		private com.volmit.iris.util.ChronoLatch cl	=>	h
		private com.volmit.iris.util.ChronoLatch clf	=>	i
		public com.volmit.iris.command.CommandIris commandIris	NameNotChanged
		public static com.volmit.iris.util.KList executors	NameNotChanged
		public static com.volmit.iris.IrisDataManager globaldata	NameNotChanged
		public com.volmit.iris.util.RollingSequence hits	NameNotChanged
		public static com.volmit.iris.IrisHotloadManager hotloader	NameNotChanged
		public static com.volmit.iris.Iris instance	NameNotChanged
		private com.volmit.iris.util.KList lines	=>	k
		private static com.volmit.iris.util.IrisLock lock	=>	l
		private com.volmit.iris.util.BoardManager manager	=>	n
		private java.lang.String mem	=>	m
		public static com.volmit.iris.command.PermissionIris perm	NameNotChanged
		public static com.volmit.iris.util.KList postProcessors	NameNotChanged
		public static com.volmit.iris.ProjectManager proj	NameNotChanged
		public static com.volmit.iris.StructureManager struct	NameNotChanged
		public com.volmit.iris.util.RollingSequence tp	NameNotChanged
		public static com.volmit.iris.WandManager wand	NameNotChanged
	MethodsOf: com.volmit.iris.Iris
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		public static java.lang.String[] b()	=>	o()
		public static void error(java.lang.String) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator getDefaultWorldGenerator(java.lang.String, java.lang.String) 	SignatureNotChanged
		public java.util.List getLines(org.bukkit.entity.Player) 	SignatureNotChanged
		public java.lang.String getTag(java.lang.String) 	SignatureNotChanged
		public java.lang.String getTitle(org.bukkit.entity.Player) 	SignatureNotChanged
		public void hit(long) 	SignatureNotChanged
		public void imsg(org.bukkit.command.CommandSender, java.lang.String) 	SignatureNotChanged
		public static void info(java.lang.String) 	SignatureNotChanged
		private static com.volmit.iris.util.KList loadPostProcessors()	=>	p()
		public static void msg(java.lang.String) 	SignatureNotChanged
		public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]) 	SignatureNotChanged
		public void onDisable() 	SignatureNotChanged
		public void onEnable() 	SignatureNotChanged
		public void start() 	SignatureNotChanged
		public void stop() 	SignatureNotChanged
		public static void success(java.lang.String) 	SignatureNotChanged
		public static void verbose(java.lang.String) 	SignatureNotChanged
		public static void warn(java.lang.String) 	SignatureNotChanged

Class: public abstract com.volmit.iris.IrisContext	NameNotChanged
	Source: "IrisContext.java"
	FieldsOf: com.volmit.iris.IrisContext
		public static final com.volmit.iris.util.KMap contexts	NameNotChanged
	MethodsOf: com.volmit.iris.IrisContext
		static void <clinit>() 	SignatureNotChanged
		public abstract com.volmit.iris.util.BiomeResult getBiome(int, int) 	SignatureNotChanged
		public abstract com.volmit.iris.object.IrisDimension getDimension() 	SignatureNotChanged
		public abstract int getHeight(int, int) 	SignatureNotChanged
		public abstract com.volmit.iris.IrisMetrics getMetrics() 	SignatureNotChanged
		public abstract com.volmit.iris.object.IrisRegion getRegion(int, int) 	SignatureNotChanged
		public abstract org.bukkit.World getWorld() 	SignatureNotChanged
		public static com.volmit.iris.IrisContext of(org.bukkit.World) 	SignatureNotChanged
		public abstract void onHotloaded() 	SignatureNotChanged
		public static void pushContext(com.volmit.iris.IrisContext) 	SignatureNotChanged

Class: public com.volmit.iris.IrisDataManager	NameNotChanged
	Source: "IrisDataManager.java"
	FieldsOf: com.volmit.iris.IrisDataManager
		private com.volmit.iris.util.ResourceLoader biomeLoader	=>	a
		private java.io.File dataFolder	=>	b
		private com.volmit.iris.util.ResourceLoader dimensionLoader	=>	f
		private com.volmit.iris.util.ResourceLoader generatorLoader	=>	g
		private com.volmit.iris.util.ResourceLoader lootLoader	=>	h
		private com.volmit.iris.util.ObjectResourceLoader objectLoader	=>	d
		private java.io.File packs	=>	i
		private boolean prod	=>	c
		private com.volmit.iris.util.ResourceLoader regionLoader	=>	e
		private com.volmit.iris.util.ResourceLoader structureLoader	=>	j
	MethodsOf: com.volmit.iris.IrisDataManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void clearLists() 	SignatureNotChanged
		public void dump() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getBiomeLoader() 	SignatureNotChanged
		public java.io.File getDataFolder() 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getDimensionLoader() 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getGeneratorLoader() 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getLootLoader() 	SignatureNotChanged
		public com.volmit.iris.util.ObjectResourceLoader getObjectLoader() 	SignatureNotChanged
		public java.io.File getPacks() 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getRegionLoader() 	SignatureNotChanged
		public com.volmit.iris.util.ResourceLoader getStructureLoader() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void hotloaded() 	SignatureNotChanged
		public boolean isProd() 	SignatureNotChanged
		public void preferFolder(java.lang.String) 	SignatureNotChanged
		public void setBiomeLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public void setDataFolder(java.io.File) 	SignatureNotChanged
		public void setDimensionLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public void setGeneratorLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public void setLootLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public void setObjectLoader(com.volmit.iris.util.ObjectResourceLoader) 	SignatureNotChanged
		public void setPacks(java.io.File) 	SignatureNotChanged
		public void setProd(boolean) 	SignatureNotChanged
		public void setRegionLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public void setStructureLoader(com.volmit.iris.util.ResourceLoader) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		private void writeExamples()	=>	a()

Class: public com.volmit.iris.IrisHotloadManager	NameNotChanged
	Source: "IrisHotloadManager.java"
	FieldsOf: com.volmit.iris.IrisHotloadManager
		private com.volmit.iris.util.ChronoLatch latch	=>	a
		private com.volmit.iris.util.FolderWatcher w	=>	b
	MethodsOf: com.volmit.iris.IrisHotloadManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public void check(com.volmit.iris.IrisContext) 	SignatureNotChanged
		private synthetic void lambda$check$0(com.volmit.iris.IrisContext) 	SignatureNotChanged
		public void track(java.io.File) 	SignatureNotChanged

Class: public com.volmit.iris.IrisMetrics	NameNotChanged
	Source: "IrisMetrics.java"
	FieldsOf: com.volmit.iris.IrisMetrics
		public int generators	NameNotChanged
		public int noiseHits	NameNotChanged
		private final com.volmit.iris.util.RollingSequence parallax	=>	a
		private final com.volmit.iris.util.RollingSequence perSecond	=>	e
		private final com.volmit.iris.util.RollingSequence post	=>	b
		private final com.volmit.iris.util.RollingSequence terrain	=>	f
		private final com.volmit.iris.util.RollingSequence total	=>	d
		private final com.volmit.iris.util.RollingSequence update	=>	c
	MethodsOf: com.volmit.iris.IrisMetrics
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getGenerators() 	SignatureNotChanged
		public int getNoiseHits() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getParallax() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getPerSecond() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getPost() 	SignatureNotChanged
		public double getSpeed() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getTerrain() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getTotal() 	SignatureNotChanged
		public com.volmit.iris.util.RollingSequence getUpdate() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setGenerators(int) 	SignatureNotChanged
		public void setNoiseHits(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.IrisSettings	NameNotChanged
	Source: "IrisSettings.java"
	FieldsOf: com.volmit.iris.IrisSettings
		public boolean hotloading	NameNotChanged
		public int maxBiomeChildDepth	NameNotChanged
		public boolean parallaxCompression	NameNotChanged
		public int parallaxCompressionLevel	NameNotChanged
		public static transient com.volmit.iris.IrisSettings settings	NameNotChanged
		public boolean sharedCaching	NameNotChanged
		public int threads	NameNotChanged
	MethodsOf: com.volmit.iris.IrisSettings
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.volmit.iris.IrisSettings get() 	SignatureNotChanged

Class: public com.volmit.iris.ProjectManager	NameNotChanged
	Source: "ProjectManager.java"
	FieldsOf: com.volmit.iris.ProjectManager
		private com.volmit.iris.gen.IrisChunkGenerator currentProject	=>	c
		private java.util.concurrent.locks.ReentrantLock lock	=>	a
		private com.volmit.iris.util.TaskExecutor tx	=>	b
	MethodsOf: com.volmit.iris.ProjectManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.KList analyze(java.io.File) 	SignatureNotChanged
		public com.volmit.iris.util.KList analyze(java.lang.Object, java.io.File) 	SignatureNotChanged
		public com.volmit.iris.util.KList analyzeFolder(java.io.File, java.lang.String, java.lang.Object) 	SignatureNotChanged
		private com.volmit.iris.util.JSONArray buildSchemas(com.volmit.iris.IrisDataManager)	=>	c(com.volmit.iris.IrisDataManager)
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public java.io.File compilePackage(com.volmit.iris.util.MortarSender, java.lang.String, boolean) 	SignatureNotChanged
		public void create(com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		private void ex(com.volmit.iris.util.JSONArray, java.lang.Class, com.volmit.iris.IrisDataManager, java.lang.String)	=>	a(com.volmit.iris.util.JSONArray, java.lang.Class, com.volmit.iris.IrisDataManager, java.lang.String)
		private java.lang.String[] getBiomeList(com.volmit.iris.IrisDataManager)	=>	h(com.volmit.iris.IrisDataManager)
		public com.volmit.iris.gen.IrisChunkGenerator getCurrentProject() 	SignatureNotChanged
		private java.lang.String[] getDimensionList(com.volmit.iris.IrisDataManager)	=>	d(com.volmit.iris.IrisDataManager)
		private java.lang.String[] getGeneratorList(com.volmit.iris.IrisDataManager)	=>	f(com.volmit.iris.IrisDataManager)
		public java.util.concurrent.locks.ReentrantLock getLock() 	SignatureNotChanged
		private java.lang.String[] getLootList(com.volmit.iris.IrisDataManager)	=>	e(com.volmit.iris.IrisDataManager)
		private java.lang.String[] getObjectList(com.volmit.iris.IrisDataManager)	=>	a(com.volmit.iris.IrisDataManager)
		private java.lang.String[] getRegionList(com.volmit.iris.IrisDataManager)	=>	b(com.volmit.iris.IrisDataManager)
		public com.volmit.iris.util.JSONObject getSchemaEntry(java.lang.Class, com.volmit.iris.IrisDataManager, java.lang.String[]) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject getSchemaFor(java.lang.Class, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject getSchemaFor(java.lang.Class, int, com.volmit.iris.util.KMap, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private java.lang.String[] getStructureList(com.volmit.iris.IrisDataManager)	=>	g(com.volmit.iris.IrisDataManager)
		public com.volmit.iris.util.TaskExecutor getTx() 	SignatureNotChanged
		public java.io.File getWorkspaceFile(java.lang.String) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isProjectOpen() 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$34(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$35(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$36(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$37(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$38(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private synthetic void lambda$buildSchemas$39(com.volmit.iris.util.JSONArray, com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		private static synthetic void lambda$close$5(java.io.File) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$10(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$12(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$14(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$16(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$18(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$20(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$23(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$26(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$29(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$32(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisBiomeMutation) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$6(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$7(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$compilePackage$8(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		private synthetic void lambda$null$1(java.io.File, com.volmit.iris.util.MortarSender) 	SignatureNotChanged
		private static synthetic void lambda$null$11(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisStructurePlacement) 	SignatureNotChanged
		private static synthetic void lambda$null$13(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisStructurePlacement) 	SignatureNotChanged
		private static synthetic void lambda$null$15(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$17(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$19(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$21(com.volmit.iris.util.KSet, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$22(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		private static synthetic void lambda$null$24(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$25(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisObjectPlacement) 	SignatureNotChanged
		private static synthetic void lambda$null$27(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$28(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		private static synthetic void lambda$null$30(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$null$31(com.volmit.iris.util.KMap, java.io.File, java.lang.StringBuilder, com.volmit.iris.util.O, com.volmit.iris.util.ChronoLatch, com.volmit.iris.util.MortarSender, com.volmit.iris.object.IrisObjectPlacement) 	SignatureNotChanged
		private static synthetic void lambda$null$9(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisBiomeGeneratorLink) 	SignatureNotChanged
		private static synthetic void lambda$open$0() 	SignatureNotChanged
		private synthetic void lambda$open$2(com.volmit.iris.object.IrisDimension, com.volmit.iris.util.MortarSender) 	SignatureNotChanged
		private static synthetic void lambda$open$3(com.volmit.iris.util.O, com.volmit.iris.gen.IrisChunkGenerator, com.volmit.iris.util.MortarSender) 	SignatureNotChanged
		private static synthetic void lambda$open$4(com.volmit.iris.util.MortarSender, java.lang.Runnable) 	SignatureNotChanged
		private synthetic void lambda$updateWorkspace$33(java.io.File) 	SignatureNotChanged
		private com.volmit.iris.util.JSONObject newWorkspaceConfig()	=>	a()
		public void open(com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged
		public void open(com.volmit.iris.util.MortarSender, java.lang.String, java.lang.Runnable) 	SignatureNotChanged
		public void setCurrentProject(com.volmit.iris.gen.IrisChunkGenerator) 	SignatureNotChanged
		public void setLock(java.util.concurrent.locks.ReentrantLock) 	SignatureNotChanged
		public void setTx(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void updateWorkspace(java.io.File) 	SignatureNotChanged
		private void verify(com.volmit.iris.util.JSONObject, java.lang.Object, com.volmit.iris.util.KList, java.io.File)	=>	a(com.volmit.iris.util.JSONObject, java.lang.Object, com.volmit.iris.util.KList, java.io.File)
		public void writeDocs(java.io.File) 	SignatureNotChanged

Class: public com.volmit.iris.StructureManager	NameNotChanged
	Source: "StructureManager.java"
	FieldsOf: com.volmit.iris.StructureManager
		private com.volmit.iris.util.KList openEditors	=>	a
	MethodsOf: com.volmit.iris.StructureManager
		public void <init>() 	SignatureNotChanged
		public void closeall() 	SignatureNotChanged
		public com.volmit.iris.util.StructureTemplate get(org.bukkit.entity.Player) 	SignatureNotChanged
		public void open(com.volmit.iris.util.StructureTemplate) 	SignatureNotChanged
		public void remove(com.volmit.iris.util.StructureTemplate) 	SignatureNotChanged

Class: public com.volmit.iris.WandManager	NameNotChanged
	Source: "WandManager.java"
	FieldsOf: com.volmit.iris.WandManager
	MethodsOf: com.volmit.iris.WandManager
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static com.volmit.iris.object.IrisObject createSchematic(org.bukkit.inventory.ItemStack) 	SignatureNotChanged
		public static org.bukkit.inventory.ItemStack createWand() 	SignatureNotChanged
		public static org.bukkit.inventory.ItemStack createWand(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public void draw(com.volmit.iris.util.Cuboid, org.bukkit.entity.Player) 	SignatureNotChanged
		public void draw(org.bukkit.Location[], org.bukkit.entity.Player) 	SignatureNotChanged
		public static org.bukkit.Location[] getCuboid(org.bukkit.inventory.ItemStack) 	SignatureNotChanged
		public static boolean isWand(org.bukkit.entity.Player) 	SignatureNotChanged
		public static boolean isWand(org.bukkit.inventory.ItemStack) 	SignatureNotChanged
		private synthetic void lambda$new$0() 	SignatureNotChanged
		public static java.lang.String locationToString(org.bukkit.Location) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerInteractEvent) 	SignatureNotChanged
		public static void pasteSchematic(com.volmit.iris.object.IrisObject, org.bukkit.Location) 	SignatureNotChanged
		public static org.bukkit.Location stringToLocation(java.lang.String) 	SignatureNotChanged
		public void tick(org.bukkit.entity.Player) 	SignatureNotChanged
		public static org.bukkit.inventory.ItemStack update(boolean, org.bukkit.Location, org.bukkit.inventory.ItemStack) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIris	NameNotChanged
	Source: "CommandIris.java"
	FieldsOf: com.volmit.iris.command.CommandIris
		private com.volmit.iris.command.CommandIrisCreate create	=>	g
		private com.volmit.iris.command.CommandIrisObject object	=>	k
		private com.volmit.iris.command.CommandIrisStructure structure	=>	h
		private com.volmit.iris.command.CommandIrisStudio studio	=>	j
		private com.volmit.iris.command.CommandIrisWhat what	=>	l
		private com.volmit.iris.command.CommandIrisWorld world	=>	i
	MethodsOf: com.volmit.iris.command.CommandIris
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisCreate	NameNotChanged
	Source: "CommandIrisCreate.java"
	FieldsOf: com.volmit.iris.command.CommandIrisCreate
	MethodsOf: com.volmit.iris.command.CommandIrisCreate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged
		private static synthetic void lambda$handle$0(com.volmit.iris.util.O, com.volmit.iris.gen.IrisChunkGenerator, com.volmit.iris.util.MortarSender) 	SignatureNotChanged
		private static synthetic void lambda$handle$1(com.volmit.iris.util.O) 	SignatureNotChanged
		private static synthetic void lambda$handle$3(com.volmit.iris.util.O, org.bukkit.World, com.volmit.iris.util.MortarSender, boolean, java.io.File) 	SignatureNotChanged
		private static synthetic void lambda$null$2(org.bukkit.World, com.volmit.iris.util.MortarSender, boolean, java.io.File) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisGoto	NameNotChanged
	Source: "CommandIrisGoto.java"
	FieldsOf: com.volmit.iris.command.CommandIrisGoto
	MethodsOf: com.volmit.iris.command.CommandIrisGoto
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisHotload	NameNotChanged
	Source: "CommandIrisHotload.java"
	FieldsOf: com.volmit.iris.command.CommandIrisHotload
	MethodsOf: com.volmit.iris.command.CommandIrisHotload
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisLoot	NameNotChanged
	Source: "CommandIrisLoot.java"
	FieldsOf: com.volmit.iris.command.CommandIrisLoot
	MethodsOf: com.volmit.iris.command.CommandIrisLoot
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged
		private static synthetic void lambda$handle$0(org.bukkit.entity.Player, com.volmit.iris.util.O, boolean, org.bukkit.inventory.Inventory, com.volmit.iris.util.KList) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisMap	NameNotChanged
	Source: "CommandIrisMap.java"
	FieldsOf: com.volmit.iris.command.CommandIrisMap
	MethodsOf: com.volmit.iris.command.CommandIrisMap
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisMetrics	NameNotChanged
	Source: "CommandIrisMetrics.java"
	FieldsOf: com.volmit.iris.command.CommandIrisMetrics
	MethodsOf: com.volmit.iris.command.CommandIrisMetrics
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObject	NameNotChanged
	Source: "CommandIrisObject.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObject
		private com.volmit.iris.command.CommandIrisObjectContract contract	=>	m
		private com.volmit.iris.command.CommandIrisObjectExpand expand	=>	h
		private com.volmit.iris.command.CommandIrisObjectP1 p1	=>	p
		private com.volmit.iris.command.CommandIrisObjectP2 p2	=>	k
		private com.volmit.iris.command.CommandIrisObjectPaste paste	=>	g
		private com.volmit.iris.command.CommandIrisObjectSave save	=>	j
		private com.volmit.iris.command.CommandIrisObjectShift shift	=>	i
		private com.volmit.iris.command.CommandIrisObjectWand wand	=>	l
		private com.volmit.iris.command.CommandIrisObjectXAY xay	=>	o
		private com.volmit.iris.command.CommandIrisObjectXPY xpy	=>	n
	MethodsOf: com.volmit.iris.command.CommandIrisObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectContract	NameNotChanged
	Source: "CommandIrisObjectContract.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectContract
	MethodsOf: com.volmit.iris.command.CommandIrisObjectContract
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectExpand	NameNotChanged
	Source: "CommandIrisObjectExpand.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectExpand
	MethodsOf: com.volmit.iris.command.CommandIrisObjectExpand
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectP1	NameNotChanged
	Source: "CommandIrisObjectP1.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectP1
	MethodsOf: com.volmit.iris.command.CommandIrisObjectP1
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectP2	NameNotChanged
	Source: "CommandIrisObjectP2.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectP2
	MethodsOf: com.volmit.iris.command.CommandIrisObjectP2
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectPaste	NameNotChanged
	Source: "CommandIrisObjectPaste.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectPaste
	MethodsOf: com.volmit.iris.command.CommandIrisObjectPaste
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectSave	NameNotChanged
	Source: "CommandIrisObjectSave.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectSave
	MethodsOf: com.volmit.iris.command.CommandIrisObjectSave
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectShift	NameNotChanged
	Source: "CommandIrisObjectShift.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectShift
	MethodsOf: com.volmit.iris.command.CommandIrisObjectShift
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectWand	NameNotChanged
	Source: "CommandIrisObjectWand.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectWand
	MethodsOf: com.volmit.iris.command.CommandIrisObjectWand
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectXAY	NameNotChanged
	Source: "CommandIrisObjectXAY.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectXAY
	MethodsOf: com.volmit.iris.command.CommandIrisObjectXAY
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisObjectXPY	NameNotChanged
	Source: "CommandIrisObjectXPY.java"
	FieldsOf: com.volmit.iris.command.CommandIrisObjectXPY
	MethodsOf: com.volmit.iris.command.CommandIrisObjectXPY
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisPregen	NameNotChanged
	Source: "CommandIrisPregen.java"
	FieldsOf: com.volmit.iris.command.CommandIrisPregen
	MethodsOf: com.volmit.iris.command.CommandIrisPregen
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged
		private static synthetic void lambda$handle$0() 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisRetry	NameNotChanged
	Source: "CommandIrisRetry.java"
	FieldsOf: com.volmit.iris.command.CommandIrisRetry
	MethodsOf: com.volmit.iris.command.CommandIrisRetry
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructure	NameNotChanged
	Source: "CommandIrisStructure.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructure
		private com.volmit.iris.command.CommandIrisStructureClose close	=>	j
		private com.volmit.iris.command.CommandIrisStructureCreate create	=>	g
		private com.volmit.iris.command.CommandIrisStructureExpand expand	=>	h
		private com.volmit.iris.command.CommandIrisStructureMore more	=>	k
		private com.volmit.iris.command.CommandIrisStructureOpen open	=>	m
		private com.volmit.iris.command.CommandIrisStructureSave save	=>	i
		private com.volmit.iris.command.CommandIrisStructureVariants variants	=>	l
	MethodsOf: com.volmit.iris.command.CommandIrisStructure
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureClose	NameNotChanged
	Source: "CommandIrisStructureClose.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureClose
	MethodsOf: com.volmit.iris.command.CommandIrisStructureClose
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureCreate	NameNotChanged
	Source: "CommandIrisStructureCreate.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureCreate
	MethodsOf: com.volmit.iris.command.CommandIrisStructureCreate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureExpand	NameNotChanged
	Source: "CommandIrisStructureExpand.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureExpand
	MethodsOf: com.volmit.iris.command.CommandIrisStructureExpand
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureMore	NameNotChanged
	Source: "CommandIrisStructureMore.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureMore
	MethodsOf: com.volmit.iris.command.CommandIrisStructureMore
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureOpen	NameNotChanged
	Source: "CommandIrisStructureOpen.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureOpen
	MethodsOf: com.volmit.iris.command.CommandIrisStructureOpen
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureSave	NameNotChanged
	Source: "CommandIrisStructureSave.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureSave
	MethodsOf: com.volmit.iris.command.CommandIrisStructureSave
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStructureVariants	NameNotChanged
	Source: "CommandIrisStructureVariants.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStructureVariants
	MethodsOf: com.volmit.iris.command.CommandIrisStructureVariants
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudio	NameNotChanged
	Source: "CommandIrisStudio.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudio
		private com.volmit.iris.command.CommandIrisStudioClose close	=>	l
		private com.volmit.iris.command.CommandIrisStudioCreate create	=>	h
		private com.volmit.iris.command.CommandIrisStudioList list	=>	n
		private com.volmit.iris.command.CommandIrisMap map	=>	m
		private com.volmit.iris.command.CommandIrisStudioOpen open	=>	g
		private com.volmit.iris.command.CommandIrisStudioPackage pkg	=>	k
		private com.volmit.iris.command.CommandIrisStudioUpdate update	=>	i
		private com.volmit.iris.command.CommandIrisStudioVerify verify	=>	j
	MethodsOf: com.volmit.iris.command.CommandIrisStudio
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioClose	NameNotChanged
	Source: "CommandIrisStudioClose.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioClose
	MethodsOf: com.volmit.iris.command.CommandIrisStudioClose
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioCreate	NameNotChanged
	Source: "CommandIrisStudioCreate.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioCreate
	MethodsOf: com.volmit.iris.command.CommandIrisStudioCreate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioList	NameNotChanged
	Source: "CommandIrisStudioList.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioList
	MethodsOf: com.volmit.iris.command.CommandIrisStudioList
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioOpen	NameNotChanged
	Source: "CommandIrisStudioOpen.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioOpen
	MethodsOf: com.volmit.iris.command.CommandIrisStudioOpen
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioPackage	NameNotChanged
	Source: "CommandIrisStudioPackage.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioPackage
	MethodsOf: com.volmit.iris.command.CommandIrisStudioPackage
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged
		private static synthetic void lambda$handle$0(java.lang.String[], com.volmit.iris.util.MortarSender) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioUpdate	NameNotChanged
	Source: "CommandIrisStudioUpdate.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioUpdate
	MethodsOf: com.volmit.iris.command.CommandIrisStudioUpdate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisStudioVerify	NameNotChanged
	Source: "CommandIrisStudioVerify.java"
	FieldsOf: com.volmit.iris.command.CommandIrisStudioVerify
	MethodsOf: com.volmit.iris.command.CommandIrisStudioVerify
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged
		private static synthetic void lambda$handle$0(com.volmit.iris.util.MortarSender, java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisTC	NameNotChanged
	Source: "CommandIrisTC.java"
	FieldsOf: com.volmit.iris.command.CommandIrisTC
	MethodsOf: com.volmit.iris.command.CommandIrisTC
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisWhat	NameNotChanged
	Source: "CommandIrisWhat.java"
	FieldsOf: com.volmit.iris.command.CommandIrisWhat
		private com.volmit.iris.command.CommandIrisWhatBlock block	=>	g
		private com.volmit.iris.command.CommandIrisWhatHand hand	=>	h
	MethodsOf: com.volmit.iris.command.CommandIrisWhat
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisWhatBlock	NameNotChanged
	Source: "CommandIrisWhatBlock.java"
	FieldsOf: com.volmit.iris.command.CommandIrisWhatBlock
	MethodsOf: com.volmit.iris.command.CommandIrisWhatBlock
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisWhatHand	NameNotChanged
	Source: "CommandIrisWhatHand.java"
	FieldsOf: com.volmit.iris.command.CommandIrisWhatHand
	MethodsOf: com.volmit.iris.command.CommandIrisWhatHand
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.CommandIrisWorld	NameNotChanged
	Source: "CommandIrisWorld.java"
	FieldsOf: com.volmit.iris.command.CommandIrisWorld
		private com.volmit.iris.command.CommandIrisGoto got0	=>	l
		private com.volmit.iris.command.CommandIrisHotload hotload	=>	j
		private com.volmit.iris.command.CommandIrisLoot loot	=>	g
		private com.volmit.iris.command.CommandIrisMetrics metrics	=>	h
		private com.volmit.iris.command.CommandIrisPregen pregen	=>	m
		private com.volmit.iris.command.CommandIrisTC tc	=>	k
		private com.volmit.iris.command.CommandIrisPregen world	=>	i
	MethodsOf: com.volmit.iris.command.CommandIrisWorld
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected java.lang.String getArgsUsage() 	SignatureNotChanged
		public boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public com.volmit.iris.command.PermissionIris	NameNotChanged
	Source: "PermissionIris.java"
	FieldsOf: com.volmit.iris.command.PermissionIris
		private static boolean a	=>	b
		public com.volmit.iris.command.PermissionIrisStudio studio	NameNotChanged
	MethodsOf: com.volmit.iris.command.PermissionIris
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static boolean a()	=>	b()
		public static void a(boolean)	=>	b(boolean)
		public static boolean b()	=>	a()
		public java.lang.String getDescription() 	SignatureNotChanged
		protected java.lang.String getNode() 	SignatureNotChanged
		public boolean isDefault() 	SignatureNotChanged

Class: public com.volmit.iris.command.PermissionIrisStudio	NameNotChanged
	Source: "PermissionIrisStudio.java"
	FieldsOf: com.volmit.iris.command.PermissionIrisStudio
	MethodsOf: com.volmit.iris.command.PermissionIrisStudio
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public java.lang.String getDescription() 	SignatureNotChanged
		protected java.lang.String getNode() 	SignatureNotChanged
		public boolean isDefault() 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.ContextualChunkGenerator	NameNotChanged
	Source: "ContextualChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.ContextualChunkGenerator
		private static int a	=>	c
		private com.volmit.iris.gen.atomics.AtomicMulticache cache	=>	b
		private com.volmit.iris.IrisDataManager data	=>	f
		protected boolean dev	NameNotChanged
		private com.volmit.iris.gen.atomics.AtomicCache dimCache	=>	a
		protected boolean failing	NameNotChanged
		private boolean fastPregen	=>	d
		protected int generated	NameNotChanged
		protected long hlast	NameNotChanged
		private volatile boolean hotloadable	=>	e
		protected boolean initialized	NameNotChanged
		protected com.volmit.iris.util.RNG masterRandom	NameNotChanged
		protected com.volmit.iris.IrisMetrics metrics	NameNotChanged
		protected com.volmit.iris.util.ChronoLatch perSecond	NameNotChanged
		protected boolean pregenDone	NameNotChanged
		protected com.volmit.iris.util.ChronoLatch pushLatch	NameNotChanged
		protected int task	NameNotChanged
		protected com.volmit.iris.util.ChronoLatch tickLatch	NameNotChanged
		protected int ticks	NameNotChanged
		protected org.bukkit.World world	NameNotChanged
	MethodsOf: com.volmit.iris.gen.ContextualChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int a()	=>	b()
		public static void a(int)	=>	b(int)
		public static int b()	=>	a()
		private static java.lang.Throwable b(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean canSpawn(org.bukkit.World, int, int) 	SignatureNotChanged
		public void checkHotload() 	SignatureNotChanged
		private void checkHotload(org.bukkit.World)	=>	a(org.bukkit.World)
		public void close() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		protected void fail(java.lang.Throwable) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$ChunkData generateChunkData(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		protected org.bukkit.generator.ChunkGenerator$ChunkData generateChunkDataFailure(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		protected org.bukkit.generator.ChunkGenerator$ChunkData generateChunkFastPregen(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicMulticache getCache() 	SignatureNotChanged
		public com.volmit.iris.IrisDataManager getData() 	SignatureNotChanged
		public java.util.List getDefaultPopulators(org.bukkit.World) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getDimCache() 	SignatureNotChanged
		public org.bukkit.Location getFixedSpawnLocation(org.bukkit.World, java.util.Random) 	SignatureNotChanged
		public int getGenerated() 	SignatureNotChanged
		public long getHlast() 	SignatureNotChanged
		public com.volmit.iris.util.RNG getMasterRandom() 	SignatureNotChanged
		public com.volmit.iris.IrisMetrics getMetrics() 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getPerSecond() 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getPushLatch() 	SignatureNotChanged
		public int getTask() 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getTickLatch() 	SignatureNotChanged
		public int getTicks() 	SignatureNotChanged
		public org.bukkit.World getWorld() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private void init(org.bukkit.World, com.volmit.iris.util.RNG)	=>	a(org.bukkit.World, com.volmit.iris.util.RNG)
		public boolean isDev() 	SignatureNotChanged
		public boolean isFailing() 	SignatureNotChanged
		public boolean isFastPregen() 	SignatureNotChanged
		public boolean isHotloadable() 	SignatureNotChanged
		public boolean isInitialized() 	SignatureNotChanged
		public boolean isParallelCapable() 	SignatureNotChanged
		public boolean isPregenDone() 	SignatureNotChanged
		private synthetic void lambda$fail$1(java.lang.Throwable) 	SignatureNotChanged
		private synthetic com.volmit.iris.object.IrisDimension lambda$loadDimension$0(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome loadBiome(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisDimension loadDimension(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGenerator loadGenerator(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject loadObject(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion loadRegion(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructure loadStructure(java.lang.String) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerJoinEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerQuitEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerTeleportEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.world.ChunkLoadEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.world.ChunkUnloadEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.world.WorldUnloadEvent) 	SignatureNotChanged
		protected abstract void onChunkLoaded(org.bukkit.Chunk) 	SignatureNotChanged
		protected abstract void onChunkUnloaded(org.bukkit.Chunk) 	SignatureNotChanged
		protected abstract void onClose() 	SignatureNotChanged
		protected abstract void onFailure(java.lang.Throwable) 	SignatureNotChanged
		protected abstract void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void onHotload() 	SignatureNotChanged
		protected abstract void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected abstract void onPlayerJoin(org.bukkit.entity.Player) 	SignatureNotChanged
		protected abstract void onPlayerLeft(org.bukkit.entity.Player) 	SignatureNotChanged
		protected abstract void onTick(int) 	SignatureNotChanged
		public void setCache(com.volmit.iris.gen.atomics.AtomicMulticache) 	SignatureNotChanged
		public void setData(com.volmit.iris.IrisDataManager) 	SignatureNotChanged
		public void setDev(boolean) 	SignatureNotChanged
		public void setDimCache(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setFailing(boolean) 	SignatureNotChanged
		public void setFastPregen(boolean) 	SignatureNotChanged
		public void setGenerated(int) 	SignatureNotChanged
		public void setHlast(long) 	SignatureNotChanged
		public void setHotloadable(boolean) 	SignatureNotChanged
		public void setInitialized(boolean) 	SignatureNotChanged
		public void setMasterRandom(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setMetrics(com.volmit.iris.IrisMetrics) 	SignatureNotChanged
		public void setPerSecond(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setPregenDone(boolean) 	SignatureNotChanged
		public void setPushLatch(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setTask(int) 	SignatureNotChanged
		public void setTickLatch(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setTicks(int) 	SignatureNotChanged
		public void setWorld(org.bukkit.World) 	SignatureNotChanged
		private void tick()	=>	c()
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.DimensionChunkGenerator	NameNotChanged
	Source: "DimensionChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.DimensionChunkGenerator
		protected static final org.bukkit.block.data.BlockData AIR	NameNotChanged
		protected static final org.bukkit.block.data.BlockData BEDROCK	NameNotChanged
		protected static final org.bukkit.block.data.BlockData CAVE_AIR	NameNotChanged
		protected static final org.bukkit.block.data.BlockData WATER	NameNotChanged
		protected java.lang.String dimensionName	NameNotChanged
	MethodsOf: com.volmit.iris.gen.DimensionChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		protected com.volmit.iris.util.BiomeResult focus() 	SignatureNotChanged
		public com.volmit.iris.object.IrisDimension getDimension() 	SignatureNotChanged
		public java.lang.String getDimensionName() 	SignatureNotChanged
		public double getModifiedX(int, int) 	SignatureNotChanged
		public double getModifiedZ(int, int) 	SignatureNotChanged
		public double getUnzoomed(double) 	SignatureNotChanged
		public double getZoomed(double) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void onPlayerLeft(org.bukkit.entity.Player) 	SignatureNotChanged
		public void onTick(int) 	SignatureNotChanged
		public void setDimensionName(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.gen.IrisChunkGenerator	NameNotChanged
	Source: "IrisChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.IrisChunkGenerator
		private com.volmit.iris.util.KMap b	=>	B
		private com.volmit.iris.object.IrisBiome hb	=>	A
		private com.volmit.iris.object.IrisRegion hr	=>	D
		private java.lang.reflect.Method initLighting	=>	C
	MethodsOf: com.volmit.iris.gen.IrisChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.Function2 createRenderer() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.generator.ChunkGenerator$ChunkData generateChunkData(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getB() 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult getBiome(int, int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getHb() 	SignatureNotChanged
		public int getHeight(int, int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion getHr() 	SignatureNotChanged
		public java.lang.reflect.Method getInitLighting() 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion getRegion(int, int) 	SignatureNotChanged
		public long guessMemoryUsage() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void hotload() 	SignatureNotChanged
		private synthetic java.awt.Color lambda$createRenderer$0(java.lang.Double, java.lang.Double) 	SignatureNotChanged
		protected void onChunkLoaded(org.bukkit.Chunk) 	SignatureNotChanged
		protected void onChunkUnloaded(org.bukkit.Chunk) 	SignatureNotChanged
		protected void onClose() 	SignatureNotChanged
		protected void onFailure(java.lang.Throwable) 	SignatureNotChanged
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void onHotloaded() 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected void onPlayerJoin(org.bukkit.entity.Player) 	SignatureNotChanged
		public void onPlayerLeft(org.bukkit.entity.Player) 	SignatureNotChanged
		public void onTick(int) 	SignatureNotChanged
		private java.awt.Color render(double, double)	=>	a(double, double)
		public void retry() 	SignatureNotChanged
		public void saveAllParallax() 	SignatureNotChanged
		public void setB(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setHb(com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		public void setHr(com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public void setInitLighting(java.lang.reflect.Method) 	SignatureNotChanged
		public boolean shouldGenerateCaves() 	SignatureNotChanged
		public boolean shouldGenerateDecorations() 	SignatureNotChanged
		public boolean shouldGenerateMobs() 	SignatureNotChanged
		public boolean shouldGenerateStructures() 	SignatureNotChanged
		public java.lang.String textFor(double, double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.ParallaxChunkGenerator	NameNotChanged
	Source: "ParallaxChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.ParallaxChunkGenerator
		private com.volmit.iris.util.IrisLock flock	=>	s
		private com.volmit.iris.gen.layer.GenLayerText glText	=>	u
		private com.volmit.iris.gen.layer.GenLayerUpdate glUpdate	=>	p
		private com.volmit.iris.util.IrisLock lock	=>	o
		private com.volmit.iris.util.IrisLock lockq	=>	t
		private com.volmit.iris.gen.atomics.MasterLock masterLock	=>	q
		protected com.volmit.iris.gen.atomics.AtomicWorldData parallaxMap	NameNotChanged
		private int sliverBuffer	=>	r
		protected com.volmit.iris.util.KMap sliverCache	NameNotChanged
	MethodsOf: com.volmit.iris.gen.ParallaxChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		private static java.lang.Throwable c(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int, int, int) 	SignatureNotChanged
		public java.util.List getDefaultPopulators(org.bukkit.World) 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getFlock() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerText getGlText() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerUpdate getGlUpdate() 	SignatureNotChanged
		public int getHighest(int, int) 	SignatureNotChanged
		public int getHighest(int, int, boolean) 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getLock() 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getLockq() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.MasterLock getMasterLock() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliverMap getParallaxChunk(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicWorldData getParallaxMap() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliver getParallaxSliver(int, int) 	SignatureNotChanged
		public int getSliverBuffer() 	SignatureNotChanged
		protected com.volmit.iris.util.KMap getSliverCache() 	SignatureNotChanged
		public com.volmit.iris.util.IrisStructureResult getStructure(int, int, int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isParallaxGenerated(int, int) 	SignatureNotChanged
		public boolean isPreventingDecay() 	SignatureNotChanged
		public boolean isSolid(int, int, int) 	SignatureNotChanged
		public boolean isWorldGenerated(int, int) 	SignatureNotChanged
		private synthetic void lambda$null$0(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$null$1(com.volmit.iris.object.IrisStructurePlacement, com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		private synthetic void lambda$null$2(com.volmit.iris.object.IrisStructurePlacement, com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		private synthetic void lambda$null$3(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$null$4(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic void lambda$onGenerateParallax$5(int, int, com.volmit.iris.util.KList, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected void onClose() 	SignatureNotChanged
		protected void onGenerateParallax(com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		public void onHotload() 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		public void placeCaveObject(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void placeObject(com.volmit.iris.object.IrisObjectPlacement, int, int, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliver sampleSliver(int, int) 	SignatureNotChanged
		public void set(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setFlock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setGlText(com.volmit.iris.gen.layer.GenLayerText) 	SignatureNotChanged
		public void setGlUpdate(com.volmit.iris.gen.layer.GenLayerUpdate) 	SignatureNotChanged
		public void setLock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setLockq(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setMasterLock(com.volmit.iris.gen.atomics.MasterLock) 	SignatureNotChanged
		public void setParallaxMap(com.volmit.iris.gen.atomics.AtomicWorldData) 	SignatureNotChanged
		public void setSliverBuffer(int) 	SignatureNotChanged
		public void setSliverCache(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.ParallelChunkGenerator	NameNotChanged
	Source: "ParallelChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.ParallelChunkGenerator
		private com.volmit.iris.util.GroupedExecutor accelerant	=>	g
		protected int cacheX	NameNotChanged
		protected int cacheZ	NameNotChanged
		protected boolean cachingAllowed	NameNotChanged
		private int threads	=>	h
	MethodsOf: com.volmit.iris.gen.ParallelChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void changeThreadCount(int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.GroupedExecutor getAccelerant() 	SignatureNotChanged
		public int getCacheX() 	SignatureNotChanged
		public int getCacheZ() 	SignatureNotChanged
		public int getThreads() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isCachingAllowed() 	SignatureNotChanged
		public boolean isParallelCapable() 	SignatureNotChanged
		private synthetic void lambda$onGenerate$0(int, int, int, int, int, int, com.volmit.iris.gen.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap) 	SignatureNotChanged
		protected void onClose() 	SignatureNotChanged
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		protected void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.gen.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap) 	SignatureNotChanged
		protected abstract void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.gen.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap, boolean) 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected abstract void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		protected abstract int onSampleColumnHeight(int, int, int, int, int, int) 	SignatureNotChanged
		protected int sampleHeight(int, int) 	SignatureNotChanged
		public void setAccelerant(com.volmit.iris.util.GroupedExecutor) 	SignatureNotChanged
		public void setCacheX(int) 	SignatureNotChanged
		public void setCacheZ(int) 	SignatureNotChanged
		public void setCachingAllowed(boolean) 	SignatureNotChanged
		public void setThreads(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.PostBlockChunkGenerator	NameNotChanged
	Source: "PostBlockChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.PostBlockChunkGenerator
		private com.volmit.iris.util.KList availableFilters	=>	z
		private com.volmit.iris.util.IrisLock lock	=>	v
		private int maxPhase	=>	y
		private int minPhase	=>	x
		private java.lang.String postKey	=>	w
	MethodsOf: com.volmit.iris.gen.PostBlockChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList caveFloors(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.IrisPostBlockFilter createProcessor(java.lang.String, int) 	SignatureNotChanged
		private static java.lang.Throwable d(java.lang.Throwable) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAvailableFilters() 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getLock() 	SignatureNotChanged
		public int getMaxPhase() 	SignatureNotChanged
		public int getMinPhase() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getPostBlock(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public java.lang.String getPostKey() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public int highestTerrainBlock(int, int) 	SignatureNotChanged
		public int highestTerrainOrFluidBlock(int, int) 	SignatureNotChanged
		private static synthetic void lambda$onGenerate$0(com.volmit.iris.util.KList, int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setAvailableFilters(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setLock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setMaxPhase(int) 	SignatureNotChanged
		public void setMinPhase(int) 	SignatureNotChanged
		public void setPostBlock(int, int, int, org.bukkit.block.data.BlockData, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void setPostKey(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void updateHeight(int, int, int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.gen.TerrainChunkGenerator	NameNotChanged
	Source: "TerrainChunkGenerator.java"
	FieldsOf: com.volmit.iris.gen.TerrainChunkGenerator
		protected com.volmit.iris.util.ChronoLatch cwarn	NameNotChanged
		private com.volmit.iris.util.KMap generators	=>	l
		protected com.volmit.iris.gen.layer.GenLayerBiome glBiome	NameNotChanged
		private com.volmit.iris.gen.layer.GenLayerCarve glCarve	=>	k
		private com.volmit.iris.gen.layer.GenLayerCave glCave	=>	n
		private long lastChunkLoad	=>	m
		private long lastUpdateRequest	=>	j
		protected com.volmit.iris.noise.CNG masterFracture	NameNotChanged
		protected com.volmit.iris.util.IrisLock regLock	NameNotChanged
		private com.volmit.iris.util.RNG rockRandom	=>	i
	MethodsOf: com.volmit.iris.gen.TerrainChunkGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		private void decorateCave(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	b(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)
		private void decorateLand(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	a(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)
		private void decorateUnderwater(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)	=>	c(com.volmit.iris.object.IrisBiome, com.volmit.iris.gen.atomics.AtomicSliver, double, int, double, int, int, org.bukkit.block.data.BlockData)
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		protected double getBiomeHeight(double, double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getCaves(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getCwarn() 	SignatureNotChanged
		public int getFluidHeight() 	SignatureNotChanged
		protected com.volmit.iris.util.KMap getGenerators() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerBiome getGlBiome() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerCarve getGlCarve() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerCave getGlCave() 	SignatureNotChanged
		public long getLastChunkLoad() 	SignatureNotChanged
		public long getLastUpdateRequest() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getMasterFracture() 	SignatureNotChanged
		private double getNoiseHeight(int, int)	=>	a(int, int)
		public com.volmit.iris.util.IrisLock getRegLock() 	SignatureNotChanged
		public com.volmit.iris.util.RNG getRockRandom() 	SignatureNotChanged
		public double getTerrainHeight(int, int) 	SignatureNotChanged
		public double getTerrainWaterHeight(int, int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		protected double interpolateGenerator(double, double, com.volmit.iris.object.IrisGenerator) 	SignatureNotChanged
		public boolean isFluidAtHeight(int, int) 	SignatureNotChanged
		public boolean isUnderwater(int, int) 	SignatureNotChanged
		private synthetic java.lang.Double lambda$getTerrainHeight$2(int, int) 	SignatureNotChanged
		private synthetic double lambda$interpolateGenerator$3(com.volmit.iris.object.IrisGenerator, double, double, double, double) 	SignatureNotChanged
		private synthetic double lambda$interpolateGenerator$4(com.volmit.iris.object.IrisGenerator, double, double, double, double) 	SignatureNotChanged
		private synthetic void lambda$loadGenerators$5(com.volmit.iris.object.IrisDimension, com.volmit.iris.object.IrisBiomeGeneratorLink) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.BiomeResult lambda$sampleBiome$6(int, int) 	SignatureNotChanged
		private synthetic com.volmit.iris.object.IrisRegion lambda$sampleRegion$0(int, int) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.BiomeResult lambda$sampleTrueBiome$1(int, int, double) 	SignatureNotChanged
		protected void loadGenerators() 	SignatureNotChanged
		protected void loadGenerators(com.volmit.iris.object.IrisDimension) 	SignatureNotChanged
		protected void onGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		protected void onGenerateColumn(int, int, int, int, int, int, com.volmit.iris.gen.atomics.AtomicSliver, com.volmit.iris.util.BiomeMap, boolean) 	SignatureNotChanged
		public void onHotload() 	SignatureNotChanged
		public void onInit(org.bukkit.World, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected void onPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		protected void onPostParallaxPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		protected void onPreParallaxPostGenerate(com.volmit.iris.util.RNG, int, int, org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap, com.volmit.iris.util.BiomeMap, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		protected int onSampleColumnHeight(int, int, int, int, int, int) 	SignatureNotChanged
		public void registerGenerator(com.volmit.iris.object.IrisGenerator, com.volmit.iris.object.IrisDimension) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleBiome(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleCaveBiome(int, int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion sampleRegion(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleTrueBiome(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleTrueBiome(int, int, double) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleTrueBiome(int, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult sampleTrueBiomeBase(int, int, int) 	SignatureNotChanged
		public void setCwarn(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setGenerators(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setGlBiome(com.volmit.iris.gen.layer.GenLayerBiome) 	SignatureNotChanged
		public void setGlCarve(com.volmit.iris.gen.layer.GenLayerCarve) 	SignatureNotChanged
		public void setGlCave(com.volmit.iris.gen.layer.GenLayerCave) 	SignatureNotChanged
		public void setLastChunkLoad(long) 	SignatureNotChanged
		public void setLastUpdateRequest(long) 	SignatureNotChanged
		public void setMasterFracture(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public void setRegLock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setRockRandom(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		private boolean touchesSea(int, int)	=>	b(int, int)

Class: public com.volmit.iris.gen.atomics.AtomicBiomeMap	NameNotChanged
	Source: "AtomicBiomeMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicBiomeMap
	MethodsOf: com.volmit.iris.gen.atomics.AtomicBiomeMap
		public void <init>() 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicCache	NameNotChanged
	Source: "AtomicCache.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicCache
		private volatile transient long a	=>	f
		private static boolean b	=>	a
		private final com.volmit.iris.util.IrisLock check	=>	g
		private final boolean nullSupport	=>	e
		private volatile transient java.lang.Object t	=>	h
		private final com.volmit.iris.util.IrisLock time	=>	b
		private volatile transient int validations	=>	d
		private final com.volmit.iris.util.IrisLock write	=>	c
	MethodsOf: com.volmit.iris.gen.atomics.AtomicCache
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(boolean) 	SignatureNotChanged
		public static boolean a()	=>	b()
		public static void a(boolean)	=>	b(boolean)
		public java.lang.Object aquire(java.util.function.Supplier) 	SignatureNotChanged
		public java.lang.Object aquireNull(java.util.function.Supplier) 	SignatureNotChanged
		public static boolean b()	=>	a()
		public void reset() 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicDoubleMap	NameNotChanged
	Source: "AtomicDoubleMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicDoubleMap
		private final com.google.common.util.concurrent.AtomicDoubleArray data	=>	a
	MethodsOf: com.volmit.iris.gen.atomics.AtomicDoubleMap
		public void <init>() 	SignatureNotChanged
		public double get(int, int) 	SignatureNotChanged
		public int getInt(int, int) 	SignatureNotChanged
		public void set(int, int, double) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicIntMap	NameNotChanged
	Source: "AtomicIntMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicIntMap
		private final java.util.concurrent.atomic.AtomicIntegerArray data	=>	a
	MethodsOf: com.volmit.iris.gen.atomics.AtomicIntMap
		public void <init>() 	SignatureNotChanged
		public int get(int, int) 	SignatureNotChanged
		public void set(int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicMulticache	NameNotChanged
	Source: "AtomicMulticache.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicMulticache
		private final com.volmit.iris.util.KMap biome	=>	d
		private final com.volmit.iris.util.KMap height	=>	b
		private final com.volmit.iris.util.KMap rawBiome	=>	f
		private final com.volmit.iris.util.KMap region	=>	e
		private final java.util.concurrent.atomic.AtomicInteger x	=>	c
		private final java.util.concurrent.atomic.AtomicInteger z	=>	a
	MethodsOf: com.volmit.iris.gen.atomics.AtomicMulticache
		public void <init>() 	SignatureNotChanged
		public void drop() 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult getBiome(int, int, java.util.function.Supplier) 	SignatureNotChanged
		public double getHeight(int, int, java.util.function.Supplier) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult getRawBiome(int, int, java.util.function.Supplier) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion getRegion(int, int, java.util.function.Supplier) 	SignatureNotChanged
		public double getSize() 	SignatureNotChanged
		private long pos(int, int)	=>	a(int, int)
		public void targetChunk(int, int) 	SignatureNotChanged
		public void updateHeight(int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicObjectMap	NameNotChanged
	Source: "AtomicObjectMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicObjectMap
		private final java.util.concurrent.atomic.AtomicReferenceArray data	=>	a
	MethodsOf: com.volmit.iris.gen.atomics.AtomicObjectMap
		public void <init>() 	SignatureNotChanged
		public java.lang.Object get(int, int) 	SignatureNotChanged
		public void set(int, int, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicRegionData	NameNotChanged
	Source: "AtomicRegionData.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicRegionData
		private com.volmit.iris.util.Tag[] tag	=>	a
		private final org.bukkit.World world	=>	b
	MethodsOf: com.volmit.iris.gen.atomics.AtomicRegionData
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.World) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public boolean contains(int, int) 	SignatureNotChanged
		public void delete(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliverMap get(int, int) 	SignatureNotChanged
		public org.bukkit.World getWorld() 	SignatureNotChanged
		public long guessMemoryUsage() 	SignatureNotChanged
		public void read(java.io.InputStream) 	SignatureNotChanged
		public void set(int, int, com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
		public void write(java.io.OutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicRegionMap	NameNotChanged
	Source: "AtomicRegionMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicRegionMap
	MethodsOf: com.volmit.iris.gen.atomics.AtomicRegionMap
		public void <init>() 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicSliver	NameNotChanged
	Source: "AtomicSliver.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicSliver
		public static final org.bukkit.block.data.BlockData AIR	NameNotChanged
		private transient com.volmit.iris.util.KMap biome	=>	k
		private com.volmit.iris.util.KMap block	=>	g
		private com.volmit.iris.util.KSet blockUpdates	=>	f
		private transient int highestBiome	=>	d
		private int highestBlock	=>	a
		private transient long last	=>	h
		private transient com.volmit.iris.util.IrisLock lock	=>	e
		private transient boolean modified	=>	b
		private transient com.volmit.iris.util.KMap truebiome	=>	i
		private final transient int x	=>	j
		private final transient int z	=>	c
	MethodsOf: com.volmit.iris.gen.atomics.AtomicSliver
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void dontUpdate(int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getBiome() 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getBlock() 	SignatureNotChanged
		public com.volmit.iris.util.KSet getBlockUpdates() 	SignatureNotChanged
		public int getHighestBiome() 	SignatureNotChanged
		public int getHighestBlock() 	SignatureNotChanged
		public long getLast() 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getLock() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getOrNull(int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getTrueBiome(int) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getTruebiome() 	SignatureNotChanged
		public org.bukkit.Material getType(int) 	SignatureNotChanged
		public com.volmit.iris.util.KSet getUpdatables() 	SignatureNotChanged
		public int getX() 	SignatureNotChanged
		public int getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void inject(com.volmit.iris.util.KSet) 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void insert(com.volmit.iris.gen.atomics.AtomicSliver) 	SignatureNotChanged
		public boolean isModified() 	SignatureNotChanged
		public boolean isOlderThan(long) 	SignatureNotChanged
		public boolean isSolid(int) 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public void set(int, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		public void set(int, org.bukkit.block.Biome) 	SignatureNotChanged
		public void set(int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setBiome(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setBlock(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setBlockUpdates(com.volmit.iris.util.KSet) 	SignatureNotChanged
		public void setHighestBiome(int) 	SignatureNotChanged
		public void setHighestBlock(int) 	SignatureNotChanged
		public void setLast(long) 	SignatureNotChanged
		public void setLock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setModified(boolean) 	SignatureNotChanged
		public void setSilently(int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setTruebiome(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void update(int) 	SignatureNotChanged
		public void write(com.volmit.iris.util.HeightMap) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged
		public void write(org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void write(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicSliverMap	NameNotChanged
	Source: "AtomicSliverMap.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicSliverMap
		private boolean parallaxGenerated	=>	d
		private final com.volmit.iris.gen.atomics.AtomicSliver[] slivers	=>	a
		private com.volmit.iris.util.KMap structures	=>	c
		private boolean worldGenerated	=>	b
	MethodsOf: com.volmit.iris.gen.atomics.AtomicSliverMap
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliver getSliver(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliver[] getSlivers() 	SignatureNotChanged
		public com.volmit.iris.util.IrisStructureResult getStructure(com.volmit.iris.gen.DimensionChunkGenerator, int) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getStructures() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void injectUpdates(com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		public void insert(com.volmit.iris.gen.atomics.AtomicSliverMap) 	SignatureNotChanged
		public boolean isModified() 	SignatureNotChanged
		public boolean isParallaxGenerated() 	SignatureNotChanged
		public boolean isWorldGenerated() 	SignatureNotChanged
		public void read(java.io.InputStream) 	SignatureNotChanged
		public void setParallaxGenerated(boolean) 	SignatureNotChanged
		public void setStructure(int, com.volmit.iris.object.IrisStructure, com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		public void setStructures(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setWorldGenerated(boolean) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void write(java.io.OutputStream) 	SignatureNotChanged
		public void write(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid, com.volmit.iris.util.HeightMap) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.AtomicWorldData	NameNotChanged
	Source: "AtomicWorldData.java"
	FieldsOf: com.volmit.iris.gen.atomics.AtomicWorldData
		private long last	=>	b
		private com.volmit.iris.util.KMap lastChunk	=>	f
		private com.volmit.iris.util.KMap lastRegion	=>	a
		private com.volmit.iris.util.KMap loadedChunks	=>	i
		private com.volmit.iris.util.KMap loadedSections	=>	g
		private java.lang.String prefix	=>	d
		private com.volmit.iris.util.KList unloadChunks	=>	h
		private com.volmit.iris.util.KList unloadRegions	=>	e
		private org.bukkit.World world	=>	c
	MethodsOf: com.volmit.iris.gen.atomics.AtomicWorldData
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.World, java.lang.String) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void clean(int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicRegionData createSection(int, int) 	SignatureNotChanged
		public void deleteSection(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getLoadedChunks() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getLoadedRegions() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicRegionData getSubregion(int, int) 	SignatureNotChanged
		public java.io.File getSubregionFile(int, int) 	SignatureNotChanged
		public java.io.File getSubregionFolder() 	SignatureNotChanged
		private int getUnloadBatchSize()	=>	a()
		private int getUnloadBatchSpeed()	=>	b()
		public boolean hasChunk(int, int) 	SignatureNotChanged
		public boolean isSectionLoaded(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		public boolean isSectionLoaded(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicSliverMap loadChunk(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicRegionData loadSection(int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicRegionData loadSection(int, int, boolean) 	SignatureNotChanged
		public void saveAll() 	SignatureNotChanged
		public void saveChunk(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		public void saveChunks() 	SignatureNotChanged
		public void saveChunks(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		public boolean saveSection(com.volmit.iris.util.ChunkPosition) 	SignatureNotChanged
		public boolean saveSection(int, int) 	SignatureNotChanged
		public void unloadAll(boolean) 	SignatureNotChanged
		public boolean unloadSection(com.volmit.iris.util.ChunkPosition, boolean) 	SignatureNotChanged
		public boolean unloadSection(int, int, boolean) 	SignatureNotChanged

Class: public com.volmit.iris.gen.atomics.MasterLock	NameNotChanged
	Source: "MasterLock.java"
	FieldsOf: com.volmit.iris.gen.atomics.MasterLock
		private com.volmit.iris.util.IrisLock lock	=>	a
		private com.volmit.iris.util.KMap locks	=>	b
	MethodsOf: com.volmit.iris.gen.atomics.MasterLock
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public void lock(java.lang.String) 	SignatureNotChanged
		public void unlock(java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.BiomeDataProvider	NameNotChanged
	Source: "BiomeDataProvider.java"
	FieldsOf: com.volmit.iris.gen.layer.BiomeDataProvider
		private com.volmit.iris.noise.CNG generator	=>	c
		private com.volmit.iris.gen.layer.GenLayerBiome layer	=>	b
		private com.volmit.iris.object.InferredType type	=>	a
	MethodsOf: com.volmit.iris.gen.layer.BiomeDataProvider
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.layer.GenLayerBiome, com.volmit.iris.object.InferredType, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateData(com.volmit.iris.gen.ContextualChunkGenerator, double, double, int, int, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generatePureData(com.volmit.iris.gen.ContextualChunkGenerator, double, double, int, int, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getGenerator() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.GenLayerBiome getLayer() 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setGenerator(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public void setLayer(com.volmit.iris.gen.layer.GenLayerBiome) 	SignatureNotChanged
		public void setType(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.GenLayerBiome	NameNotChanged
	Source: "GenLayerBiome.java"
	FieldsOf: com.volmit.iris.gen.layer.GenLayerBiome
		private com.volmit.iris.noise.CNG bridgeGenerator	=>	e
		private com.volmit.iris.gen.layer.BiomeDataProvider caveProvider	=>	d
		private com.volmit.iris.gen.DimensionChunkGenerator iris	=>	g
		private com.volmit.iris.gen.layer.BiomeDataProvider landProvider	=>	b
		private com.volmit.iris.noise.CNG regionGenerator	=>	a
		private com.volmit.iris.gen.layer.BiomeDataProvider seaProvider	=>	f
		private com.volmit.iris.gen.layer.BiomeDataProvider shoreProvider	=>	c
	MethodsOf: com.volmit.iris.gen.layer.GenLayerBiome
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double generate(double, double) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateBiomeData(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.noise.CNG, com.volmit.iris.util.KList, com.volmit.iris.object.InferredType, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateData(com.volmit.iris.object.InferredType, double, double, int, int, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateData(double, double, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateImpureData(int, int, com.volmit.iris.object.InferredType, com.volmit.iris.object.IrisRegion, com.volmit.iris.util.BiomeResult) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult generateRegionData(double, double, int, int, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getBridgeGenerator() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.BiomeDataProvider getCaveProvider() 	SignatureNotChanged
		public com.volmit.iris.gen.DimensionChunkGenerator getIris() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.BiomeDataProvider getLandProvider() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.BiomeDataProvider getProvider(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegion getRegion(double, double) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getRegionGenerator() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.BiomeDataProvider getSeaProvider() 	SignatureNotChanged
		public com.volmit.iris.gen.layer.BiomeDataProvider getShoreProvider() 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getType(double, double, com.volmit.iris.object.IrisRegion) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult implode(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.noise.CNG, com.volmit.iris.util.BiomeResult) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeResult implode(double, double, com.volmit.iris.object.IrisRegion, com.volmit.iris.noise.CNG, com.volmit.iris.util.BiomeResult, int) 	SignatureNotChanged
		public void setBridgeGenerator(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public void setCaveProvider(com.volmit.iris.gen.layer.BiomeDataProvider) 	SignatureNotChanged
		public void setIris(com.volmit.iris.gen.DimensionChunkGenerator) 	SignatureNotChanged
		public void setLandProvider(com.volmit.iris.gen.layer.BiomeDataProvider) 	SignatureNotChanged
		public void setRegionGenerator(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public void setSeaProvider(com.volmit.iris.gen.layer.BiomeDataProvider) 	SignatureNotChanged
		public void setShoreProvider(com.volmit.iris.gen.layer.BiomeDataProvider) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.GenLayerCarve	NameNotChanged
	Source: "GenLayerCarve.java"
	FieldsOf: com.volmit.iris.gen.layer.GenLayerCarve
		private com.volmit.iris.noise.CellGenerator cell	=>	a
	MethodsOf: com.volmit.iris.gen.layer.GenLayerCarve
		public void <init>(com.volmit.iris.gen.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double generate(double, double) 	SignatureNotChanged
		public boolean isCarved(int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.GenLayerCave	NameNotChanged
	Source: "GenLayerCave.java"
	FieldsOf: com.volmit.iris.gen.layer.GenLayerCave
		public static final org.bukkit.block.data.BlockData AIR	NameNotChanged
		public static final org.bukkit.block.data.BlockData CAVE_AIR	NameNotChanged
		private static final com.volmit.iris.util.KList EMPTY	=>	b
		private com.volmit.iris.noise.FastNoise gg	=>	a
	MethodsOf: com.volmit.iris.gen.layer.GenLayerCave
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public boolean can(org.bukkit.Material) 	SignatureNotChanged
		public boolean canAir(org.bukkit.Material) 	SignatureNotChanged
		public boolean canWater(org.bukkit.Material) 	SignatureNotChanged
		public boolean dig(int, int, int, com.volmit.iris.gen.atomics.AtomicSliver) 	SignatureNotChanged
		public com.volmit.iris.util.KList genCaves(double, double, int, int, com.volmit.iris.gen.atomics.AtomicSliver) 	SignatureNotChanged
		public double generate(double, double) 	SignatureNotChanged
		public void generateCave(com.volmit.iris.util.KList, double, double, int, int, com.volmit.iris.gen.atomics.AtomicSliver, com.volmit.iris.object.IrisCaveLayer, int) 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.GenLayerText	NameNotChanged
	Source: "GenLayerText.java"
	FieldsOf: com.volmit.iris.gen.layer.GenLayerText
		public static final org.bukkit.block.data.BlockData AIR	NameNotChanged
		private com.volmit.iris.gen.atomics.AtomicCache debug	=>	a
	MethodsOf: com.volmit.iris.gen.layer.GenLayerText
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject createTextObject(java.lang.String, java.lang.String, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public double generate(double, double) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject getDebug() 	SignatureNotChanged
		private synthetic com.volmit.iris.object.IrisObject lambda$getDebug$0() 	SignatureNotChanged

Class: public com.volmit.iris.gen.layer.GenLayerUpdate	NameNotChanged
	Source: "GenLayerUpdate.java"
	FieldsOf: com.volmit.iris.gen.layer.GenLayerUpdate
		private static java.lang.String a	=>	b
		private com.volmit.iris.gen.ParallaxChunkGenerator gen	=>	d
		private com.volmit.iris.util.RNG rng	=>	c
	MethodsOf: com.volmit.iris.gen.layer.GenLayerUpdate
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.ParallaxChunkGenerator, org.bukkit.World) 	SignatureNotChanged
		public static java.lang.String a()	=>	b()
		public static void a(java.lang.String)	=>	b(java.lang.String)
		public void addItems(boolean, org.bukkit.inventory.Inventory, com.volmit.iris.util.RNG, com.volmit.iris.util.KList, com.volmit.iris.object.InventorySlotType, int, int, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList getLootTables(com.volmit.iris.util.RNG, org.bukkit.block.Block) 	SignatureNotChanged
		public void injectTables(com.volmit.iris.util.KList, com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void populate(org.bukkit.World, java.util.Random, org.bukkit.Chunk) 	SignatureNotChanged
		private void scramble(org.bukkit.inventory.Inventory, com.volmit.iris.util.RNG)	=>	a(org.bukkit.inventory.Inventory, com.volmit.iris.util.RNG)
		public void update(org.bukkit.Chunk, int, int, int, int, int, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void updateLight(org.bukkit.block.Block, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void updateStorage(org.bukkit.block.Block, org.bukkit.block.data.BlockData, int, int, com.volmit.iris.util.RNG) 	SignatureNotChanged

Class: public com.volmit.iris.gen.parallax.ParallaxChunk	NameNotChanged
	Source: "ParallaxChunk.java"
	FieldsOf: com.volmit.iris.gen.parallax.ParallaxChunk
		private static final com.volmit.iris.gen.parallax.ParallaxSection EMPTY	=>	d
		private boolean parallaxGenerated	=>	b
		private final com.volmit.iris.gen.parallax.ParallaxSection[] sections	=>	a
		private boolean worldGenerated	=>	c
	MethodsOf: com.volmit.iris.gen.parallax.ParallaxChunk
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.io.DataInputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void export(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int, int, int) 	SignatureNotChanged
		private final com.volmit.iris.gen.parallax.ParallaxSection getSection(int, boolean)	=>	a(int, boolean)
		public void injectUpdates(com.volmit.iris.gen.atomics.AtomicSliver, int, int) 	SignatureNotChanged
		public boolean isParallaxGenerated() 	SignatureNotChanged
		public boolean isWorldGenerated() 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public void set(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setParallaxGenerated(boolean) 	SignatureNotChanged
		public void setWorldGenerated(boolean) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.gen.parallax.ParallaxRegion	NameNotChanged
	Source: "ParallaxRegion.java"
	FieldsOf: com.volmit.iris.gen.parallax.ParallaxRegion
		private static final com.volmit.iris.gen.parallax.ParallaxChunk EMPTY	=>	c
		private com.volmit.iris.gen.parallax.ParallaxChunk[] chunks	=>	a
		private transient long last	=>	b
	MethodsOf: com.volmit.iris.gen.parallax.ParallaxRegion
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.io.DataInputStream) 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int, int, int) 	SignatureNotChanged
		private final com.volmit.iris.gen.parallax.ParallaxChunk getChunk(int, int, boolean)	=>	a(int, int, boolean)
		public boolean isOlderThan(long) 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public void set(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged
		public void write(java.io.File) 	SignatureNotChanged

Class: public com.volmit.iris.gen.parallax.ParallaxSection	NameNotChanged
	Source: "ParallaxSection.java"
	FieldsOf: com.volmit.iris.gen.parallax.ParallaxSection
		private static int a	=>	c
		private final com.volmit.iris.util.DataPalette block	=>	a
		private final com.volmit.iris.util.KSet updates	=>	b
	MethodsOf: com.volmit.iris.gen.parallax.ParallaxSection
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.io.DataInputStream) 	SignatureNotChanged
		public static int a()	=>	b()
		public static void a(int)	=>	b(int)
		public static int b()	=>	a()
		public void clearUpdates() 	SignatureNotChanged
		public void dontUpdate(int, int, int) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getBlock(int, int, int) 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public void setBlock(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void update(int, int, int) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged

Class: com.volmit.iris.gen.parallax.ParallaxSection$1	=>	com.volmit.iris.gen.parallax.ParallaxSection$a
	Source: "ParallaxSection.java"
	FieldsOf: com.volmit.iris.gen.parallax.ParallaxSection$1
		final synthetic com.volmit.iris.gen.parallax.ParallaxSection this$0	NameNotChanged
	MethodsOf: com.volmit.iris.gen.parallax.ParallaxSection$1
		void <init>(com.volmit.iris.gen.parallax.ParallaxSection, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public bridge synthetic java.lang.Object readType(java.io.DataInputStream) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData readType(java.io.DataInputStream) 	SignatureNotChanged
		public bridge synthetic void writeType(java.lang.Object, java.io.DataOutputStream) 	SignatureNotChanged
		public void writeType(org.bukkit.block.data.BlockData, java.io.DataOutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.gen.parallax.ParallaxWorld	NameNotChanged
	Source: "ParallaxWorld.java"
	FieldsOf: com.volmit.iris.gen.parallax.ParallaxWorld
		private final java.io.File dataFolder	=>	a
		private final com.volmit.iris.util.KMap loadedRegions	=>	b
	MethodsOf: com.volmit.iris.gen.parallax.ParallaxWorld
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void clean(long) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getBlock(int, int, int) 	SignatureNotChanged
		public com.volmit.iris.gen.parallax.ParallaxRegion getRegion(int, int) 	SignatureNotChanged
		private static synthetic com.volmit.iris.gen.parallax.ParallaxRegion lambda$getRegion$0(java.io.File, java.lang.Long, com.volmit.iris.gen.parallax.ParallaxRegion) 	SignatureNotChanged
		public void setBlock(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		private void unload(long)	=>	a(long)
		public void unloadAll() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.gen.post.Post	NameNotChanged
	Source: "Post.java"
	FieldsOf: com.volmit.iris.gen.post.Post
	MethodsOf: com.volmit.iris.gen.post.Post
		public abstract java.lang.String value() 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostFloatingNibDeleter	NameNotChanged
	Source: "PostFloatingNibDeleter.java"
	FieldsOf: com.volmit.iris.gen.post.PostFloatingNibDeleter
		private static final org.bukkit.block.data.BlockData AIR	=>	d
	MethodsOf: com.volmit.iris.gen.post.PostFloatingNibDeleter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostNibSmoother	NameNotChanged
	Source: "PostNibSmoother.java"
	FieldsOf: com.volmit.iris.gen.post.PostNibSmoother
	MethodsOf: com.volmit.iris.gen.post.PostNibSmoother
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostPotholeFiller	NameNotChanged
	Source: "PostPotholeFiller.java"
	FieldsOf: com.volmit.iris.gen.post.PostPotholeFiller
	MethodsOf: com.volmit.iris.gen.post.PostPotholeFiller
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostSlabber	NameNotChanged
	Source: "PostSlabber.java"
	FieldsOf: com.volmit.iris.gen.post.PostSlabber
		public static final org.bukkit.Material AIR	NameNotChanged
		public static final org.bukkit.Material WATER	NameNotChanged
		private com.volmit.iris.util.RNG rng	=>	d
	MethodsOf: com.volmit.iris.gen.post.PostSlabber
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		private synthetic void lambda$onPost$0(int, int, int, org.bukkit.block.data.BlockData, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostWallPatcher	NameNotChanged
	Source: "PostWallPatcher.java"
	FieldsOf: com.volmit.iris.gen.post.PostWallPatcher
		public static final org.bukkit.Material AIR	NameNotChanged
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	d
		private com.volmit.iris.util.RNG rng	=>	e
	MethodsOf: com.volmit.iris.gen.post.PostWallPatcher
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gen.post.PostWaterlogger	NameNotChanged
	Source: "PostWaterlogger.java"
	FieldsOf: com.volmit.iris.gen.post.PostWaterlogger
		private static final org.bukkit.block.data.BlockData WATER	=>	d
	MethodsOf: com.volmit.iris.gen.post.PostWaterlogger
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		public void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged

Class: public com.volmit.iris.gui.NoiseView	NameNotChanged
	Source: "NoiseView.java"
	FieldsOf: com.volmit.iris.gui.NoiseView
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	i
		static double ascale	=>	d
		com.volmit.iris.noise.CNG cng	=>	r
		int[][] co	=>	j
		boolean colorMode	=>	h
		static javax.swing.JComboBox combo	=>	u
		static boolean down	=>	q
		com.volmit.iris.util.GroupedExecutor gx	=>	n
		int h	=>	t
		static boolean hd	=>	w
		java.util.concurrent.locks.ReentrantLock l	=>	m
		double lx	=>	g
		double lz	=>	B
		double mx	=>	f
		static double mxx	=>	s
		double mz	=>	o
		static double mzz	=>	p
		double ox	=>	A
		static double oxp	=>	k
		double oz	=>	e
		static double ozp	=>	b
		com.volmit.iris.util.RollingSequence r	=>	v
		static com.volmit.iris.util.Function2 renderer	=>	a
		double scale	=>	c
		private static final long serialVersionUID	NameNotChanged
		double t	=>	x
		double tz	=>	z
		int w	=>	y
	MethodsOf: com.volmit.iris.gui.NoiseView
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		static synthetic void access$000(com.volmit.iris.gen.IrisChunkGenerator) 	SignatureNotChanged
		private static void createAndShowGUI(com.volmit.iris.gen.IrisChunkGenerator)	=>	a(com.volmit.iris.gen.IrisChunkGenerator)
		private synthetic void lambda$paint$0(int, int) 	SignatureNotChanged
		private synthetic void lambda$paint$1() 	SignatureNotChanged
		public static void launch(com.volmit.iris.gen.IrisChunkGenerator) 	SignatureNotChanged
		public void mouseWheelMoved(java.awt.event.MouseWheelEvent) 	SignatureNotChanged
		public void paint(java.awt.Graphics) 	SignatureNotChanged

Class: com.volmit.iris.gui.NoiseView$1	=>	com.volmit.iris.gui.NoiseView$d
	Source: "NoiseView.java"
	FieldsOf: com.volmit.iris.gui.NoiseView$1
		final synthetic com.volmit.iris.gui.NoiseView this$0	NameNotChanged
	MethodsOf: com.volmit.iris.gui.NoiseView$1
		void <init>(com.volmit.iris.gui.NoiseView) 	SignatureNotChanged
		public void mouseDragged(java.awt.event.MouseEvent) 	SignatureNotChanged
		public void mouseMoved(java.awt.event.MouseEvent) 	SignatureNotChanged

Class: final com.volmit.iris.gui.NoiseView$2	=>	com.volmit.iris.gui.NoiseView$b
	Source: "NoiseView.java"
	FieldsOf: com.volmit.iris.gui.NoiseView$2
		final synthetic com.volmit.iris.gui.NoiseView val$nv	NameNotChanged
	MethodsOf: com.volmit.iris.gui.NoiseView$2
		static void <clinit>() 	SignatureNotChanged
		void <init>(com.volmit.iris.gui.NoiseView) 	SignatureNotChanged
		public void actionPerformed(java.awt.event.ActionEvent) 	SignatureNotChanged

Class: final com.volmit.iris.gui.NoiseView$3	=>	com.volmit.iris.gui.NoiseView$c
	Source: "NoiseView.java"
	FieldsOf: com.volmit.iris.gui.NoiseView$3
		final synthetic com.volmit.iris.gen.IrisChunkGenerator val$g	NameNotChanged
	MethodsOf: com.volmit.iris.gui.NoiseView$3
		void <init>(com.volmit.iris.gen.IrisChunkGenerator) 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: com.volmit.iris.gui.NoiseView$HandScrollListener	=>	com.volmit.iris.gui.NoiseView$a
	Source: "NoiseView.java"
	FieldsOf: com.volmit.iris.gui.NoiseView$HandScrollListener
		private static final java.awt.Point pp	=>	a
	MethodsOf: com.volmit.iris.gui.NoiseView$HandScrollListener
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		public void mouseDragged(java.awt.event.MouseEvent) 	SignatureNotChanged
		public void mousePressed(java.awt.event.MouseEvent) 	SignatureNotChanged

Class: public abstract com.volmit.iris.noise.BaseNoiseGenerator	NameNotChanged
	Source: "BaseNoiseGenerator.java"
	FieldsOf: com.volmit.iris.noise.BaseNoiseGenerator
		protected double offsetX	NameNotChanged
		protected double offsetY	NameNotChanged
		protected double offsetZ	NameNotChanged
		protected final int[] perm	NameNotChanged
	MethodsOf: com.volmit.iris.noise.BaseNoiseGenerator
		public void <init>() 	SignatureNotChanged
		protected static double fade(double) 	SignatureNotChanged
		public static int floor(double) 	SignatureNotChanged
		protected static double grad(int, double, double, double) 	SignatureNotChanged
		protected static double lerp(double, double, double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public abstract double noise(double, double, double) 	SignatureNotChanged
		public double noise(double, double, double, int, double, double) 	SignatureNotChanged
		public double noise(double, double, double, int, double, double, boolean) 	SignatureNotChanged
		public double noise(double, double, int, double, double) 	SignatureNotChanged
		public double noise(double, double, int, double, double, boolean) 	SignatureNotChanged
		public double noise(double, int, double, double) 	SignatureNotChanged
		public double noise(double, int, double, double, boolean) 	SignatureNotChanged

Class: public com.volmit.iris.noise.BasePerlinNoiseGenerator	NameNotChanged
	Source: "BasePerlinNoiseGenerator.java"
	FieldsOf: com.volmit.iris.noise.BasePerlinNoiseGenerator
		protected static final int[][] grad3	NameNotChanged
		private static final com.volmit.iris.noise.BasePerlinNoiseGenerator instance	=>	a
	MethodsOf: com.volmit.iris.noise.BasePerlinNoiseGenerator
		static void <clinit>() 	SignatureNotChanged
		protected void <init>() 	SignatureNotChanged
		public void <init>(java.util.Random) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		public static com.volmit.iris.noise.BasePerlinNoiseGenerator getInstance() 	SignatureNotChanged
		public static double getNoise(double) 	SignatureNotChanged
		public static double getNoise(double, double) 	SignatureNotChanged
		public static double getNoise(double, double, double) 	SignatureNotChanged
		public static double getNoise(double, double, double, int, double, double) 	SignatureNotChanged
		public static double getNoise(double, double, int, double, double) 	SignatureNotChanged
		public static double getNoise(double, int, double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.CNG	NameNotChanged
	Source: "CNG.java"
	FieldsOf: com.volmit.iris.noise.CNG
		public static final com.volmit.iris.util.NoiseInjector ADD	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector DST_MOD	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector DST_POW	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector DST_SUBTRACT	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector MAX	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector MIN	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector MULTIPLY	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector SRC_MOD	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector SRC_POW	NameNotChanged
		public static final com.volmit.iris.util.NoiseInjector SRC_SUBTRACT	NameNotChanged
		private double bakedScale	=>	e
		private com.volmit.iris.util.KList children	=>	m
		public static long creates	NameNotChanged
		private double down	=>	k
		private com.volmit.iris.noise.CNG fracture	=>	g
		private double fscale	=>	i
		private com.volmit.iris.noise.NoiseGenerator generator	=>	h
		public static long hits	NameNotChanged
		private com.volmit.iris.util.NoiseInjector injector	=>	j
		private boolean noscale	=>	n
		private int oct	=>	a
		private final double opacity	=>	l
		private double patch	=>	d
		private double power	=>	c
		private com.volmit.iris.util.RNG rng	=>	f
		private double scale	=>	o
		private double up	=>	b
	MethodsOf: com.volmit.iris.noise.CNG
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, com.volmit.iris.noise.NoiseType, double, int) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, double, int) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG bake() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG child(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG down(double) 	SignatureNotChanged
		public int fit(double, double, double[]) 	SignatureNotChanged
		public int fit(int, int, double[]) 	SignatureNotChanged
		public java.lang.Object fit(java.lang.Object[], double[]) 	SignatureNotChanged
		public java.lang.Object fit(java.util.List, double[]) 	SignatureNotChanged
		public double fitDouble(double, double, double[]) 	SignatureNotChanged
		public com.volmit.iris.util.IRare fitRarity(com.volmit.iris.util.KList, double[]) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG fractureWith(com.volmit.iris.noise.CNG, double) 	SignatureNotChanged
		public com.volmit.iris.noise.NoiseGenerator getGen() 	SignatureNotChanged
		public com.volmit.iris.util.RNG getRNG() 	SignatureNotChanged
		public double getScale() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG injectWith(com.volmit.iris.util.NoiseInjector) 	SignatureNotChanged
		private static synthetic double[] lambda$static$0(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$1(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$2(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$3(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$4(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$5(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$6(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$7(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$8(double, double) 	SignatureNotChanged
		private static synthetic double[] lambda$static$9(double, double) 	SignatureNotChanged
		public com.volmit.iris.util.RNG nextRNG() 	SignatureNotChanged
		public double noise(double[]) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG oct(int) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG patch(double) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG pow(double) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG scale(double) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signature(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signature(com.volmit.iris.util.RNG, com.volmit.iris.noise.NoiseType) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureDouble(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureDouble(com.volmit.iris.util.RNG, com.volmit.iris.noise.NoiseType) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureHalf(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureHalf(com.volmit.iris.util.RNG, com.volmit.iris.noise.NoiseType) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureThick(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public static com.volmit.iris.noise.CNG signatureThick(com.volmit.iris.util.RNG, com.volmit.iris.noise.NoiseType) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG up(double) 	SignatureNotChanged

Class: public abstract com.volmit.iris.noise.CNGFactory	NameNotChanged
	Source: "CNGFactory.java"
	FieldsOf: com.volmit.iris.noise.CNGFactory
	MethodsOf: com.volmit.iris.noise.CNGFactory
		public abstract com.volmit.iris.noise.CNG create(com.volmit.iris.util.RNG) 	SignatureNotChanged

Class: public com.volmit.iris.noise.CellGenerator	NameNotChanged
	Source: "CellGenerator.java"
	FieldsOf: com.volmit.iris.noise.CellGenerator
		private double cellScale	=>	e
		private com.volmit.iris.noise.CNG cng	=>	d
		private com.volmit.iris.noise.FastNoise fd	=>	a
		private com.volmit.iris.noise.FastNoise fn	=>	b
		private double shuffle	=>	c
	MethodsOf: com.volmit.iris.noise.CellGenerator
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getCellScale() 	SignatureNotChanged
		public float getDistance(double, double) 	SignatureNotChanged
		public float getDistance(double, double, double) 	SignatureNotChanged
		public int getIndex(double, double, double, int) 	SignatureNotChanged
		public int getIndex(double, double, int) 	SignatureNotChanged
		public double getShuffle() 	SignatureNotChanged
		public float getValue(double, double, double, int) 	SignatureNotChanged
		public float getValue(double, double, int) 	SignatureNotChanged
		public void setCellScale(double) 	SignatureNotChanged
		public void setShuffle(double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.CellHeightNoise	NameNotChanged
	Source: "CellHeightNoise.java"
	FieldsOf: com.volmit.iris.noise.CellHeightNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.CellHeightNoise
		public void <init>(long) 	SignatureNotChanged
		private double filter(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.CellularNoise	NameNotChanged
	Source: "CellularNoise.java"
	FieldsOf: com.volmit.iris.noise.CellularNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.CellularNoise
		public void <init>(long) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.CubicNoise	NameNotChanged
	Source: "CubicNoise.java"
	FieldsOf: com.volmit.iris.noise.CubicNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.CubicNoise
		public void <init>(long) 	SignatureNotChanged
		private double f(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FastNoise	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise
		private static final com.volmit.iris.noise.FastNoise$Float2[] CELL_2D	=>	p
		private static final com.volmit.iris.noise.FastNoise$Float3[] CELL_3D	=>	n
		private static final com.volmit.iris.noise.FastNoise$Float2[] GRAD_2D	=>	b
		private static final com.volmit.iris.noise.FastNoise$Float3[] GRAD_3D	=>	g
		private static final byte[] SIMPLEX_4D	=>	q
		private static java.lang.String[] a	=>	r
		private com.volmit.iris.noise.FastNoise$CellularDistanceFunction m_cellularDistanceFunction	=>	d
		private com.volmit.iris.noise.FastNoise m_cellularNoiseLookup	=>	l
		private com.volmit.iris.noise.FastNoise$CellularReturnType m_cellularReturnType	=>	k
		private float m_fractalBounding	=>	c
		private com.volmit.iris.noise.FastNoise$FractalType m_fractalType	=>	h
		private float m_frequency	=>	e
		private float m_gain	=>	o
		private float m_gradientPerturbAmp	=>	m
		private com.volmit.iris.noise.FastNoise$Interp m_interp	=>	a
		private float m_lacunarity	=>	f
		private com.volmit.iris.noise.FastNoise$NoiseType m_noiseType	=>	s
		private int m_octaves	=>	i
		private int m_seed	=>	j
	MethodsOf: com.volmit.iris.noise.FastNoise
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		private void CalculateFractalBounding()	=>	a()
		private static float CubicLerp(float, float, float, float, float)	=>	a(float, float, float, float, float)
		public double DGetWhiteNoise(double, double) 	SignatureNotChanged
		public double DGetWhiteNoise(double, double, double) 	SignatureNotChanged
		private static double DValCoord2D(int, long, long)	=>	a(int, long, long)
		private static double DValCoord3D(int, long, long, long)	=>	a(int, long, long, long)
		private long DoubleCast2Long(double)	=>	a(double)
		private static int FastFloor(float)	=>	a(float)
		private static int FastRound(float)	=>	e(float)
		private int FloatCast2Int(float)	=>	d(float)
		public float GetCellular(float, float) 	SignatureNotChanged
		public float GetCellular(float, float, float) 	SignatureNotChanged
		public float GetCubic(float, float) 	SignatureNotChanged
		public float GetCubic(float, float, float) 	SignatureNotChanged
		public float GetCubicFractal(float, float) 	SignatureNotChanged
		public float GetCubicFractal(float, float, float) 	SignatureNotChanged
		public static float GetDecimalType() 	SignatureNotChanged
		public float GetNoise(float, float) 	SignatureNotChanged
		public float GetNoise(float, float, float) 	SignatureNotChanged
		public float GetPerlin(float, float) 	SignatureNotChanged
		public float GetPerlin(float, float, float) 	SignatureNotChanged
		public float GetPerlinFractal(float, float) 	SignatureNotChanged
		public float GetPerlinFractal(float, float, float) 	SignatureNotChanged
		public int GetSeed() 	SignatureNotChanged
		public float GetSimplex(float, float) 	SignatureNotChanged
		public float GetSimplex(float, float, float) 	SignatureNotChanged
		public float GetSimplex(float, float, float, float) 	SignatureNotChanged
		public float GetSimplexFractal(float, float) 	SignatureNotChanged
		public float GetSimplexFractal(float, float, float) 	SignatureNotChanged
		public float GetValue(float, float) 	SignatureNotChanged
		public float GetValue(float, float, float) 	SignatureNotChanged
		public float GetValueFractal(float, float) 	SignatureNotChanged
		public float GetValueFractal(float, float, float) 	SignatureNotChanged
		public float GetWhiteNoise(float, float) 	SignatureNotChanged
		public float GetWhiteNoise(float, float, float) 	SignatureNotChanged
		public float GetWhiteNoise(float, float, float, float) 	SignatureNotChanged
		public float GetWhiteNoiseInt(int, int) 	SignatureNotChanged
		public float GetWhiteNoiseInt(int, int, int) 	SignatureNotChanged
		public float GetWhiteNoiseInt(int, int, int, int) 	SignatureNotChanged
		private static float GradCoord2D(int, int, int, float, float)	=>	a(int, int, int, float, float)
		private static float GradCoord3D(int, int, int, int, float, float, float)	=>	a(int, int, int, int, float, float, float)
		private static float GradCoord4D(int, int, int, int, int, float, float, float, float)	=>	a(int, int, int, int, int, float, float, float, float)
		public void GradientPerturb(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public void GradientPerturb(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public void GradientPerturbFractal(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public void GradientPerturbFractal(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		private static int Hash2D(int, int, int)	=>	b(int, int, int)
		private static int Hash3D(int, int, int, int)	=>	b(int, int, int, int)
		public static int Hash4D(int, int, int, int, int) 	SignatureNotChanged
		private static float InterpHermiteFunc(float)	=>	c(float)
		private static float InterpQuinticFunc(float)	=>	b(float)
		private static float Lerp(float, float, float)	=>	c(float, float, float)
		public void SetCellularDistanceFunction(com.volmit.iris.noise.FastNoise$CellularDistanceFunction) 	SignatureNotChanged
		public void SetCellularNoiseLookup(com.volmit.iris.noise.FastNoise) 	SignatureNotChanged
		public void SetCellularReturnType(com.volmit.iris.noise.FastNoise$CellularReturnType) 	SignatureNotChanged
		public void SetFractalGain(float) 	SignatureNotChanged
		public void SetFractalLacunarity(float) 	SignatureNotChanged
		public void SetFractalOctaves(int) 	SignatureNotChanged
		public void SetFractalType(com.volmit.iris.noise.FastNoise$FractalType) 	SignatureNotChanged
		public void SetFrequency(float) 	SignatureNotChanged
		public void SetGradientPerturbAmp(float) 	SignatureNotChanged
		public void SetInterp(com.volmit.iris.noise.FastNoise$Interp) 	SignatureNotChanged
		public void SetNoiseType(com.volmit.iris.noise.FastNoise$NoiseType) 	SignatureNotChanged
		public void SetSeed(int) 	SignatureNotChanged
		private float SingleCellular(float, float)	=>	c(float, float)
		private float SingleCellular(float, float, float)	=>	m(float, float, float)
		private float SingleCellular2Edge(float, float)	=>	e(float, float)
		private float SingleCellular2Edge(float, float, float)	=>	l(float, float, float)
		private float SingleCubic(int, float, float)	=>	b(int, float, float)
		private float SingleCubic(int, float, float, float)	=>	b(int, float, float, float)
		private float SingleCubicFractalBillow(float, float)	=>	a(float, float)
		private float SingleCubicFractalBillow(float, float, float)	=>	i(float, float, float)
		private float SingleCubicFractalFBM(float, float)	=>	l(float, float)
		private float SingleCubicFractalFBM(float, float, float)	=>	o(float, float, float)
		private float SingleCubicFractalRigidMulti(float, float)	=>	m(float, float)
		private float SingleCubicFractalRigidMulti(float, float, float)	=>	g(float, float, float)
		private void SingleGradientPerturb(int, float, float, com.volmit.iris.util.vec.Vector2f)	=>	a(int, float, float, com.volmit.iris.util.vec.Vector2f)
		private void SingleGradientPerturb(int, float, float, com.volmit.iris.util.vec.Vector3f)	=>	a(int, float, float, com.volmit.iris.util.vec.Vector3f)
		private float SinglePerlin(int, float, float)	=>	d(int, float, float)
		private float SinglePerlin(int, float, float, float)	=>	d(int, float, float, float)
		private float SinglePerlinFractalBillow(float, float)	=>	d(float, float)
		private float SinglePerlinFractalBillow(float, float, float)	=>	k(float, float, float)
		private float SinglePerlinFractalFBM(float, float)	=>	k(float, float)
		private float SinglePerlinFractalFBM(float, float, float)	=>	h(float, float, float)
		private float SinglePerlinFractalRigidMulti(float, float)	=>	b(float, float)
		private float SinglePerlinFractalRigidMulti(float, float, float)	=>	e(float, float, float)
		private float SingleSimplex(int, float, float)	=>	a(int, float, float)
		private float SingleSimplex(int, float, float, float)	=>	a(int, float, float, float)
		private float SingleSimplex(int, float, float, float, float)	=>	a(int, float, float, float, float)
		private float SingleSimplexFractalBillow(float, float)	=>	j(float, float)
		private float SingleSimplexFractalBillow(float, float, float)	=>	d(float, float, float)
		private float SingleSimplexFractalFBM(float, float)	=>	i(float, float)
		private float SingleSimplexFractalFBM(float, float, float)	=>	a(float, float, float)
		private float SingleSimplexFractalRigidMulti(float, float)	=>	f(float, float)
		private float SingleSimplexFractalRigidMulti(float, float, float)	=>	b(float, float, float)
		private float SingleValue(int, float, float)	=>	c(int, float, float)
		private float SingleValue(int, float, float, float)	=>	c(int, float, float, float)
		private float SingleValueFractalBillow(float, float)	=>	h(float, float)
		private float SingleValueFractalBillow(float, float, float)	=>	n(float, float, float)
		private float SingleValueFractalFBM(float, float)	=>	g(float, float)
		private float SingleValueFractalFBM(float, float, float)	=>	j(float, float, float)
		private float SingleValueFractalRigidMulti(float, float)	=>	n(float, float)
		private float SingleValueFractalRigidMulti(float, float, float)	=>	f(float, float, float)
		private static float ValCoord2D(int, int, int)	=>	a(int, int, int)
		private static float ValCoord3D(int, int, int, int)	=>	a(int, int, int, int)
		private static float ValCoord4D(int, int, int, int, int)	=>	a(int, int, int, int, int)
		public static java.lang.String[] a()	=>	b()
		public static void a(java.lang.String[])	=>	b(java.lang.String[])

Class: synthetic com.volmit.iris.noise.FastNoise$1	=>	com.volmit.iris.noise.FastNoise$c
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$noise$FastNoise$CellularDistanceFunction	=>	d
		static final synthetic int[] $SwitchMap$com$volmit$iris$noise$FastNoise$CellularReturnType	=>	b
		static final synthetic int[] $SwitchMap$com$volmit$iris$noise$FastNoise$FractalType	=>	a
		static final synthetic int[] $SwitchMap$com$volmit$iris$noise$FastNoise$Interp	=>	c
		static final synthetic int[] $SwitchMap$com$volmit$iris$noise$FastNoise$NoiseType	=>	e
	MethodsOf: com.volmit.iris.noise.FastNoise$1
		static void <clinit>() 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.FastNoise$CellularDistanceFunction	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$CellularDistanceFunction
		private static final synthetic com.volmit.iris.noise.FastNoise$CellularDistanceFunction[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.FastNoise$CellularDistanceFunction Euclidean	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularDistanceFunction Manhattan	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularDistanceFunction Natural	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$CellularDistanceFunction
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$CellularDistanceFunction valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$CellularDistanceFunction[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.FastNoise$CellularReturnType	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$CellularReturnType
		private static final synthetic com.volmit.iris.noise.FastNoise$CellularReturnType[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType CellValue	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance2	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance2Add	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance2Div	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance2Mul	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType Distance2Sub	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$CellularReturnType NoiseLookup	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$CellularReturnType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$CellularReturnType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$CellularReturnType[] values() 	SignatureNotChanged

Class: com.volmit.iris.noise.FastNoise$Float2	=>	com.volmit.iris.noise.FastNoise$b
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$Float2
		public final float x	NameNotChanged
		public final float y	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$Float2
		public void <init>(float, float) 	SignatureNotChanged

Class: com.volmit.iris.noise.FastNoise$Float3	=>	com.volmit.iris.noise.FastNoise$a
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$Float3
		public final float x	NameNotChanged
		public final float y	NameNotChanged
		public final float z	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$Float3
		public void <init>(float, float, float) 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.FastNoise$FractalType	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$FractalType
		private static final synthetic com.volmit.iris.noise.FastNoise$FractalType[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.FastNoise$FractalType Billow	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$FractalType FBM	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$FractalType RigidMulti	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$FractalType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$FractalType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$FractalType[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.FastNoise$Interp	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$Interp
		private static final synthetic com.volmit.iris.noise.FastNoise$Interp[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.FastNoise$Interp Hermite	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$Interp Linear	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$Interp Quintic	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$Interp
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$Interp valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$Interp[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.FastNoise$NoiseType	NameNotChanged
	Source: "FastNoise.java"
	FieldsOf: com.volmit.iris.noise.FastNoise$NoiseType
		private static final synthetic com.volmit.iris.noise.FastNoise$NoiseType[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType Cellular	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType Cubic	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType CubicFractal	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType Perlin	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType PerlinFractal	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType Simplex	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType SimplexFractal	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType Value	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType ValueFractal	NameNotChanged
		public static final enum com.volmit.iris.noise.FastNoise$NoiseType WhiteNoise	NameNotChanged
	MethodsOf: com.volmit.iris.noise.FastNoise$NoiseType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$NoiseType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.FastNoise$NoiseType[] values() 	SignatureNotChanged

Class: public com.volmit.iris.noise.FlatNoise	NameNotChanged
	Source: "FlatNoise.java"
	FieldsOf: com.volmit.iris.noise.FlatNoise
	MethodsOf: com.volmit.iris.noise.FlatNoise
		public void <init>(long) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FractalBillowPerlinNoise	NameNotChanged
	Source: "FractalBillowPerlinNoise.java"
	FieldsOf: com.volmit.iris.noise.FractalBillowPerlinNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.FractalBillowPerlinNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FractalBillowSimplexNoise	NameNotChanged
	Source: "FractalBillowSimplexNoise.java"
	FieldsOf: com.volmit.iris.noise.FractalBillowSimplexNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.FractalBillowSimplexNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FractalCubicNoise	NameNotChanged
	Source: "FractalCubicNoise.java"
	FieldsOf: com.volmit.iris.noise.FractalCubicNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.FractalCubicNoise
		public void <init>(long) 	SignatureNotChanged
		private double f(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FractalFBMSimplexNoise	NameNotChanged
	Source: "FractalFBMSimplexNoise.java"
	FieldsOf: com.volmit.iris.noise.FractalFBMSimplexNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.FractalFBMSimplexNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.FractalRigidMultiSimplexNoise	NameNotChanged
	Source: "FractalRigidMultiSimplexNoise.java"
	FieldsOf: com.volmit.iris.noise.FractalRigidMultiSimplexNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.FractalRigidMultiSimplexNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.GlobNoise	NameNotChanged
	Source: "GlobNoise.java"
	FieldsOf: com.volmit.iris.noise.GlobNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.GlobNoise
		public void <init>(long) 	SignatureNotChanged
		private double f(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public abstract com.volmit.iris.noise.NoiseFactory	NameNotChanged
	Source: "NoiseFactory.java"
	FieldsOf: com.volmit.iris.noise.NoiseFactory
	MethodsOf: com.volmit.iris.noise.NoiseFactory
		public abstract com.volmit.iris.noise.NoiseGenerator create(long) 	SignatureNotChanged

Class: public abstract com.volmit.iris.noise.NoiseGenerator	NameNotChanged
	Source: "NoiseGenerator.java"
	FieldsOf: com.volmit.iris.noise.NoiseGenerator
	MethodsOf: com.volmit.iris.noise.NoiseGenerator
		public abstract double noise(double) 	SignatureNotChanged
		public abstract double noise(double, double) 	SignatureNotChanged
		public abstract double noise(double, double, double) 	SignatureNotChanged

Class: public final enum com.volmit.iris.noise.NoiseType	NameNotChanged
	Source: "NoiseType.java"
	FieldsOf: com.volmit.iris.noise.NoiseType
		private static final synthetic com.volmit.iris.noise.NoiseType[] $VALUES	=>	a
		public static final enum com.volmit.iris.noise.NoiseType CELLULAR	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType CELLULAR_HEIGHT	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType CUBIC	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FLAT	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FRACTAL_BILLOW_PERLIN	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FRACTAL_CUBIC	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType FRACTAL_RIGID_MULTI_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType GLOB	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType PERLIN	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType VASCULAR	NameNotChanged
		public static final enum com.volmit.iris.noise.NoiseType WHITE	NameNotChanged
		private com.volmit.iris.noise.NoiseFactory f	=>	b
	MethodsOf: com.volmit.iris.noise.NoiseType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, com.volmit.iris.noise.NoiseFactory) 	SignatureNotChanged
		public com.volmit.iris.noise.NoiseGenerator create(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$0(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$1(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$10(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$11(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$12(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$13(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$2(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$3(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$4(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$5(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$6(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$7(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$8(long) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.NoiseGenerator lambda$static$9(long) 	SignatureNotChanged
		public static com.volmit.iris.noise.NoiseType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.noise.NoiseType[] values() 	SignatureNotChanged

Class: public abstract com.volmit.iris.noise.OctaveNoise	NameNotChanged
	Source: "OctaveNoise.java"
	FieldsOf: com.volmit.iris.noise.OctaveNoise
	MethodsOf: com.volmit.iris.noise.OctaveNoise
		public abstract void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.PerlinNoise	NameNotChanged
	Source: "PerlinNoise.java"
	FieldsOf: com.volmit.iris.noise.PerlinNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
		private int octaves	=>	b
	MethodsOf: com.volmit.iris.noise.PerlinNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.PolygonGenerator	NameNotChanged
	Source: "PolygonGenerator.java"
	FieldsOf: com.volmit.iris.noise.PolygonGenerator
		private int bits	=>	b
		private com.volmit.iris.noise.CNG[] gen	=>	d
		private int possibilities	=>	c
		private double[] rarity	=>	a
		private boolean useRarity	=>	e
	MethodsOf: com.volmit.iris.noise.PolygonGenerator
		public void <init>(com.volmit.iris.util.RNG, int, double, int, java.util.function.Function) 	SignatureNotChanged
		public double getClosestNeighbor(double[]) 	SignatureNotChanged
		public int getIndex(double[]) 	SignatureNotChanged
		public boolean hasBorder(int, double, double[]) 	SignatureNotChanged
		public boolean hasBorder3D(int, double, double[]) 	SignatureNotChanged
		public void setRarity(int, double) 	SignatureNotChanged
		public com.volmit.iris.noise.PolygonGenerator useRarity() 	SignatureNotChanged

Class: public com.volmit.iris.noise.PolygonGenerator$EnumPolygonGenerator	NameNotChanged
	Source: "PolygonGenerator.java"
	FieldsOf: com.volmit.iris.noise.PolygonGenerator$EnumPolygonGenerator
		private java.lang.Object[] choices	=>	f
	MethodsOf: com.volmit.iris.noise.PolygonGenerator$EnumPolygonGenerator
		public void <init>(com.volmit.iris.util.RNG, double, int, com.volmit.iris.util.KList, com.volmit.iris.util.KMap, java.util.function.Function) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG, double, int, java.lang.Object[], java.util.function.Function) 	SignatureNotChanged
		public java.lang.Object getChoice(double[]) 	SignatureNotChanged
		public void setRarity(java.lang.Object, double) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.noise.PolygonGenerator useRarity() 	SignatureNotChanged
		public com.volmit.iris.noise.PolygonGenerator$EnumPolygonGenerator useRarity() 	SignatureNotChanged

Class: public com.volmit.iris.noise.RarityCellGenerator	NameNotChanged
	Source: "RarityCellGenerator.java"
	FieldsOf: com.volmit.iris.noise.RarityCellGenerator
	MethodsOf: com.volmit.iris.noise.RarityCellGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public com.volmit.iris.util.IRare get(double, double, com.volmit.iris.util.KList) 	SignatureNotChanged

Class: public com.volmit.iris.noise.SimplexNoise	NameNotChanged
	Source: "SimplexNoise.java"
	FieldsOf: com.volmit.iris.noise.SimplexNoise
		private final com.volmit.iris.noise.FastNoise n	=>	b
		private int octaves	=>	a
	MethodsOf: com.volmit.iris.noise.SimplexNoise
		public void <init>(long) 	SignatureNotChanged
		public double f(double) 	SignatureNotChanged
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged

Class: public com.volmit.iris.noise.VascularNoise	NameNotChanged
	Source: "VascularNoise.java"
	FieldsOf: com.volmit.iris.noise.VascularNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.VascularNoise
		public void <init>(long) 	SignatureNotChanged
		private double filter(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.noise.WhiteNoise	NameNotChanged
	Source: "WhiteNoise.java"
	FieldsOf: com.volmit.iris.noise.WhiteNoise
		private final com.volmit.iris.noise.FastNoise n	=>	a
	MethodsOf: com.volmit.iris.noise.WhiteNoise
		public void <init>(long) 	SignatureNotChanged
		private double f(double)	=>	a(double)
		public double noise(double) 	SignatureNotChanged
		public double noise(double, double) 	SignatureNotChanged
		public double noise(double, double, double) 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.DecorationPart	NameNotChanged
	Source: "DecorationPart.java"
	FieldsOf: com.volmit.iris.object.DecorationPart
		private static final synthetic com.volmit.iris.object.DecorationPart[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.DecorationPart NONE	NameNotChanged
		public static final enum com.volmit.iris.object.DecorationPart SEA_SURFACE	NameNotChanged
		public static final enum com.volmit.iris.object.DecorationPart SHORE_LINE	NameNotChanged
	MethodsOf: com.volmit.iris.object.DecorationPart
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.DecorationPart valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.DecorationPart[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.Envelope	NameNotChanged
	Source: "Envelope.java"
	FieldsOf: com.volmit.iris.object.Envelope
		private static final synthetic com.volmit.iris.object.Envelope[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.Envelope CELLS	NameNotChanged
		public static final enum com.volmit.iris.object.Envelope EVERYWHERE	NameNotChanged
		public static final enum com.volmit.iris.object.Envelope VEINS	NameNotChanged
	MethodsOf: com.volmit.iris.object.Envelope
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.Envelope valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.Envelope[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.InferredType	NameNotChanged
	Source: "InferredType.java"
	FieldsOf: com.volmit.iris.object.InferredType
		private static final synthetic com.volmit.iris.object.InferredType[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.InferredType CAVE	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType DEFER	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType LAND	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType SEA	NameNotChanged
		public static final enum com.volmit.iris.object.InferredType SHORE	NameNotChanged
	MethodsOf: com.volmit.iris.object.InferredType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.InferredType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.InferredType[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.InterpolationMethod	NameNotChanged
	Source: "InterpolationMethod.java"
	FieldsOf: com.volmit.iris.object.InterpolationMethod
		private static final synthetic com.volmit.iris.object.InterpolationMethod[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.InterpolationMethod BICUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR_BEZIER	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR_PARAMETRIC_1_5	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR_PARAMETRIC_2	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod BILINEAR_PARAMETRIC_4	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod CATMULL_ROM_SPLINE	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_LOOSE	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_LOOSE_FULL_NEGATIVE_BIAS	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_LOOSE_FULL_POSITIVE_BIAS	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_LOOSE_HALF_NEGATIVE_BIAS	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_LOOSE_HALF_POSITIVE_BIAS	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod HERMITE_TENSE	NameNotChanged
		public static final enum com.volmit.iris.object.InterpolationMethod NONE	NameNotChanged
	MethodsOf: com.volmit.iris.object.InterpolationMethod
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.InterpolationMethod valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.InterpolationMethod[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.InventorySlotType	NameNotChanged
	Source: "InventorySlotType.java"
	FieldsOf: com.volmit.iris.object.InventorySlotType
		private static final synthetic com.volmit.iris.object.InventorySlotType[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.InventorySlotType BLAST_FURNACE	NameNotChanged
		public static final enum com.volmit.iris.object.InventorySlotType FUEL	NameNotChanged
		public static final enum com.volmit.iris.object.InventorySlotType FURNACE	NameNotChanged
		public static final enum com.volmit.iris.object.InventorySlotType SMOKER	NameNotChanged
		public static final enum com.volmit.iris.object.InventorySlotType STORAGE	NameNotChanged
	MethodsOf: com.volmit.iris.object.InventorySlotType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.InventorySlotType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.InventorySlotType[] values() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisAttributeModifier	NameNotChanged
	Source: "IrisAttributeModifier.java"
	FieldsOf: com.volmit.iris.object.IrisAttributeModifier
		private org.bukkit.attribute.Attribute attribute	NameNotChanged
		private double chance	NameNotChanged
		private double maxAmount	NameNotChanged
		private double minAmount	NameNotChanged
		private java.lang.String name	NameNotChanged
		private org.bukkit.attribute.AttributeModifier$Operation operation	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisAttributeModifier
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void apply(com.volmit.iris.util.RNG, org.bukkit.inventory.meta.ItemMeta) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getAmount(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public org.bukkit.attribute.Attribute getAttribute() 	SignatureNotChanged
		public double getChance() 	SignatureNotChanged
		public double getMaxAmount() 	SignatureNotChanged
		public double getMinAmount() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public org.bukkit.attribute.AttributeModifier$Operation getOperation() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setAttribute(org.bukkit.attribute.Attribute) 	SignatureNotChanged
		public void setChance(double) 	SignatureNotChanged
		public void setMaxAmount(double) 	SignatureNotChanged
		public void setMinAmount(double) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setOperation(org.bukkit.attribute.AttributeModifier$Operation) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisAxisRotationClamp	NameNotChanged
	Source: "IrisAxisRotationClamp.java"
	FieldsOf: com.volmit.iris.object.IrisAxisRotationClamp
		private boolean enabled	NameNotChanged
		private double interval	NameNotChanged
		private double max	NameNotChanged
		private double min	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisAxisRotationClamp
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(boolean, double, double, double) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getInterval() 	SignatureNotChanged
		public double getMax() 	SignatureNotChanged
		public double getMin() 	SignatureNotChanged
		public double getRadians(int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isEnabled() 	SignatureNotChanged
		public boolean isLocked() 	SignatureNotChanged
		public boolean isUnlimited() 	SignatureNotChanged
		public void setEnabled(boolean) 	SignatureNotChanged
		public void setInterval(double) 	SignatureNotChanged
		public void setMax(double) 	SignatureNotChanged
		public void setMin(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisBiome	NameNotChanged
	Source: "IrisBiome.java"
	FieldsOf: com.volmit.iris.object.IrisBiome
		private static java.lang.String[] b	=>	e
		private transient com.volmit.iris.gen.atomics.AtomicCache biomeGenerator	=>	d
		private com.volmit.iris.util.KList biomeScatter	NameNotChanged
		private com.volmit.iris.util.KList biomeSkyScatter	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle biomeStyle	NameNotChanged
		private double biomeZoom	NameNotChanged
		private double childShrinkFactor	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle childStyle	NameNotChanged
		private com.volmit.iris.util.KList children	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache childrenCell	=>	f
		private com.volmit.iris.util.KList decorators	NameNotChanged
		private com.volmit.iris.util.KList deposits	NameNotChanged
		private org.bukkit.block.Biome derivative	NameNotChanged
		private com.volmit.iris.util.KList effects	NameNotChanged
		private com.volmit.iris.util.KList generators	NameNotChanged
		private transient com.volmit.iris.object.InferredType inferredType	=>	g
		private transient com.volmit.iris.gen.atomics.AtomicCache layerHeightGenerators	=>	j
		private transient com.volmit.iris.gen.atomics.AtomicCache layerSeaHeightGenerators	=>	k
		private com.volmit.iris.util.KList layers	NameNotChanged
		private boolean lockLayers	NameNotChanged
		private int lockLayersMax	NameNotChanged
		private com.volmit.iris.object.IrisLootReference loot	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache maxHeight	=>	i
		private java.lang.String name	NameNotChanged
		private com.volmit.iris.util.KList objects	NameNotChanged
		private int rarity	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache realChildren	=>	h
		private com.volmit.iris.util.KList seaLayers	NameNotChanged
		private com.volmit.iris.object.IrisBiomePaletteLayer slab	NameNotChanged
		private com.volmit.iris.util.KList structures	NameNotChanged
		private com.volmit.iris.object.IrisBiomePaletteLayer wall	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisBiome
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static java.lang.String[] b()	=>	c()
		public static void b(java.lang.String[])	=>	a(java.lang.String[])
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList generateLayers(double, double, com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList generateLockedLayers(double, double, com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList generateSeaLayers(double, double, com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllChildren(com.volmit.iris.gen.ContextualChunkGenerator, int) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getBiomeGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getBiomeGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.util.KList getBiomeScatter() 	SignatureNotChanged
		public com.volmit.iris.util.KList getBiomeSkyScatter() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getBiomeStyle() 	SignatureNotChanged
		public double getBiomeZoom() 	SignatureNotChanged
		public double getChildShrinkFactor() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getChildStyle() 	SignatureNotChanged
		public com.volmit.iris.util.KList getChildren() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getChildrenCell() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getChildrenGenerator(com.volmit.iris.util.RNG, int, double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getDecorators() 	SignatureNotChanged
		public com.volmit.iris.util.KList getDeposits() 	SignatureNotChanged
		public org.bukkit.block.Biome getDerivative() 	SignatureNotChanged
		public com.volmit.iris.util.KList getEffects() 	SignatureNotChanged
		public com.volmit.iris.util.KList getGenerators() 	SignatureNotChanged
		public org.bukkit.block.Biome getGroundBiome(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public double getHeight(com.volmit.iris.gen.ContextualChunkGenerator, double, double, long) 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getInferredType() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getLayerHeightGenerators() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLayerHeightGenerators(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getLayerSeaHeightGenerators() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLayerSeaHeightGenerators(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.util.KList getLayers() 	SignatureNotChanged
		public int getLockLayersMax() 	SignatureNotChanged
		public com.volmit.iris.object.IrisLootReference getLoot() 	SignatureNotChanged
		private int getMaxHeight()	=>	a()
		public java.lang.String getName() 	SignatureNotChanged
		public com.volmit.iris.util.KList getObjects() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRealChildren() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealChildren(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getSeaLayers() 	SignatureNotChanged
		public org.bukkit.block.Biome getSkyBiome(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer getSlab() 	SignatureNotChanged
		public com.volmit.iris.util.KList getStructures() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer getWall() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome infer(com.volmit.iris.object.InferredType, com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public boolean isLand() 	SignatureNotChanged
		public boolean isLockLayers() 	SignatureNotChanged
		public boolean isSea() 	SignatureNotChanged
		public boolean isShore() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getBiomeGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getChildrenGenerator$1(com.volmit.iris.util.RNG, int, double) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getLayerHeightGenerators$3(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getLayerSeaHeightGenerators$4(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic java.lang.Integer lambda$getMaxHeight$2() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealChildren$5(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public void setBiomeGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setBiomeScatter(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setBiomeSkyScatter(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setBiomeZoom(double) 	SignatureNotChanged
		public void setChildShrinkFactor(double) 	SignatureNotChanged
		public void setChildStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setChildren(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setChildrenCell(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setDecorators(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setDeposits(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setDerivative(org.bukkit.block.Biome) 	SignatureNotChanged
		public void setEffects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setGenerators(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setInferredType(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public void setLayerHeightGenerators(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setLayerSeaHeightGenerators(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setLayers(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setLockLayers(boolean) 	SignatureNotChanged
		public void setLockLayersMax(int) 	SignatureNotChanged
		public void setLoot(com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void setMaxHeight(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setObjects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public void setRealChildren(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setSeaLayers(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setSlab(com.volmit.iris.object.IrisBiomePaletteLayer) 	SignatureNotChanged
		public void setStructures(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setWall(com.volmit.iris.object.IrisBiomePaletteLayer) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisBiomeDecorator	NameNotChanged
	Source: "IrisBiomeDecorator.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeDecorator
		private transient com.volmit.iris.gen.atomics.AtomicCache blockData	=>	d
		private double chance	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache heightGenerator	=>	a
		private com.volmit.iris.object.IrisGeneratorStyle heightVariance	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache layerGenerator	=>	c
		private com.volmit.iris.util.KList palette	NameNotChanged
		private com.volmit.iris.object.DecorationPart partOf	NameNotChanged
		private int stackMax	NameNotChanged
		private int stackMin	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle style	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle variance	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache varianceGenerator	=>	b
		private double varianceZoom	NameNotChanged
		private double verticalZoom	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisBiomeDecorator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.lang.String) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getBlockData() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getBlockData(com.volmit.iris.object.IrisBiome, com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		public double getChance() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int getHeight(com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getHeightGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getHeightGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getHeightVariance() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getLayerGenerator() 	SignatureNotChanged
		public com.volmit.iris.util.KList getPalette() 	SignatureNotChanged
		public com.volmit.iris.object.DecorationPart getPartOf() 	SignatureNotChanged
		public int getStackMax() 	SignatureNotChanged
		public int getStackMin() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getStyle() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getVariance() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getVarianceGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getVarianceGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getVarianceZoom() 	SignatureNotChanged
		public double getVerticalZoom() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getBlockData$3() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getGenerator$1(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getHeightGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getVarianceGenerator$2(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setBlockData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setChance(double) 	SignatureNotChanged
		public void setHeightGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setHeightVariance(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setLayerGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setPalette(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setPartOf(com.volmit.iris.object.DecorationPart) 	SignatureNotChanged
		public void setStackMax(int) 	SignatureNotChanged
		public void setStackMin(int) 	SignatureNotChanged
		public void setStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setVariance(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setVarianceGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setVarianceZoom(double) 	SignatureNotChanged
		public void setVerticalZoom(double) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisBiomeGeneratorLink	NameNotChanged
	Source: "IrisBiomeGeneratorLink.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeGeneratorLink
		private transient com.volmit.iris.gen.atomics.AtomicCache gen	=>	a
		private java.lang.String generator	NameNotChanged
		private int max	NameNotChanged
		private int min	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisBiomeGeneratorLink
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGenerator getCachedGenerator(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getGen() 	SignatureNotChanged
		public java.lang.String getGenerator() 	SignatureNotChanged
		public double getHeight(com.volmit.iris.gen.ContextualChunkGenerator, double, double, long) 	SignatureNotChanged
		public int getMax() 	SignatureNotChanged
		public int getMin() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.object.IrisGenerator lambda$getCachedGenerator$0(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public void setGen(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setGenerator(java.lang.String) 	SignatureNotChanged
		public void setMax(int) 	SignatureNotChanged
		public void setMin(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisBiomeMutation	NameNotChanged
	Source: "IrisBiomeMutation.java"
	FieldsOf: com.volmit.iris.object.IrisBiomeMutation
		private int checks	NameNotChanged
		private com.volmit.iris.util.KList objects	NameNotChanged
		private int radius	NameNotChanged
		private com.volmit.iris.util.KList sideA	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache sideACache	=>	a
		private com.volmit.iris.util.KList sideB	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache sideBCache	=>	b
	MethodsOf: com.volmit.iris.object.IrisBiomeMutation
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getChecks() 	SignatureNotChanged
		public com.volmit.iris.util.KList getObjects() 	SignatureNotChanged
		public int getRadius() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealSideA(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealSideB(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getSideA() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getSideACache() 	SignatureNotChanged
		public com.volmit.iris.util.KList getSideB() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getSideBCache() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealSideA$0(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealSideB$1(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList processList(com.volmit.iris.gen.ContextualChunkGenerator, com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setChecks(int) 	SignatureNotChanged
		public void setObjects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setRadius(int) 	SignatureNotChanged
		public void setSideA(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setSideACache(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setSideB(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setSideBCache(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisBiomePaletteLayer	NameNotChanged
	Source: "IrisBiomePaletteLayer.java"
	FieldsOf: com.volmit.iris.object.IrisBiomePaletteLayer
		private transient com.volmit.iris.gen.atomics.AtomicCache blockData	=>	b
		private transient com.volmit.iris.gen.atomics.AtomicCache heightGenerator	=>	a
		private transient com.volmit.iris.gen.atomics.AtomicCache layerGenerator	=>	c
		private int maxHeight	NameNotChanged
		private int minHeight	NameNotChanged
		private com.volmit.iris.util.KList palette	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle style	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisBiomePaletteLayer
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.lang.String) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getBlockData() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getHeightGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getHeightGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getLayerGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getLayerGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int getMaxHeight() 	SignatureNotChanged
		public int getMinHeight() 	SignatureNotChanged
		public com.volmit.iris.util.KList getPalette() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getStyle() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getBlockData$2() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getHeightGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getLayerGenerator$1(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setBlockData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setHeightGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setLayerGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setMaxHeight(int) 	SignatureNotChanged
		public void setMinHeight(int) 	SignatureNotChanged
		public void setPalette(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer zero() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisCaveLayer	NameNotChanged
	Source: "IrisCaveLayer.java"
	FieldsOf: com.volmit.iris.object.IrisCaveLayer
		private boolean canBreakSurface	NameNotChanged
		private double caveThickness	NameNotChanged
		private double caveZoom	NameNotChanged
		private com.volmit.iris.object.IrisShapedGeneratorStyle horizontalSlope	NameNotChanged
		private com.volmit.iris.object.IrisShapedGeneratorStyle verticalSlope	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisCaveLayer
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getCaveThickness() 	SignatureNotChanged
		public double getCaveZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisShapedGeneratorStyle getHorizontalSlope() 	SignatureNotChanged
		public com.volmit.iris.object.IrisShapedGeneratorStyle getVerticalSlope() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isCanBreakSurface() 	SignatureNotChanged
		public void setCanBreakSurface(boolean) 	SignatureNotChanged
		public void setCaveThickness(double) 	SignatureNotChanged
		public void setCaveZoom(double) 	SignatureNotChanged
		public void setHorizontalSlope(com.volmit.iris.object.IrisShapedGeneratorStyle) 	SignatureNotChanged
		public void setVerticalSlope(com.volmit.iris.object.IrisShapedGeneratorStyle) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisCompatabilityFilter	NameNotChanged
	Source: "IrisCompatabilityFilter.java"
	FieldsOf: com.volmit.iris.object.IrisCompatabilityFilter
		private boolean exact	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache findData	=>	a
		private transient com.volmit.iris.gen.atomics.AtomicCache replaceData	=>	b
		private java.lang.String supplement	NameNotChanged
		private java.lang.String when	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisCompatabilityFilter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String, boolean) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getFind() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getFindData() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getReplace() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getReplaceData() 	SignatureNotChanged
		public java.lang.String getSupplement() 	SignatureNotChanged
		public java.lang.String getWhen() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isExact() 	SignatureNotChanged
		private synthetic org.bukkit.block.data.BlockData lambda$getFind$0() 	SignatureNotChanged
		private synthetic org.bukkit.block.data.BlockData lambda$getReplace$1() 	SignatureNotChanged
		public void setExact(boolean) 	SignatureNotChanged
		public void setFindData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setReplaceData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setSupplement(java.lang.String) 	SignatureNotChanged
		public void setWhen(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisDepositGenerator	NameNotChanged
	Source: "IrisDepositGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisDepositGenerator
		private transient com.volmit.iris.gen.atomics.AtomicCache blockData	=>	b
		private int maxHeight	NameNotChanged
		private int maxPerChunk	NameNotChanged
		private int maxSize	NameNotChanged
		private int minHeight	NameNotChanged
		private int minPerChunk	NameNotChanged
		private int minSize	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache objects	=>	a
		private com.volmit.iris.util.KList palette	NameNotChanged
		private int varience	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisDepositGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public void generate(org.bukkit.generator.ChunkGenerator$ChunkData, com.volmit.iris.util.RNG, com.volmit.iris.gen.TerrainChunkGenerator, int, int) 	SignatureNotChanged
		private com.volmit.iris.object.IrisObject generateClumpObject(com.volmit.iris.util.RNG)	=>	b(com.volmit.iris.util.RNG)
		public com.volmit.iris.util.KList getBlockData() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject getClump(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int getMaxDimension() 	SignatureNotChanged
		public int getMaxHeight() 	SignatureNotChanged
		public int getMaxPerChunk() 	SignatureNotChanged
		public int getMaxSize() 	SignatureNotChanged
		public int getMinHeight() 	SignatureNotChanged
		public int getMinPerChunk() 	SignatureNotChanged
		public int getMinSize() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getObjects() 	SignatureNotChanged
		public com.volmit.iris.util.KList getPalette() 	SignatureNotChanged
		public int getVarience() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getBlockData$1() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getClump$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private org.bukkit.block.data.BlockData nextBlock(com.volmit.iris.util.RNG)	=>	a(com.volmit.iris.util.RNG)
		public void setBlockData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setMaxHeight(int) 	SignatureNotChanged
		public void setMaxPerChunk(int) 	SignatureNotChanged
		public void setMaxSize(int) 	SignatureNotChanged
		public void setMinHeight(int) 	SignatureNotChanged
		public void setMinPerChunk(int) 	SignatureNotChanged
		public void setMinSize(int) 	SignatureNotChanged
		public void setObjects(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setPalette(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setVarience(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisDimension	NameNotChanged
	Source: "IrisDimension.java"
	FieldsOf: com.volmit.iris.object.IrisDimension
		public static final org.bukkit.block.data.BlockData STONE	NameNotChanged
		public static final org.bukkit.block.data.BlockData WATER	NameNotChanged
		private double biomeZoom	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache cacheFilters	=>	m
		private boolean carving	NameNotChanged
		private double carvingEnvelope	NameNotChanged
		private int carvingMax	NameNotChanged
		private int carvingMin	NameNotChanged
		private double carvingRippleThickness	NameNotChanged
		private double carvingSliverThickness	NameNotChanged
		private double carvingZoom	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle caveBiomeStyle	NameNotChanged
		private com.volmit.iris.util.KList caveLayers	NameNotChanged
		private boolean caves	NameNotChanged
		private com.volmit.iris.util.KList compatability	NameNotChanged
		private double continentZoom	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle continentalStyle	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache coordFracture	=>	g
		private double coordFractureDistance	NameNotChanged
		private double coordFractureZoom	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache cosr	=>	j
		private boolean decorate	NameNotChanged
		private com.volmit.iris.util.KList deposits	NameNotChanged
		private double dimensionAngleDeg	NameNotChanged
		private org.bukkit.World$Environment environment	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache fluidData	=>	h
		private int fluidHeight	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache fluidLayerGenerator	=>	l
		private com.volmit.iris.util.KList fluidPalette	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle fluidStyle	NameNotChanged
		private java.lang.String focus	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle islandBiomeChanceStyle	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle islandBiomeStyle	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle landBiomeStyle	NameNotChanged
		private double landChance	NameNotChanged
		private double landZoom	NameNotChanged
		private com.volmit.iris.object.IrisLootReference loot	NameNotChanged
		private int lootTries	NameNotChanged
		private com.volmit.iris.util.KList mutations	NameNotChanged
		private java.lang.String name	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache parallaxSize	=>	i
		private boolean placeObjects	NameNotChanged
		private boolean postProcessing	NameNotChanged
		private com.volmit.iris.util.KList postProcessors	NameNotChanged
		private boolean preventLeafDecay	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache rad	=>	k
		private com.volmit.iris.object.IrisGeneratorStyle regionStyle	NameNotChanged
		private double regionZoom	NameNotChanged
		private com.volmit.iris.util.KList regions	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache rockData	=>	d
		private transient com.volmit.iris.gen.atomics.AtomicCache rockLayerGenerator	=>	f
		private com.volmit.iris.util.KList rockPalette	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle rockStyle	NameNotChanged
		private double rockZoom	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle seaBiomeStyle	NameNotChanged
		private double seaZoom	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle shoreBiomeStyle	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache sinr	=>	e
		private com.volmit.iris.object.IrisGeneratorStyle skylandBiomeStyle	NameNotChanged
		private double terrainZoom	NameNotChanged
		private boolean vanillaStructures	NameNotChanged
		private int version	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisDimension
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public double cosRotate() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllRegions(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getBiomeStyle(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public double getBiomeZoom() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCacheFilters() 	SignatureNotChanged
		public double getCarvingEnvelope() 	SignatureNotChanged
		public int getCarvingMax() 	SignatureNotChanged
		public int getCarvingMin() 	SignatureNotChanged
		public double getCarvingRippleThickness() 	SignatureNotChanged
		public double getCarvingSliverThickness() 	SignatureNotChanged
		public double getCarvingZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getCaveBiomeStyle() 	SignatureNotChanged
		public com.volmit.iris.util.KList getCaveLayers() 	SignatureNotChanged
		public com.volmit.iris.util.KList getCompatability() 	SignatureNotChanged
		public double getContinentZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getContinentalStyle() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCoordFracture() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getCoordFracture(com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		public double getCoordFractureDistance() 	SignatureNotChanged
		public double getCoordFractureZoom() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCosr() 	SignatureNotChanged
		public static com.volmit.iris.util.KList getDefaultCompatability() 	SignatureNotChanged
		private com.volmit.iris.util.KList getDefaultPostProcessors()	=>	a()
		public com.volmit.iris.util.KList getDeposits() 	SignatureNotChanged
		public double getDimensionAngle() 	SignatureNotChanged
		public double getDimensionAngleDeg() 	SignatureNotChanged
		public org.bukkit.World$Environment getEnvironment() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getFluid(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getFluidData() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getFluidGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int getFluidHeight() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getFluidLayerGenerator() 	SignatureNotChanged
		public com.volmit.iris.util.KList getFluidPalette() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getFluidStyle() 	SignatureNotChanged
		public java.lang.String getFocus() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getIslandBiomeChanceStyle() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getIslandBiomeStyle() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getLandBiomeStyle() 	SignatureNotChanged
		public double getLandChance() 	SignatureNotChanged
		public double getLandZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisLootReference getLoot() 	SignatureNotChanged
		public int getLootTries() 	SignatureNotChanged
		public com.volmit.iris.util.KList getMutations() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getParallaxSize() 	SignatureNotChanged
		public com.volmit.iris.util.ChunkPosition getParallaxSize(com.volmit.iris.gen.ParallelChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getPostBlockProcessors(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getPostProcessors() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRad() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getRegionStyle() 	SignatureNotChanged
		public double getRegionZoom() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRegions() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getRock(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getRockData() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getRockGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRockLayerGenerator() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRockPalette() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getRockStyle() 	SignatureNotChanged
		public double getRockZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getSeaBiomeStyle() 	SignatureNotChanged
		public double getSeaZoom() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getShoreBiomeStyle() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getSinr() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getSkylandBiomeStyle() 	SignatureNotChanged
		public double getTerrainZoom() 	SignatureNotChanged
		public int getVersion() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isCarving() 	SignatureNotChanged
		public boolean isCaves() 	SignatureNotChanged
		public boolean isDecorate() 	SignatureNotChanged
		public boolean isPlaceObjects() 	SignatureNotChanged
		public boolean isPostProcessing() 	SignatureNotChanged
		public boolean isPreventLeafDecay() 	SignatureNotChanged
		public boolean isVanillaStructures() 	SignatureNotChanged
		private synthetic java.lang.Double lambda$cosRotate$8() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getCoordFracture$1(com.volmit.iris.util.RNG, int) 	SignatureNotChanged
		private synthetic java.lang.Double lambda$getDimensionAngle$6() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getFluidData$5() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getFluidGenerator$4(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.ChunkPosition lambda$getParallaxSize$10(com.volmit.iris.gen.ParallelChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getPostBlockProcessors$0(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRockData$3() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getRockGenerator$2(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic void lambda$null$9(com.volmit.iris.gen.ParallelChunkGenerator, java.lang.String, com.volmit.iris.util.IrisLock, com.volmit.iris.util.O, com.volmit.iris.util.O, com.volmit.iris.util.O) 	SignatureNotChanged
		private synthetic java.lang.Double lambda$sinRotate$7() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData resolve(java.lang.String) 	SignatureNotChanged
		public void setBiomeZoom(double) 	SignatureNotChanged
		public void setCacheFilters(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCarving(boolean) 	SignatureNotChanged
		public void setCarvingEnvelope(double) 	SignatureNotChanged
		public void setCarvingMax(int) 	SignatureNotChanged
		public void setCarvingMin(int) 	SignatureNotChanged
		public void setCarvingRippleThickness(double) 	SignatureNotChanged
		public void setCarvingSliverThickness(double) 	SignatureNotChanged
		public void setCarvingZoom(double) 	SignatureNotChanged
		public void setCaveBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setCaveLayers(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setCaves(boolean) 	SignatureNotChanged
		public void setCompatability(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setContinentZoom(double) 	SignatureNotChanged
		public void setContinentalStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setCoordFracture(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCoordFractureDistance(double) 	SignatureNotChanged
		public void setCoordFractureZoom(double) 	SignatureNotChanged
		public void setCosr(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setDecorate(boolean) 	SignatureNotChanged
		public void setDeposits(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setDimensionAngleDeg(double) 	SignatureNotChanged
		public void setEnvironment(org.bukkit.World$Environment) 	SignatureNotChanged
		public void setFluidData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setFluidHeight(int) 	SignatureNotChanged
		public void setFluidLayerGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setFluidPalette(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setFluidStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setFocus(java.lang.String) 	SignatureNotChanged
		public void setIslandBiomeChanceStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setIslandBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setLandBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setLandChance(double) 	SignatureNotChanged
		public void setLandZoom(double) 	SignatureNotChanged
		public void setLoot(com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void setLootTries(int) 	SignatureNotChanged
		public void setMutations(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setParallaxSize(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setPlaceObjects(boolean) 	SignatureNotChanged
		public void setPostProcessing(boolean) 	SignatureNotChanged
		public void setPostProcessors(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setPreventLeafDecay(boolean) 	SignatureNotChanged
		public void setRad(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRegionStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setRegionZoom(double) 	SignatureNotChanged
		public void setRegions(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setRockData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRockLayerGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRockPalette(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setRockStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setRockZoom(double) 	SignatureNotChanged
		public void setSeaBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setSeaZoom(double) 	SignatureNotChanged
		public void setShoreBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setSinr(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setSkylandBiomeStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setTerrainZoom(double) 	SignatureNotChanged
		public void setVanillaStructures(boolean) 	SignatureNotChanged
		public void setVersion(int) 	SignatureNotChanged
		public double sinRotate() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: synthetic com.volmit.iris.object.IrisDimension$1	=>	com.volmit.iris.object.IrisDimension$a
	Source: "IrisDimension.java"
	FieldsOf: com.volmit.iris.object.IrisDimension$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$InferredType	=>	a
	MethodsOf: com.volmit.iris.object.IrisDimension$1
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisEffect	NameNotChanged
	Source: "IrisEffect.java"
	FieldsOf: com.volmit.iris.object.IrisEffect
		private int chance	NameNotChanged
		private double extra	NameNotChanged
		private int interval	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache latch	=>	b
		private double maxPitch	NameNotChanged
		private double minPitch	NameNotChanged
		private double particleAltX	NameNotChanged
		private double particleAltY	NameNotChanged
		private double particleAltZ	NameNotChanged
		private int particleAway	NameNotChanged
		private int particleCount	NameNotChanged
		private int particleDistance	NameNotChanged
		private int particleDistanceWidth	NameNotChanged
		private org.bukkit.Particle particleEffect	NameNotChanged
		private int particleOffset	NameNotChanged
		private java.lang.String potionEffect	NameNotChanged
		private int potionStrength	NameNotChanged
		private int potionTicksMax	NameNotChanged
		private int potionTicksMin	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache pt	=>	a
		private boolean randomAltX	NameNotChanged
		private boolean randomAltY	NameNotChanged
		private boolean randomAltZ	NameNotChanged
		private org.bukkit.Sound sound	NameNotChanged
		private int soundDistance	NameNotChanged
		private double volume	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisEffect
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public void apply(org.bukkit.entity.Player, com.volmit.iris.gen.IrisChunkGenerator) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean canTick() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getChance() 	SignatureNotChanged
		public double getExtra() 	SignatureNotChanged
		public int getInterval() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getLatch() 	SignatureNotChanged
		public double getMaxPitch() 	SignatureNotChanged
		public double getMinPitch() 	SignatureNotChanged
		public double getParticleAltX() 	SignatureNotChanged
		public double getParticleAltY() 	SignatureNotChanged
		public double getParticleAltZ() 	SignatureNotChanged
		public int getParticleAway() 	SignatureNotChanged
		public int getParticleCount() 	SignatureNotChanged
		public int getParticleDistance() 	SignatureNotChanged
		public int getParticleDistanceWidth() 	SignatureNotChanged
		public org.bukkit.Particle getParticleEffect() 	SignatureNotChanged
		public int getParticleOffset() 	SignatureNotChanged
		public java.lang.String getPotionEffect() 	SignatureNotChanged
		public int getPotionStrength() 	SignatureNotChanged
		public int getPotionTicksMax() 	SignatureNotChanged
		public int getPotionTicksMin() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getPt() 	SignatureNotChanged
		public org.bukkit.potion.PotionEffectType getRealType() 	SignatureNotChanged
		public org.bukkit.Sound getSound() 	SignatureNotChanged
		public int getSoundDistance() 	SignatureNotChanged
		public double getVolume() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isRandomAltX() 	SignatureNotChanged
		public boolean isRandomAltY() 	SignatureNotChanged
		public boolean isRandomAltZ() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.ChronoLatch lambda$canTick$0() 	SignatureNotChanged
		private synthetic org.bukkit.potion.PotionEffectType lambda$getRealType$1() 	SignatureNotChanged
		public void setChance(int) 	SignatureNotChanged
		public void setExtra(double) 	SignatureNotChanged
		public void setInterval(int) 	SignatureNotChanged
		public void setLatch(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setMaxPitch(double) 	SignatureNotChanged
		public void setMinPitch(double) 	SignatureNotChanged
		public void setParticleAltX(double) 	SignatureNotChanged
		public void setParticleAltY(double) 	SignatureNotChanged
		public void setParticleAltZ(double) 	SignatureNotChanged
		public void setParticleAway(int) 	SignatureNotChanged
		public void setParticleCount(int) 	SignatureNotChanged
		public void setParticleDistance(int) 	SignatureNotChanged
		public void setParticleDistanceWidth(int) 	SignatureNotChanged
		public void setParticleEffect(org.bukkit.Particle) 	SignatureNotChanged
		public void setParticleOffset(int) 	SignatureNotChanged
		public void setPotionEffect(java.lang.String) 	SignatureNotChanged
		public void setPotionStrength(int) 	SignatureNotChanged
		public void setPotionTicksMax(int) 	SignatureNotChanged
		public void setPotionTicksMin(int) 	SignatureNotChanged
		public void setPt(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRandomAltX(boolean) 	SignatureNotChanged
		public void setRandomAltY(boolean) 	SignatureNotChanged
		public void setRandomAltZ(boolean) 	SignatureNotChanged
		public void setSound(org.bukkit.Sound) 	SignatureNotChanged
		public void setSoundDistance(int) 	SignatureNotChanged
		public void setVolume(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisEnchantment	NameNotChanged
	Source: "IrisEnchantment.java"
	FieldsOf: com.volmit.iris.object.IrisEnchantment
		private double chance	NameNotChanged
		private java.lang.String enchantment	NameNotChanged
		private int maxLevel	NameNotChanged
		private int minLevel	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisEnchantment
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public void apply(com.volmit.iris.util.RNG, org.bukkit.inventory.meta.ItemMeta) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getChance() 	SignatureNotChanged
		public org.bukkit.enchantments.Enchantment getEnchant() 	SignatureNotChanged
		public java.lang.String getEnchantment() 	SignatureNotChanged
		public int getLevel(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int getMaxLevel() 	SignatureNotChanged
		public int getMinLevel() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setChance(double) 	SignatureNotChanged
		public void setEnchantment(java.lang.String) 	SignatureNotChanged
		public void setMaxLevel(int) 	SignatureNotChanged
		public void setMinLevel(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisGenerator	NameNotChanged
	Source: "IrisGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisGenerator
		private double cellFractureHeight	NameNotChanged
		private double cellFractureShuffle	NameNotChanged
		private double cellFractureZoom	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache cellGen	=>	d
		private double cellPercentSize	NameNotChanged
		private com.volmit.iris.object.IrisNoiseGenerator cliffHeightGenerator	NameNotChanged
		private double cliffHeightMax	NameNotChanged
		private double cliffHeightMin	NameNotChanged
		private com.volmit.iris.util.KList composite	NameNotChanged
		private com.volmit.iris.object.InterpolationMethod interpolationFunction	NameNotChanged
		private double interpolationScale	NameNotChanged
		private double offsetX	NameNotChanged
		private double offsetZ	NameNotChanged
		private double opacity	NameNotChanged
		private long seed	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public double cell(double, double, double, double) 	SignatureNotChanged
		public double cliff(double, double, double, double) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int fit(double, double, long, double, double) 	SignatureNotChanged
		public int fit(int, int, long, double, double) 	SignatureNotChanged
		public java.lang.Object fit(java.lang.Object[], long, double, double) 	SignatureNotChanged
		public java.lang.Object fit(java.util.List, long, double, double) 	SignatureNotChanged
		public double fitDouble(double, double, long, double, double) 	SignatureNotChanged
		public com.volmit.iris.util.IRare fitRarity(com.volmit.iris.util.KList, long, double, double) 	SignatureNotChanged
		public double getCellFractureHeight() 	SignatureNotChanged
		public double getCellFractureShuffle() 	SignatureNotChanged
		public double getCellFractureZoom() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCellGen() 	SignatureNotChanged
		public com.volmit.iris.noise.CellGenerator getCellGenerator(long) 	SignatureNotChanged
		public double getCellPercentSize() 	SignatureNotChanged
		public double getCliffHeight(double, double, double) 	SignatureNotChanged
		public com.volmit.iris.object.IrisNoiseGenerator getCliffHeightGenerator() 	SignatureNotChanged
		public double getCliffHeightMax() 	SignatureNotChanged
		public double getCliffHeightMin() 	SignatureNotChanged
		public com.volmit.iris.util.KList getComposite() 	SignatureNotChanged
		public double getHeight(double, double, double, long) 	SignatureNotChanged
		public double getHeight(double, double, long) 	SignatureNotChanged
		public com.volmit.iris.object.InterpolationMethod getInterpolationFunction() 	SignatureNotChanged
		public double getInterpolationScale() 	SignatureNotChanged
		public double getMax() 	SignatureNotChanged
		public double getOffsetX() 	SignatureNotChanged
		public double getOffsetZ() 	SignatureNotChanged
		public double getOpacity() 	SignatureNotChanged
		public long getSeed() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		private boolean hasCellCracks()	=>	a()
		public boolean hasCliffs() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CellGenerator lambda$getCellGenerator$0(long) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGenerator rescale(double) 	SignatureNotChanged
		public void setCellFractureHeight(double) 	SignatureNotChanged
		public void setCellFractureShuffle(double) 	SignatureNotChanged
		public void setCellFractureZoom(double) 	SignatureNotChanged
		public void setCellGen(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCellPercentSize(double) 	SignatureNotChanged
		public void setCliffHeightGenerator(com.volmit.iris.object.IrisNoiseGenerator) 	SignatureNotChanged
		public void setCliffHeightMax(double) 	SignatureNotChanged
		public void setCliffHeightMin(double) 	SignatureNotChanged
		public void setComposite(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setInterpolationFunction(com.volmit.iris.object.InterpolationMethod) 	SignatureNotChanged
		public void setInterpolationScale(double) 	SignatureNotChanged
		public void setOffsetX(double) 	SignatureNotChanged
		public void setOffsetZ(double) 	SignatureNotChanged
		public void setOpacity(double) 	SignatureNotChanged
		public void setSeed(long) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisGeneratorStyle	NameNotChanged
	Source: "IrisGeneratorStyle.java"
	FieldsOf: com.volmit.iris.object.IrisGeneratorStyle
		private final transient com.volmit.iris.gen.atomics.AtomicCache cng	=>	a
		private double exponent	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle fracture	NameNotChanged
		private double multiplier	NameNotChanged
		private com.volmit.iris.object.NoiseStyle style	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisGeneratorStyle
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.object.NoiseStyle) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG create(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCng() 	SignatureNotChanged
		public double getExponent() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getFracture() 	SignatureNotChanged
		public double getMultiplier() 	SignatureNotChanged
		public com.volmit.iris.object.NoiseStyle getStyle() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$create$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setExponent(double) 	SignatureNotChanged
		public void setFracture(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setMultiplier(double) 	SignatureNotChanged
		public void setStyle(com.volmit.iris.object.NoiseStyle) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisLoot	NameNotChanged
	Source: "IrisLoot.java"
	FieldsOf: com.volmit.iris.object.IrisLoot
		private com.volmit.iris.util.KList attributes	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache chance	=>	a
		private java.lang.Integer customModel	NameNotChanged
		private java.lang.String displayName	NameNotChanged
		private com.volmit.iris.util.KList enchantments	NameNotChanged
		private com.volmit.iris.util.KList itemFlags	NameNotChanged
		private com.volmit.iris.util.KList lore	NameNotChanged
		private int maxAmount	NameNotChanged
		private double maxDurability	NameNotChanged
		private int minAmount	NameNotChanged
		private double minDurability	NameNotChanged
		private int rarity	NameNotChanged
		private com.volmit.iris.object.InventorySlotType slotTypes	NameNotChanged
		private java.lang.String type	NameNotChanged
		private boolean unbreakable	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisLoot
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.inventory.ItemStack get(boolean, com.volmit.iris.object.IrisLootTable, com.volmit.iris.util.RNG, int, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAttributes() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getChance() 	SignatureNotChanged
		public java.lang.Integer getCustomModel() 	SignatureNotChanged
		public java.lang.String getDisplayName() 	SignatureNotChanged
		public com.volmit.iris.util.KList getEnchantments() 	SignatureNotChanged
		public com.volmit.iris.util.KList getItemFlags() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLore() 	SignatureNotChanged
		public int getMaxAmount() 	SignatureNotChanged
		public double getMaxDurability() 	SignatureNotChanged
		public int getMinAmount() 	SignatureNotChanged
		public double getMinDurability() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public com.volmit.iris.object.InventorySlotType getSlotTypes() 	SignatureNotChanged
		public org.bukkit.Material getType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isUnbreakable() 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$get$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setAttributes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setChance(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCustomModel(java.lang.Integer) 	SignatureNotChanged
		public void setDisplayName(java.lang.String) 	SignatureNotChanged
		public void setEnchantments(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setItemFlags(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setLore(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setMaxAmount(int) 	SignatureNotChanged
		public void setMaxDurability(double) 	SignatureNotChanged
		public void setMinAmount(int) 	SignatureNotChanged
		public void setMinDurability(double) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public void setSlotTypes(com.volmit.iris.object.InventorySlotType) 	SignatureNotChanged
		public void setType(java.lang.String) 	SignatureNotChanged
		public void setUnbreakable(boolean) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisLootReference	NameNotChanged
	Source: "IrisLootReference.java"
	FieldsOf: com.volmit.iris.object.IrisLootReference
		private com.volmit.iris.object.LootMode mode	NameNotChanged
		private double multiplier	NameNotChanged
		private com.volmit.iris.util.KList tables	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache tt	=>	a
	MethodsOf: com.volmit.iris.object.IrisLootReference
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getLootTables(com.volmit.iris.gen.DimensionChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.object.LootMode getMode() 	SignatureNotChanged
		public double getMultiplier() 	SignatureNotChanged
		public com.volmit.iris.util.KList getTables() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getTt() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getLootTables$0(com.volmit.iris.gen.DimensionChunkGenerator) 	SignatureNotChanged
		public void setMode(com.volmit.iris.object.LootMode) 	SignatureNotChanged
		public void setMultiplier(double) 	SignatureNotChanged
		public void setTables(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setTt(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisLootTable	NameNotChanged
	Source: "IrisLootTable.java"
	FieldsOf: com.volmit.iris.object.IrisLootTable
		private com.volmit.iris.util.KList loot	NameNotChanged
		private int maxPicked	NameNotChanged
		private java.lang.String name	NameNotChanged
		private int rarity	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisLootTable
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getLoot() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLoot(boolean, com.volmit.iris.util.RNG, com.volmit.iris.object.InventorySlotType, int, int, int, int, int) 	SignatureNotChanged
		public int getMaxPicked() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setLoot(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setMaxPicked(int) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisNoiseGenerator	NameNotChanged
	Source: "IrisNoiseGenerator.java"
	FieldsOf: com.volmit.iris.object.IrisNoiseGenerator
		private boolean bezier	NameNotChanged
		private boolean enabled	NameNotChanged
		private double exponent	NameNotChanged
		private com.volmit.iris.util.KList fracture	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache generator	=>	a
		private boolean negative	NameNotChanged
		private int octaves	NameNotChanged
		private double offsetX	NameNotChanged
		private double offsetY	NameNotChanged
		private double offsetZ	NameNotChanged
		private double opacity	NameNotChanged
		private boolean parametric	NameNotChanged
		private long seed	NameNotChanged
		private boolean sinCentered	NameNotChanged
		private com.volmit.iris.object.IrisGeneratorStyle style	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisNoiseGenerator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(boolean) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getExponent() 	SignatureNotChanged
		public com.volmit.iris.util.KList getFracture() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getGenerator() 	SignatureNotChanged
		protected com.volmit.iris.noise.CNG getGenerator(long) 	SignatureNotChanged
		public double getMax() 	SignatureNotChanged
		public double getNoise(long, double, double) 	SignatureNotChanged
		public int getOctaves() 	SignatureNotChanged
		public double getOffsetX() 	SignatureNotChanged
		public double getOffsetY() 	SignatureNotChanged
		public double getOffsetZ() 	SignatureNotChanged
		public double getOpacity() 	SignatureNotChanged
		public long getSeed() 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getStyle() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isBezier() 	SignatureNotChanged
		public boolean isEnabled() 	SignatureNotChanged
		public boolean isNegative() 	SignatureNotChanged
		public boolean isParametric() 	SignatureNotChanged
		public boolean isSinCentered() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getGenerator$0(long) 	SignatureNotChanged
		public void setBezier(boolean) 	SignatureNotChanged
		public void setEnabled(boolean) 	SignatureNotChanged
		public void setExponent(double) 	SignatureNotChanged
		public void setFracture(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setNegative(boolean) 	SignatureNotChanged
		public void setOctaves(int) 	SignatureNotChanged
		public void setOffsetX(double) 	SignatureNotChanged
		public void setOffsetY(double) 	SignatureNotChanged
		public void setOffsetZ(double) 	SignatureNotChanged
		public void setOpacity(double) 	SignatureNotChanged
		public void setParametric(boolean) 	SignatureNotChanged
		public void setSeed(long) 	SignatureNotChanged
		public void setSinCentered(boolean) 	SignatureNotChanged
		public void setStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObject	NameNotChanged
	Source: "IrisObject.java"
	FieldsOf: com.volmit.iris.object.IrisObject
		private static final org.bukkit.block.data.BlockData AIR	=>	h
		private static final org.bukkit.Material SNOW	=>	d
		private static final org.bukkit.block.data.BlockData[] SNOW_LAYERS	=>	j
		private com.volmit.iris.util.KMap blocks	=>	f
		private transient org.bukkit.util.BlockVector center	=>	g
		private int d	=>	k
		private int h	=>	e
		private int w	=>	i
	MethodsOf: com.volmit.iris.object.IrisObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void clean() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject copy() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getBlocks() 	SignatureNotChanged
		public org.bukkit.util.BlockVector getCenter() 	SignatureNotChanged
		public int getD() 	SignatureNotChanged
		public int getH() 	SignatureNotChanged
		public int getW() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void place(int, int, com.volmit.iris.util.IObjectPlacer, com.volmit.iris.object.IrisObjectPlacement, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int place(int, int, int, com.volmit.iris.util.IObjectPlacer, com.volmit.iris.object.IrisObjectPlacement, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int place(int, int, int, com.volmit.iris.util.IObjectPlacer, com.volmit.iris.object.IrisObjectPlacement, com.volmit.iris.util.RNG, java.util.function.Consumer) 	SignatureNotChanged
		public void place(org.bukkit.Location) 	SignatureNotChanged
		public void read(java.io.File) 	SignatureNotChanged
		public void read(java.io.InputStream) 	SignatureNotChanged
		public void rotate(com.volmit.iris.object.IrisObjectRotation, int, int, int) 	SignatureNotChanged
		public static org.bukkit.util.BlockVector sampleSize(java.io.File) 	SignatureNotChanged
		public void setBlocks(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setCenter(org.bukkit.util.BlockVector) 	SignatureNotChanged
		public void setD(int) 	SignatureNotChanged
		public void setH(int) 	SignatureNotChanged
		public void setUnsigned(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setW(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void write(java.io.File) 	SignatureNotChanged
		public void write(java.io.OutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObjectLimit	NameNotChanged
	Source: "IrisObjectLimit.java"
	FieldsOf: com.volmit.iris.object.IrisObjectLimit
		private int maximumHeight	NameNotChanged
		private int minimumHeight	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisObjectLimit
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean canPlace(int, int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getMaximumHeight() 	SignatureNotChanged
		public int getMinimumHeight() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setMaximumHeight(int) 	SignatureNotChanged
		public void setMinimumHeight(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObjectPlacement	NameNotChanged
	Source: "IrisObjectPlacement.java"
	FieldsOf: com.volmit.iris.object.IrisObjectPlacement
		private boolean bore	NameNotChanged
		private boolean bottom	NameNotChanged
		private double chance	NameNotChanged
		private com.volmit.iris.object.IrisObjectLimit clamp	NameNotChanged
		private int density	NameNotChanged
		private com.volmit.iris.util.KList edit	NameNotChanged
		private boolean meld	NameNotChanged
		private com.volmit.iris.object.ObjectPlaceMode mode	NameNotChanged
		private boolean onwater	NameNotChanged
		private com.volmit.iris.util.KList place	NameNotChanged
		private com.volmit.iris.object.IrisObjectRotation rotation	NameNotChanged
		private double snow	NameNotChanged
		private com.volmit.iris.object.IrisObjectTranslate translate	NameNotChanged
		private boolean translateCenter	NameNotChanged
		private boolean underwater	NameNotChanged
		private boolean waterloggable	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisObjectPlacement
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double getChance() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObjectLimit getClamp() 	SignatureNotChanged
		public int getDensity() 	SignatureNotChanged
		public com.volmit.iris.util.KList getEdit() 	SignatureNotChanged
		public com.volmit.iris.object.ObjectPlaceMode getMode() 	SignatureNotChanged
		public com.volmit.iris.util.KList getPlace() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObjectRotation getRotation() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject getSchematic(com.volmit.iris.gen.ContextualChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getSnow() 	SignatureNotChanged
		public com.volmit.iris.object.IrisObjectTranslate getTranslate() 	SignatureNotChanged
		public int getTriesForChunk(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isBore() 	SignatureNotChanged
		public boolean isBottom() 	SignatureNotChanged
		public boolean isMeld() 	SignatureNotChanged
		public boolean isOnwater() 	SignatureNotChanged
		public boolean isTranslateCenter() 	SignatureNotChanged
		public boolean isUnderwater() 	SignatureNotChanged
		public boolean isWaterloggable() 	SignatureNotChanged
		public void setBore(boolean) 	SignatureNotChanged
		public void setBottom(boolean) 	SignatureNotChanged
		public void setChance(double) 	SignatureNotChanged
		public void setClamp(com.volmit.iris.object.IrisObjectLimit) 	SignatureNotChanged
		public void setDensity(int) 	SignatureNotChanged
		public void setEdit(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setMeld(boolean) 	SignatureNotChanged
		public void setMode(com.volmit.iris.object.ObjectPlaceMode) 	SignatureNotChanged
		public void setOnwater(boolean) 	SignatureNotChanged
		public void setPlace(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setRotation(com.volmit.iris.object.IrisObjectRotation) 	SignatureNotChanged
		public void setSnow(double) 	SignatureNotChanged
		public void setTranslate(com.volmit.iris.object.IrisObjectTranslate) 	SignatureNotChanged
		public void setTranslateCenter(boolean) 	SignatureNotChanged
		public void setUnderwater(boolean) 	SignatureNotChanged
		public void setWaterloggable(boolean) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObjectReplace	NameNotChanged
	Source: "IrisObjectReplace.java"
	FieldsOf: com.volmit.iris.object.IrisObjectReplace
		private boolean exact	NameNotChanged
		private com.volmit.iris.util.KList find	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache findData	=>	a
		private com.volmit.iris.util.KList replace	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache replaceData	=>	c
		private transient com.volmit.iris.gen.atomics.AtomicCache replaceGen	=>	b
	MethodsOf: com.volmit.iris.object.IrisObjectReplace
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getFind() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getFindData() 	SignatureNotChanged
		public com.volmit.iris.util.KList getReplace() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getReplace(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getReplaceData() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getReplaceGen() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isExact() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getFind$0() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getReplace$1() 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$getReplace$2(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setExact(boolean) 	SignatureNotChanged
		public void setFind(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setFindData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setReplace(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setReplaceData(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setReplaceGen(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObjectRotation	NameNotChanged
	Source: "IrisObjectRotation.java"
	FieldsOf: com.volmit.iris.object.IrisObjectRotation
		private boolean enabled	NameNotChanged
		private com.volmit.iris.object.IrisAxisRotationClamp xAxis	NameNotChanged
		private com.volmit.iris.object.IrisAxisRotationClamp yAxis	NameNotChanged
		private com.volmit.iris.object.IrisAxisRotationClamp zAxis	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisObjectRotation
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean canRotate() 	SignatureNotChanged
		public boolean canRotateX() 	SignatureNotChanged
		public boolean canRotateY() 	SignatureNotChanged
		public boolean canRotateZ() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.block.BlockFace getFace(org.bukkit.util.BlockVector) 	SignatureNotChanged
		public double getRotation(int, com.volmit.iris.object.IrisAxisRotationClamp) 	SignatureNotChanged
		public com.volmit.iris.object.IrisAxisRotationClamp getXAxis() 	SignatureNotChanged
		public double getXRotation(int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisAxisRotationClamp getYAxis() 	SignatureNotChanged
		public double getYRotation(int) 	SignatureNotChanged
		public com.volmit.iris.object.IrisAxisRotationClamp getZAxis() 	SignatureNotChanged
		public double getZRotation(int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isEnabled() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData rotate(org.bukkit.block.data.BlockData, int, int, int) 	SignatureNotChanged
		public org.bukkit.util.BlockVector rotate(org.bukkit.util.BlockVector, int, int, int) 	SignatureNotChanged
		public void setEnabled(boolean) 	SignatureNotChanged
		public void setXAxis(com.volmit.iris.object.IrisAxisRotationClamp) 	SignatureNotChanged
		public void setYAxis(com.volmit.iris.object.IrisAxisRotationClamp) 	SignatureNotChanged
		public void setZAxis(com.volmit.iris.object.IrisAxisRotationClamp) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisObjectTranslate	NameNotChanged
	Source: "IrisObjectTranslate.java"
	FieldsOf: com.volmit.iris.object.IrisObjectTranslate
		private int x	NameNotChanged
		private int y	NameNotChanged
		private int z	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisObjectTranslate
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean canTranslate() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getX() 	SignatureNotChanged
		public int getY() 	SignatureNotChanged
		public int getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setX(int) 	SignatureNotChanged
		public void setY(int) 	SignatureNotChanged
		public void setZ(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public org.bukkit.util.BlockVector translate(org.bukkit.util.BlockVector) 	SignatureNotChanged
		public org.bukkit.util.BlockVector translate(org.bukkit.util.BlockVector, com.volmit.iris.object.IrisObjectRotation, int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisPostProcessor	NameNotChanged
	Source: "IrisPostProcessor.java"
	FieldsOf: com.volmit.iris.object.IrisPostProcessor
		private int phase	NameNotChanged
		private java.lang.String processor	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisPostProcessor
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getPhase() 	SignatureNotChanged
		public java.lang.String getProcessor() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setPhase(int) 	SignatureNotChanged
		public void setProcessor(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisRareObject	NameNotChanged
	Source: "IrisRareObject.java"
	FieldsOf: com.volmit.iris.object.IrisRareObject
		private java.lang.String object	NameNotChanged
		private int rarity	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisRareObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getObject() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setObject(java.lang.String) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisRegion	NameNotChanged
	Source: "IrisRegion.java"
	FieldsOf: com.volmit.iris.object.IrisRegion
		private double biomeImplosionRatio	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache cacheRidge	=>	j
		private transient com.volmit.iris.gen.atomics.AtomicCache cacheSpot	=>	f
		private double caveBiomeZoom	NameNotChanged
		private com.volmit.iris.util.KList caveBiomes	NameNotChanged
		private com.volmit.iris.util.KList deposits	=>	e
		private com.volmit.iris.util.KList effects	NameNotChanged
		private double landBiomeZoom	NameNotChanged
		private com.volmit.iris.util.KList landBiomes	NameNotChanged
		private com.volmit.iris.object.IrisLootReference loot	NameNotChanged
		private java.lang.String name	NameNotChanged
		private int rarity	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache realCaveBiomes	=>	i
		private transient com.volmit.iris.gen.atomics.AtomicCache realLandBiomes	=>	h
		private transient com.volmit.iris.gen.atomics.AtomicCache realSeaBiomes	=>	k
		private transient com.volmit.iris.gen.atomics.AtomicCache realShoreBiomes	=>	d
		private com.volmit.iris.util.KList ridgeBiomes	NameNotChanged
		private double seaBiomeZoom	NameNotChanged
		private com.volmit.iris.util.KList seaBiomes	NameNotChanged
		private double shoreBiomeZoom	NameNotChanged
		private com.volmit.iris.util.KList shoreBiomes	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache shoreHeightGenerator	=>	g
		private double shoreHeightMax	NameNotChanged
		private double shoreHeightMin	NameNotChanged
		private double shoreHeightZoom	NameNotChanged
		private double shoreRatio	NameNotChanged
		private com.volmit.iris.util.KList spotBiomes	NameNotChanged
		private com.volmit.iris.util.KList structures	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisRegion
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList getAllBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public double getBiomeImplosionRatio() 	SignatureNotChanged
		public double getBiomeZoom(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public com.volmit.iris.util.KList getBiomes(com.volmit.iris.gen.ContextualChunkGenerator, com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCacheRidge() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getCacheSpot() 	SignatureNotChanged
		public double getCaveBiomeZoom() 	SignatureNotChanged
		public com.volmit.iris.util.KList getCaveBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getDeposits() 	SignatureNotChanged
		public com.volmit.iris.util.KList getEffects() 	SignatureNotChanged
		public double getLandBiomeZoom() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLandBiomes() 	SignatureNotChanged
		public com.volmit.iris.object.IrisLootReference getLoot() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRealCaveBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealCaveBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRealLandBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealLandBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRealSeaBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealSeaBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRealShoreBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRealShoreBiomes(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public com.volmit.iris.util.KList getRidgeBiomeKeys() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRidgeBiomes() 	SignatureNotChanged
		public double getSeaBiomeZoom() 	SignatureNotChanged
		public com.volmit.iris.util.KList getSeaBiomes() 	SignatureNotChanged
		public double getShoreBiomeZoom() 	SignatureNotChanged
		public com.volmit.iris.util.KList getShoreBiomes() 	SignatureNotChanged
		public double getShoreHeight(double, double) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getShoreHeightGenerator() 	SignatureNotChanged
		public double getShoreHeightMax() 	SignatureNotChanged
		public double getShoreHeightMin() 	SignatureNotChanged
		public double getShoreHeightZoom() 	SignatureNotChanged
		public double getShoreRatio() 	SignatureNotChanged
		public com.volmit.iris.util.KList getSpotBiomeKeys() 	SignatureNotChanged
		public com.volmit.iris.util.KList getSpotBiomes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getStructures() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private static synthetic void lambda$getAllBiomes$5(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegionSpot) 	SignatureNotChanged
		private static synthetic void lambda$getAllBiomes$6(com.volmit.iris.util.KSet, com.volmit.iris.object.IrisRegionRidge) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealCaveBiomes$7(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealLandBiomes$10(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealSeaBiomes$9(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRealShoreBiomes$8(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getRidgeBiomeKeys$1() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getShoreHeightGenerator$4() 	SignatureNotChanged
		private synthetic com.volmit.iris.util.KList lambda$getSpotBiomeKeys$3() 	SignatureNotChanged
		private static synthetic void lambda$null$0(com.volmit.iris.util.KList, com.volmit.iris.object.IrisRegionRidge) 	SignatureNotChanged
		private static synthetic void lambda$null$2(com.volmit.iris.util.KList, com.volmit.iris.object.IrisRegionSpot) 	SignatureNotChanged
		public void setBiomeImplosionRatio(double) 	SignatureNotChanged
		public void setCacheRidge(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCacheSpot(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setCaveBiomeZoom(double) 	SignatureNotChanged
		public void setCaveBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setDeposits(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setEffects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setLandBiomeZoom(double) 	SignatureNotChanged
		public void setLandBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setLoot(com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public void setRealCaveBiomes(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRealLandBiomes(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRealSeaBiomes(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRealShoreBiomes(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setRidgeBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setSeaBiomeZoom(double) 	SignatureNotChanged
		public void setSeaBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setShoreBiomeZoom(double) 	SignatureNotChanged
		public void setShoreBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setShoreHeightGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setShoreHeightMax(double) 	SignatureNotChanged
		public void setShoreHeightMin(double) 	SignatureNotChanged
		public void setShoreHeightZoom(double) 	SignatureNotChanged
		public void setShoreRatio(double) 	SignatureNotChanged
		public void setSpotBiomes(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setStructures(com.volmit.iris.util.KList) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: synthetic com.volmit.iris.object.IrisRegion$1	=>	com.volmit.iris.object.IrisRegion$a
	Source: "IrisRegion.java"
	FieldsOf: com.volmit.iris.object.IrisRegion$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$InferredType	=>	a
	MethodsOf: com.volmit.iris.object.IrisRegion$1
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisRegionRidge	NameNotChanged
	Source: "IrisRegionRidge.java"
	FieldsOf: com.volmit.iris.object.IrisRegionRidge
		private com.volmit.iris.object.IrisBiomePaletteLayer air	NameNotChanged
		private com.volmit.iris.object.InferredType as	NameNotChanged
		private java.lang.String biome	NameNotChanged
		private double chance	NameNotChanged
		private double chanceScale	NameNotChanged
		private double chanceShuffle	NameNotChanged
		private double noiseMultiplier	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache ridge	=>	b
		private double scale	NameNotChanged
		private double shuffle	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache spot	=>	a
		private double thickness	NameNotChanged
		private com.volmit.iris.object.InferredType type	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisRegionRidge
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer getAir() 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getAs() 	SignatureNotChanged
		public java.lang.String getBiome() 	SignatureNotChanged
		public double getChance() 	SignatureNotChanged
		public double getChanceScale() 	SignatureNotChanged
		public double getChanceShuffle() 	SignatureNotChanged
		public double getNoiseMultiplier() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getRidge() 	SignatureNotChanged
		public com.volmit.iris.noise.CellGenerator getRidgeGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getRidgeHeight(com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		public double getScale() 	SignatureNotChanged
		public double getShuffle() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getSpot() 	SignatureNotChanged
		public com.volmit.iris.noise.CellGenerator getSpotGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getThickness() 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isRidge(com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CellGenerator lambda$getRidgeGenerator$1(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CellGenerator lambda$getSpotGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setAir(com.volmit.iris.object.IrisBiomePaletteLayer) 	SignatureNotChanged
		public void setAs(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public void setBiome(java.lang.String) 	SignatureNotChanged
		public void setChance(double) 	SignatureNotChanged
		public void setChanceScale(double) 	SignatureNotChanged
		public void setChanceShuffle(double) 	SignatureNotChanged
		public void setNoiseMultiplier(double) 	SignatureNotChanged
		public void setRidge(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setScale(double) 	SignatureNotChanged
		public void setShuffle(double) 	SignatureNotChanged
		public void setSpot(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setThickness(double) 	SignatureNotChanged
		public void setType(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisRegionSpot	NameNotChanged
	Source: "IrisRegionSpot.java"
	FieldsOf: com.volmit.iris.object.IrisRegionSpot
		private com.volmit.iris.object.IrisBiomePaletteLayer air	NameNotChanged
		private com.volmit.iris.object.InferredType as	NameNotChanged
		private java.lang.String biome	NameNotChanged
		private double noiseMultiplier	NameNotChanged
		private double rarity	NameNotChanged
		private double scale	NameNotChanged
		private double shuffle	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache spot	=>	a
		private com.volmit.iris.object.InferredType type	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisRegionSpot
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiomePaletteLayer getAir() 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getAs() 	SignatureNotChanged
		public java.lang.String getBiome() 	SignatureNotChanged
		public double getNoiseMultiplier() 	SignatureNotChanged
		public double getRarity() 	SignatureNotChanged
		public double getScale() 	SignatureNotChanged
		public double getShuffle() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getSpot() 	SignatureNotChanged
		public com.volmit.iris.noise.CellGenerator getSpotGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public double getSpotHeight(com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		public com.volmit.iris.object.InferredType getType() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isSpot(com.volmit.iris.util.RNG, double, double) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CellGenerator lambda$getSpotGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setAir(com.volmit.iris.object.IrisBiomePaletteLayer) 	SignatureNotChanged
		public void setAs(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public void setBiome(java.lang.String) 	SignatureNotChanged
		public void setNoiseMultiplier(double) 	SignatureNotChanged
		public void setRarity(double) 	SignatureNotChanged
		public void setScale(double) 	SignatureNotChanged
		public void setShuffle(double) 	SignatureNotChanged
		public void setSpot(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setType(com.volmit.iris.object.InferredType) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisRegistrant	NameNotChanged
	Source: "IrisRegistrant.java"
	FieldsOf: com.volmit.iris.object.IrisRegistrant
		private static java.lang.String[] a	=>	b
		private transient java.io.File loadFile	=>	c
		private transient java.lang.String loadKey	=>	a
	MethodsOf: com.volmit.iris.object.IrisRegistrant
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String[] a()	=>	b()
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.io.File getLoadFile() 	SignatureNotChanged
		public java.lang.String getLoadKey() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setLoadFile(java.io.File) 	SignatureNotChanged
		public void setLoadKey(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisShapedGeneratorStyle	NameNotChanged
	Source: "IrisShapedGeneratorStyle.java"
	FieldsOf: com.volmit.iris.object.IrisShapedGeneratorStyle
		private com.volmit.iris.object.IrisGeneratorStyle generator	NameNotChanged
		private int max	NameNotChanged
		private int min	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisShapedGeneratorStyle
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public double get(com.volmit.iris.util.RNG, double[]) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getGenerator() 	SignatureNotChanged
		public int getMax() 	SignatureNotChanged
		public int getMin() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setGenerator(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public void setMax(int) 	SignatureNotChanged
		public void setMin(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisStructure	NameNotChanged
	Source: "IrisStructure.java"
	FieldsOf: com.volmit.iris.object.IrisStructure
		private boolean bore	NameNotChanged
		private com.volmit.iris.object.IrisObjectLimit clamp	NameNotChanged
		private int gridHeight	NameNotChanged
		private int gridSize	NameNotChanged
		private com.volmit.iris.object.IrisLootReference loot	NameNotChanged
		private int maxLayers	NameNotChanged
		private boolean mergeEdges	NameNotChanged
		private java.lang.String name	NameNotChanged
		private com.volmit.iris.util.KList tiles	NameNotChanged
		private boolean underwater	NameNotChanged
		private double wallChance	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache wallGenerator	=>	d
		private com.volmit.iris.object.IrisGeneratorStyle wallStyle	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisStructure
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.BlockPosition asTileHorizon(com.volmit.iris.util.BlockPosition, com.volmit.iris.object.StructureTileFace) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObjectLimit getClamp() 	SignatureNotChanged
		public int getGridHeight() 	SignatureNotChanged
		public int getGridSize() 	SignatureNotChanged
		public com.volmit.iris.object.IrisLootReference getLoot() 	SignatureNotChanged
		public int getMaxLayers() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public com.volmit.iris.object.TileResult getTile(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public int getTileHorizon(double) 	SignatureNotChanged
		public com.volmit.iris.util.KList getTiles() 	SignatureNotChanged
		public double getWallChance() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getWallGenerator() 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getWallGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle getWallStyle() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isBore() 	SignatureNotChanged
		public boolean isMergeEdges() 	SignatureNotChanged
		public boolean isUnderwater() 	SignatureNotChanged
		public boolean isWall(com.volmit.iris.util.RNG, double, double, double, com.volmit.iris.object.StructureTileFace) 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CNG lambda$getWallGenerator$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void rotate(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setBore(boolean) 	SignatureNotChanged
		public void setClamp(com.volmit.iris.object.IrisObjectLimit) 	SignatureNotChanged
		public void setGridHeight(int) 	SignatureNotChanged
		public void setGridSize(int) 	SignatureNotChanged
		public void setLoot(com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void setMaxLayers(int) 	SignatureNotChanged
		public void setMergeEdges(boolean) 	SignatureNotChanged
		public void setName(java.lang.String) 	SignatureNotChanged
		public void setTiles(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setUnderwater(boolean) 	SignatureNotChanged
		public void setWallChance(double) 	SignatureNotChanged
		public void setWallGenerator(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setWallStyle(com.volmit.iris.object.IrisGeneratorStyle) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisStructurePlacement	NameNotChanged
	Source: "IrisStructurePlacement.java"
	FieldsOf: com.volmit.iris.object.IrisStructurePlacement
		private transient com.volmit.iris.gen.atomics.AtomicCache chanceCell	=>	c
		private transient com.volmit.iris.gen.atomics.AtomicCache config	=>	b
		private int height	NameNotChanged
		private int rarity	NameNotChanged
		private double ratio	NameNotChanged
		private double shuffle	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache structure	=>	a
		private java.lang.String tileset	NameNotChanged
		private double zoom	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisStructurePlacement
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getChanceCell() 	SignatureNotChanged
		public com.volmit.iris.noise.CellGenerator getChanceGenerator(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private com.volmit.iris.object.IrisObjectPlacement getConfig()	=>	a()
		public int getHeight() 	SignatureNotChanged
		public int getRarity() 	SignatureNotChanged
		public double getRatio() 	SignatureNotChanged
		public double getShuffle() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getStructure() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructure getStructure(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public java.lang.String getTileset() 	SignatureNotChanged
		public double getZoom() 	SignatureNotChanged
		public int gridHeight(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public int gridSize(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		public boolean hasStructure(com.volmit.iris.util.RNG, double, double, double) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		private synthetic com.volmit.iris.noise.CellGenerator lambda$getChanceGenerator$3(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.object.IrisObjectPlacement lambda$getConfig$1() 	SignatureNotChanged
		private synthetic com.volmit.iris.object.IrisStructure lambda$getStructure$2(com.volmit.iris.gen.ContextualChunkGenerator) 	SignatureNotChanged
		private static synthetic void lambda$placeLayer$0(com.volmit.iris.gen.ParallaxChunkGenerator, com.volmit.iris.object.TileResult, com.volmit.iris.util.BlockPosition) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject load(com.volmit.iris.gen.ContextualChunkGenerator, java.lang.String) 	SignatureNotChanged
		public void place(com.volmit.iris.gen.ParallaxChunkGenerator, com.volmit.iris.util.RNG, int, int) 	SignatureNotChanged
		public void placeLayer(com.volmit.iris.gen.ParallaxChunkGenerator, com.volmit.iris.util.RNG, com.volmit.iris.util.RNG, int, int, int, int, int) 	SignatureNotChanged
		public void setChanceCell(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setConfig(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setHeight(int) 	SignatureNotChanged
		public void setRarity(int) 	SignatureNotChanged
		public void setRatio(double) 	SignatureNotChanged
		public void setShuffle(double) 	SignatureNotChanged
		public void setStructure(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setTileset(java.lang.String) 	SignatureNotChanged
		public void setZoom(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.object.IrisStructureTile	NameNotChanged
	Source: "IrisStructureTile.java"
	FieldsOf: com.volmit.iris.object.IrisStructureTile
		private com.volmit.iris.object.StructureTileCondition ceiling	NameNotChanged
		private com.volmit.iris.object.StructureTileCondition east	NameNotChanged
		private com.volmit.iris.object.StructureTileCondition floor	NameNotChanged
		private transient com.volmit.iris.util.KMap forceObjects	=>	c
		private com.volmit.iris.object.IrisLootReference loot	NameNotChanged
		private transient com.volmit.iris.gen.atomics.AtomicCache maxFaces	=>	b
		private transient com.volmit.iris.gen.atomics.AtomicCache minFaces	=>	a
		private com.volmit.iris.object.StructureTileCondition north	NameNotChanged
		private com.volmit.iris.util.KList objects	NameNotChanged
		private com.volmit.iris.object.ObjectPlaceMode placeMode	NameNotChanged
		private com.volmit.iris.util.KList rareObjects	NameNotChanged
		private com.volmit.iris.object.StructureTileCondition south	NameNotChanged
		private com.volmit.iris.object.StructureTileCondition west	NameNotChanged
	MethodsOf: com.volmit.iris.object.IrisStructureTile
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		private boolean fitsWalls(com.volmit.iris.util.KList, int, int)	=>	a(com.volmit.iris.util.KList, int, int)
		public com.volmit.iris.object.StructureTileCondition getCeiling() 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileCondition getEast() 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileCondition getFloor() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getForceObjects() 	SignatureNotChanged
		public com.volmit.iris.object.IrisLootReference getLoot() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getMaxFaces() 	SignatureNotChanged
		public com.volmit.iris.gen.atomics.AtomicCache getMinFaces() 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileCondition getNorth() 	SignatureNotChanged
		public com.volmit.iris.util.KList getObjects() 	SignatureNotChanged
		public com.volmit.iris.object.ObjectPlaceMode getPlaceMode() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRareObjects() 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileCondition getSouth() 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileCondition getWest() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public int hashFace() 	SignatureNotChanged
		private synthetic java.lang.Integer lambda$likeAGlove$0() 	SignatureNotChanged
		private synthetic java.lang.Integer lambda$likeAGlove$1() 	SignatureNotChanged
		public boolean likeAGlove(boolean, boolean, com.volmit.iris.util.KList, int, int) 	SignatureNotChanged
		public void setCeiling(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public void setEast(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public void setFloor(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public void setForceObjects(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setLoot(com.volmit.iris.object.IrisLootReference) 	SignatureNotChanged
		public void setMaxFaces(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setMinFaces(com.volmit.iris.gen.atomics.AtomicCache) 	SignatureNotChanged
		public void setNorth(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public void setObjects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setPlaceMode(com.volmit.iris.object.ObjectPlaceMode) 	SignatureNotChanged
		public void setRareObjects(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setSouth(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public void setWest(com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.LootMode	NameNotChanged
	Source: "LootMode.java"
	FieldsOf: com.volmit.iris.object.LootMode
		private static final synthetic com.volmit.iris.object.LootMode[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.LootMode ADD	NameNotChanged
		public static final enum com.volmit.iris.object.LootMode CLEAR	NameNotChanged
		public static final enum com.volmit.iris.object.LootMode REPLACE	NameNotChanged
	MethodsOf: com.volmit.iris.object.LootMode
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.LootMode valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.LootMode[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.NoiseStyle	NameNotChanged
	Source: "NoiseStyle.java"
	FieldsOf: com.volmit.iris.object.NoiseStyle
		private static final synthetic com.volmit.iris.object.NoiseStyle[] $VALUES	=>	b
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_FRACTAL_BILLOW_PERLIN	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_FRACTAL_CUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle BIOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_HEIGHT	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_HEIGHT_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_HEIGHT_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_HEIGHT_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_HEIGHT_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CELLULAR_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CUBIC_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CUBIC_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CUBIC_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle CUBIC_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FLAT	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_BILLOW_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_BILLOW_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_BILLOW_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_BILLOW_PERLIN	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_CUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_CUBIC_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_CUBIC_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_CUBIC_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_CUBIC_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_FBM_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_FBM_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_FBM_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_SMOKE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle FRACTAL_WATER	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle GLOB	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle GLOB_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle GLOB_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle GLOB_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle GLOB_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle NONOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle NONOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle NONOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle NONOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle OCTOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle OCTOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle OCTOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle OCTOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle PERLIN	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle PERLIN_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle PERLIN_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle PERLIN_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle PERLIN_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUADOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUADOCTAVE_FRACTAL_CUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUADOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUADOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUADOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUINTOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUINTOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUINTOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle QUINTOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEPTOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEPTOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEPTOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEPTOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEXOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEXOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEXOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SEXOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SIMPLEX_CELLS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle SIMPLEX_VASCULAR	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle STATIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle TRIOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle TRIOCTAVE_FRACTAL_CUBIC	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle TRIOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle TRIOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle TRIOCTAVE_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR_IRIS	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR_IRIS_DOUBLE	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR_IRIS_HALF	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR_IRIS_THICK	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VASCULAR_THIN	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VIGOCTAVE_FRACTAL_BILLOW_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VIGOCTAVE_FRACTAL_FBM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VIGOCTAVE_FRACTAL_RM_SIMPLEX	NameNotChanged
		public static final enum com.volmit.iris.object.NoiseStyle VIGOCTAVE_SIMPLEX	NameNotChanged
		private com.volmit.iris.noise.CNGFactory f	=>	a
	MethodsOf: com.volmit.iris.object.NoiseStyle
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, com.volmit.iris.noise.CNGFactory) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG create(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$0(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$1(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$10(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$11(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$12(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$13(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$14(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$15(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$16(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$17(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$18(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$19(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$2(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$20(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$21(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$22(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$23(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$24(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$25(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$26(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$27(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$28(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$29(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$3(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$30(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$31(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$32(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$33(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$34(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$35(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$36(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$37(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$38(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$39(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$4(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$40(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$41(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$42(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$43(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$44(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$45(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$46(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$47(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$48(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$49(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$5(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$50(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$51(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$52(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$53(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$54(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$55(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$56(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$57(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$58(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$59(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$6(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$60(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$61(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$62(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$63(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$64(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$65(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$66(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$67(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$68(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$69(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$7(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$70(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$71(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$72(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$73(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$74(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$75(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$76(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$77(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$78(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$79(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$8(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$80(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$81(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$82(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$83(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$84(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$85(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$86(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$87(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$88(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$89(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$9(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$90(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$91(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$92(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$93(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$94(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$95(com.volmit.iris.util.RNG) 	SignatureNotChanged
		private static synthetic com.volmit.iris.noise.CNG lambda$static$96(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public com.volmit.iris.object.IrisGeneratorStyle style() 	SignatureNotChanged
		public static com.volmit.iris.object.NoiseStyle valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.NoiseStyle[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.ObjectPlaceMode	NameNotChanged
	Source: "ObjectPlaceMode.java"
	FieldsOf: com.volmit.iris.object.ObjectPlaceMode
		private static final synthetic com.volmit.iris.object.ObjectPlaceMode[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.ObjectPlaceMode CENTER_HEIGHT_RIGID	NameNotChanged
		public static final enum com.volmit.iris.object.ObjectPlaceMode MAX_HEIGHT_RIGID	NameNotChanged
		public static final enum com.volmit.iris.object.ObjectPlaceMode MAX_HEIGHT_RIGID_ACCURATE	NameNotChanged
		public static final enum com.volmit.iris.object.ObjectPlaceMode MIN_HEIGHT_RIGID	NameNotChanged
		public static final enum com.volmit.iris.object.ObjectPlaceMode MIN_HEIGHT_RIGID_ACCURATE	NameNotChanged
		public static final enum com.volmit.iris.object.ObjectPlaceMode PAINT	NameNotChanged
	MethodsOf: com.volmit.iris.object.ObjectPlaceMode
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.object.ObjectPlaceMode valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.ObjectPlaceMode[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.StructureTileCondition	NameNotChanged
	Source: "StructureTileCondition.java"
	FieldsOf: com.volmit.iris.object.StructureTileCondition
		private static final synthetic com.volmit.iris.object.StructureTileCondition[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.StructureTileCondition AGNOSTIC	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileCondition NEVER	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileCondition REQUIRED	NameNotChanged
	MethodsOf: com.volmit.iris.object.StructureTileCondition
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public boolean required() 	SignatureNotChanged
		public boolean supported() 	SignatureNotChanged
		public static com.volmit.iris.object.StructureTileCondition valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.StructureTileCondition[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.object.StructureTileFace	NameNotChanged
	Source: "StructureTileFace.java"
	FieldsOf: com.volmit.iris.object.StructureTileFace
		private static final synthetic com.volmit.iris.object.StructureTileFace[] $VALUES	=>	a
		public static final enum com.volmit.iris.object.StructureTileFace DOWN	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileFace EAST	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileFace NORTH	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileFace SOUTH	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileFace UP	NameNotChanged
		public static final enum com.volmit.iris.object.StructureTileFace WEST	NameNotChanged
	MethodsOf: com.volmit.iris.object.StructureTileFace
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public com.volmit.iris.object.StructureTileFace rotate90CW() 	SignatureNotChanged
		public static com.volmit.iris.object.StructureTileFace valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.StructureTileFace[] values() 	SignatureNotChanged
		public int x() 	SignatureNotChanged
		public int y() 	SignatureNotChanged
		public int z() 	SignatureNotChanged

Class: synthetic com.volmit.iris.object.StructureTileFace$1	=>	com.volmit.iris.object.StructureTileFace$a
	Source: "StructureTileFace.java"
	FieldsOf: com.volmit.iris.object.StructureTileFace$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$object$StructureTileFace	=>	a
	MethodsOf: com.volmit.iris.object.StructureTileFace$1
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.object.TileResult	NameNotChanged
	Source: "TileResult.java"
	FieldsOf: com.volmit.iris.object.TileResult
		private com.volmit.iris.object.IrisObjectPlacement placement	=>	a
		private com.volmit.iris.object.IrisStructure structure	=>	b
		private com.volmit.iris.object.IrisStructureTile tile	=>	c
	MethodsOf: com.volmit.iris.object.TileResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.object.IrisStructure, com.volmit.iris.object.IrisStructureTile, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObjectPlacement getPlacement() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructure getStructure() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructureTile getTile() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setPlacement(com.volmit.iris.object.IrisObjectPlacement) 	SignatureNotChanged
		public void setStructure(com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		public void setTile(com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.A	NameNotChanged
	Source: "A.java"
	FieldsOf: com.volmit.iris.util.A
	MethodsOf: com.volmit.iris.util.A
		public void <init>() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.AR	NameNotChanged
	Source: "AR.java"
	FieldsOf: com.volmit.iris.util.AR
		private int id	=>	a
	MethodsOf: com.volmit.iris.util.AR
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void cancel() 	SignatureNotChanged
		public int getId() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.ArrayType	NameNotChanged
	Source: "ArrayType.java"
	FieldsOf: com.volmit.iris.util.ArrayType
	MethodsOf: com.volmit.iris.util.ArrayType
		public abstract int min() 	SignatureNotChanged
		public abstract java.lang.Class type() 	SignatureNotChanged

Class: public com.volmit.iris.util.Average	NameNotChanged
	Source: "Average.java"
	FieldsOf: com.volmit.iris.util.Average
		private double average	=>	a
		private boolean brandNew	=>	b
		protected int cursor	NameNotChanged
		private boolean dirty	=>	c
		private double lastSum	=>	d
		protected double[] values	NameNotChanged
	MethodsOf: com.volmit.iris.util.Average
		public void <init>(int) 	SignatureNotChanged
		private void calculateAverage()	=>	a()
		public double getAverage() 	SignatureNotChanged
		public boolean isDirty() 	SignatureNotChanged
		public void put(double) 	SignatureNotChanged
		public int size() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.Axis	NameNotChanged
	Source: "Axis.java"
	FieldsOf: com.volmit.iris.util.Axis
		private static final synthetic com.volmit.iris.util.Axis[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.Axis X	NameNotChanged
		public static final enum com.volmit.iris.util.Axis Y	NameNotChanged
		public static final enum com.volmit.iris.util.Axis Z	NameNotChanged
		private int x	=>	d
		private int y	=>	c
		private int z	=>	b
	MethodsOf: com.volmit.iris.util.Axis
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int) 	SignatureNotChanged
		public org.bukkit.util.Vector negative() 	SignatureNotChanged
		public org.bukkit.util.Vector positive() 	SignatureNotChanged
		public static com.volmit.iris.util.Axis valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Axis[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.B	NameNotChanged
	Source: "B.java"
	FieldsOf: com.volmit.iris.util.B
		private static final org.bukkit.block.data.BlockData AIR	=>	f
		private static final com.volmit.iris.util.KMap bdc	=>	a
		private static final com.volmit.iris.object.IrisDimension defaultCompat	=>	b
		private static final com.volmit.iris.util.KList nulls	=>	c
		private static final com.volmit.iris.util.KMap solid	=>	e
		private static final com.volmit.iris.util.KMap types	=>	d
	MethodsOf: com.volmit.iris.util.B
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static boolean canPlaceOnto(org.bukkit.Material, org.bukkit.Material) 	SignatureNotChanged
		public static org.bukkit.block.data.BlockData get(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.KList getBlockData(com.volmit.iris.util.KList) 	SignatureNotChanged
		public static org.bukkit.block.data.BlockData getBlockData(java.lang.String) 	SignatureNotChanged
		public static org.bukkit.block.data.BlockData getBlockData(java.lang.String, com.volmit.iris.object.IrisDimension) 	SignatureNotChanged
		public static org.bukkit.Material getMaterial(java.lang.String) 	SignatureNotChanged
		public static boolean isDecorant(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isLit(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isSolid(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isStorage(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isStorageChest(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isUpdatable(org.bukkit.Material) 	SignatureNotChanged
		public static boolean isUpdatable(org.bukkit.block.data.BlockData) 	SignatureNotChanged
		private static synthetic org.bukkit.Material lambda$getMaterial$0(java.lang.String, org.bukkit.Material) 	SignatureNotChanged
		public static org.bukkit.Material mat(java.lang.String) 	SignatureNotChanged
		public static org.bukkit.block.data.BlockData parseBlockData(java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.BiomeDominance	NameNotChanged
	Source: "BiomeDominance.java"
	FieldsOf: com.volmit.iris.util.BiomeDominance
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.BiomeDominance
		public void <init>() 	SignatureNotChanged

Class: public com.volmit.iris.util.BiomeMap	NameNotChanged
	Source: "BiomeMap.java"
	FieldsOf: com.volmit.iris.util.BiomeMap
		private final com.volmit.iris.object.IrisBiome[] height	=>	a
	MethodsOf: com.volmit.iris.util.BiomeMap
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getBiome(int, int) 	SignatureNotChanged
		public void setBiome(int, int, com.volmit.iris.object.IrisBiome) 	SignatureNotChanged

Class: public com.volmit.iris.util.BiomeResult	NameNotChanged
	Source: "BiomeResult.java"
	FieldsOf: com.volmit.iris.util.BiomeResult
		private com.volmit.iris.object.IrisBiome biome	=>	a
		private double distance	=>	b
	MethodsOf: com.volmit.iris.util.BiomeResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.object.IrisBiome, double) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisBiome getBiome() 	SignatureNotChanged
		public double getDistance() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean is(com.volmit.iris.util.BiomeResult) 	SignatureNotChanged
		public void setBiome(com.volmit.iris.object.IrisBiome) 	SignatureNotChanged
		public void setDistance(double) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.BiomeStorage	NameNotChanged
	Source: "BiomeStorage.java"
	FieldsOf: com.volmit.iris.util.BiomeStorage
		public static final int a	NameNotChanged
		public static final int b	NameNotChanged
		public static final int c	NameNotChanged
		private static final int e	=>	d
		private static final int f	=>	g
		private final org.bukkit.block.Biome[] g	=>	e
	MethodsOf: com.volmit.iris.util.BiomeStorage
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(org.bukkit.block.Biome[]) 	SignatureNotChanged
		public com.volmit.iris.util.BiomeStorage b() 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int, int) 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void setBiome(int, int, int, org.bukkit.block.Biome) 	SignatureNotChanged

Class: public com.volmit.iris.util.BlockPosition	NameNotChanged
	Source: "BlockPosition.java"
	FieldsOf: com.volmit.iris.util.BlockPosition
		private int x	=>	b
		private int y	=>	a
		private int z	=>	c
	MethodsOf: com.volmit.iris.util.BlockPosition
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getChunkX() 	SignatureNotChanged
		public int getChunkZ() 	SignatureNotChanged
		public int getX() 	SignatureNotChanged
		public int getY() 	SignatureNotChanged
		public int getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setX(int) 	SignatureNotChanged
		public void setY(int) 	SignatureNotChanged
		public void setZ(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.Board	NameNotChanged
	Source: "Board.java"
	FieldsOf: com.volmit.iris.util.Board
		private static final java.util.function.Function APPLY_COLOR_TRANSLATION	=>	d
		private static final java.lang.String[] CACHED_ENTRIES	=>	c
		private com.volmit.iris.util.BoardSettings boardSettings	=>	e
		private final org.bukkit.scoreboard.Objective objective	=>	b
		private final org.bukkit.entity.Player player	=>	f
		private boolean ready	=>	g
		private final org.bukkit.scoreboard.Team team	=>	a
	MethodsOf: com.volmit.iris.util.Board
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.entity.Player, com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public org.bukkit.scoreboard.Scoreboard getScoreboard() 	SignatureNotChanged
		private static synthetic java.lang.String lambda$static$0(java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$static$1(int) 	SignatureNotChanged
		public void remove() 	SignatureNotChanged
		public void removeEntry(java.lang.String) 	SignatureNotChanged
		public void resetScoreboard() 	SignatureNotChanged
		public void setBoardSettings(com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		public void update() 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.Board$1	=>	com.volmit.iris.util.Board$a
	Source: "Board.java"
	FieldsOf: com.volmit.iris.util.Board$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$ScoreDirection	=>	a
	MethodsOf: com.volmit.iris.util.Board$1
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.util.BoardEntry	NameNotChanged
	Source: "BoardEntry.java"
	FieldsOf: com.volmit.iris.util.BoardEntry
		private final java.lang.String prefix	=>	a
		private final java.lang.String suffix	=>	b
	MethodsOf: com.volmit.iris.util.BoardEntry
		private void <init>(java.lang.String, java.lang.String) 	SignatureNotChanged
		public java.lang.String getPrefix() 	SignatureNotChanged
		public java.lang.String getSuffix() 	SignatureNotChanged
		public static com.volmit.iris.util.BoardEntry translateToEntry(java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.BoardManager	NameNotChanged
	Source: "BoardManager.java"
	FieldsOf: com.volmit.iris.util.BoardManager
		private com.volmit.iris.util.BoardSettings boardSettings	=>	b
		private final org.bukkit.plugin.java.JavaPlugin plugin	=>	c
		private java.util.Map scoreboards	=>	d
		private org.bukkit.scheduler.BukkitTask updateTask	=>	a
	MethodsOf: com.volmit.iris.util.BoardManager
		public void <init>(org.bukkit.plugin.java.JavaPlugin, com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		public java.util.Optional getBoard(org.bukkit.entity.Player) 	SignatureNotChanged
		public java.util.Map getScoreboards() 	SignatureNotChanged
		public boolean hasBoard(org.bukkit.entity.Player) 	SignatureNotChanged
		private synthetic void lambda$onJoin$1(org.bukkit.event.player.PlayerJoinEvent) 	SignatureNotChanged
		private static synthetic void lambda$setBoardSettings$0(com.volmit.iris.util.BoardSettings, com.volmit.iris.util.Board) 	SignatureNotChanged
		public void onDisable() 	SignatureNotChanged
		public void onJoin(org.bukkit.event.player.PlayerJoinEvent) 	SignatureNotChanged
		public void onQuit(org.bukkit.event.player.PlayerQuitEvent) 	SignatureNotChanged
		private void remove(org.bukkit.entity.Player)	=>	b(org.bukkit.entity.Player)
		public void setBoardSettings(com.volmit.iris.util.BoardSettings) 	SignatureNotChanged
		private void setup(org.bukkit.entity.Player)	=>	a(org.bukkit.entity.Player)

Class: public abstract com.volmit.iris.util.BoardProvider	NameNotChanged
	Source: "BoardProvider.java"
	FieldsOf: com.volmit.iris.util.BoardProvider
	MethodsOf: com.volmit.iris.util.BoardProvider
		public abstract java.util.List getLines(org.bukkit.entity.Player) 	SignatureNotChanged
		public abstract java.lang.String getTitle(org.bukkit.entity.Player) 	SignatureNotChanged

Class: public com.volmit.iris.util.BoardSettings	NameNotChanged
	Source: "BoardSettings.java"
	FieldsOf: com.volmit.iris.util.BoardSettings
		private com.volmit.iris.util.BoardProvider boardProvider	=>	b
		private com.volmit.iris.util.ScoreDirection scoreDirection	=>	a
	MethodsOf: com.volmit.iris.util.BoardSettings
		void <init>(com.volmit.iris.util.BoardProvider, com.volmit.iris.util.ScoreDirection) 	SignatureNotChanged
		public static com.volmit.iris.util.BoardSettings$BoardSettingsBuilder builder() 	SignatureNotChanged
		public com.volmit.iris.util.BoardProvider getBoardProvider() 	SignatureNotChanged
		public com.volmit.iris.util.ScoreDirection getScoreDirection() 	SignatureNotChanged

Class: public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder	NameNotChanged
	Source: "BoardSettings.java"
	FieldsOf: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder
		private com.volmit.iris.util.BoardProvider boardProvider	=>	a
		private com.volmit.iris.util.ScoreDirection scoreDirection	=>	b
	MethodsOf: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder boardProvider(com.volmit.iris.util.BoardProvider) 	SignatureNotChanged
		public com.volmit.iris.util.BoardSettings build() 	SignatureNotChanged
		public com.volmit.iris.util.BoardSettings$BoardSettingsBuilder scoreDirection(com.volmit.iris.util.ScoreDirection) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.BoardUpdateTask	NameNotChanged
	Source: "BoardUpdateTask.java"
	FieldsOf: com.volmit.iris.util.BoardUpdateTask
		private static final java.util.function.Predicate PLAYER_IS_ONLINE	=>	b
		private final com.volmit.iris.util.BoardManager boardManager	=>	a
	MethodsOf: com.volmit.iris.util.BoardUpdateTask
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.BoardManager) 	SignatureNotChanged
		private static synthetic boolean lambda$run$1(java.util.Map$Entry) 	SignatureNotChanged
		private static synthetic void lambda$run$2(java.util.Map$Entry) 	SignatureNotChanged
		private static synthetic boolean lambda$static$0(java.util.UUID) 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.BorderCheck	NameNotChanged
	Source: "BorderCheck.java"
	FieldsOf: com.volmit.iris.util.BorderCheck
	MethodsOf: com.volmit.iris.util.BorderCheck
		public abstract java.lang.Object get(double, double) 	SignatureNotChanged

Class: public com.volmit.iris.util.Borders	NameNotChanged
	Source: "Borders.java"
	FieldsOf: com.volmit.iris.util.Borders
	MethodsOf: com.volmit.iris.util.Borders
		public void <init>() 	SignatureNotChanged
		public static double getDistanceToBorder(double, double, int, double, double, double, com.volmit.iris.util.BorderCheck) 	SignatureNotChanged
		public static boolean isBorderWithin(double, double, int, double, double, com.volmit.iris.util.BorderCheck) 	SignatureNotChanged

Class: public final com.volmit.iris.util.ByteArrayTag	NameNotChanged
	Source: "ByteArrayTag.java"
	FieldsOf: com.volmit.iris.util.ByteArrayTag
		private final byte[] value	=>	b
	MethodsOf: com.volmit.iris.util.ByteArrayTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte[]) 	SignatureNotChanged
		public byte[] getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final com.volmit.iris.util.ByteTag	NameNotChanged
	Source: "ByteTag.java"
	FieldsOf: com.volmit.iris.util.ByteTag
		private final byte value	=>	b
	MethodsOf: com.volmit.iris.util.ByteTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte) 	SignatureNotChanged
		public java.lang.Byte getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.CDou	NameNotChanged
	Source: "CDou.java"
	FieldsOf: com.volmit.iris.util.CDou
		private double max	=>	a
		private double number	=>	b
	MethodsOf: com.volmit.iris.util.CDou
		public void <init>(double) 	SignatureNotChanged
		public com.volmit.iris.util.CDou add(double) 	SignatureNotChanged
		public void circ() 	SignatureNotChanged
		public double get() 	SignatureNotChanged
		public com.volmit.iris.util.CDou set(double) 	SignatureNotChanged
		public com.volmit.iris.util.CDou sub(double) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Callback	NameNotChanged
	Source: "Callback.java"
	FieldsOf: com.volmit.iris.util.Callback
	MethodsOf: com.volmit.iris.util.Callback
		public abstract void run(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.CallbackCV	NameNotChanged
	Source: "CallbackCV.java"
	FieldsOf: com.volmit.iris.util.CallbackCV
	MethodsOf: com.volmit.iris.util.CallbackCV
		public abstract void run(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.CancellableTask	NameNotChanged
	Source: "CancellableTask.java"
	FieldsOf: com.volmit.iris.util.CancellableTask
	MethodsOf: com.volmit.iris.util.CancellableTask
		public abstract void cancel() 	SignatureNotChanged

Class: public com.volmit.iris.util.CaveResult	NameNotChanged
	Source: "CaveResult.java"
	FieldsOf: com.volmit.iris.util.CaveResult
		private int ceiling	=>	b
		private int floor	=>	a
	MethodsOf: com.volmit.iris.util.CaveResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getCeiling() 	SignatureNotChanged
		public int getFloor() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setCeiling(int) 	SignatureNotChanged
		public void setFloor(int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.ChronoLatch	NameNotChanged
	Source: "ChronoLatch.java"
	FieldsOf: com.volmit.iris.util.ChronoLatch
		private long interval	=>	b
		private long since	=>	a
	MethodsOf: com.volmit.iris.util.ChronoLatch
		public void <init>(long) 	SignatureNotChanged
		public void <init>(long, boolean) 	SignatureNotChanged
		public boolean couldFlip() 	SignatureNotChanged
		public boolean flip() 	SignatureNotChanged
		public void flipDown() 	SignatureNotChanged

Class: public com.volmit.iris.util.ChunkPosition	NameNotChanged
	Source: "ChunkPosition.java"
	FieldsOf: com.volmit.iris.util.ChunkPosition
		private int x	=>	b
		private int z	=>	a
	MethodsOf: com.volmit.iris.util.ChunkPosition
		public void <init>(int, int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public int getX() 	SignatureNotChanged
		public int getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setX(int) 	SignatureNotChanged
		public void setZ(int) 	SignatureNotChanged

Class: public com.volmit.iris.util.Chunker	NameNotChanged
	Source: "Chunker.java"
	FieldsOf: com.volmit.iris.util.Chunker
		private java.util.concurrent.ExecutorService executor	=>	c
		private com.volmit.iris.util.KList q	=>	a
		private int threads	=>	b
		private int workload	=>	d
	MethodsOf: com.volmit.iris.util.Chunker
		public void <init>(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void execute(java.util.function.Consumer, com.volmit.iris.util.Callback, int) 	SignatureNotChanged
		private synthetic void lambda$execute$6(int, int, java.util.function.Consumer, com.volmit.iris.util.Contained, com.volmit.iris.util.Callback, com.volmit.iris.util.ChronoLatch, int) 	SignatureNotChanged
		private synthetic void lambda$execute$7() 	SignatureNotChanged
		private static synthetic java.lang.Boolean lambda$null$0(int, java.lang.Integer) 	SignatureNotChanged
		private synthetic void lambda$null$1(java.util.function.Consumer, java.lang.Integer) 	SignatureNotChanged
		private synthetic void lambda$null$2(java.util.function.Consumer, java.lang.Integer) 	SignatureNotChanged
		private synthetic java.lang.Integer lambda$null$3(java.lang.Integer) 	SignatureNotChanged
		private static synthetic java.lang.Boolean lambda$null$4(com.volmit.iris.util.Callback, com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		private static synthetic void lambda$null$5(com.volmit.iris.util.Callback, com.volmit.iris.util.Contained, int) 	SignatureNotChanged
		public com.volmit.iris.util.Chunker threads(int) 	SignatureNotChanged
		public com.volmit.iris.util.Chunker workload(int) 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.Command	NameNotChanged
	Source: "Command.java"
	FieldsOf: com.volmit.iris.util.Command
	MethodsOf: com.volmit.iris.util.Command
		public abstract java.lang.String value() 	SignatureNotChanged

Class: public final com.volmit.iris.util.CompoundTag	NameNotChanged
	Source: "CompoundTag.java"
	FieldsOf: com.volmit.iris.util.CompoundTag
		private final java.util.Map value	=>	b
	MethodsOf: com.volmit.iris.util.CompoundTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.util.Map) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.util.Map getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Consumer2	NameNotChanged
	Source: "Consumer2.java"
	FieldsOf: com.volmit.iris.util.Consumer2
	MethodsOf: com.volmit.iris.util.Consumer2
		public abstract void accept(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Consumer3	NameNotChanged
	Source: "Consumer3.java"
	FieldsOf: com.volmit.iris.util.Consumer3
	MethodsOf: com.volmit.iris.util.Consumer3
		public abstract void accept(java.lang.Object, java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.Contained	NameNotChanged
	Source: "Contained.java"
	FieldsOf: com.volmit.iris.util.Contained
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.Contained
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object get() 	SignatureNotChanged
		public void mod(java.util.function.Function) 	SignatureNotChanged
		public void set(java.lang.Object) 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.Control	NameNotChanged
	Source: "Control.java"
	FieldsOf: com.volmit.iris.util.Control
	MethodsOf: com.volmit.iris.util.Control

Class: public abstract com.volmit.iris.util.Controller	NameNotChanged
	Source: "Controller.java"
	FieldsOf: com.volmit.iris.util.Controller
		private java.lang.String name	=>	b
		private int tickRate	=>	a
	MethodsOf: com.volmit.iris.util.Controller
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		protected void disableTicking() 	SignatureNotChanged
		public void f(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public int getTickInterval() 	SignatureNotChanged
		public void l(java.lang.Object) 	SignatureNotChanged
		protected void setTickRate(int) 	SignatureNotChanged
		public abstract void start() 	SignatureNotChanged
		public abstract void stop() 	SignatureNotChanged
		public abstract void tick() 	SignatureNotChanged
		public void v(java.lang.Object) 	SignatureNotChanged
		public void w(java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.Cuboid	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid
		protected final java.lang.String worldName	NameNotChanged
		protected int x1	NameNotChanged
		protected int x2	NameNotChanged
		protected int y1	NameNotChanged
		protected int y2	NameNotChanged
		protected int z1	NameNotChanged
		protected int z2	NameNotChanged
	MethodsOf: com.volmit.iris.util.Cuboid
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int, int, int) 	SignatureNotChanged
		public void <init>(java.util.Map) 	SignatureNotChanged
		public void <init>(org.bukkit.Location) 	SignatureNotChanged
		public void <init>(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public void <init>(org.bukkit.World, int, int, int, int, int, int) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public byte averageLightLevel() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid clone() 	SignatureNotChanged
		public bridge synthetic java.lang.Object clone() 	SignatureNotChanged
		public boolean contains(int, int, int) 	SignatureNotChanged
		public boolean contains(org.bukkit.Location) 	SignatureNotChanged
		public boolean contains(org.bukkit.block.Block) 	SignatureNotChanged
		public boolean containsOnly(org.bukkit.Material) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid contract() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid contract(com.volmit.iris.util.Cuboid$CuboidDirection) 	SignatureNotChanged
		public org.bukkit.block.Block[] corners() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid expand(com.volmit.iris.util.Cuboid$CuboidDirection, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid expand(com.volmit.iris.util.Direction, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid flatten(int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid getBoundingCuboid(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public org.bukkit.Location getCenter() 	SignatureNotChanged
		public java.util.List getChunks() 	SignatureNotChanged
		public com.volmit.iris.util.Dimension getDimension() 	SignatureNotChanged
		public com.volmit.iris.util.KList getEntities() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid getFace(com.volmit.iris.util.Cuboid$CuboidDirection) 	SignatureNotChanged
		public org.bukkit.Location getLowerNE() 	SignatureNotChanged
		public int getLowerX() 	SignatureNotChanged
		public int getLowerY() 	SignatureNotChanged
		public int getLowerZ() 	SignatureNotChanged
		public org.bukkit.block.Block getRelativeBlock(int, int, int) 	SignatureNotChanged
		public org.bukkit.block.Block getRelativeBlock(org.bukkit.World, int, int, int) 	SignatureNotChanged
		public int getSizeX() 	SignatureNotChanged
		public int getSizeY() 	SignatureNotChanged
		public int getSizeZ() 	SignatureNotChanged
		public org.bukkit.Location getUpperSW() 	SignatureNotChanged
		public int getUpperX() 	SignatureNotChanged
		public int getUpperY() 	SignatureNotChanged
		public int getUpperZ() 	SignatureNotChanged
		public org.bukkit.World getWorld() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid inset(com.volmit.iris.util.Cuboid$CuboidDirection, int) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid outset(com.volmit.iris.util.Cuboid$CuboidDirection, int) 	SignatureNotChanged
		public java.util.Map serialize() 	SignatureNotChanged
		public void set(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid shift(com.volmit.iris.util.Cuboid$CuboidDirection, int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public int volume() 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.Cuboid$1	=>	com.volmit.iris.util.Cuboid$a
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$Cuboid$CuboidDirection	=>	a
	MethodsOf: com.volmit.iris.util.Cuboid$1
		static void <clinit>() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.Cuboid$CuboidDirection	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$CuboidDirection
		private static final synthetic com.volmit.iris.util.Cuboid$CuboidDirection[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Both	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Down	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection East	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Horizontal	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection North	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection South	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Unknown	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Up	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection Vertical	NameNotChanged
		public static final enum com.volmit.iris.util.Cuboid$CuboidDirection West	NameNotChanged
	MethodsOf: com.volmit.iris.util.Cuboid$CuboidDirection
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid$CuboidDirection opposite() 	SignatureNotChanged
		public static com.volmit.iris.util.Cuboid$CuboidDirection valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Cuboid$CuboidDirection[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.Cuboid$CuboidIterator	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: com.volmit.iris.util.Cuboid$CuboidIterator
		private int baseX	=>	f
		private int baseY	=>	b
		private int baseZ	=>	d
		private int sizeX	=>	i
		private int sizeY	=>	e
		private int sizeZ	=>	a
		final synthetic com.volmit.iris.util.Cuboid this$0	NameNotChanged
		private org.bukkit.World w	=>	j
		private int x	=>	g
		private int y	=>	h
		private int z	=>	c
	MethodsOf: com.volmit.iris.util.Cuboid$CuboidIterator
		public void <init>(com.volmit.iris.util.Cuboid, org.bukkit.World, int, int, int, int, int, int) 	SignatureNotChanged
		public boolean hasNext() 	SignatureNotChanged
		public bridge synthetic java.lang.Object next() 	SignatureNotChanged
		public org.bukkit.block.Block next() 	SignatureNotChanged
		public void remove() 	SignatureNotChanged

Class: public com.volmit.iris.util.CuboidException	NameNotChanged
	Source: "CuboidException.java"
	FieldsOf: com.volmit.iris.util.CuboidException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.CuboidException
		public void <init>(java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.CustomOutputStream	NameNotChanged
	Source: "CustomOutputStream.java"
	FieldsOf: com.volmit.iris.util.CustomOutputStream
	MethodsOf: com.volmit.iris.util.CustomOutputStream
		public void <init>(java.io.OutputStream, int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.DOP	NameNotChanged
	Source: "DOP.java"
	FieldsOf: com.volmit.iris.util.DOP
		private java.lang.String type	=>	a
	MethodsOf: com.volmit.iris.util.DOP
		public void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String getType() 	SignatureNotChanged
		public abstract org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.DataPalette	NameNotChanged
	Source: "DataPalette.java"
	FieldsOf: com.volmit.iris.util.DataPalette
		private int bpb	=>	c
		private com.volmit.iris.util.NibbleArray data	=>	a
		private com.volmit.iris.util.KList palette	=>	b
	MethodsOf: com.volmit.iris.util.DataPalette
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private final void changeBitsPerBlock(int)	=>	a(int)
		private final void expand()	=>	a()
		public final java.lang.Object get(int, int, int) 	SignatureNotChanged
		private final int getCoordinateIndex(int, int, int)	=>	a(int, int, int)
		private final int getPaletteId(java.lang.Object)	=>	a(java.lang.Object)
		public final void optimize() 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public abstract java.lang.Object readType(java.io.DataInputStream) 	SignatureNotChanged
		public final void set(int, int, int, java.lang.Object) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged
		public abstract void writeType(java.lang.Object, java.io.DataOutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.util.Denv	NameNotChanged
	Source: "Denv.java"
	FieldsOf: com.volmit.iris.util.Denv
	MethodsOf: com.volmit.iris.util.Denv
		public void <init>() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.DependsOn	NameNotChanged
	Source: "DependsOn.java"
	FieldsOf: com.volmit.iris.util.DependsOn
	MethodsOf: com.volmit.iris.util.DependsOn
		public abstract java.lang.String[] value() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.Desc	NameNotChanged
	Source: "Desc.java"
	FieldsOf: com.volmit.iris.util.Desc
	MethodsOf: com.volmit.iris.util.Desc
		public abstract java.lang.String value() 	SignatureNotChanged

Class: public com.volmit.iris.util.Dimension	NameNotChanged
	Source: "Dimension.java"
	FieldsOf: com.volmit.iris.util.Dimension
		private final int depth	=>	b
		private final int height	=>	c
		private final int width	=>	a
	MethodsOf: com.volmit.iris.util.Dimension
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int, int, int) 	SignatureNotChanged
		public int getDepth() 	SignatureNotChanged
		public int getHeight() 	SignatureNotChanged
		public com.volmit.iris.util.DimensionFace getPane() 	SignatureNotChanged
		public int getWidth() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.DimensionFace	NameNotChanged
	Source: "DimensionFace.java"
	FieldsOf: com.volmit.iris.util.DimensionFace
		private static final synthetic com.volmit.iris.util.DimensionFace[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.DimensionFace X	NameNotChanged
		public static final enum com.volmit.iris.util.DimensionFace Y	NameNotChanged
		public static final enum com.volmit.iris.util.DimensionFace Z	NameNotChanged
	MethodsOf: com.volmit.iris.util.DimensionFace
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.DimensionFace valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.DimensionFace[] values() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.Direction	NameNotChanged
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction
		private static final synthetic com.volmit.iris.util.Direction[] $VALUES	=>	f
		public static final enum com.volmit.iris.util.Direction D	NameNotChanged
		public static final enum com.volmit.iris.util.Direction E	NameNotChanged
		public static final enum com.volmit.iris.util.Direction N	NameNotChanged
		public static final enum com.volmit.iris.util.Direction S	NameNotChanged
		public static final enum com.volmit.iris.util.Direction U	NameNotChanged
		public static final enum com.volmit.iris.util.Direction W	NameNotChanged
		private com.volmit.iris.util.Cuboid$CuboidDirection f	=>	a
		private static com.volmit.iris.util.KMap permute	=>	d
		private int x	=>	e
		private int y	=>	c
		private int z	=>	b
	MethodsOf: com.volmit.iris.util.Direction
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, int, com.volmit.iris.util.Cuboid$CuboidDirection) 	SignatureNotChanged
		public org.bukkit.util.Vector angle(org.bukkit.util.Vector, com.volmit.iris.util.Direction) 	SignatureNotChanged
		public byte byteValue() 	SignatureNotChanged
		public static void calculatePermutations() 	SignatureNotChanged
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector) 	SignatureNotChanged
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector, com.volmit.iris.util.Direction[]) 	SignatureNotChanged
		public static com.volmit.iris.util.Direction closest(org.bukkit.util.Vector, com.volmit.iris.util.KList) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid$CuboidDirection f() 	SignatureNotChanged
		public static com.volmit.iris.util.Direction fromByte(byte) 	SignatureNotChanged
		public org.bukkit.Axis getAxis() 	SignatureNotChanged
		public static com.volmit.iris.util.Direction getDirection(org.bukkit.block.BlockFace) 	SignatureNotChanged
		public static com.volmit.iris.util.Direction getDirection(org.bukkit.util.Vector) 	SignatureNotChanged
		public org.bukkit.block.BlockFace getFace() 	SignatureNotChanged
		public boolean isCrooked(com.volmit.iris.util.Direction) 	SignatureNotChanged
		public boolean isVertical() 	SignatureNotChanged
		public static com.volmit.iris.util.KList news() 	SignatureNotChanged
		public com.volmit.iris.util.Direction reverse() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public org.bukkit.util.Vector toVector() 	SignatureNotChanged
		public static com.volmit.iris.util.KList udnews() 	SignatureNotChanged
		public static com.volmit.iris.util.Direction valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.Direction[] values() 	SignatureNotChanged
		public int x() 	SignatureNotChanged
		public int y() 	SignatureNotChanged
		public int z() 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$1	=>	com.volmit.iris.util.Direction$b
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$1
	MethodsOf: com.volmit.iris.util.Direction$1
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$10	=>	com.volmit.iris.util.Direction$c
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$10
	MethodsOf: com.volmit.iris.util.Direction$10
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.Direction$11	=>	com.volmit.iris.util.Direction$a
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$11
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$Direction	=>	b
		static final synthetic int[] $SwitchMap$org$bukkit$block$BlockFace	=>	a
	MethodsOf: com.volmit.iris.util.Direction$11
		static void <clinit>() 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$2	=>	com.volmit.iris.util.Direction$d
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$2
	MethodsOf: com.volmit.iris.util.Direction$2
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$3	=>	com.volmit.iris.util.Direction$e
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$3
	MethodsOf: com.volmit.iris.util.Direction$3
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$4	=>	com.volmit.iris.util.Direction$f
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$4
	MethodsOf: com.volmit.iris.util.Direction$4
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$5	=>	com.volmit.iris.util.Direction$g
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$5
	MethodsOf: com.volmit.iris.util.Direction$5
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$6	=>	com.volmit.iris.util.Direction$h
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$6
	MethodsOf: com.volmit.iris.util.Direction$6
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$7	=>	com.volmit.iris.util.Direction$i
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$7
	MethodsOf: com.volmit.iris.util.Direction$7
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$8	=>	com.volmit.iris.util.Direction$j
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$8
	MethodsOf: com.volmit.iris.util.Direction$8
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.Direction$9	=>	com.volmit.iris.util.Direction$k
	Source: "Direction.java"
	FieldsOf: com.volmit.iris.util.Direction$9
	MethodsOf: com.volmit.iris.util.Direction$9
		void <init>(java.lang.String) 	SignatureNotChanged
		public org.bukkit.util.Vector op(org.bukkit.util.Vector) 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.DontObfuscate	NameNotChanged
	Source: "DontObfuscate.java"
	FieldsOf: com.volmit.iris.util.DontObfuscate
	MethodsOf: com.volmit.iris.util.DontObfuscate

Class: public com.volmit.iris.util.DoubleArrayUtils	NameNotChanged
	Source: "DoubleArrayUtils.java"
	FieldsOf: com.volmit.iris.util.DoubleArrayUtils
	MethodsOf: com.volmit.iris.util.DoubleArrayUtils
		public void <init>() 	SignatureNotChanged
		public static void fill(double[], double) 	SignatureNotChanged
		public static void shiftRight(double[], double) 	SignatureNotChanged
		public static void wrapRight(double[]) 	SignatureNotChanged

Class: public final com.volmit.iris.util.DoubleTag	NameNotChanged
	Source: "DoubleTag.java"
	FieldsOf: com.volmit.iris.util.DoubleTag
		private final double value	=>	b
	MethodsOf: com.volmit.iris.util.DoubleTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, double) 	SignatureNotChanged
		public java.lang.Double getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Element	NameNotChanged
	Source: "Element.java"
	FieldsOf: com.volmit.iris.util.Element
	MethodsOf: com.volmit.iris.util.Element
		public abstract com.volmit.iris.util.Element addLore(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element call(com.volmit.iris.util.ElementEvent, com.volmit.iris.util.Element) 	SignatureNotChanged
		public abstract org.bukkit.inventory.ItemStack computeItemStack() 	SignatureNotChanged
		public abstract int getCount() 	SignatureNotChanged
		public abstract short getEffectiveDurability() 	SignatureNotChanged
		public abstract java.lang.String getId() 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList getLore() 	SignatureNotChanged
		public abstract org.bukkit.block.data.BlockData getMaterial() 	SignatureNotChanged
		public abstract java.lang.String getName() 	SignatureNotChanged
		public abstract double getProgress() 	SignatureNotChanged
		public abstract boolean isBackgrond() 	SignatureNotChanged
		public abstract boolean isEnchanted() 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onDraggedInto(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onLeftClick(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onOtherDraggedInto(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onRightClick(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onShiftLeftClick(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element onShiftRightClick(com.volmit.iris.util.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setBackground(boolean) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setCount(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setEnchanted(boolean) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setMaterial(org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setName(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Element setProgress(double) 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.ElementEvent	NameNotChanged
	Source: "ElementEvent.java"
	FieldsOf: com.volmit.iris.util.ElementEvent
		private static final synthetic com.volmit.iris.util.ElementEvent[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.ElementEvent DRAG_INTO	NameNotChanged
		public static final enum com.volmit.iris.util.ElementEvent LEFT	NameNotChanged
		public static final enum com.volmit.iris.util.ElementEvent OTHER_DRAG_INTO	NameNotChanged
		public static final enum com.volmit.iris.util.ElementEvent RIGHT	NameNotChanged
		public static final enum com.volmit.iris.util.ElementEvent SHIFT_LEFT	NameNotChanged
		public static final enum com.volmit.iris.util.ElementEvent SHIFT_RIGHT	NameNotChanged
	MethodsOf: com.volmit.iris.util.ElementEvent
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.ElementEvent valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.ElementEvent[] values() 	SignatureNotChanged

Class: public final com.volmit.iris.util.EndTag	NameNotChanged
	Source: "EndTag.java"
	FieldsOf: com.volmit.iris.util.EndTag
	MethodsOf: com.volmit.iris.util.EndTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final com.volmit.iris.util.FastParticle	NameNotChanged
	Source: "FastParticle.java"
	FieldsOf: com.volmit.iris.util.FastParticle
		private static final com.volmit.iris.util.ParticleSender PARTICLE_SENDER	=>	a
	MethodsOf: com.volmit.iris.util.FastParticle
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		private static void sendParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)	=>	a(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object)
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, double, double, double, int, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.World, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, double, double, double, int, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, double, double, double, java.lang.Object) 	SignatureNotChanged
		public static void spawnParticle(org.bukkit.entity.Player, com.volmit.iris.util.ParticleType, org.bukkit.Location, int, java.lang.Object) 	SignatureNotChanged

Class: public final com.volmit.iris.util.FastReflection	NameNotChanged
	Source: "FastReflection.java"
	FieldsOf: com.volmit.iris.util.FastReflection
		public static final java.lang.String NMS_PACKAGE	NameNotChanged
		public static final java.lang.String OBC_PACKAGE	NameNotChanged
		public static final java.lang.String VERSION	NameNotChanged
	MethodsOf: com.volmit.iris.util.FastReflection
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static java.lang.Object enumValueOf(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public static java.lang.Class nmsClass(java.lang.String) 	SignatureNotChanged
		public static java.lang.String nmsClassName(java.lang.String) 	SignatureNotChanged
		public static java.util.Optional nmsOptionalClass(java.lang.String) 	SignatureNotChanged
		public static java.lang.Class obcClass(java.lang.String) 	SignatureNotChanged
		public static java.lang.String obcClassName(java.lang.String) 	SignatureNotChanged
		public static java.util.Optional obcOptionalClass(java.lang.String) 	SignatureNotChanged
		public static java.util.Optional optionalClass(java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.FileWatcher	NameNotChanged
	Source: "FileWatcher.java"
	FieldsOf: com.volmit.iris.util.FileWatcher
		private boolean exists	=>	c
		protected final java.io.File file	NameNotChanged
		private long lastModified	=>	a
		private long size	=>	b
	MethodsOf: com.volmit.iris.util.FileWatcher
		public void <init>(java.io.File) 	SignatureNotChanged
		public boolean checkModified() 	SignatureNotChanged
		protected void readProperties() 	SignatureNotChanged

Class: public com.volmit.iris.util.FinalInteger	NameNotChanged
	Source: "FinalInteger.java"
	FieldsOf: com.volmit.iris.util.FinalInteger
	MethodsOf: com.volmit.iris.util.FinalInteger
		public void <init>(java.lang.Integer) 	SignatureNotChanged
		public void add(int) 	SignatureNotChanged
		public void sub(int) 	SignatureNotChanged

Class: public final com.volmit.iris.util.FloatTag	NameNotChanged
	Source: "FloatTag.java"
	FieldsOf: com.volmit.iris.util.FloatTag
		private final float value	=>	b
	MethodsOf: com.volmit.iris.util.FloatTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, float) 	SignatureNotChanged
		public java.lang.Float getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.FolderWatcher	NameNotChanged
	Source: "FolderWatcher.java"
	FieldsOf: com.volmit.iris.util.FolderWatcher
		private com.volmit.iris.util.KList changed	=>	f
		private com.volmit.iris.util.KList created	=>	g
		private com.volmit.iris.util.KList deleted	=>	e
		private com.volmit.iris.util.KMap watchers	=>	d
	MethodsOf: com.volmit.iris.util.FolderWatcher
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		public boolean checkModified() 	SignatureNotChanged
		public com.volmit.iris.util.KList getChanged() 	SignatureNotChanged
		public com.volmit.iris.util.KList getCreated() 	SignatureNotChanged
		public com.volmit.iris.util.KList getDeleted() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getWatchers() 	SignatureNotChanged
		protected void readProperties() 	SignatureNotChanged

Class: public com.volmit.iris.util.Form	NameNotChanged
	Source: "Form.java"
	FieldsOf: com.volmit.iris.util.Form
		private static java.text.DecimalFormat DF	=>	d
		private static final java.util.NavigableMap MAP	=>	b
		private static final java.lang.String[] NAMES	=>	c
		private static java.text.NumberFormat NF	=>	a
		private static final java.math.BigInteger THOUSAND	=>	e
	MethodsOf: com.volmit.iris.util.Form
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String ago(long) 	SignatureNotChanged
		public static java.lang.String b(double) 	SignatureNotChanged
		public static java.lang.String b(int) 	SignatureNotChanged
		public static java.lang.String b(java.math.BigInteger) 	SignatureNotChanged
		public static java.lang.String b(long) 	SignatureNotChanged
		public static java.lang.String capitalize(java.lang.String) 	SignatureNotChanged
		public static java.lang.String capitalizeWords(java.lang.String) 	SignatureNotChanged
		public static java.lang.String cname(java.lang.String) 	SignatureNotChanged
		public static java.lang.String duration(com.volmit.iris.util.RollingSequence, long) 	SignatureNotChanged
		public static java.lang.String duration(double, int) 	SignatureNotChanged
		public static java.lang.String duration(long) 	SignatureNotChanged
		public static java.lang.String duration(long, int) 	SignatureNotChanged
		public static java.lang.String f(double) 	SignatureNotChanged
		public static java.lang.String f(double, int) 	SignatureNotChanged
		public static java.lang.String f(float) 	SignatureNotChanged
		public static java.lang.String f(float, int) 	SignatureNotChanged
		public static java.lang.String f(int) 	SignatureNotChanged
		public static java.lang.String f(long) 	SignatureNotChanged
		public static java.lang.String fd(double, int) 	SignatureNotChanged
		public static java.lang.String fileSize(long) 	SignatureNotChanged
		public static java.lang.String fmin(java.util.Calendar) 	SignatureNotChanged
		public static java.lang.String forceDoubleDigit(int) 	SignatureNotChanged
		public static int fromRoman(java.lang.String) 	SignatureNotChanged
		private static void instantiate()	=>	a()
		public static java.lang.String mem(long) 	SignatureNotChanged
		public static java.lang.String memSize(long) 	SignatureNotChanged
		public static java.lang.String memSize(long, int) 	SignatureNotChanged
		public static java.lang.String memx(long) 	SignatureNotChanged
		public static java.lang.String msSeconds(long) 	SignatureNotChanged
		public static java.lang.String msSeconds(long, int) 	SignatureNotChanged
		public static java.lang.String nsMs(long) 	SignatureNotChanged
		public static java.lang.String nsMs(long, int) 	SignatureNotChanged
		public static java.lang.String nsMsd(long, int) 	SignatureNotChanged
		public static java.lang.String numberSuffix(int) 	SignatureNotChanged
		public static java.lang.String ofSize(long, int) 	SignatureNotChanged
		public static java.lang.String ofSize(long, int, int) 	SignatureNotChanged
		public static java.lang.String ofSizeMetricWeight(long, int, int) 	SignatureNotChanged
		public static java.lang.String pc(double) 	SignatureNotChanged
		public static java.lang.String pc(double, int) 	SignatureNotChanged
		public static java.lang.String pc(float) 	SignatureNotChanged
		public static java.lang.String pc(float, int) 	SignatureNotChanged
		public static java.lang.String pc(int, int) 	SignatureNotChanged
		public static java.lang.String pc(int, int, int) 	SignatureNotChanged
		public static java.lang.String pc(long, long) 	SignatureNotChanged
		public static java.lang.String pc(long, long, int) 	SignatureNotChanged
		public static java.lang.String repeat(java.lang.String, int) 	SignatureNotChanged
		public static java.lang.String scroll(java.lang.String, int, long) 	SignatureNotChanged
		public static java.lang.String split(java.lang.String, java.lang.String[]) 	SignatureNotChanged
		public static java.lang.String stamp(long) 	SignatureNotChanged
		public static java.lang.String stampDay(long) 	SignatureNotChanged
		public static java.lang.String stampTime(long) 	SignatureNotChanged
		public static java.lang.String toRoman(int) 	SignatureNotChanged
		public static java.lang.String trim(java.lang.String, int) 	SignatureNotChanged
		public static java.lang.String wrap(java.lang.String, int) 	SignatureNotChanged
		public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean) 	SignatureNotChanged
		public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean, java.lang.String) 	SignatureNotChanged
		public static java.lang.String wrapWords(java.lang.String, int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Function2	NameNotChanged
	Source: "Function2.java"
	FieldsOf: com.volmit.iris.util.Function2
	MethodsOf: com.volmit.iris.util.Function2
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Function3	NameNotChanged
	Source: "Function3.java"
	FieldsOf: com.volmit.iris.util.Function3
	MethodsOf: com.volmit.iris.util.Function3
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Function4	NameNotChanged
	Source: "Function4.java"
	FieldsOf: com.volmit.iris.util.Function4
	MethodsOf: com.volmit.iris.util.Function4
		public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.GBiset	NameNotChanged
	Source: "GBiset.java"
	FieldsOf: com.volmit.iris.util.GBiset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.GBiset
		public void <init>(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object getA() 	SignatureNotChanged
		public java.lang.Object getB() 	SignatureNotChanged
		public void setA(java.lang.Object) 	SignatureNotChanged
		public void setB(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.GListAdapter	NameNotChanged
	Source: "GListAdapter.java"
	FieldsOf: com.volmit.iris.util.GListAdapter
	MethodsOf: com.volmit.iris.util.GListAdapter
		public void <init>() 	SignatureNotChanged
		public java.util.List adapt(java.util.List) 	SignatureNotChanged
		public abstract java.lang.Object onAdapt(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.GenLayer	NameNotChanged
	Source: "GenLayer.java"
	FieldsOf: com.volmit.iris.util.GenLayer
		protected final com.volmit.iris.gen.DimensionChunkGenerator iris	NameNotChanged
		protected final com.volmit.iris.util.RNG rng	NameNotChanged
	MethodsOf: com.volmit.iris.util.GenLayer
		public void <init>(com.volmit.iris.gen.DimensionChunkGenerator, com.volmit.iris.util.RNG) 	SignatureNotChanged
		public abstract double generate(double, double) 	SignatureNotChanged

Class: public com.volmit.iris.util.GroupedExecutor	NameNotChanged
	Source: "GroupedExecutor.java"
	FieldsOf: com.volmit.iris.util.GroupedExecutor
		private com.volmit.iris.util.KMap mirror	=>	c
		private java.util.concurrent.ExecutorService service	=>	a
		private int xc	=>	b
	MethodsOf: com.volmit.iris.util.GroupedExecutor
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int, java.lang.String) 	SignatureNotChanged
		static synthetic int access$008(com.volmit.iris.util.GroupedExecutor) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void closeNow() 	SignatureNotChanged
		private synthetic void lambda$close$5() 	SignatureNotChanged
		private static synthetic java.lang.Thread lambda$new$0(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private synthetic java.lang.Thread lambda$new$1(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private static synthetic java.lang.Integer lambda$null$3(java.lang.String, java.lang.Integer) 	SignatureNotChanged
		private static synthetic java.lang.Integer lambda$queue$2(java.lang.String, java.lang.Integer) 	SignatureNotChanged
		private synthetic void lambda$queue$4(com.volmit.iris.util.NastyRunnable, java.lang.String) 	SignatureNotChanged
		public void queue(java.lang.String, com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		public void waitFor(java.lang.String) 	SignatureNotChanged

Class: com.volmit.iris.util.GroupedExecutor$1	=>	com.volmit.iris.util.GroupedExecutor$a
	Source: "GroupedExecutor.java"
	FieldsOf: com.volmit.iris.util.GroupedExecutor$1
		final synthetic com.volmit.iris.util.GroupedExecutor this$0	NameNotChanged
		final synthetic java.lang.String val$name	NameNotChanged
		final synthetic int val$priority	NameNotChanged
	MethodsOf: com.volmit.iris.util.GroupedExecutor$1
		void <init>(com.volmit.iris.util.GroupedExecutor, java.lang.String, int) 	SignatureNotChanged
		public java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) 	SignatureNotChanged

Class: public com.volmit.iris.util.HTTP	NameNotChanged
	Source: "HTTP.java"
	FieldsOf: com.volmit.iris.util.HTTP
		public static final java.lang.String CRLF	NameNotChanged
	MethodsOf: com.volmit.iris.util.HTTP
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(com.volmit.iris.util.JSONObject) 	SignatureNotChanged

Class: public com.volmit.iris.util.HTTPTokener	NameNotChanged
	Source: "HTTPTokener.java"
	FieldsOf: com.volmit.iris.util.HTTPTokener
	MethodsOf: com.volmit.iris.util.HTTPTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public java.lang.String nextToken() 	SignatureNotChanged

Class: public com.volmit.iris.util.HeightMap	NameNotChanged
	Source: "HeightMap.java"
	FieldsOf: com.volmit.iris.util.HeightMap
		private final byte[] height	=>	a
	MethodsOf: com.volmit.iris.util.HeightMap
		public void <init>() 	SignatureNotChanged
		public int getHeight(int, int) 	SignatureNotChanged
		public void setHeight(int, int, int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.ICommand	NameNotChanged
	Source: "ICommand.java"
	FieldsOf: com.volmit.iris.util.ICommand
	MethodsOf: com.volmit.iris.util.ICommand
		public abstract void addNode(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList getAllNodes() 	SignatureNotChanged
		public abstract java.lang.String getNode() 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList getNodes() 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList getRequiredPermissions() 	SignatureNotChanged
		public abstract boolean handle(com.volmit.iris.util.MortarSender, java.lang.String[]) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.IController	NameNotChanged
	Source: "IController.java"
	FieldsOf: com.volmit.iris.util.IController
	MethodsOf: com.volmit.iris.util.IController
		public abstract void f(java.lang.Object) 	SignatureNotChanged
		public abstract java.lang.String getName() 	SignatureNotChanged
		public abstract int getTickInterval() 	SignatureNotChanged
		public abstract void l(java.lang.Object) 	SignatureNotChanged
		public abstract void start() 	SignatureNotChanged
		public abstract void stop() 	SignatureNotChanged
		public abstract void tick() 	SignatureNotChanged
		public abstract void v(java.lang.Object) 	SignatureNotChanged
		public abstract void w(java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.ING	NameNotChanged
	Source: "ING.java"
	FieldsOf: com.volmit.iris.util.ING
	MethodsOf: com.volmit.iris.util.ING
		public void <init>(com.volmit.iris.util.RNG) 	SignatureNotChanged

Class: public com.volmit.iris.util.IO	NameNotChanged
	Source: "IO.java"
	FieldsOf: com.volmit.iris.util.IO
		public static final char DIR_SEPARATOR	NameNotChanged
		public static final char DIR_SEPARATOR_UNIX	NameNotChanged
		public static final char DIR_SEPARATOR_WINDOWS	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_UNIX	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	NameNotChanged
		private static final char[] hexArray	=>	a
	MethodsOf: com.volmit.iris.util.IO
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static java.lang.String bytesToHex(byte[]) 	SignatureNotChanged
		public static void closeQuietly(java.io.InputStream) 	SignatureNotChanged
		public static void closeQuietly(java.io.OutputStream) 	SignatureNotChanged
		public static void closeQuietly(java.io.Reader) 	SignatureNotChanged
		public static void closeQuietly(java.io.Writer) 	SignatureNotChanged
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream) 	SignatureNotChanged
		public static boolean contentEquals(java.io.Reader, java.io.Reader) 	SignatureNotChanged
		public static int copy(java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged
		public static void copy(java.io.InputStream, java.io.Writer) 	SignatureNotChanged
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) 	SignatureNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream) 	SignatureNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String) 	SignatureNotChanged
		public static int copy(java.io.Reader, java.io.Writer) 	SignatureNotChanged
		public static void copyFile(java.io.File, java.io.File) 	SignatureNotChanged
		public static void copyFile(java.io.File, java.io.File, boolean) 	SignatureNotChanged
		public static long copyLarge(java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged
		public static long copyLarge(java.io.Reader, java.io.Writer) 	SignatureNotChanged
		public static long count(java.io.File) 	SignatureNotChanged
		public static byte[] decode(java.lang.String) 	SignatureNotChanged
		public static java.lang.String decompress(java.lang.String) 	SignatureNotChanged
		public static void delete(java.io.File) 	SignatureNotChanged
		public static void deleteUp(java.io.File) 	SignatureNotChanged
		private static void doCopyFile(java.io.File, java.io.File, boolean)	=>	a(java.io.File, java.io.File, boolean)
		public static java.lang.String encode(byte[]) 	SignatureNotChanged
		public static long fillTransfer(java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged
		public static long fullTransfer(java.io.InputStream, java.io.OutputStream, int) 	SignatureNotChanged
		public static java.lang.String hash(java.io.File) 	SignatureNotChanged
		public static java.lang.String hash(java.lang.String) 	SignatureNotChanged
		public static java.lang.String readAll(java.io.File) 	SignatureNotChanged
		public static java.lang.String readAll(java.io.InputStream) 	SignatureNotChanged
		public static void readEntry(java.io.File, java.lang.String, java.util.function.Consumer) 	SignatureNotChanged
		public static java.util.List readLines(java.io.InputStream) 	SignatureNotChanged
		public static java.util.List readLines(java.io.InputStream, java.lang.String) 	SignatureNotChanged
		public static java.util.List readLines(java.io.Reader) 	SignatureNotChanged
		public static byte[] sdecompress(java.lang.String) 	SignatureNotChanged
		public static long size(java.io.File) 	SignatureNotChanged
		public static byte[] toByteArray(java.io.InputStream) 	SignatureNotChanged
		public static byte[] toByteArray(java.io.Reader) 	SignatureNotChanged
		public static byte[] toByteArray(java.io.Reader, java.lang.String) 	SignatureNotChanged
		public static byte[] toByteArray(java.lang.String) 	SignatureNotChanged
		public static char[] toCharArray(java.io.InputStream) 	SignatureNotChanged
		public static char[] toCharArray(java.io.InputStream, java.lang.String) 	SignatureNotChanged
		public static char[] toCharArray(java.io.Reader) 	SignatureNotChanged
		public static java.io.InputStream toInputStream(java.lang.String) 	SignatureNotChanged
		public static java.io.InputStream toInputStream(java.lang.String, java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(byte[]) 	SignatureNotChanged
		public static java.lang.String toString(byte[], java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(java.io.InputStream) 	SignatureNotChanged
		public static java.lang.String toString(java.io.InputStream, java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(java.io.Reader) 	SignatureNotChanged
		public static void touch(java.io.File) 	SignatureNotChanged
		public static int transfer(java.io.InputStream, java.io.OutputStream, byte[]) 	SignatureNotChanged
		public static long transfer(java.io.InputStream, java.io.OutputStream, byte[], int) 	SignatureNotChanged
		public static long transfer(java.io.InputStream, java.io.OutputStream, int, long) 	SignatureNotChanged
		public static void write(byte[], java.io.OutputStream) 	SignatureNotChanged
		public static void write(byte[], java.io.Writer) 	SignatureNotChanged
		public static void write(byte[], java.io.Writer, java.lang.String) 	SignatureNotChanged
		public static void write(char[], java.io.OutputStream) 	SignatureNotChanged
		public static void write(char[], java.io.OutputStream, java.lang.String) 	SignatureNotChanged
		public static void write(char[], java.io.Writer) 	SignatureNotChanged
		public static void write(java.lang.String, java.io.OutputStream) 	SignatureNotChanged
		public static void write(java.lang.String, java.io.OutputStream, java.lang.String) 	SignatureNotChanged
		public static void write(java.lang.String, java.io.Writer) 	SignatureNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream) 	SignatureNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String) 	SignatureNotChanged
		public static void write(java.lang.StringBuffer, java.io.Writer) 	SignatureNotChanged
		public static void writeAll(java.io.File, java.lang.Object) 	SignatureNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream) 	SignatureNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String) 	SignatureNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.Writer) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.IObjectPlacer	NameNotChanged
	Source: "IObjectPlacer.java"
	FieldsOf: com.volmit.iris.util.IObjectPlacer
	MethodsOf: com.volmit.iris.util.IObjectPlacer
		public abstract org.bukkit.block.data.BlockData get(int, int, int) 	SignatureNotChanged
		public abstract int getFluidHeight() 	SignatureNotChanged
		public abstract int getHighest(int, int) 	SignatureNotChanged
		public abstract int getHighest(int, int, boolean) 	SignatureNotChanged
		public abstract boolean isPreventingDecay() 	SignatureNotChanged
		public abstract boolean isSolid(int, int, int) 	SignatureNotChanged
		public abstract boolean isUnderwater(int, int) 	SignatureNotChanged
		public abstract void set(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.IPostBlockAccess	NameNotChanged
	Source: "IPostBlockAccess.java"
	FieldsOf: com.volmit.iris.util.IPostBlockAccess
	MethodsOf: com.volmit.iris.util.IPostBlockAccess
		public abstract com.volmit.iris.util.KList caveFloors(int, int) 	SignatureNotChanged
		public abstract org.bukkit.block.data.BlockData getPostBlock(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public abstract int highestTerrainBlock(int, int) 	SignatureNotChanged
		public abstract int highestTerrainOrFluidBlock(int, int) 	SignatureNotChanged
		public abstract void setPostBlock(int, int, int, org.bukkit.block.data.BlockData, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public abstract void updateHeight(int, int, int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.IRare	NameNotChanged
	Source: "IRare.java"
	FieldsOf: com.volmit.iris.util.IRare
	MethodsOf: com.volmit.iris.util.IRare
		public abstract int getRarity() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.Instance	NameNotChanged
	Source: "Instance.java"
	FieldsOf: com.volmit.iris.util.Instance
	MethodsOf: com.volmit.iris.util.Instance

Class: public final com.volmit.iris.util.IntArrayTag	NameNotChanged
	Source: "IntArrayTag.java"
	FieldsOf: com.volmit.iris.util.IntArrayTag
		private final int[] value	=>	b
	MethodsOf: com.volmit.iris.util.IntArrayTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int[]) 	SignatureNotChanged
		public int[] getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final com.volmit.iris.util.IntTag	NameNotChanged
	Source: "IntTag.java"
	FieldsOf: com.volmit.iris.util.IntTag
		private final int value	=>	b
	MethodsOf: com.volmit.iris.util.IntTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.lang.Integer getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.InterpolationType	NameNotChanged
	Source: "InterpolationType.java"
	FieldsOf: com.volmit.iris.util.InterpolationType
		private static final synthetic com.volmit.iris.util.InterpolationType[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.InterpolationType BEZIER	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType LINEAR	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType NONE	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType PARAMETRIC_2	NameNotChanged
		public static final enum com.volmit.iris.util.InterpolationType PARAMETRIC_4	NameNotChanged
	MethodsOf: com.volmit.iris.util.InterpolationType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.InterpolationType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.InterpolationType[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.InvertedBiomeGrid	NameNotChanged
	Source: "InvertedBiomeGrid.java"
	FieldsOf: com.volmit.iris.util.InvertedBiomeGrid
		private org.bukkit.generator.ChunkGenerator$BiomeGrid grid	=>	a
	MethodsOf: com.volmit.iris.util.InvertedBiomeGrid
		public void <init>(org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int, int) 	SignatureNotChanged
		public void setBiome(int, int, int, org.bukkit.block.Biome) 	SignatureNotChanged
		public void setBiome(int, int, org.bukkit.block.Biome) 	SignatureNotChanged

Class: public com.volmit.iris.util.IrisInterpolation	NameNotChanged
	Source: "IrisInterpolation.java"
	FieldsOf: com.volmit.iris.util.IrisInterpolation
	MethodsOf: com.volmit.iris.util.IrisInterpolation
		public void <init>() 	SignatureNotChanged
		public static double bezier(double) 	SignatureNotChanged
		public static double bicubic(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double bicubicBezier(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double bicubicParametric(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double bihermite(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double bihermiteBezier(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double bihermiteParametric(double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double blerp(double, double, double, double, double, double) 	SignatureNotChanged
		public static double blerp(double, double, double, double, double, double, com.volmit.iris.util.InterpolationType) 	SignatureNotChanged
		public static double blerpBezier(double, double, double, double, double, double) 	SignatureNotChanged
		public static double blerpParametric(double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double blerpSinCenter(double, double, double, double, double, double) 	SignatureNotChanged
		public static double cubic(double, double, double, double, double) 	SignatureNotChanged
		public static double cubicBezier(double, double, double, double, double) 	SignatureNotChanged
		public static double cubicParametric(double, double, double, double, double, double) 	SignatureNotChanged
		public static double getBicubicBezierNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getBicubicNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getBicubicParametricNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double) 	SignatureNotChanged
		public static double getBilinearBezierNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getBilinearCenterSineNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getBilinearNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getBilinearParametricNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double) 	SignatureNotChanged
		public static double getHermiteBezierNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getHermiteBezierNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double, double) 	SignatureNotChanged
		public static double getHermiteNoise(int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double getHermiteNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double, double) 	SignatureNotChanged
		public static double getHermiteParametricNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double) 	SignatureNotChanged
		public static double getHermiteParametricNoise(int, int, double, com.volmit.iris.util.NoiseProvider, double, double, double) 	SignatureNotChanged
		public static double getNoise(com.volmit.iris.object.InterpolationMethod, int, int, double, com.volmit.iris.util.NoiseProvider) 	SignatureNotChanged
		public static double hermite(double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double hermiteBezier(double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double hermiteParametric(double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static double lerp(double, double, double) 	SignatureNotChanged
		public static double lerpBezier(double, double, double) 	SignatureNotChanged
		public static double lerpCenterSin(double, double, double) 	SignatureNotChanged
		public static double lerpCenterSinBezier(double, double, double) 	SignatureNotChanged
		public static double lerpParametric(double, double, double, double) 	SignatureNotChanged
		public static float lerpf(float, float, float) 	SignatureNotChanged
		public static double parametric(double, double) 	SignatureNotChanged
		public static double rangeScale(double, double, double, double, double) 	SignatureNotChanged
		public static double sinCenter(double) 	SignatureNotChanged
		public static double trilerp(double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged

Class: public com.volmit.iris.util.IrisLock	NameNotChanged
	Source: "IrisLock.java"
	FieldsOf: com.volmit.iris.util.IrisLock
		private boolean disabled	=>	a
		private final java.util.concurrent.locks.ReentrantLock lock	=>	c
		private final java.lang.String name	=>	b
	MethodsOf: com.volmit.iris.util.IrisLock
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.util.concurrent.locks.ReentrantLock getLock() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isDisabled() 	SignatureNotChanged
		public void lock() 	SignatureNotChanged
		public void setDisabled(boolean) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void unlock() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.IrisPostBlockFilter	NameNotChanged
	Source: "IrisPostBlockFilter.java"
	FieldsOf: com.volmit.iris.util.IrisPostBlockFilter
		public com.volmit.iris.gen.PostBlockChunkGenerator gen	NameNotChanged
		private java.lang.String key	=>	b
		private int phase	=>	a
		private com.volmit.iris.util.KList queue	=>	c
	MethodsOf: com.volmit.iris.util.IrisPostBlockFilter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void <init>(com.volmit.iris.gen.PostBlockChunkGenerator, int) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList caveFloors(int, int) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.gen.PostBlockChunkGenerator getGen() 	SignatureNotChanged
		public java.lang.String getKey() 	SignatureNotChanged
		public int getPhase() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getPostBlock(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public com.volmit.iris.util.KList getQueue() 	SignatureNotChanged
		public boolean hasGravity(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public int highestTerrainBlock(int, int) 	SignatureNotChanged
		public int highestTerrainOrFluidBlock(int, int) 	SignatureNotChanged
		public boolean isAir(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isAirOrWater(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isLiquid(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isSlab(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isSnowLayer(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isSolid(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isWater(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public boolean isWaterOrWaterlogged(int, int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public abstract void onPost(int, int, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void queue(java.lang.Runnable) 	SignatureNotChanged
		public void setGen(com.volmit.iris.gen.PostBlockChunkGenerator) 	SignatureNotChanged
		public void setKey(java.lang.String) 	SignatureNotChanged
		public void setPhase(int) 	SignatureNotChanged
		public void setPostBlock(int, int, int, org.bukkit.block.data.BlockData, int, int, org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		public void setQueue(com.volmit.iris.util.KList) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void updateHeight(int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.util.IrisStructureResult	NameNotChanged
	Source: "IrisStructureResult.java"
	FieldsOf: com.volmit.iris.util.IrisStructureResult
		private com.volmit.iris.object.IrisStructure structure	=>	a
		private com.volmit.iris.object.IrisStructureTile tile	=>	b
	MethodsOf: com.volmit.iris.util.IrisStructureResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.object.IrisStructureTile, com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructure getStructure() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructureTile getTile() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setStructure(com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		public void setTile(com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.J	NameNotChanged
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J
		private static com.volmit.iris.util.KList afterStartup	=>	b
		private static com.volmit.iris.util.KList afterStartupAsync	=>	e
		private static final java.util.concurrent.ExecutorService e	=>	c
		private static boolean started	=>	d
		private static int tid	=>	a
	MethodsOf: com.volmit.iris.util.J
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static void a(java.lang.Runnable) 	SignatureNotChanged
		public static void a(java.lang.Runnable, int) 	SignatureNotChanged
		public static java.util.concurrent.Future a(java.util.concurrent.Callable) 	SignatureNotChanged
		static synthetic int access$000() 	SignatureNotChanged
		static synthetic int access$008() 	SignatureNotChanged
		public static int ar(java.lang.Runnable, int) 	SignatureNotChanged
		public static void ar(java.lang.Runnable, int, int) 	SignatureNotChanged
		public static void asa(java.lang.Runnable) 	SignatureNotChanged
		public static void ass(java.lang.Runnable) 	SignatureNotChanged
		public static boolean attempt(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		public static java.lang.Object attempt(java.util.function.Supplier, java.lang.Object) 	SignatureNotChanged
		public static void attemptAsync(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		public static java.lang.Throwable attemptCatch(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		public static java.lang.Object attemptFunction(com.volmit.iris.util.NastyFunction, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public static java.lang.Object attemptResult(com.volmit.iris.util.NastyFuture, java.lang.Object) 	SignatureNotChanged
		public static void car(int) 	SignatureNotChanged
		public static void csr(int) 	SignatureNotChanged
		public static void dofor(int, java.util.function.Function, int, java.util.function.Consumer) 	SignatureNotChanged
		public static boolean doif(java.util.function.Supplier, java.lang.Runnable) 	SignatureNotChanged
		public static void executeAfterStartupQueue() 	SignatureNotChanged
		private static synthetic java.lang.Boolean lambda$attemptAsync$0(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		private static synthetic void lambda$sleep$1(long) 	SignatureNotChanged
		public static void s(java.lang.Runnable) 	SignatureNotChanged
		public static void s(java.lang.Runnable, int) 	SignatureNotChanged
		public static boolean sleep(long) 	SignatureNotChanged
		public static int sr(java.lang.Runnable, int) 	SignatureNotChanged
		public static void sr(java.lang.Runnable, int, int) 	SignatureNotChanged

Class: final com.volmit.iris.util.J$1	=>	com.volmit.iris.util.J$b
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J$1
	MethodsOf: com.volmit.iris.util.J$1
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static synthetic void lambda$newThread$0(java.lang.Thread, java.lang.Throwable) 	SignatureNotChanged
		public java.lang.Thread newThread(java.lang.Runnable) 	SignatureNotChanged

Class: final com.volmit.iris.util.J$2	=>	com.volmit.iris.util.J$a
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J$2
		final synthetic com.volmit.iris.util.FinalInteger val$fi	NameNotChanged
		final synthetic int val$intervals	NameNotChanged
		final synthetic java.lang.Runnable val$r	NameNotChanged
	MethodsOf: com.volmit.iris.util.J$2
		void <init>(com.volmit.iris.util.FinalInteger, java.lang.Runnable, int) 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: final com.volmit.iris.util.J$3	=>	com.volmit.iris.util.J$c
	Source: "J.java"
	FieldsOf: com.volmit.iris.util.J$3
		final synthetic com.volmit.iris.util.FinalInteger val$fi	NameNotChanged
		final synthetic int val$intervals	NameNotChanged
		final synthetic java.lang.Runnable val$r	NameNotChanged
	MethodsOf: com.volmit.iris.util.J$3
		void <init>(com.volmit.iris.util.FinalInteger, java.lang.Runnable, int) 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONArray	NameNotChanged
	Source: "JSONArray.java"
	FieldsOf: com.volmit.iris.util.JSONArray
		private final java.util.ArrayList myArrayList	=>	a
	MethodsOf: com.volmit.iris.util.JSONArray
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONTokener) 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object get(int) 	SignatureNotChanged
		public java.math.BigDecimal getBigDecimal(int) 	SignatureNotChanged
		public java.math.BigInteger getBigInteger(int) 	SignatureNotChanged
		public boolean getBoolean(int) 	SignatureNotChanged
		public double getDouble(int) 	SignatureNotChanged
		public java.lang.Enum getEnum(java.lang.Class, int) 	SignatureNotChanged
		public int getInt(int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray getJSONArray(int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject getJSONObject(int) 	SignatureNotChanged
		public long getLong(int) 	SignatureNotChanged
		public java.lang.String getString(int) 	SignatureNotChanged
		public boolean isNull(int) 	SignatureNotChanged
		public java.util.Iterator iterator() 	SignatureNotChanged
		public java.lang.String join(java.lang.String) 	SignatureNotChanged
		public int length() 	SignatureNotChanged
		public java.lang.Object opt(int) 	SignatureNotChanged
		public java.math.BigDecimal optBigDecimal(int, java.math.BigDecimal) 	SignatureNotChanged
		public java.math.BigInteger optBigInteger(int, java.math.BigInteger) 	SignatureNotChanged
		public boolean optBoolean(int) 	SignatureNotChanged
		public boolean optBoolean(int, boolean) 	SignatureNotChanged
		public double optDouble(int) 	SignatureNotChanged
		public double optDouble(int, double) 	SignatureNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int) 	SignatureNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int, java.lang.Enum) 	SignatureNotChanged
		public int optInt(int) 	SignatureNotChanged
		public int optInt(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray optJSONArray(int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject optJSONObject(int) 	SignatureNotChanged
		public long optLong(int) 	SignatureNotChanged
		public long optLong(int, long) 	SignatureNotChanged
		public java.lang.String optString(int) 	SignatureNotChanged
		public java.lang.String optString(int, java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(boolean) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(double) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, boolean) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, double) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, java.util.Collection) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, java.util.Map) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(int, long) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(java.util.Collection) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(java.util.Map) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray put(long) 	SignatureNotChanged
		public java.lang.Object remove(int) 	SignatureNotChanged
		public boolean similar(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject toJSONObject(com.volmit.iris.util.JSONArray) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(int) 	SignatureNotChanged
		public java.io.Writer write(java.io.Writer) 	SignatureNotChanged
		java.io.Writer write(java.io.Writer, int, int)	=>	a(java.io.Writer, int, int)

Class: public com.volmit.iris.util.JSONException	NameNotChanged
	Source: "JSONException.java"
	FieldsOf: com.volmit.iris.util.JSONException
		private java.lang.Throwable cause	=>	a
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.JSONException
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.Throwable) 	SignatureNotChanged
		public java.lang.Throwable getCause() 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONML	NameNotChanged
	Source: "JSONML.java"
	FieldsOf: com.volmit.iris.util.JSONML
	MethodsOf: com.volmit.iris.util.JSONML
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		private static java.lang.Object parse(com.volmit.iris.util.XMLTokener, boolean, com.volmit.iris.util.JSONArray)	=>	a(com.volmit.iris.util.XMLTokener, boolean, com.volmit.iris.util.JSONArray)
		public static com.volmit.iris.util.JSONArray toJSONArray(com.volmit.iris.util.XMLTokener) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONArray toJSONArray(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONObject toJSONObject(com.volmit.iris.util.XMLTokener) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(com.volmit.iris.util.JSONArray) 	SignatureNotChanged
		public static java.lang.String toString(com.volmit.iris.util.JSONObject) 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONObject	NameNotChanged
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject
		public static final java.lang.Object NULL	NameNotChanged
		private final java.util.Map map	=>	a
	MethodsOf: com.volmit.iris.util.JSONObject
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONObject, java.lang.String[]) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.JSONTokener) 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.Object, java.lang.String[]) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.util.Locale) 	SignatureNotChanged
		public void <init>(java.util.Map) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject accumulate(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject append(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public static java.lang.String doubleToString(double) 	SignatureNotChanged
		public java.lang.Object get(java.lang.String) 	SignatureNotChanged
		public java.math.BigDecimal getBigDecimal(java.lang.String) 	SignatureNotChanged
		public java.math.BigInteger getBigInteger(java.lang.String) 	SignatureNotChanged
		public boolean getBoolean(java.lang.String) 	SignatureNotChanged
		public double getDouble(java.lang.String) 	SignatureNotChanged
		public java.lang.Enum getEnum(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public int getInt(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray getJSONArray(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject getJSONObject(java.lang.String) 	SignatureNotChanged
		public long getLong(java.lang.String) 	SignatureNotChanged
		public static java.lang.String[] getNames(com.volmit.iris.util.JSONObject) 	SignatureNotChanged
		public static java.lang.String[] getNames(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getString(java.lang.String) 	SignatureNotChanged
		public boolean has(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject increment(java.lang.String) 	SignatureNotChanged
		static final void indent(java.io.Writer, int)	=>	a(java.io.Writer, int)
		public boolean isNull(java.lang.String) 	SignatureNotChanged
		public java.util.Set keySet() 	SignatureNotChanged
		public java.util.Iterator keys() 	SignatureNotChanged
		public int length() 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray names() 	SignatureNotChanged
		public static java.lang.String numberToString(java.lang.Number) 	SignatureNotChanged
		public java.lang.Object opt(java.lang.String) 	SignatureNotChanged
		public java.math.BigDecimal optBigDecimal(java.lang.String, java.math.BigDecimal) 	SignatureNotChanged
		public java.math.BigInteger optBigInteger(java.lang.String, java.math.BigInteger) 	SignatureNotChanged
		public boolean optBoolean(java.lang.String) 	SignatureNotChanged
		public boolean optBoolean(java.lang.String, boolean) 	SignatureNotChanged
		public double optDouble(java.lang.String) 	SignatureNotChanged
		public double optDouble(java.lang.String, double) 	SignatureNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String, java.lang.Enum) 	SignatureNotChanged
		public int optInt(java.lang.String) 	SignatureNotChanged
		public int optInt(java.lang.String, int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray optJSONArray(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject optJSONObject(java.lang.String) 	SignatureNotChanged
		public long optLong(java.lang.String) 	SignatureNotChanged
		public long optLong(java.lang.String, long) 	SignatureNotChanged
		public java.lang.String optString(java.lang.String) 	SignatureNotChanged
		public java.lang.String optString(java.lang.String, java.lang.String) 	SignatureNotChanged
		private void populateMap(java.lang.Object)	=>	a(java.lang.Object)
		public com.volmit.iris.util.JSONObject put(java.lang.String, boolean) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, double) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.util.Collection) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, java.util.Map) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject put(java.lang.String, long) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject putOnce(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONObject putOpt(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public static java.lang.String quote(java.lang.String) 	SignatureNotChanged
		public static java.io.Writer quote(java.lang.String, java.io.Writer) 	SignatureNotChanged
		public java.lang.Object remove(java.lang.String) 	SignatureNotChanged
		public boolean similar(java.lang.Object) 	SignatureNotChanged
		public static java.lang.Object stringToValue(java.lang.String) 	SignatureNotChanged
		public static void testValidity(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray toJSONArray(com.volmit.iris.util.JSONArray) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(int) 	SignatureNotChanged
		public static java.lang.String valueToString(java.lang.Object) 	SignatureNotChanged
		public static java.lang.Object wrap(java.lang.Object) 	SignatureNotChanged
		public java.io.Writer write(java.io.Writer) 	SignatureNotChanged
		java.io.Writer write(java.io.Writer, int, int)	=>	a(java.io.Writer, int, int)
		static final java.io.Writer writeValue(java.io.Writer, java.lang.Object, int, int)	=>	a(java.io.Writer, java.lang.Object, int, int)

Class: synthetic com.volmit.iris.util.JSONObject$1	=>	com.volmit.iris.util.JSONObject$b
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject$1
	MethodsOf: com.volmit.iris.util.JSONObject$1

Class: final com.volmit.iris.util.JSONObject$Null	=>	com.volmit.iris.util.JSONObject$a
	Source: "JSONObject.java"
	FieldsOf: com.volmit.iris.util.JSONObject$Null
	MethodsOf: com.volmit.iris.util.JSONObject$Null
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(com.volmit.iris.util.JSONObject$1) 	SignatureNotChanged
		protected final java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.JSONString	NameNotChanged
	Source: "JSONString.java"
	FieldsOf: com.volmit.iris.util.JSONString
	MethodsOf: com.volmit.iris.util.JSONString
		public abstract java.lang.String toJSONString() 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONStringer	NameNotChanged
	Source: "JSONStringer.java"
	FieldsOf: com.volmit.iris.util.JSONStringer
	MethodsOf: com.volmit.iris.util.JSONStringer
		public void <init>() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONTokener	NameNotChanged
	Source: "JSONTokener.java"
	FieldsOf: com.volmit.iris.util.JSONTokener
		private long character	=>	e
		private boolean eof	=>	b
		private long index	=>	d
		private long line	=>	g
		private char previous	=>	f
		private java.io.Reader reader	=>	c
		private boolean usePrevious	=>	a
	MethodsOf: com.volmit.iris.util.JSONTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		public void <init>(java.io.Reader) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void back() 	SignatureNotChanged
		public static int dehexchar(char) 	SignatureNotChanged
		public boolean end() 	SignatureNotChanged
		public boolean more() 	SignatureNotChanged
		public char next() 	SignatureNotChanged
		public char next(char) 	SignatureNotChanged
		public java.lang.String next(int) 	SignatureNotChanged
		public char nextClean() 	SignatureNotChanged
		public java.lang.String nextString(char) 	SignatureNotChanged
		public java.lang.String nextTo(char) 	SignatureNotChanged
		public java.lang.String nextTo(java.lang.String) 	SignatureNotChanged
		public java.lang.Object nextValue() 	SignatureNotChanged
		public char skipTo(char) 	SignatureNotChanged
		public com.volmit.iris.util.JSONException syntaxError(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.JSONWriter	NameNotChanged
	Source: "JSONWriter.java"
	FieldsOf: com.volmit.iris.util.JSONWriter
		private boolean comma	=>	b
		protected char mode	NameNotChanged
		private final com.volmit.iris.util.JSONObject[] stack	=>	c
		private int top	=>	a
		protected java.io.Writer writer	NameNotChanged
	MethodsOf: com.volmit.iris.util.JSONWriter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.Writer) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private com.volmit.iris.util.JSONWriter append(java.lang.String)	=>	a(java.lang.String)
		public com.volmit.iris.util.JSONWriter array() 	SignatureNotChanged
		private com.volmit.iris.util.JSONWriter end(char, char)	=>	a(char, char)
		public com.volmit.iris.util.JSONWriter endArray() 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter endObject() 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter key(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter object() 	SignatureNotChanged
		private void pop(char)	=>	a(char)
		private void push(com.volmit.iris.util.JSONObject)	=>	a(com.volmit.iris.util.JSONObject)
		public com.volmit.iris.util.JSONWriter value(boolean) 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter value(double) 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter value(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.JSONWriter value(long) 	SignatureNotChanged

Class: public com.volmit.iris.util.JarScanner	NameNotChanged
	Source: "JarScanner.java"
	FieldsOf: com.volmit.iris.util.JarScanner
		private final com.volmit.iris.util.KSet classes	=>	b
		private final java.io.File jar	=>	a
		private final java.lang.String superPackage	=>	c
	MethodsOf: com.volmit.iris.util.JarScanner
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String) 	SignatureNotChanged
		private static java.lang.ClassNotFoundException a(java.lang.ClassNotFoundException) 	SignatureNotChanged
		public com.volmit.iris.util.KSet getClasses() 	SignatureNotChanged
		public java.io.File getJar() 	SignatureNotChanged
		public void scan() 	SignatureNotChanged

Class: public com.volmit.iris.util.KList	NameNotChanged
	Source: "KList.java"
	FieldsOf: com.volmit.iris.util.KList
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KList
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object[]) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged
		public void <init>(java.util.Enumeration) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(com.volmit.iris.util.KList) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.lang.Object[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList add(java.util.Collection) 	SignatureNotChanged
		private com.volmit.iris.util.KList add(java.util.Enumeration)	=>	a(java.util.Enumeration)
		public com.volmit.iris.util.KList addFrom(java.util.List, java.util.function.Function) 	SignatureNotChanged
		public void addIfMissing(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList addNonNull(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object[] array() 	SignatureNotChanged
		public com.volmit.iris.util.KMap asKeys(java.util.function.Function) 	SignatureNotChanged
		public static com.volmit.iris.util.KList asStringList(java.util.List) 	SignatureNotChanged
		public com.volmit.iris.util.KMap asValues(java.util.function.Function) 	SignatureNotChanged
		public com.volmit.iris.util.KList convert(java.util.function.Function) 	SignatureNotChanged
		public com.volmit.iris.util.KList copy() 	SignatureNotChanged
		public com.volmit.iris.util.KList dedupe() 	SignatureNotChanged
		public com.volmit.iris.util.KList divide(int) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(boolean[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(byte[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(double[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(float[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(int[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(java.lang.Object[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(long[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList forceAdd(short[]) 	SignatureNotChanged
		public static com.volmit.iris.util.KList fromJSONAny(com.volmit.iris.util.JSONArray) 	SignatureNotChanged
		public java.lang.Object getRandom() 	SignatureNotChanged
		public boolean hasElements() 	SignatureNotChanged
		public boolean hasIndex(int) 	SignatureNotChanged
		public boolean isNotEmpty() 	SignatureNotChanged
		private synthetic void lambda$addFrom$4(java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$asKeys$1(com.volmit.iris.util.KMap, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$asValues$0(com.volmit.iris.util.KMap, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$convert$5(com.volmit.iris.util.KList, java.util.function.Function, java.lang.Object) 	SignatureNotChanged
		private static synthetic int lambda$sort$2(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		private static synthetic java.lang.String lambda$toStringList$3(java.lang.Object) 	SignatureNotChanged
		public int last() 	SignatureNotChanged
		private int middleIndex()	=>	a()
		public java.lang.Object middleValue() 	SignatureNotChanged
		public java.lang.Object pop() 	SignatureNotChanged
		public java.lang.Object popLast() 	SignatureNotChanged
		public java.lang.Object popRandom() 	SignatureNotChanged
		public com.volmit.iris.util.KList qadd(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList qclear() 	SignatureNotChanged
		public com.volmit.iris.util.KList qdel(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KList remove(java.lang.Object[]) 	SignatureNotChanged
		public com.volmit.iris.util.KList removeDuplicates() 	SignatureNotChanged
		public com.volmit.iris.util.KList removeLast() 	SignatureNotChanged
		public com.volmit.iris.util.KList reverse() 	SignatureNotChanged
		public com.volmit.iris.util.KList rewrite(java.util.function.Function) 	SignatureNotChanged
		public com.volmit.iris.util.KList shuffle() 	SignatureNotChanged
		public com.volmit.iris.util.KList sort() 	SignatureNotChanged
		public com.volmit.iris.util.KList split(int) 	SignatureNotChanged
		public com.volmit.iris.util.KList sub(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.KList swapIndexes(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.JSONArray toJSONStringArray() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public java.lang.String toString(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.KList toStringList() 	SignatureNotChanged

Class: public com.volmit.iris.util.KMap	NameNotChanged
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.KMap copy() 	SignatureNotChanged
		public com.volmit.iris.util.KMap each(com.volmit.iris.util.Consumer2) 	SignatureNotChanged
		public com.volmit.iris.util.Queue enqueue() 	SignatureNotChanged
		public com.volmit.iris.util.Queue enqueueKeys() 	SignatureNotChanged
		public com.volmit.iris.util.Queue enqueueValues() 	SignatureNotChanged
		public com.volmit.iris.util.KMap flip() 	SignatureNotChanged
		public com.volmit.iris.util.KMap flipFlatten() 	SignatureNotChanged
		public com.volmit.iris.util.KList k() 	SignatureNotChanged
		public com.volmit.iris.util.KList keypair() 	SignatureNotChanged
		private static synthetic void lambda$keypair$0(com.volmit.iris.util.KList, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap put(java.util.Map) 	SignatureNotChanged
		public com.volmit.iris.util.KMap putNonNull(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object putThen(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap putValueList(java.lang.Object, java.lang.Object[]) 	SignatureNotChanged
		public com.volmit.iris.util.KMap qclear() 	SignatureNotChanged
		public com.volmit.iris.util.KMap qput(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.KMap rewrite(com.volmit.iris.util.Consumer3) 	SignatureNotChanged
		public com.volmit.iris.util.KList sortK() 	SignatureNotChanged
		public com.volmit.iris.util.KList sortKNumber() 	SignatureNotChanged
		public com.volmit.iris.util.KList sortV() 	SignatureNotChanged
		public com.volmit.iris.util.KList sortVNoDedupe() 	SignatureNotChanged
		public com.volmit.iris.util.KList v() 	SignatureNotChanged

Class: com.volmit.iris.util.KMap$1	=>	com.volmit.iris.util.KMap$b
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$1
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$1
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: com.volmit.iris.util.KMap$2	=>	com.volmit.iris.util.KMap$a
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$2
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$2
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: com.volmit.iris.util.KMap$3	=>	com.volmit.iris.util.KMap$c
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$3
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$3
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: com.volmit.iris.util.KMap$4	=>	com.volmit.iris.util.KMap$d
	Source: "KMap.java"
	FieldsOf: com.volmit.iris.util.KMap$4
		final synthetic com.volmit.iris.util.KMap this$0	NameNotChanged
	MethodsOf: com.volmit.iris.util.KMap$4
		void <init>(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public int compare(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.KSet	NameNotChanged
	Source: "KSet.java"
	FieldsOf: com.volmit.iris.util.KSet
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.KSet
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(int, float) 	SignatureNotChanged
		public void <init>(java.util.Collection) 	SignatureNotChanged

Class: public com.volmit.iris.util.KeyPair	NameNotChanged
	Source: "KeyPair.java"
	FieldsOf: com.volmit.iris.util.KeyPair
		private java.lang.Object k	=>	b
		private java.lang.Object v	=>	a
	MethodsOf: com.volmit.iris.util.KeyPair
		public void <init>(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public java.lang.Object getK() 	SignatureNotChanged
		public java.lang.Object getV() 	SignatureNotChanged
		public void setK(java.lang.Object) 	SignatureNotChanged
		public void setV(java.lang.Object) 	SignatureNotChanged

Class: public final com.volmit.iris.util.ListTag	NameNotChanged
	Source: "ListTag.java"
	FieldsOf: com.volmit.iris.util.ListTag
		private final java.lang.Class type	=>	c
		private final java.util.List value	=>	b
	MethodsOf: com.volmit.iris.util.ListTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Class, java.util.List) 	SignatureNotChanged
		public java.lang.Class getType() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.util.List getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final com.volmit.iris.util.LongTag	NameNotChanged
	Source: "LongTag.java"
	FieldsOf: com.volmit.iris.util.LongTag
		private final long value	=>	b
	MethodsOf: com.volmit.iris.util.LongTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, long) 	SignatureNotChanged
		public java.lang.Long getValue() 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Looper	NameNotChanged
	Source: "Looper.java"
	FieldsOf: com.volmit.iris.util.Looper
	MethodsOf: com.volmit.iris.util.Looper
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.InterruptedException a(java.lang.InterruptedException) 	SignatureNotChanged
		protected abstract long loop() 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: public com.volmit.iris.util.M	NameNotChanged
	Source: "M.java"
	FieldsOf: com.volmit.iris.util.M
		private static final float[] sin	=>	a
		public static int tick	NameNotChanged
	MethodsOf: com.volmit.iris.util.M
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static double bilerp(double, double, double, double, double, double) 	SignatureNotChanged
		public static java.lang.Number clip(java.lang.Number, java.lang.Number, java.lang.Number) 	SignatureNotChanged
		public static float cos(float) 	SignatureNotChanged
		public static double drand(double, double) 	SignatureNotChanged
		public static long epochDays() 	SignatureNotChanged
		private static long epochDays(long)	=>	a(long)
		public static double evaluate(java.lang.String) 	SignatureNotChanged
		public static double evaluate(java.lang.String, java.lang.Double[]) 	SignatureNotChanged
		public static float frand(float, float) 	SignatureNotChanged
		public static boolean interval(int) 	SignatureNotChanged
		public static int irand(int, int) 	SignatureNotChanged
		public static double lerp(double, double, double) 	SignatureNotChanged
		public static double lerpInverse(double, double, double) 	SignatureNotChanged
		public static java.lang.Number max(java.lang.Number[]) 	SignatureNotChanged
		public static java.lang.Number min(java.lang.Number[]) 	SignatureNotChanged
		public static long ms() 	SignatureNotChanged
		public static long ns() 	SignatureNotChanged
		public static boolean r(java.lang.Double) 	SignatureNotChanged
		public static double rangeScale(double, double, double, double, double) 	SignatureNotChanged
		public static float sin(float) 	SignatureNotChanged
		private static float sinLookup(int)	=>	a(int)
		public static float tan(float) 	SignatureNotChanged
		public static double ticksFromNS(long) 	SignatureNotChanged
		public static double tps(long, int) 	SignatureNotChanged
		public static double trilerp(double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static boolean within(int, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.util.MathHelper	NameNotChanged
	Source: "MathHelper.java"
	FieldsOf: com.volmit.iris.util.MathHelper
		public static final float a	NameNotChanged
		private static final java.util.Random c	=>	d
		private static final int[] d	=>	c
		private static final double e	=>	f
		private static final double[] f	=>	b
		private static final double[] g	=>	h
	MethodsOf: com.volmit.iris.util.MathHelper
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.util.UUID a() 	SignatureNotChanged
		public static double a(double, double) 	SignatureNotChanged
		public static double a(double, double, double) 	SignatureNotChanged
		public static double a(double, double, double, double, double, double) 	SignatureNotChanged
		public static double a(double, double, double, double, double, double, double, double, double, double, double) 	SignatureNotChanged
		public static float a(float, float, float) 	SignatureNotChanged
		public static int a(int) 	SignatureNotChanged
		public static int a(int, int) 	SignatureNotChanged
		public static int a(int, int, java.util.function.IntPredicate) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public static java.util.UUID a(java.util.Random) 	SignatureNotChanged
		public static double a(java.util.Random, double, double) 	SignatureNotChanged
		public static float a(java.util.Random, float, float) 	SignatureNotChanged
		public static double a(long[]) 	SignatureNotChanged
		public static boolean b(double, double) 	SignatureNotChanged
		public static double b(double, double, double) 	SignatureNotChanged
		public static float b(float, float, float) 	SignatureNotChanged
		public static int b(int, int) 	SignatureNotChanged
		public static double c(double, double, double) 	SignatureNotChanged
		public static float c(float) 	SignatureNotChanged
		public static float c(float, float) 	SignatureNotChanged
		public static float c(float, float, float) 	SignatureNotChanged
		public static int c(int) 	SignatureNotChanged
		public static int c(int, int) 	SignatureNotChanged
		public static long c(int, int, int) 	SignatureNotChanged
		public static int clamp(int, int, int) 	SignatureNotChanged
		public static long d(double) 	SignatureNotChanged
		public static double d(double, double) 	SignatureNotChanged
		public static double d(double, double, double) 	SignatureNotChanged
		public static int d(float) 	SignatureNotChanged
		public static float d(float, float) 	SignatureNotChanged
		public static float d(float, float, float) 	SignatureNotChanged
		public static boolean d(int) 	SignatureNotChanged
		public static float e(float) 	SignatureNotChanged
		public static int e(int) 	SignatureNotChanged
		public static int f(double) 	SignatureNotChanged
		public static int f(float) 	SignatureNotChanged
		public static int f(float, float, float) 	SignatureNotChanged
		public static int f(int) 	SignatureNotChanged
		public static int floor(double) 	SignatureNotChanged
		public static double g(double) 	SignatureNotChanged
		public static float g(float) 	SignatureNotChanged
		public static float g(float, float, float) 	SignatureNotChanged
		public static int g(int) 	SignatureNotChanged
		public static double h(double) 	SignatureNotChanged
		public static float h(float) 	SignatureNotChanged
		public static double i(double) 	SignatureNotChanged
		public static double j(double) 	SignatureNotChanged
		public static float j(float, float, float) 	SignatureNotChanged
		public static int k(double) 	SignatureNotChanged
		public static float k(float) 	SignatureNotChanged
		public static int nextInt(java.util.Random, int, int) 	SignatureNotChanged
		public static float sqrt(double) 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.MaxNumber	NameNotChanged
	Source: "MaxNumber.java"
	FieldsOf: com.volmit.iris.util.MaxNumber
	MethodsOf: com.volmit.iris.util.MaxNumber
		public abstract double value() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.MinNumber	NameNotChanged
	Source: "MinNumber.java"
	FieldsOf: com.volmit.iris.util.MinNumber
	MethodsOf: com.volmit.iris.util.MinNumber
		public abstract double value() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.MortarCommand	NameNotChanged
	Source: "MortarCommand.java"
	FieldsOf: com.volmit.iris.util.MortarCommand
		private java.lang.String category	=>	b
		private com.volmit.iris.util.KList children	=>	d
		private java.lang.String description	=>	c
		private java.lang.String node	=>	e
		private com.volmit.iris.util.KList nodes	=>	f
		private com.volmit.iris.util.KList requiredPermissions	=>	a
	MethodsOf: com.volmit.iris.util.MortarCommand
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String[]) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public void addNode(java.lang.String) 	SignatureNotChanged
		private com.volmit.iris.util.KList buildChildren()	=>	a()
		public com.volmit.iris.util.KList getAllNodes() 	SignatureNotChanged
		protected abstract java.lang.String getArgsUsage() 	SignatureNotChanged
		public java.lang.String getCategory() 	SignatureNotChanged
		public com.volmit.iris.util.KList getChildren() 	SignatureNotChanged
		public java.lang.String getDescription() 	SignatureNotChanged
		public java.lang.String getNode() 	SignatureNotChanged
		public com.volmit.iris.util.KList getNodes() 	SignatureNotChanged
		public com.volmit.iris.util.KList getRequiredPermissions() 	SignatureNotChanged
		public void printHelp(com.volmit.iris.util.MortarSender) 	SignatureNotChanged
		protected void requiresPermission(com.volmit.iris.util.MortarPermission) 	SignatureNotChanged
		protected void requiresPermission(java.lang.String) 	SignatureNotChanged
		public void setCategory(java.lang.String) 	SignatureNotChanged
		protected void setDescription(java.lang.String) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.MortarPermission	NameNotChanged
	Source: "MortarPermission.java"
	FieldsOf: com.volmit.iris.util.MortarPermission
		private com.volmit.iris.util.MortarPermission parent	=>	a
	MethodsOf: com.volmit.iris.util.MortarPermission
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public com.volmit.iris.util.KList getChildren() 	SignatureNotChanged
		public abstract java.lang.String getDescription() 	SignatureNotChanged
		public java.lang.String getFullNode() 	SignatureNotChanged
		protected abstract java.lang.String getNode() 	SignatureNotChanged
		public com.volmit.iris.util.MortarPermission getParent() 	SignatureNotChanged
		public boolean has(org.bukkit.command.CommandSender) 	SignatureNotChanged
		public boolean hasParent() 	SignatureNotChanged
		public abstract boolean isDefault() 	SignatureNotChanged
		public void setParent(com.volmit.iris.util.MortarPermission) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.MortarPlugin	NameNotChanged
	Source: "MortarPlugin.java"
	FieldsOf: com.volmit.iris.util.MortarPlugin
		private static java.lang.String a	=>	g
		private com.volmit.iris.util.KMap cachedClassControllers	=>	b
		private com.volmit.iris.util.KList cachedControllers	=>	f
		private com.volmit.iris.util.KList commandCache	=>	a
		private com.volmit.iris.util.KMap commands	=>	e
		private com.volmit.iris.util.KMap controllers	=>	d
		private com.volmit.iris.util.KList permissionCache	=>	c
	MethodsOf: com.volmit.iris.util.MortarPlugin
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String a()	=>	k()
		public static void a(java.lang.String)	=>	b(java.lang.String)
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		private void chain(com.volmit.iris.util.MortarCommand, java.lang.String, org.bukkit.configuration.file.FileConfiguration)	=>	a(com.volmit.iris.util.MortarCommand, java.lang.String, org.bukkit.configuration.file.FileConfiguration)
		private void chain(com.volmit.iris.util.MortarPermission, org.bukkit.configuration.file.FileConfiguration)	=>	a(com.volmit.iris.util.MortarPermission, org.bukkit.configuration.file.FileConfiguration)
		private com.volmit.iris.util.KList computePermissions()	=>	f()
		private com.volmit.iris.util.KList computePermissions(com.volmit.iris.util.MortarPermission)	=>	a(com.volmit.iris.util.MortarPermission)
		public void f(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.IController getController(java.lang.Class) 	SignatureNotChanged
		public com.volmit.iris.util.KList getControllers() 	SignatureNotChanged
		public java.io.File getDataFile(java.lang.String[]) 	SignatureNotChanged
		public java.io.File getDataFolder(java.lang.String[]) 	SignatureNotChanged
		public java.lang.String getTag() 	SignatureNotChanged
		public abstract java.lang.String getTag(java.lang.String) 	SignatureNotChanged
		public void l(java.lang.Object) 	SignatureNotChanged
		private synthetic void lambda$onEnable$0() 	SignatureNotChanged
		public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]) 	SignatureNotChanged
		public void onDisable() 	SignatureNotChanged
		public void onEnable() 	SignatureNotChanged
		private void outputCommandInfo()	=>	e()
		private void outputInfo()	=>	m()
		private void outputPermissionInfo()	=>	d()
		private void outputPluginInfo()	=>	g()
		public void registerCommand(com.volmit.iris.util.ICommand) 	SignatureNotChanged
		public void registerCommand(com.volmit.iris.util.ICommand, java.lang.String) 	SignatureNotChanged
		private void registerCommands()	=>	b()
		private void registerController(com.volmit.iris.util.IController)	=>	b(com.volmit.iris.util.IController)
		private void registerControllers()	=>	l()
		private void registerInstance()	=>	n()
		public void registerListener(org.bukkit.event.Listener) 	SignatureNotChanged
		private void registerPermission(com.volmit.iris.util.MortarPermission)	=>	c(com.volmit.iris.util.MortarPermission)
		private void registerPermissions()	=>	a()
		public abstract void start() 	SignatureNotChanged
		public abstract void stop() 	SignatureNotChanged
		private void stopControllers()	=>	i()
		private void tickController(com.volmit.iris.util.IController)	=>	a(com.volmit.iris.util.IController)
		private void tickControllers()	=>	h()
		private org.bukkit.permissions.Permission toPermission(com.volmit.iris.util.MortarPermission)	=>	b(com.volmit.iris.util.MortarPermission)
		public void unregisterAll() 	SignatureNotChanged
		public void unregisterCommand(com.volmit.iris.util.ICommand) 	SignatureNotChanged
		public void unregisterCommands() 	SignatureNotChanged
		private void unregisterInstance()	=>	c()
		public void unregisterListener(org.bukkit.event.Listener) 	SignatureNotChanged
		public void unregisterListeners() 	SignatureNotChanged
		private void unregisterPermissions()	=>	j()
		public void v(java.lang.Object) 	SignatureNotChanged
		public void w(java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.MortarSender	NameNotChanged
	Source: "MortarSender.java"
	FieldsOf: com.volmit.iris.util.MortarSender
		private java.lang.String command	=>	a
		private org.bukkit.command.CommandSender s	=>	b
		private java.lang.String tag	=>	c
	MethodsOf: com.volmit.iris.util.MortarSender
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.command.CommandSender) 	SignatureNotChanged
		public void <init>(org.bukkit.command.CommandSender, java.lang.String) 	SignatureNotChanged
		public org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin) 	SignatureNotChanged
		public org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin, int) 	SignatureNotChanged
		public org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin, java.lang.String, boolean) 	SignatureNotChanged
		public org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin, java.lang.String, boolean, int) 	SignatureNotChanged
		public java.lang.String getCommand() 	SignatureNotChanged
		public java.util.Set getEffectivePermissions() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public org.bukkit.command.CommandSender getS() 	SignatureNotChanged
		public org.bukkit.Server getServer() 	SignatureNotChanged
		public java.lang.String getTag() 	SignatureNotChanged
		public boolean hasPermission(java.lang.String) 	SignatureNotChanged
		public boolean hasPermission(org.bukkit.permissions.Permission) 	SignatureNotChanged
		public void hr() 	SignatureNotChanged
		public boolean isOp() 	SignatureNotChanged
		public boolean isPermissionSet(java.lang.String) 	SignatureNotChanged
		public boolean isPermissionSet(org.bukkit.permissions.Permission) 	SignatureNotChanged
		public boolean isPlayer() 	SignatureNotChanged
		public org.bukkit.entity.Player player() 	SignatureNotChanged
		public void recalculatePermissions() 	SignatureNotChanged
		public void removeAttachment(org.bukkit.permissions.PermissionAttachment) 	SignatureNotChanged
		public void sendMessage(java.lang.String) 	SignatureNotChanged
		public void sendMessage(java.lang.String[]) 	SignatureNotChanged
		public void setCommand(java.lang.String) 	SignatureNotChanged
		public void setOp(boolean) 	SignatureNotChanged
		public void setTag(java.lang.String) 	SignatureNotChanged
		public org.bukkit.command.CommandSender$Spigot spigot() 	SignatureNotChanged

Class: public final com.volmit.iris.util.NBTConstants	NameNotChanged
	Source: "NBTConstants.java"
	FieldsOf: com.volmit.iris.util.NBTConstants
		public static final java.nio.charset.Charset CHARSET	NameNotChanged
		public static final int TYPE_BYTE	NameNotChanged
		public static final int TYPE_BYTE_ARRAY	NameNotChanged
		public static final int TYPE_COMPOUND	NameNotChanged
		public static final int TYPE_DOUBLE	NameNotChanged
		public static final int TYPE_END	NameNotChanged
		public static final int TYPE_FLOAT	NameNotChanged
		public static final int TYPE_INT	NameNotChanged
		public static final int TYPE_INT_ARRAY	NameNotChanged
		public static final int TYPE_LIST	NameNotChanged
		public static final int TYPE_LONG	NameNotChanged
		public static final int TYPE_SHORT	NameNotChanged
		public static final int TYPE_STRING	NameNotChanged
	MethodsOf: com.volmit.iris.util.NBTConstants
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged

Class: public final com.volmit.iris.util.NBTInputStream	NameNotChanged
	Source: "NBTInputStream.java"
	FieldsOf: com.volmit.iris.util.NBTInputStream
		private final java.io.DataInputStream is	=>	a
	MethodsOf: com.volmit.iris.util.NBTInputStream
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.DataInputStream) 	SignatureNotChanged
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public com.volmit.iris.util.Tag readTag() 	SignatureNotChanged
		private com.volmit.iris.util.Tag readTag(int)	=>	a(int)
		private com.volmit.iris.util.Tag readTagPayload(int, java.lang.String, int)	=>	a(int, java.lang.String, int)

Class: public final com.volmit.iris.util.NBTOutputStream	NameNotChanged
	Source: "NBTOutputStream.java"
	FieldsOf: com.volmit.iris.util.NBTOutputStream
		private final java.io.DataOutputStream os	=>	a
	MethodsOf: com.volmit.iris.util.NBTOutputStream
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.DataOutputStream) 	SignatureNotChanged
		public void <init>(java.io.OutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		private void writeByteArrayTagPayload(com.volmit.iris.util.ByteArrayTag)	=>	a(com.volmit.iris.util.ByteArrayTag)
		private void writeByteTagPayload(com.volmit.iris.util.ByteTag)	=>	a(com.volmit.iris.util.ByteTag)
		private void writeCompoundTagPayload(com.volmit.iris.util.CompoundTag)	=>	a(com.volmit.iris.util.CompoundTag)
		private void writeDoubleTagPayload(com.volmit.iris.util.DoubleTag)	=>	a(com.volmit.iris.util.DoubleTag)
		private void writeEndTagPayload(com.volmit.iris.util.EndTag)	=>	a(com.volmit.iris.util.EndTag)
		private void writeFloatTagPayload(com.volmit.iris.util.FloatTag)	=>	a(com.volmit.iris.util.FloatTag)
		private void writeIntArrayTagPayload(com.volmit.iris.util.IntArrayTag)	=>	a(com.volmit.iris.util.IntArrayTag)
		private void writeIntTagPayload(com.volmit.iris.util.IntTag)	=>	a(com.volmit.iris.util.IntTag)
		private void writeListTagPayload(com.volmit.iris.util.ListTag)	=>	a(com.volmit.iris.util.ListTag)
		private void writeLongTagPayload(com.volmit.iris.util.LongTag)	=>	a(com.volmit.iris.util.LongTag)
		private void writeShortTagPayload(com.volmit.iris.util.ShortTag)	=>	a(com.volmit.iris.util.ShortTag)
		private void writeStringTagPayload(com.volmit.iris.util.StringTag)	=>	a(com.volmit.iris.util.StringTag)
		public void writeTag(com.volmit.iris.util.Tag) 	SignatureNotChanged
		private void writeTagPayload(com.volmit.iris.util.Tag)	=>	a(com.volmit.iris.util.Tag)

Class: public final com.volmit.iris.util.NBTUtils	NameNotChanged
	Source: "NBTUtils.java"
	FieldsOf: com.volmit.iris.util.NBTUtils
	MethodsOf: com.volmit.iris.util.NBTUtils
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public static java.lang.Class getTypeClass(int) 	SignatureNotChanged
		public static int getTypeCode(java.lang.Class) 	SignatureNotChanged
		public static java.lang.String getTypeName(java.lang.Class) 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.NMSVersion	NameNotChanged
	Source: "NMSVersion.java"
	FieldsOf: com.volmit.iris.util.NMSVersion
		private static final synthetic com.volmit.iris.util.NMSVersion[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.NMSVersion R1_10	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_11	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_12	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_13	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_13_1	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_14	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_15	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_16	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_8	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_9_2	NameNotChanged
		public static final enum com.volmit.iris.util.NMSVersion R1_9_4	NameNotChanged
	MethodsOf: com.volmit.iris.util.NMSVersion
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public java.util.List betweenInclusive(com.volmit.iris.util.NMSVersion) 	SignatureNotChanged
		public static com.volmit.iris.util.NMSVersion current() 	SignatureNotChanged
		public java.util.List getAboveInclusive() 	SignatureNotChanged
		public java.util.List getBelowInclusive() 	SignatureNotChanged
		public static com.volmit.iris.util.NMSVersion getMaximum() 	SignatureNotChanged
		public static com.volmit.iris.util.NMSVersion getMinimum() 	SignatureNotChanged
		private static boolean tryVersion(java.lang.String)	=>	a(java.lang.String)
		public static com.volmit.iris.util.NMSVersion valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.NMSVersion[] values() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.NastyFunction	NameNotChanged
	Source: "NastyFunction.java"
	FieldsOf: com.volmit.iris.util.NastyFunction
	MethodsOf: com.volmit.iris.util.NastyFunction
		public abstract java.lang.Object run(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.NastyFuture	NameNotChanged
	Source: "NastyFuture.java"
	FieldsOf: com.volmit.iris.util.NastyFuture
	MethodsOf: com.volmit.iris.util.NastyFuture
		public abstract java.lang.Object run() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.NastyRunnable	NameNotChanged
	Source: "NastyRunnable.java"
	FieldsOf: com.volmit.iris.util.NastyRunnable
	MethodsOf: com.volmit.iris.util.NastyRunnable
		public abstract void run() 	SignatureNotChanged

Class: public com.volmit.iris.util.NibbleArray	NameNotChanged
	Source: "NibbleArray.java"
	FieldsOf: com.volmit.iris.util.NibbleArray
		private static final int[] MASKS	=>	e
		private transient int bitInByte	=>	a
		private transient int bitIndex	=>	g
		private transient int byteIndex	=>	h
		private byte[] data	=>	f
		private int depth	=>	c
		private final java.lang.Object lock	=>	i
		private byte mask	=>	b
		private final int size	=>	d
	MethodsOf: com.volmit.iris.util.NibbleArray
		static void <clinit>() 	SignatureNotChanged
		public void <init>(int, int) 	SignatureNotChanged
		public void <init>(int, int, com.volmit.iris.util.NibbleArray) 	SignatureNotChanged
		public void <init>(int, java.io.DataInputStream) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public static java.lang.String binaryString(byte, java.nio.ByteOrder) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public byte get(int) 	SignatureNotChanged
		public byte getAsync(int) 	SignatureNotChanged
		public static int maskFor(int) 	SignatureNotChanged
		public static int powerOfTwo(int) 	SignatureNotChanged
		public void read(java.io.DataInputStream) 	SignatureNotChanged
		public static java.lang.String reverse(java.lang.String) 	SignatureNotChanged
		public void set(int, byte) 	SignatureNotChanged
		public void set(int, int) 	SignatureNotChanged
		public void setAll(byte) 	SignatureNotChanged
		public void setAll(int) 	SignatureNotChanged
		public int size() 	SignatureNotChanged
		public java.lang.String toBitsString() 	SignatureNotChanged
		public java.lang.String toBitsString(java.nio.ByteOrder) 	SignatureNotChanged
		public void write(java.io.DataOutputStream) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.NoiseInjector	NameNotChanged
	Source: "NoiseInjector.java"
	FieldsOf: com.volmit.iris.util.NoiseInjector
	MethodsOf: com.volmit.iris.util.NoiseInjector
		public abstract double[] combine(double, double) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.NoiseProvider	NameNotChanged
	Source: "NoiseProvider.java"
	FieldsOf: com.volmit.iris.util.NoiseProvider
	MethodsOf: com.volmit.iris.util.NoiseProvider
		public abstract double noise(double, double) 	SignatureNotChanged

Class: public com.volmit.iris.util.O	NameNotChanged
	Source: "O.java"
	FieldsOf: com.volmit.iris.util.O
		private com.volmit.iris.util.KList observers	=>	b
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.O
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.O clearObservers() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Observable clearObservers() 	SignatureNotChanged
		public java.lang.Object get() 	SignatureNotChanged
		public boolean has() 	SignatureNotChanged
		private static synthetic void lambda$set$0(java.lang.Object, java.lang.Object, com.volmit.iris.util.Observer) 	SignatureNotChanged
		public com.volmit.iris.util.O observe(com.volmit.iris.util.Observer) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Observable observe(com.volmit.iris.util.Observer) 	SignatureNotChanged
		public com.volmit.iris.util.O set(java.lang.Object) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Observable set(java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.ObjectResourceLoader	NameNotChanged
	Source: "ObjectResourceLoader.java"
	FieldsOf: com.volmit.iris.util.ObjectResourceLoader
		private com.volmit.iris.util.KMap useCache	=>	a
		private com.volmit.iris.util.ChronoLatch useFlip	=>	b
	MethodsOf: com.volmit.iris.util.ObjectResourceLoader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		public void clean() 	SignatureNotChanged
		public java.io.File findFile(java.lang.String) 	SignatureNotChanged
		private java.lang.String getOldest()	=>	a()
		public java.lang.String[] getPossibleKeys() 	SignatureNotChanged
		public int getTotalStorage() 	SignatureNotChanged
		private synthetic void lambda$loadFile$1(java.io.File) 	SignatureNotChanged
		private static synthetic void lambda$unload$0(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject load(java.lang.String) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.object.IrisRegistrant load(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.object.IrisObject loadFile(java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.object.IrisRegistrant loadFile(java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		private void unload(java.lang.String)	=>	a(java.lang.String)
		public void unloadLast(long) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Observable	NameNotChanged
	Source: "Observable.java"
	FieldsOf: com.volmit.iris.util.Observable
	MethodsOf: com.volmit.iris.util.Observable
		public abstract com.volmit.iris.util.Observable clearObservers() 	SignatureNotChanged
		public abstract java.lang.Object get() 	SignatureNotChanged
		public abstract boolean has() 	SignatureNotChanged
		public abstract com.volmit.iris.util.Observable observe(com.volmit.iris.util.Observer) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Observable set(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Observer	NameNotChanged
	Source: "Observer.java"
	FieldsOf: com.volmit.iris.util.Observer
	MethodsOf: com.volmit.iris.util.Observer
		public abstract void onChanged(java.lang.Object, java.lang.Object) 	SignatureNotChanged

Class: abstract com.volmit.iris.util.ParticleSender	NameNotChanged
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender
	MethodsOf: com.volmit.iris.util.ParticleSender
		public double color(double) 	SignatureNotChanged
		public abstract java.lang.Object getParticle(com.volmit.iris.util.ParticleType) 	SignatureNotChanged
		public abstract boolean isValidData(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.ParticleSender$ParticleSender1_13	NameNotChanged
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender$ParticleSender1_13
	MethodsOf: com.volmit.iris.util.ParticleSender$ParticleSender1_13
		public void <init>() 	SignatureNotChanged
		public boolean isValidDataBukkit(org.bukkit.Particle, java.lang.Object) 	SignatureNotChanged
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.ParticleSender$ParticleSenderImpl	NameNotChanged
	Source: "ParticleSender.java"
	FieldsOf: com.volmit.iris.util.ParticleSender$ParticleSenderImpl
	MethodsOf: com.volmit.iris.util.ParticleSender$ParticleSenderImpl
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getParticle(com.volmit.iris.util.ParticleType) 	SignatureNotChanged
		public org.bukkit.Particle getParticle(com.volmit.iris.util.ParticleType) 	SignatureNotChanged
		public boolean isValidData(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public boolean isValidDataBukkit(org.bukkit.Particle, java.lang.Object) 	SignatureNotChanged
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged

Class: com.volmit.iris.util.ParticleSenderLegacy	=>	com.volmit.iris.util.a
	Source: "ParticleSenderLegacy.java"
	FieldsOf: com.volmit.iris.util.ParticleSenderLegacy
		private static final int[] EMPTY	=>	a
		private static final java.lang.Class ENUM_PARTICLE	=>	h
		private static final java.lang.reflect.Constructor PACKET_PARTICLE	=>	e
		private static final java.lang.reflect.Field PLAYER_CONNECTION	=>	c
		private static final java.lang.reflect.Method PLAYER_GET_HANDLE	=>	d
		private static final java.lang.reflect.Method SEND_PACKET	=>	f
		private static final boolean SERVER_IS_1_8	=>	b
		private static final java.lang.reflect.Method WORLD_GET_HANDLE	=>	g
		private static final java.lang.reflect.Method WORLD_SEND_PARTICLE	=>	i
	MethodsOf: com.volmit.iris.util.ParticleSenderLegacy
		static void <clinit>() 	SignatureNotChanged
		void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.lang.Object getEnumParticle(com.volmit.iris.util.ParticleType)	=>	a(com.volmit.iris.util.ParticleType)
		public java.lang.Object getParticle(com.volmit.iris.util.ParticleType) 	SignatureNotChanged
		public boolean isValidData(java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void spawnParticle(java.lang.Object, com.volmit.iris.util.ParticleType, double, double, double, int, double, double, double, double, java.lang.Object) 	SignatureNotChanged
		private int[] toData(com.volmit.iris.util.ParticleType, java.lang.Object)	=>	a(com.volmit.iris.util.ParticleType, java.lang.Object)

Class: public final enum com.volmit.iris.util.ParticleType	NameNotChanged
	Source: "ParticleType.java"
	FieldsOf: com.volmit.iris.util.ParticleType
		private static final synthetic com.volmit.iris.util.ParticleType[] $VALUES	=>	b
		public static final enum com.volmit.iris.util.ParticleType BARRIER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BLOCK_CRACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BLOCK_DUST	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BUBBLE_COLUMN_UP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType BUBBLE_POP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CAMPFIRE_COSY_SMOKE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CAMPFIRE_SIGNAL_SMOKE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CLOUD	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType COMPOSTER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CRIT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CRIT_MAGIC	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType CURRENT_DOWN	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DAMAGE_INDICATOR	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DOLPHIN	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRAGON_BREATH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIPPING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIP_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType DRIP_WATER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType ENCHANTMENT_TABLE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType END_ROD	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_HUGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_LARGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType EXPLOSION_NORMAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_DUST	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_NECTAR	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FALLING_WATER	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FIREWORKS_SPARK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FLAME	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType FLASH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType HEART	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType ITEM_CRACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LANDING_HONEY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LANDING_LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType LAVA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType MOB_APPEARANCE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType NAUTILUS	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType NOTE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType PORTAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType REDSTONE	NameNotChanged
		private static final int SERVER_VERSION_ID	=>	c
		public static final enum com.volmit.iris.util.ParticleType SLIME	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SMOKE_LARGE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SMOKE_NORMAL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNEEZE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNOWBALL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SNOW_SHOVEL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_INSTANT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_MOB	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_MOB_AMBIENT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPELL_WITCH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SPIT	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SQUID_INK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SUSPENDED	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SUSPENDED_DEPTH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType SWEEP_ATTACK	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType TOTEM	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType TOWN_AURA	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType VILLAGER_ANGRY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType VILLAGER_HAPPY	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_BUBBLE	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_DROP	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_SPLASH	NameNotChanged
		public static final enum com.volmit.iris.util.ParticleType WATER_WAKE	NameNotChanged
		private final java.lang.String legacyName	=>	d
		private final int minimumVersion	=>	a
		private final java.lang.String name	=>	e
	MethodsOf: com.volmit.iris.util.ParticleType
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int) 	SignatureNotChanged
		private void <init>(java.lang.String, int, java.lang.String, java.lang.String) 	SignatureNotChanged
		private void <init>(java.lang.String, int, java.lang.String, java.lang.String, int) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public java.lang.Class getDataType() 	SignatureNotChanged
		public java.lang.String getLegacyName() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public static com.volmit.iris.util.ParticleType getParticle(java.lang.String) 	SignatureNotChanged
		public boolean hasLegacyName() 	SignatureNotChanged
		public boolean isSupported() 	SignatureNotChanged
		public static com.volmit.iris.util.ParticleType valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.ParticleType[] values() 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.ParticleType$1	=>	com.volmit.iris.util.ParticleType$a
	Source: "ParticleType.java"
	FieldsOf: com.volmit.iris.util.ParticleType$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$ParticleType	=>	a
	MethodsOf: com.volmit.iris.util.ParticleType$1
		static void <clinit>() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.Permission	NameNotChanged
	Source: "Permission.java"
	FieldsOf: com.volmit.iris.util.Permission
	MethodsOf: com.volmit.iris.util.Permission

Class: public com.volmit.iris.util.PhasicBiomeStorage	NameNotChanged
	Source: "PhasicBiomeStorage.java"
	FieldsOf: com.volmit.iris.util.PhasicBiomeStorage
		public static final int a	NameNotChanged
		public static final int b	NameNotChanged
		public static final int c	NameNotChanged
		private static final int e	=>	d
		private static final int f	=>	g
		private final org.bukkit.block.Biome[] g	=>	e
	MethodsOf: com.volmit.iris.util.PhasicBiomeStorage
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(org.bukkit.block.Biome[]) 	SignatureNotChanged
		public static int clamp(int, int, int) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int, int) 	SignatureNotChanged
		public void setBiome(int, int, int, org.bukkit.block.Biome) 	SignatureNotChanged

Class: public com.volmit.iris.util.PrecisionStopwatch	NameNotChanged
	Source: "PrecisionStopwatch.java"
	FieldsOf: com.volmit.iris.util.PrecisionStopwatch
		private long millis	=>	a
		private long nanos	=>	f
		private boolean profiling	=>	b
		private long startMillis	=>	d
		private long startNano	=>	e
		private double time	=>	c
	MethodsOf: com.volmit.iris.util.PrecisionStopwatch
		public void <init>() 	SignatureNotChanged
		public void begin() 	SignatureNotChanged
		public void end() 	SignatureNotChanged
		public double getHours() 	SignatureNotChanged
		public long getMillis() 	SignatureNotChanged
		public double getMilliseconds() 	SignatureNotChanged
		public double getMinutes() 	SignatureNotChanged
		public long getNanos() 	SignatureNotChanged
		public long getNanoseconds() 	SignatureNotChanged
		public double getSeconds() 	SignatureNotChanged
		public long getStartMillis() 	SignatureNotChanged
		public long getStartNano() 	SignatureNotChanged
		public double getTicks() 	SignatureNotChanged
		public double getTime() 	SignatureNotChanged
		public boolean isProfiling() 	SignatureNotChanged
		public void reset() 	SignatureNotChanged
		public static com.volmit.iris.util.PrecisionStopwatch start() 	SignatureNotChanged

Class: public com.volmit.iris.util.PreemptiveChunk	NameNotChanged
	Source: "PreemptiveChunk.java"
	FieldsOf: com.volmit.iris.util.PreemptiveChunk
		private com.volmit.iris.util.BiomeStorage b	=>	c
		private org.bukkit.generator.ChunkGenerator$ChunkData c	=>	a
	MethodsOf: com.volmit.iris.util.PreemptiveChunk
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.generator.ChunkGenerator$ChunkData) 	SignatureNotChanged
		private static java.lang.UnsupportedOperationException a(java.lang.UnsupportedOperationException) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int) 	SignatureNotChanged
		public org.bukkit.block.Biome getBiome(int, int, int) 	SignatureNotChanged
		public org.bukkit.block.data.BlockData getBlockData(int, int, int) 	SignatureNotChanged
		public byte getData(int, int, int) 	SignatureNotChanged
		public int getMaxHeight() 	SignatureNotChanged
		public org.bukkit.Material getType(int, int, int) 	SignatureNotChanged
		public org.bukkit.material.MaterialData getTypeAndData(int, int, int) 	SignatureNotChanged
		public void inject(org.bukkit.generator.ChunkGenerator$ChunkData, org.bukkit.generator.ChunkGenerator$BiomeGrid) 	SignatureNotChanged
		public void setBiome(int, int, int, org.bukkit.block.Biome) 	SignatureNotChanged
		public void setBiome(int, int, org.bukkit.block.Biome) 	SignatureNotChanged
		public void setBlock(int, int, int, org.bukkit.Material) 	SignatureNotChanged
		public void setBlock(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setBlock(int, int, int, org.bukkit.material.MaterialData) 	SignatureNotChanged
		public void setRegion(int, int, int, int, int, int, org.bukkit.Material) 	SignatureNotChanged
		public void setRegion(int, int, int, int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setRegion(int, int, int, int, int, int, org.bukkit.material.MaterialData) 	SignatureNotChanged

Class: public com.volmit.iris.util.PregenJob	NameNotChanged
	Source: "PregenJob.java"
	FieldsOf: com.volmit.iris.util.PregenJob
		private com.volmit.iris.util.ChronoLatch cl	=>	b
		private boolean completed	=>	d
		private int genned	=>	e
		private int mcaX	=>	f
		private int mcaZ	=>	a
		private java.lang.Runnable onDone	=>	m
		private int rcx	=>	c
		private int rcz	=>	j
		private com.volmit.iris.util.PrecisionStopwatch s	=>	k
		private com.volmit.iris.util.MortarSender sender	=>	h
		private int size	=>	g
		public static int task	NameNotChanged
		private int total	=>	l
		private org.bukkit.World world	=>	i
	MethodsOf: com.volmit.iris.util.PregenJob
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.bukkit.World, int, com.volmit.iris.util.MortarSender, java.lang.Runnable) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public void gen() 	SignatureNotChanged
		public boolean isChunkWithin(int, int) 	SignatureNotChanged
		public int max() 	SignatureNotChanged
		public int maxMCA(int) 	SignatureNotChanged
		public int mca(int) 	SignatureNotChanged
		public int min() 	SignatureNotChanged
		public int minMCA(int) 	SignatureNotChanged
		public void nextPosition() 	SignatureNotChanged
		public void onTick() 	SignatureNotChanged
		public void saveAll() 	SignatureNotChanged
		public static void stop() 	SignatureNotChanged
		public void tick() 	SignatureNotChanged
		private void tickMetrics()	=>	a()
		private void verify(int, int)	=>	a(int, int)

Class: public abstract com.volmit.iris.util.Queue	NameNotChanged
	Source: "Queue.java"
	FieldsOf: com.volmit.iris.util.Queue
	MethodsOf: com.volmit.iris.util.Queue
		public abstract com.volmit.iris.util.Queue clear() 	SignatureNotChanged
		public abstract boolean contains(java.lang.Object) 	SignatureNotChanged
		public static com.volmit.iris.util.Queue create(com.volmit.iris.util.KList) 	SignatureNotChanged
		public static com.volmit.iris.util.Queue create(java.lang.Object[]) 	SignatureNotChanged
		public abstract boolean hasNext() 	SignatureNotChanged
		public abstract boolean hasNext(int) 	SignatureNotChanged
		public abstract java.lang.Object next() 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList next(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Queue queue(com.volmit.iris.util.KList) 	SignatureNotChanged
		public abstract com.volmit.iris.util.Queue queue(java.lang.Object) 	SignatureNotChanged
		public abstract int size() 	SignatureNotChanged

Class: public com.volmit.iris.util.QueueExecutor	NameNotChanged
	Source: "QueueExecutor.java"
	FieldsOf: com.volmit.iris.util.QueueExecutor
		private com.volmit.iris.util.Queue queue	=>	b
		private boolean shutdown	=>	a
	MethodsOf: com.volmit.iris.util.QueueExecutor
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public double getRunTime() 	SignatureNotChanged
		protected long loop() 	SignatureNotChanged
		public com.volmit.iris.util.Queue queue() 	SignatureNotChanged
		public void shutdown() 	SignatureNotChanged

Class: public com.volmit.iris.util.RNG	NameNotChanged
	Source: "RNG.java"
	FieldsOf: com.volmit.iris.util.RNG
		private static final char[] CHARGEN	=>	a
		public static final com.volmit.iris.util.RNG r	NameNotChanged
		private static final long serialVersionUID	NameNotChanged
		private final long sx	=>	b
	MethodsOf: com.volmit.iris.util.RNG
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		public boolean b() 	SignatureNotChanged
		public boolean b(double) 	SignatureNotChanged
		public char c() 	SignatureNotChanged
		public double d() 	SignatureNotChanged
		public double d(double) 	SignatureNotChanged
		public double d(double, double) 	SignatureNotChanged
		public double dmax() 	SignatureNotChanged
		public java.lang.Object e(java.lang.Class) 	SignatureNotChanged
		public float f() 	SignatureNotChanged
		public float f(float) 	SignatureNotChanged
		public float f(float, float) 	SignatureNotChanged
		public float fmax() 	SignatureNotChanged
		public int i(int) 	SignatureNotChanged
		public int i(int, int) 	SignatureNotChanged
		public int imax() 	SignatureNotChanged
		public long l(long) 	SignatureNotChanged
		public long l(long, long) 	SignatureNotChanged
		public long lmax() 	SignatureNotChanged
		public com.volmit.iris.util.RNG nextParallelRNG(int) 	SignatureNotChanged
		public com.volmit.iris.util.RNG nextRNG() 	SignatureNotChanged
		public java.lang.String s(int) 	SignatureNotChanged
		public short si() 	SignatureNotChanged
		public short si(int) 	SignatureNotChanged
		public short si(int, int) 	SignatureNotChanged
		public short simax() 	SignatureNotChanged

Class: public abstract annotation com.volmit.iris.util.RegistryListBiome	NameNotChanged
	Source: "RegistryListBiome.java"
	FieldsOf: com.volmit.iris.util.RegistryListBiome
	MethodsOf: com.volmit.iris.util.RegistryListBiome

Class: public abstract annotation com.volmit.iris.util.RegistryListDimension	NameNotChanged
	Source: "RegistryListDimension.java"
	FieldsOf: com.volmit.iris.util.RegistryListDimension
	MethodsOf: com.volmit.iris.util.RegistryListDimension

Class: public abstract annotation com.volmit.iris.util.RegistryListGenerator	NameNotChanged
	Source: "RegistryListGenerator.java"
	FieldsOf: com.volmit.iris.util.RegistryListGenerator
	MethodsOf: com.volmit.iris.util.RegistryListGenerator

Class: public abstract annotation com.volmit.iris.util.RegistryListLoot	NameNotChanged
	Source: "RegistryListLoot.java"
	FieldsOf: com.volmit.iris.util.RegistryListLoot
	MethodsOf: com.volmit.iris.util.RegistryListLoot

Class: public abstract annotation com.volmit.iris.util.RegistryListObject	NameNotChanged
	Source: "RegistryListObject.java"
	FieldsOf: com.volmit.iris.util.RegistryListObject
	MethodsOf: com.volmit.iris.util.RegistryListObject

Class: public abstract annotation com.volmit.iris.util.RegistryListRegion	NameNotChanged
	Source: "RegistryListRegion.java"
	FieldsOf: com.volmit.iris.util.RegistryListRegion
	MethodsOf: com.volmit.iris.util.RegistryListRegion

Class: public abstract annotation com.volmit.iris.util.RegistryListStructure	NameNotChanged
	Source: "RegistryListStructure.java"
	FieldsOf: com.volmit.iris.util.RegistryListStructure
	MethodsOf: com.volmit.iris.util.RegistryListStructure

Class: public abstract annotation com.volmit.iris.util.Required	NameNotChanged
	Source: "Required.java"
	FieldsOf: com.volmit.iris.util.Required
	MethodsOf: com.volmit.iris.util.Required

Class: public com.volmit.iris.util.ResourceLoader	NameNotChanged
	Source: "ResourceLoader.java"
	FieldsOf: com.volmit.iris.util.ResourceLoader
		protected java.lang.String cname	NameNotChanged
		protected com.volmit.iris.util.KList folderCache	NameNotChanged
		protected com.volmit.iris.util.KMap folderMapCache	NameNotChanged
		protected java.lang.String folderName	NameNotChanged
		protected com.volmit.iris.util.KMap loadCache	NameNotChanged
		protected com.volmit.iris.util.IrisLock lock	NameNotChanged
		protected java.lang.Class objectClass	NameNotChanged
		protected java.lang.String[] possibleKeys	NameNotChanged
		protected java.lang.String preferredFolder	NameNotChanged
		protected java.lang.String resourceTypeName	NameNotChanged
		protected java.io.File root	NameNotChanged
	MethodsOf: com.volmit.iris.util.ResourceLoader
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String, java.lang.String, java.lang.Class) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void clearCache() 	SignatureNotChanged
		public void clearList() 	SignatureNotChanged
		public long count() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.io.File fileFor(com.volmit.iris.object.IrisRegistrant) 	SignatureNotChanged
		public java.lang.String getCname() 	SignatureNotChanged
		public com.volmit.iris.util.KList getFolderCache() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getFolderMapCache() 	SignatureNotChanged
		public java.lang.String getFolderName() 	SignatureNotChanged
		public com.volmit.iris.util.KList getFolders() 	SignatureNotChanged
		public com.volmit.iris.util.KList getFolders(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.KMap getLoadCache() 	SignatureNotChanged
		public com.volmit.iris.util.IrisLock getLock() 	SignatureNotChanged
		public java.lang.Class getObjectClass() 	SignatureNotChanged
		public java.lang.String[] getPossibleKeys() 	SignatureNotChanged
		public java.lang.String getPreferredFolder() 	SignatureNotChanged
		public java.lang.String getResourceTypeName() 	SignatureNotChanged
		public java.io.File getRoot() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public boolean isLoaded(java.lang.String) 	SignatureNotChanged
		private synthetic void lambda$load$2(java.lang.String) 	SignatureNotChanged
		private synthetic void lambda$loadFile$0(java.io.File) 	SignatureNotChanged
		private synthetic void lambda$loadFile$1(java.io.File, java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.object.IrisRegistrant load(java.lang.String) 	SignatureNotChanged
		protected com.volmit.iris.object.IrisRegistrant loadFile(java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		public void preferFolder(java.lang.String) 	SignatureNotChanged
		public void setCname(java.lang.String) 	SignatureNotChanged
		public void setFolderCache(com.volmit.iris.util.KList) 	SignatureNotChanged
		public void setFolderMapCache(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setFolderName(java.lang.String) 	SignatureNotChanged
		public void setLoadCache(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setLock(com.volmit.iris.util.IrisLock) 	SignatureNotChanged
		public void setObjectClass(java.lang.Class) 	SignatureNotChanged
		public void setPossibleKeys(java.lang.String[]) 	SignatureNotChanged
		public void setPreferredFolder(java.lang.String) 	SignatureNotChanged
		public void setResourceTypeName(java.lang.String) 	SignatureNotChanged
		public void setRoot(java.io.File) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.RollingSequence	NameNotChanged
	Source: "RollingSequence.java"
	FieldsOf: com.volmit.iris.util.RollingSequence
		private int dirtyExtremes	=>	h
		private boolean dirtyMedian	=>	e
		private double max	=>	g
		private double median	=>	i
		private double min	=>	f
		private boolean precision	=>	j
	MethodsOf: com.volmit.iris.util.RollingSequence
		public void <init>(int) 	SignatureNotChanged
		public double addLast(int) 	SignatureNotChanged
		public double getMax() 	SignatureNotChanged
		public double getMedian() 	SignatureNotChanged
		public double getMin() 	SignatureNotChanged
		public boolean isPrecision() 	SignatureNotChanged
		public void put(double) 	SignatureNotChanged
		private void recalculateMedian()	=>	b()
		public void resetExtremes() 	SignatureNotChanged
		public void setPrecision(boolean) 	SignatureNotChanged

Class: public com.volmit.iris.util.RouterCommand	NameNotChanged
	Source: "RouterCommand.java"
	FieldsOf: com.volmit.iris.util.RouterCommand
		private org.bukkit.command.CommandExecutor ex	=>	b
		private java.lang.String usage	=>	a
	MethodsOf: com.volmit.iris.util.RouterCommand
		public void <init>(com.volmit.iris.util.ICommand, org.bukkit.command.CommandExecutor) 	SignatureNotChanged
		public boolean execute(org.bukkit.command.CommandSender, java.lang.String, java.lang.String[]) 	SignatureNotChanged
		public java.lang.String getUsage() 	SignatureNotChanged
		public org.bukkit.command.Command setUsage(java.lang.String) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.S	NameNotChanged
	Source: "S.java"
	FieldsOf: com.volmit.iris.util.S
	MethodsOf: com.volmit.iris.util.S
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.SR	NameNotChanged
	Source: "SR.java"
	FieldsOf: com.volmit.iris.util.SR
		private int id	=>	a
	MethodsOf: com.volmit.iris.util.SR
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void cancel() 	SignatureNotChanged
		public int getId() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.ScoreDirection	NameNotChanged
	Source: "ScoreDirection.java"
	FieldsOf: com.volmit.iris.util.ScoreDirection
		private static final synthetic com.volmit.iris.util.ScoreDirection[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.ScoreDirection DOWN	NameNotChanged
		public static final enum com.volmit.iris.util.ScoreDirection UP	NameNotChanged
	MethodsOf: com.volmit.iris.util.ScoreDirection
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.ScoreDirection valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.ScoreDirection[] values() 	SignatureNotChanged

Class: public final com.volmit.iris.util.ShortTag	NameNotChanged
	Source: "ShortTag.java"
	FieldsOf: com.volmit.iris.util.ShortTag
		private final short value	=>	b
	MethodsOf: com.volmit.iris.util.ShortTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, short) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.Short getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.Shrinkwrap	NameNotChanged
	Source: "Shrinkwrap.java"
	FieldsOf: com.volmit.iris.util.Shrinkwrap
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.Shrinkwrap
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object get() 	SignatureNotChanged
		public void set(java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.ShurikenQueue	NameNotChanged
	Source: "ShurikenQueue.java"
	FieldsOf: com.volmit.iris.util.ShurikenQueue
		private com.volmit.iris.util.KList queue	=>	a
		private boolean randomPop	=>	c
		private boolean reversePop	=>	b
	MethodsOf: com.volmit.iris.util.ShurikenQueue
		public void <init>() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Queue clear() 	SignatureNotChanged
		public com.volmit.iris.util.ShurikenQueue clear() 	SignatureNotChanged
		public boolean contains(java.lang.Object) 	SignatureNotChanged
		public boolean hasNext() 	SignatureNotChanged
		public boolean hasNext(int) 	SignatureNotChanged
		public java.lang.Object next() 	SignatureNotChanged
		public com.volmit.iris.util.KList next(int) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Queue queue(com.volmit.iris.util.KList) 	SignatureNotChanged
		public com.volmit.iris.util.ShurikenQueue queue(com.volmit.iris.util.KList) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.Queue queue(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.ShurikenQueue queue(java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.ShurikenQueue randomMode() 	SignatureNotChanged
		public com.volmit.iris.util.ShurikenQueue responsiveMode() 	SignatureNotChanged
		public int size() 	SignatureNotChanged

Class: public final com.volmit.iris.util.StringTag	NameNotChanged
	Source: "StringTag.java"
	FieldsOf: com.volmit.iris.util.StringTag
		private final java.lang.String value	=>	b
	MethodsOf: com.volmit.iris.util.StringTag
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String) 	SignatureNotChanged
		public bridge synthetic java.lang.Object getValue() 	SignatureNotChanged
		public java.lang.String getValue() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.StructureTemplate	NameNotChanged
	Source: "StructureTemplate.java"
	FieldsOf: com.volmit.iris.util.StructureTemplate
		private static final org.bukkit.block.data.BlockData GREEN	=>	t
		private static final org.bukkit.block.data.BlockData RED	=>	p
		private static final org.bukkit.block.data.BlockData STONE	=>	f
		private org.bukkit.Location center	=>	h
		private com.volmit.iris.util.ChronoLatch dirtyLatch	=>	o
		private org.bukkit.Location focus	=>	r
		private java.io.File folder	=>	j
		private com.volmit.iris.util.KMap forceVariant	=>	q
		private com.volmit.iris.util.ChronoLatch gLatch	=>	b
		private int h	=>	u
		private com.volmit.iris.util.RNG rng	=>	e
		private int size	=>	s
		private com.volmit.iris.object.IrisStructure structure	=>	k
		private int task	=>	n
		private com.volmit.iris.util.ChronoLatch u	=>	g
		private com.volmit.iris.util.KMap updates	=>	d
		private boolean use3d	=>	l
		private com.volmit.iris.noise.CNG variants	=>	m
		private int w	=>	i
		private org.bukkit.entity.Player worker	=>	c
		private org.bukkit.World world	=>	a
	MethodsOf: com.volmit.iris.util.StructureTemplate
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.String, org.bukkit.entity.Player, org.bukkit.Location, int, int, int, boolean) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		protected boolean canEqual(java.lang.Object) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void createVariantCopy(com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		private void defineStructures()	=>	b()
		public void deleteTile(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public void deleteTiles() 	SignatureNotChanged
		public void deleteVariant(com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public void expand() 	SignatureNotChanged
		public org.bukkit.block.data.BlockData get(int, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid getBounds() 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid getBounds(org.bukkit.Location) 	SignatureNotChanged
		public org.bukkit.Location getCenter() 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getDirtyLatch() 	SignatureNotChanged
		public int getFluidHeight() 	SignatureNotChanged
		public org.bukkit.Location getFocus() 	SignatureNotChanged
		public java.io.File getFolder() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getForceVariant() 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getGLatch() 	SignatureNotChanged
		public int getH() 	SignatureNotChanged
		public int getHighest(int, int) 	SignatureNotChanged
		public int getHighest(int, int, boolean) 	SignatureNotChanged
		public com.volmit.iris.util.RNG getRng() 	SignatureNotChanged
		public int getSize() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructure getStructure() 	SignatureNotChanged
		public int getTask() 	SignatureNotChanged
		public com.volmit.iris.object.TileResult getTile(int, int, int) 	SignatureNotChanged
		public com.volmit.iris.util.Cuboid getTileBounds(org.bukkit.Location) 	SignatureNotChanged
		public com.volmit.iris.util.ChronoLatch getU() 	SignatureNotChanged
		public com.volmit.iris.util.KMap getUpdates() 	SignatureNotChanged
		public int getVariant(com.volmit.iris.util.Cuboid, com.volmit.iris.object.IrisStructureTile) 	SignatureNotChanged
		public com.volmit.iris.noise.CNG getVariants() 	SignatureNotChanged
		public int getW() 	SignatureNotChanged
		public org.bukkit.entity.Player getWorker() 	SignatureNotChanged
		public org.bukkit.World getWorld() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void highlightTile(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public boolean isPreventingDecay() 	SignatureNotChanged
		public boolean isSolid(int, int, int) 	SignatureNotChanged
		public boolean isUnderwater(int, int) 	SignatureNotChanged
		public boolean isUse3d() 	SignatureNotChanged
		public boolean isWithinBounds(org.bukkit.Location) 	SignatureNotChanged
		private static synthetic void lambda$deleteTile$4(org.bukkit.block.Block) 	SignatureNotChanged
		private synthetic void lambda$deleteTiles$3(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		private synthetic void lambda$on$10(org.bukkit.event.block.BlockPhysicsEvent) 	SignatureNotChanged
		private synthetic void lambda$on$11(org.bukkit.event.block.BlockFertilizeEvent) 	SignatureNotChanged
		private synthetic void lambda$on$12(org.bukkit.event.block.BlockGrowEvent) 	SignatureNotChanged
		private synthetic void lambda$on$13(org.bukkit.event.block.BlockSpreadEvent) 	SignatureNotChanged
		private synthetic void lambda$on$14(org.bukkit.event.block.BlockBurnEvent) 	SignatureNotChanged
		private synthetic void lambda$on$15(org.bukkit.event.block.BlockCookEvent) 	SignatureNotChanged
		private synthetic void lambda$on$16(org.bukkit.event.block.BlockPlaceEvent) 	SignatureNotChanged
		private synthetic void lambda$on$5(org.bukkit.event.block.BlockBreakEvent) 	SignatureNotChanged
		private synthetic void lambda$on$6(org.bukkit.event.block.BlockIgniteEvent) 	SignatureNotChanged
		private synthetic void lambda$on$7(org.bukkit.event.block.BlockFormEvent) 	SignatureNotChanged
		private synthetic void lambda$on$8(org.bukkit.event.block.BlockFromToEvent) 	SignatureNotChanged
		private synthetic void lambda$on$9(org.bukkit.event.block.BlockFadeEvent) 	SignatureNotChanged
		private synthetic void lambda$openVariants$0(com.volmit.iris.util.inventory.Window, com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		private synthetic void lambda$openVariants$1(com.volmit.iris.util.inventory.Window, com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid, java.lang.Integer, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		private synthetic void lambda$updateTiles$2(org.bukkit.Location) 	SignatureNotChanged
		public void loadStructures(com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		private void mod(org.bukkit.Location)	=>	a(org.bukkit.Location)
		public void more() 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockBreakEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockBurnEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockCookEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockFadeEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockFertilizeEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockFormEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockFromToEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockGrowEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockIgniteEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockPhysicsEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockPlaceEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.block.BlockSpreadEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.player.PlayerMoveEvent) 	SignatureNotChanged
		public void openVariants() 	SignatureNotChanged
		public void openVariants(com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public void queue(org.bukkit.Location, java.lang.Runnable) 	SignatureNotChanged
		public void regenerate() 	SignatureNotChanged
		private void runClosestTo()	=>	a()
		public void saveStructure() 	SignatureNotChanged
		public void set(int, int, int, org.bukkit.block.data.BlockData) 	SignatureNotChanged
		public void setCenter(org.bukkit.Location) 	SignatureNotChanged
		public void setDirtyLatch(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setFocus(org.bukkit.Location) 	SignatureNotChanged
		public void setFolder(java.io.File) 	SignatureNotChanged
		public void setForceVariant(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setGLatch(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setH(int) 	SignatureNotChanged
		public void setRng(com.volmit.iris.util.RNG) 	SignatureNotChanged
		public void setSize(int) 	SignatureNotChanged
		public void setStructure(com.volmit.iris.object.IrisStructure) 	SignatureNotChanged
		public void setTask(int) 	SignatureNotChanged
		public void setU(com.volmit.iris.util.ChronoLatch) 	SignatureNotChanged
		public void setUpdates(com.volmit.iris.util.KMap) 	SignatureNotChanged
		public void setUse3d(boolean) 	SignatureNotChanged
		public void setVariants(com.volmit.iris.noise.CNG) 	SignatureNotChanged
		public void setW(int) 	SignatureNotChanged
		public void setWallChance(double) 	SignatureNotChanged
		public void setWorker(org.bukkit.entity.Player) 	SignatureNotChanged
		public void setWorld(org.bukkit.World) 	SignatureNotChanged
		public void switchVariant(com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid, int) 	SignatureNotChanged
		public void tick() 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructureTile tileFor(java.lang.String, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition) 	SignatureNotChanged
		public com.volmit.iris.object.IrisStructureTile tileFor(java.lang.String, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, com.volmit.iris.object.StructureTileCondition, int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void updateTile(com.volmit.iris.util.Cuboid) 	SignatureNotChanged
		public void updateTiles(org.bukkit.Location, com.volmit.iris.object.IrisStructureTile, com.volmit.iris.util.Cuboid) 	SignatureNotChanged

Class: public com.volmit.iris.util.Switch	NameNotChanged
	Source: "Switch.java"
	FieldsOf: com.volmit.iris.util.Switch
		private volatile boolean b	=>	a
	MethodsOf: com.volmit.iris.util.Switch
		public void <init>() 	SignatureNotChanged
		public void flip() 	SignatureNotChanged
		public boolean isFlipped() 	SignatureNotChanged
		public void reset() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Tag	NameNotChanged
	Source: "Tag.java"
	FieldsOf: com.volmit.iris.util.Tag
		private final java.lang.String name	=>	a
	MethodsOf: com.volmit.iris.util.Tag
		public void <init>(java.lang.String) 	SignatureNotChanged
		public final java.lang.String getName() 	SignatureNotChanged
		public abstract java.lang.Object getValue() 	SignatureNotChanged

Class: public com.volmit.iris.util.TaskExecutor	NameNotChanged
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor
		private java.util.concurrent.ExecutorService service	=>	a
		private int xc	=>	b
	MethodsOf: com.volmit.iris.util.TaskExecutor
		public void <init>(int, int, java.lang.String) 	SignatureNotChanged
		static synthetic int access$008(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		static synthetic java.util.concurrent.ExecutorService access$200(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void closeNow() 	SignatureNotChanged
		private synthetic void lambda$close$2() 	SignatureNotChanged
		private static synthetic java.lang.Thread lambda$new$0(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		private synthetic java.lang.Thread lambda$new$1(java.lang.String, int, java.lang.Runnable) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskGroup startWork() 	SignatureNotChanged

Class: com.volmit.iris.util.TaskExecutor$1	=>	com.volmit.iris.util.TaskExecutor$a
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$1
		final synthetic com.volmit.iris.util.TaskExecutor this$0	NameNotChanged
		final synthetic java.lang.String val$name	NameNotChanged
		final synthetic int val$priority	NameNotChanged
	MethodsOf: com.volmit.iris.util.TaskExecutor$1
		void <init>(com.volmit.iris.util.TaskExecutor, java.lang.String, int) 	SignatureNotChanged
		public java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) 	SignatureNotChanged

Class: public com.volmit.iris.util.TaskExecutor$AssignedTask	NameNotChanged
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$AssignedTask
		private com.volmit.iris.util.TaskExecutor$TaskState state	=>	b
		private com.volmit.iris.util.NastyRunnable task	=>	a
	MethodsOf: com.volmit.iris.util.TaskExecutor$AssignedTask
		public void <init>(com.volmit.iris.util.NastyRunnable) 	SignatureNotChanged
		static synthetic com.volmit.iris.util.TaskExecutor$TaskState access$100(com.volmit.iris.util.TaskExecutor$AssignedTask) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskState getState() 	SignatureNotChanged
		public com.volmit.iris.util.NastyRunnable getTask() 	SignatureNotChanged
		public void go(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		private synthetic void lambda$go$0() 	SignatureNotChanged
		public void setState(com.volmit.iris.util.TaskExecutor$TaskState) 	SignatureNotChanged

Class: public com.volmit.iris.util.TaskExecutor$TaskGroup	NameNotChanged
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskGroup
		private com.volmit.iris.util.TaskExecutor e	=>	a
		private com.volmit.iris.util.KList tasks	=>	b
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskGroup
		public void <init>(com.volmit.iris.util.TaskExecutor) 	SignatureNotChanged
		private static java.lang.InterruptedException a(java.lang.InterruptedException) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskResult execute() 	SignatureNotChanged
		private synthetic void lambda$execute$0(com.volmit.iris.util.TaskExecutor$AssignedTask) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskGroup queue(com.volmit.iris.util.KList) 	SignatureNotChanged
		public com.volmit.iris.util.TaskExecutor$TaskGroup queue(com.volmit.iris.util.NastyRunnable[]) 	SignatureNotChanged

Class: public com.volmit.iris.util.TaskExecutor$TaskResult	NameNotChanged
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskResult
		public final int tasksCompleted	NameNotChanged
		public final int tasksExecuted	NameNotChanged
		public final int tasksFailed	NameNotChanged
		public final double timeElapsed	NameNotChanged
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskResult
		static void <clinit>() 	SignatureNotChanged
		public void <init>(double, int, int, int) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.TaskExecutor$TaskState	NameNotChanged
	Source: "TaskExecutor.java"
	FieldsOf: com.volmit.iris.util.TaskExecutor$TaskState
		private static final synthetic com.volmit.iris.util.TaskExecutor$TaskState[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState COMPLETED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState FAILED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState QUEUED	NameNotChanged
		public static final enum com.volmit.iris.util.TaskExecutor$TaskState RUNNING	NameNotChanged
	MethodsOf: com.volmit.iris.util.TaskExecutor$TaskState
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.TaskExecutor$TaskState valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.TaskExecutor$TaskState[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.ThreadMonitor	NameNotChanged
	Source: "ThreadMonitor.java"
	FieldsOf: com.volmit.iris.util.ThreadMonitor
		private com.volmit.iris.util.ChronoLatch cl	=>	f
		int cycles	=>	a
		private java.lang.Thread$State lastState	=>	c
		private java.lang.Thread monitor	=>	b
		private boolean running	=>	e
		private com.volmit.iris.util.RollingSequence sq	=>	d
		private com.volmit.iris.util.PrecisionStopwatch st	=>	g
	MethodsOf: com.volmit.iris.util.ThreadMonitor
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.Thread) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static com.volmit.iris.util.ThreadMonitor bind(java.lang.Thread) 	SignatureNotChanged
		public void pushState(java.lang.Thread$State) 	SignatureNotChanged
		public void run() 	SignatureNotChanged
		public void unbind() 	SignatureNotChanged

Class: public com.volmit.iris.util.V	NameNotChanged
	Source: "V.java"
	FieldsOf: com.volmit.iris.util.V
		private boolean local	=>	a
		private java.lang.Object o	=>	b
		private boolean suppress	=>	c
	MethodsOf: com.volmit.iris.util.V
		public void <init>(java.lang.Class, java.lang.Object[]) 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public void <init>(java.lang.Object, boolean) 	SignatureNotChanged
		public void <init>(java.lang.Object, boolean, boolean) 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public java.lang.annotation.Annotation get(java.lang.Class) 	SignatureNotChanged
		public java.lang.annotation.Annotation get(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public java.lang.annotation.Annotation get(java.lang.Class, java.lang.String, java.lang.Class[]) 	SignatureNotChanged
		public java.lang.Object get(java.lang.String) 	SignatureNotChanged
		public java.lang.Object invoke(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void set(java.lang.String, java.lang.Object) 	SignatureNotChanged

Class: public com.volmit.iris.util.VectorMath	NameNotChanged
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath
	MethodsOf: com.volmit.iris.util.VectorMath
		public void <init>() 	SignatureNotChanged
		public static org.bukkit.util.Vector angleDown(org.bukkit.util.Vector, float) 	SignatureNotChanged
		public static org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector, float) 	SignatureNotChanged
		public static org.bukkit.util.Vector angleRight(org.bukkit.util.Vector, float) 	SignatureNotChanged
		public static org.bukkit.util.Vector angleUp(org.bukkit.util.Vector, float) 	SignatureNotChanged
		public static org.bukkit.util.Vector clip(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector direction(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public static org.bukkit.util.Vector directionNoNormal(org.bukkit.Location, org.bukkit.Location) 	SignatureNotChanged
		public static org.bukkit.util.Vector getAxis(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction) 	SignatureNotChanged
		public static org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) 	SignatureNotChanged
		public static double getSpeed(org.bukkit.util.Vector) 	SignatureNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector) 	SignatureNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector, double) 	SignatureNotChanged
		public static boolean isLookingNear(org.bukkit.Location, org.bukkit.Location, double) 	SignatureNotChanged
		public static org.bukkit.util.Vector reverse(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction, org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate(com.volmit.iris.util.Direction, com.volmit.iris.util.Direction, org.bukkit.util.Vector, int, int, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector, int) 	SignatureNotChanged
		public static org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector, org.bukkit.util.Vector, double) 	SignatureNotChanged
		private static double round(double, int)	=>	a(double, int)
		public static org.bukkit.util.Vector scaleStatic(org.bukkit.Axis, org.bukkit.util.Vector, double) 	SignatureNotChanged
		public static org.bukkit.util.Vector scaleX(org.bukkit.util.Vector, double) 	SignatureNotChanged
		public static org.bukkit.util.Vector scaleY(org.bukkit.util.Vector, double) 	SignatureNotChanged
		public static org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector, double) 	SignatureNotChanged
		public static com.volmit.iris.util.KList shift(org.bukkit.util.Vector, com.volmit.iris.util.KList) 	SignatureNotChanged
		public static com.volmit.iris.util.KList split(org.bukkit.block.BlockFace) 	SignatureNotChanged
		public static org.bukkit.util.Vector toVector(float, float) 	SignatureNotChanged
		public static org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) 	SignatureNotChanged

Class: final com.volmit.iris.util.VectorMath$1	=>	com.volmit.iris.util.VectorMath$a
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath$1
		final synthetic org.bukkit.util.Vector val$vector	NameNotChanged
	MethodsOf: com.volmit.iris.util.VectorMath$1
		void <init>(org.bukkit.util.Vector) 	SignatureNotChanged
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	SignatureNotChanged
		public org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.VectorMath$2	=>	com.volmit.iris.util.VectorMath$b
	Source: "VectorMath.java"
	FieldsOf: com.volmit.iris.util.VectorMath$2
		static final synthetic int[] $SwitchMap$org$bukkit$Axis	=>	b
		static final synthetic int[] $SwitchMap$org$bukkit$block$BlockFace	=>	a
	MethodsOf: com.volmit.iris.util.VectorMath$2
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.util.Violator	NameNotChanged
	Source: "Violator.java"
	FieldsOf: com.volmit.iris.util.Violator
		protected static java.util.concurrent.ConcurrentSkipListMap nodes	NameNotChanged
	MethodsOf: com.volmit.iris.util.Violator
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static java.lang.Object construct(java.lang.Class, java.lang.Object[]) 	SignatureNotChanged
		private static java.lang.Object g(java.lang.String)	=>	b(java.lang.String)
		public static java.lang.annotation.Annotation getAnnotation(java.lang.Class, java.lang.Class) 	SignatureNotChanged
		public static java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field, java.lang.Class) 	SignatureNotChanged
		public static java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Method, java.lang.Class) 	SignatureNotChanged
		public static java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Class[]) 	SignatureNotChanged
		public static java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class, java.lang.Class) 	SignatureNotChanged
		public static java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.Field, java.lang.Class) 	SignatureNotChanged
		public static java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.Method, java.lang.Class) 	SignatureNotChanged
		public static java.lang.reflect.Field getDeclaredField(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public static java.lang.reflect.Method getDeclaredMethod(java.lang.Class, java.lang.String, java.lang.Class[]) 	SignatureNotChanged
		public static java.lang.reflect.Field getField(java.lang.Class, java.lang.String) 	SignatureNotChanged
		public static java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Class[]) 	SignatureNotChanged
		private static boolean h(java.lang.String)	=>	a(java.lang.String)
		private static java.lang.String id(java.lang.Object, java.lang.Object)	=>	a(java.lang.Object, java.lang.Object)
		private static void p(java.lang.String, java.lang.Object)	=>	a(java.lang.String, java.lang.Object)

Class: public com.volmit.iris.util.VirtualCommand	NameNotChanged
	Source: "VirtualCommand.java"
	FieldsOf: com.volmit.iris.util.VirtualCommand
		private com.volmit.iris.util.KMap children	=>	c
		private com.volmit.iris.util.ICommand command	=>	b
		private java.lang.String tag	=>	a
	MethodsOf: com.volmit.iris.util.VirtualCommand
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.ICommand) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.ICommand, java.lang.String) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private boolean checkPermissions(org.bukkit.command.CommandSender, com.volmit.iris.util.ICommand)	=>	a(org.bukkit.command.CommandSender, com.volmit.iris.util.ICommand)
		public com.volmit.iris.util.KMap getChildren() 	SignatureNotChanged
		public com.volmit.iris.util.ICommand getCommand() 	SignatureNotChanged
		public java.lang.String getTag() 	SignatureNotChanged
		public boolean hit(org.bukkit.command.CommandSender, com.volmit.iris.util.KList) 	SignatureNotChanged
		public boolean hit(org.bukkit.command.CommandSender, com.volmit.iris.util.KList, java.lang.String) 	SignatureNotChanged
		private static synthetic void lambda$checkPermissions$0(org.bukkit.command.CommandSender, java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.VoidOutputStream	NameNotChanged
	Source: "VoidOutputStream.java"
	FieldsOf: com.volmit.iris.util.VoidOutputStream
	MethodsOf: com.volmit.iris.util.VoidOutputStream
		public void <init>() 	SignatureNotChanged
		public void write(int) 	SignatureNotChanged

Class: public com.volmit.iris.util.WeightMap	NameNotChanged
	Source: "WeightMap.java"
	FieldsOf: com.volmit.iris.util.WeightMap
		private double lastWeight	=>	a
		private boolean modified	=>	b
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.WeightMap
		public void <init>() 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public double getPercentChance(java.lang.Object) 	SignatureNotChanged
		public double getWeight(java.lang.Object) 	SignatureNotChanged
		private static synthetic void lambda$totalWeight$0(com.volmit.iris.util.Shrinkwrap, java.lang.Object) 	SignatureNotChanged
		public com.volmit.iris.util.WeightMap setWeight(java.lang.Object, double) 	SignatureNotChanged
		public double totalWeight() 	SignatureNotChanged

Class: public com.volmit.iris.util.Wrapper	NameNotChanged
	Source: "Wrapper.java"
	FieldsOf: com.volmit.iris.util.Wrapper
		private java.lang.Object t	=>	a
	MethodsOf: com.volmit.iris.util.Wrapper
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.Object) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.Object get() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void set(java.lang.Object) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.Writable	NameNotChanged
	Source: "Writable.java"
	FieldsOf: com.volmit.iris.util.Writable
	MethodsOf: com.volmit.iris.util.Writable
		public abstract void read(java.io.DataInputStream) 	SignatureNotChanged
		public abstract void write(java.io.DataOutputStream) 	SignatureNotChanged

Class: public com.volmit.iris.util.XML	NameNotChanged
	Source: "XML.java"
	FieldsOf: com.volmit.iris.util.XML
		public static final java.lang.Character AMP	NameNotChanged
		public static final java.lang.Character APOS	NameNotChanged
		public static final java.lang.Character BANG	NameNotChanged
		public static final java.lang.Character EQ	NameNotChanged
		public static final java.lang.Character GT	NameNotChanged
		public static final java.lang.Character LT	NameNotChanged
		public static final java.lang.Character QUEST	NameNotChanged
		public static final java.lang.Character QUOT	NameNotChanged
		public static final java.lang.Character SLASH	NameNotChanged
	MethodsOf: com.volmit.iris.util.XML
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static java.lang.String escape(java.lang.String) 	SignatureNotChanged
		public static void noSpace(java.lang.String) 	SignatureNotChanged
		private static boolean parse(com.volmit.iris.util.XMLTokener, com.volmit.iris.util.JSONObject, java.lang.String)	=>	a(com.volmit.iris.util.XMLTokener, com.volmit.iris.util.JSONObject, java.lang.String)
		public static java.lang.Object stringToValue(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.JSONObject toJSONObject(java.lang.String) 	SignatureNotChanged
		public static java.lang.String toString(java.lang.Object) 	SignatureNotChanged
		public static java.lang.String toString(java.lang.Object, java.lang.String) 	SignatureNotChanged

Class: public com.volmit.iris.util.XMLTokener	NameNotChanged
	Source: "XMLTokener.java"
	FieldsOf: com.volmit.iris.util.XMLTokener
		public static final java.util.HashMap entity	NameNotChanged
	MethodsOf: com.volmit.iris.util.XMLTokener
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static com.volmit.iris.util.JSONException a(com.volmit.iris.util.JSONException) 	SignatureNotChanged
		public java.lang.String nextCDATA() 	SignatureNotChanged
		public java.lang.Object nextContent() 	SignatureNotChanged
		public java.lang.Object nextEntity(char) 	SignatureNotChanged
		public java.lang.Object nextMeta() 	SignatureNotChanged
		public java.lang.Object nextToken() 	SignatureNotChanged
		public boolean skipPast(java.lang.String) 	SignatureNotChanged

Class: public enum com.volmit.iris.util.inventory.C	NameNotChanged
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C
		private static final synthetic com.volmit.iris.util.inventory.C[] $VALUES	=>	c
		public static final enum com.volmit.iris.util.inventory.C AQUA	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C BLACK	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C BLUE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C BOLD	NameNotChanged
		private static final java.util.Map BY_CHAR	=>	d
		private static final java.util.Map BY_ID	=>	f
		public static final com.volmit.iris.util.inventory.C[] COLORCYCLE	NameNotChanged
		private static final com.volmit.iris.util.inventory.C[] COLORS	=>	e
		public static final char COLOR_CHAR	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_AQUA	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_BLUE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_GRAY	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_GREEN	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_PURPLE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C DARK_RED	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C GOLD	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C GRAY	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C GREEN	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C ITALIC	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C LIGHT_PURPLE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C MAGIC	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C RED	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C RESET	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C STRIKETHROUGH	NameNotChanged
		private static final java.util.regex.Pattern STRIP_COLOR_PATTERN	=>	j
		public static final enum com.volmit.iris.util.inventory.C UNDERLINE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C WHITE	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.C YELLOW	NameNotChanged
		private static final java.util.Map chatHexMap	=>	a
		private final char code	=>	g
		private static final java.util.Map dyeChatMap	=>	h
		private static final java.util.Map dyeHexMap	=>	k
		private final int intCode	=>	b
		private final boolean isFormat	=>	l
		private final java.lang.String toString	=>	i
	MethodsOf: com.volmit.iris.util.inventory.C
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		private void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		synthetic void <init>(java.lang.String, int, char, int, boolean, com.volmit.iris.util.inventory.C$1) 	SignatureNotChanged
		synthetic void <init>(java.lang.String, int, char, int, com.volmit.iris.util.inventory.C$1) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged
		public org.bukkit.ChatColor chatColor() 	SignatureNotChanged
		public static org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) 	SignatureNotChanged
		public static java.lang.String chatToHex(org.bukkit.ChatColor) 	SignatureNotChanged
		public org.bukkit.DyeColor dye() 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C dyeToChat(org.bukkit.DyeColor) 	SignatureNotChanged
		public static java.lang.String dyeToHex(org.bukkit.DyeColor) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C fromItemMeta(byte) 	SignatureNotChanged
		public static java.lang.String generateColorTable() 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C getByChar(char) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C getByChar(java.lang.String) 	SignatureNotChanged
		public char getChar() 	SignatureNotChanged
		public byte getItemMeta() 	SignatureNotChanged
		public static java.lang.String getLastColors(java.lang.String) 	SignatureNotChanged
		public byte getMeta() 	SignatureNotChanged
		public java.lang.String hex() 	SignatureNotChanged
		public static org.bukkit.Color hexToColor(java.lang.String) 	SignatureNotChanged
		public boolean isColor() 	SignatureNotChanged
		public boolean isFormat() 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C randomColor() 	SignatureNotChanged
		public static org.bukkit.Color rgbToColor(java.lang.String) 	SignatureNotChanged
		public static java.lang.String stripColor(java.lang.String) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public static java.lang.String translateAlternateColorCodes(char, java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.C[] values() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$1	=>	com.volmit.iris.util.inventory.C$a
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$1
	MethodsOf: com.volmit.iris.util.inventory.C$1
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$10	=>	com.volmit.iris.util.inventory.C$b
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$10
	MethodsOf: com.volmit.iris.util.inventory.C$10
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$11	=>	com.volmit.iris.util.inventory.C$c
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$11
	MethodsOf: com.volmit.iris.util.inventory.C$11
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$12	=>	com.volmit.iris.util.inventory.C$d
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$12
	MethodsOf: com.volmit.iris.util.inventory.C$12
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$13	=>	com.volmit.iris.util.inventory.C$e
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$13
	MethodsOf: com.volmit.iris.util.inventory.C$13
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$14	=>	com.volmit.iris.util.inventory.C$f
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$14
	MethodsOf: com.volmit.iris.util.inventory.C$14
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$15	=>	com.volmit.iris.util.inventory.C$g
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$15
	MethodsOf: com.volmit.iris.util.inventory.C$15
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$16	=>	com.volmit.iris.util.inventory.C$h
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$16
	MethodsOf: com.volmit.iris.util.inventory.C$16
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$17	=>	com.volmit.iris.util.inventory.C$i
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$17
	MethodsOf: com.volmit.iris.util.inventory.C$17
		void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$18	=>	com.volmit.iris.util.inventory.C$j
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$18
	MethodsOf: com.volmit.iris.util.inventory.C$18
		void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$19	=>	com.volmit.iris.util.inventory.C$k
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$19
	MethodsOf: com.volmit.iris.util.inventory.C$19
		void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$2	=>	com.volmit.iris.util.inventory.C$l
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$2
	MethodsOf: com.volmit.iris.util.inventory.C$2
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$20	=>	com.volmit.iris.util.inventory.C$m
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$20
	MethodsOf: com.volmit.iris.util.inventory.C$20
		void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$21	=>	com.volmit.iris.util.inventory.C$n
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$21
	MethodsOf: com.volmit.iris.util.inventory.C$21
		void <init>(java.lang.String, int, char, int, boolean) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$22	=>	com.volmit.iris.util.inventory.C$o
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$22
	MethodsOf: com.volmit.iris.util.inventory.C$22
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.inventory.C$23	=>	com.volmit.iris.util.inventory.C$w
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$23
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$inventory$C	=>	a
	MethodsOf: com.volmit.iris.util.inventory.C$23
		static void <clinit>() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$3	=>	com.volmit.iris.util.inventory.C$p
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$3
	MethodsOf: com.volmit.iris.util.inventory.C$3
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$4	=>	com.volmit.iris.util.inventory.C$q
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$4
	MethodsOf: com.volmit.iris.util.inventory.C$4
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$5	=>	com.volmit.iris.util.inventory.C$r
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$5
	MethodsOf: com.volmit.iris.util.inventory.C$5
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$6	=>	com.volmit.iris.util.inventory.C$s
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$6
	MethodsOf: com.volmit.iris.util.inventory.C$6
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$7	=>	com.volmit.iris.util.inventory.C$t
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$7
	MethodsOf: com.volmit.iris.util.inventory.C$7
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$8	=>	com.volmit.iris.util.inventory.C$u
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$8
	MethodsOf: com.volmit.iris.util.inventory.C$8
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: final enum com.volmit.iris.util.inventory.C$9	=>	com.volmit.iris.util.inventory.C$v
	Source: "C.java"
	FieldsOf: com.volmit.iris.util.inventory.C$9
	MethodsOf: com.volmit.iris.util.inventory.C$9
		void <init>(java.lang.String, int, char, int) 	SignatureNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.inventory.Callback	NameNotChanged
	Source: "Callback.java"
	FieldsOf: com.volmit.iris.util.inventory.Callback
	MethodsOf: com.volmit.iris.util.inventory.Callback
		public abstract void run(java.lang.Object) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.inventory.Element	NameNotChanged
	Source: "Element.java"
	FieldsOf: com.volmit.iris.util.inventory.Element
	MethodsOf: com.volmit.iris.util.inventory.Element
		public abstract com.volmit.iris.util.inventory.Element addLore(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element call(com.volmit.iris.util.inventory.ElementEvent, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public abstract org.bukkit.inventory.ItemStack computeItemStack() 	SignatureNotChanged
		public abstract int getCount() 	SignatureNotChanged
		public abstract short getEffectiveDurability() 	SignatureNotChanged
		public abstract java.lang.String getId() 	SignatureNotChanged
		public abstract com.volmit.iris.util.KList getLore() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.MaterialBlock getMaterial() 	SignatureNotChanged
		public abstract java.lang.String getName() 	SignatureNotChanged
		public abstract double getProgress() 	SignatureNotChanged
		public abstract boolean isBackgrond() 	SignatureNotChanged
		public abstract boolean isEnchanted() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onOtherDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onShiftLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element onShiftRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setBackground(boolean) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setCount(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setEnchanted(boolean) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setMaterial(com.volmit.iris.util.inventory.MaterialBlock) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setName(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element setProgress(double) 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.inventory.ElementEvent	NameNotChanged
	Source: "ElementEvent.java"
	FieldsOf: com.volmit.iris.util.inventory.ElementEvent
		private static final synthetic com.volmit.iris.util.inventory.ElementEvent[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.inventory.ElementEvent DRAG_INTO	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.ElementEvent LEFT	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.ElementEvent OTHER_DRAG_INTO	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.ElementEvent RIGHT	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.ElementEvent SHIFT_LEFT	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.ElementEvent SHIFT_RIGHT	NameNotChanged
	MethodsOf: com.volmit.iris.util.inventory.ElementEvent
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.ElementEvent valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.ElementEvent[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.inventory.MaterialBlock	NameNotChanged
	Source: "MaterialBlock.java"
	FieldsOf: com.volmit.iris.util.inventory.MaterialBlock
		private java.lang.Byte data	=>	a
		private org.bukkit.Material material	=>	b
	MethodsOf: com.volmit.iris.util.inventory.MaterialBlock
		public void <init>() 	SignatureNotChanged
		public void <init>(org.bukkit.Location) 	SignatureNotChanged
		public void <init>(org.bukkit.Material) 	SignatureNotChanged
		public void <init>(org.bukkit.Material, java.lang.Byte) 	SignatureNotChanged
		public void <init>(org.bukkit.block.Block) 	SignatureNotChanged
		public void <init>(org.bukkit.block.BlockState) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.Byte getData() 	SignatureNotChanged
		public org.bukkit.Material getMaterial() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void setData(java.lang.Byte) 	SignatureNotChanged
		public void setMaterial(org.bukkit.Material) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public com.volmit.iris.util.inventory.UIElement	NameNotChanged
	Source: "UIElement.java"
	FieldsOf: com.volmit.iris.util.inventory.UIElement
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	f
		private boolean bg	=>	a
		private int count	=>	h
		private com.volmit.iris.util.inventory.Callback eDraggedInto	=>	e
		private com.volmit.iris.util.inventory.Callback eLeft	=>	c
		private com.volmit.iris.util.inventory.Callback eOtherDraggedInto	=>	d
		private com.volmit.iris.util.inventory.Callback eRight	=>	b
		private com.volmit.iris.util.inventory.Callback eShiftLeft	=>	o
		private com.volmit.iris.util.inventory.Callback eShiftRight	=>	k
		private boolean enchanted	=>	n
		private final java.lang.String id	=>	g
		private final com.volmit.iris.util.KList lore	=>	i
		private com.volmit.iris.util.inventory.MaterialBlock material	=>	l
		private java.lang.String name	=>	j
		private double progress	=>	m
	MethodsOf: com.volmit.iris.util.inventory.UIElement
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element addLore(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element call(com.volmit.iris.util.inventory.ElementEvent, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public java.lang.Double clip(double, double, double) 	SignatureNotChanged
		public org.bukkit.inventory.ItemStack computeItemStack() 	SignatureNotChanged
		public int getCount() 	SignatureNotChanged
		public short getEffectiveDurability() 	SignatureNotChanged
		public java.lang.String getId() 	SignatureNotChanged
		public com.volmit.iris.util.KList getLore() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.MaterialBlock getMaterial() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public double getProgress() 	SignatureNotChanged
		public boolean isBackgrond() 	SignatureNotChanged
		public boolean isEnchanted() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onOtherDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onOtherDraggedInto(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onShiftLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onShiftLeftClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element onShiftRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement onShiftRightClick(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element setBackground(boolean) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element setCount(int) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element setEnchanted(boolean) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement setEnchanted(boolean) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element setMaterial(com.volmit.iris.util.inventory.MaterialBlock) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement setMaterial(com.volmit.iris.util.inventory.MaterialBlock) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Element setName(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIElement setName(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element setProgress(double) 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.inventory.UIElement$1	=>	com.volmit.iris.util.inventory.UIElement$a
	Source: "UIElement.java"
	FieldsOf: com.volmit.iris.util.inventory.UIElement$1
		static final synthetic int[] $SwitchMap$com$volmit$iris$util$inventory$ElementEvent	=>	a
	MethodsOf: com.volmit.iris.util.inventory.UIElement$1
		static void <clinit>() 	SignatureNotChanged

Class: public com.volmit.iris.util.inventory.UIStaticDecorator	NameNotChanged
	Source: "UIStaticDecorator.java"
	FieldsOf: com.volmit.iris.util.inventory.UIStaticDecorator
		private com.volmit.iris.util.inventory.Element element	=>	a
	MethodsOf: com.volmit.iris.util.inventory.UIStaticDecorator
		static void <clinit>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element onDecorateBackground(com.volmit.iris.util.inventory.Window, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.util.inventory.UIVoidDecorator	NameNotChanged
	Source: "UIVoidDecorator.java"
	FieldsOf: com.volmit.iris.util.inventory.UIVoidDecorator
	MethodsOf: com.volmit.iris.util.inventory.UIVoidDecorator
		public void <init>() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element onDecorateBackground(com.volmit.iris.util.inventory.Window, int, int) 	SignatureNotChanged

Class: public com.volmit.iris.util.inventory.UIWindow	NameNotChanged
	Source: "UIWindow.java"
	FieldsOf: com.volmit.iris.util.inventory.UIWindow
		private int clickcheck	=>	c
		private com.volmit.iris.util.inventory.WindowDecorator decorator	=>	m
		private boolean doubleclicked	=>	e
		private com.volmit.iris.util.inventory.Callback eClose	=>	h
		private com.volmit.iris.util.KMap elements	=>	f
		private int highestRow	=>	l
		private org.bukkit.inventory.Inventory inventory	=>	k
		private com.volmit.iris.util.inventory.WindowResolution resolution	=>	j
		private java.lang.String title	=>	a
		private final org.bukkit.entity.Player viewer	=>	i
		private int viewportPosition	=>	d
		private int viewportSize	=>	g
		private boolean visible	=>	b
	MethodsOf: com.volmit.iris.util.inventory.UIWindow
		public void <init>(org.bukkit.entity.Player) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Window callClosed() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Window clearElements() 	SignatureNotChanged
		public java.lang.Double clip(double, double, double) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow close() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window close() 	SignatureNotChanged
		public org.bukkit.inventory.ItemStack computeItemStack(int) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.WindowDecorator getDecorator() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Element getElement(int, int) 	SignatureNotChanged
		public int getLayoutPosition(int) 	SignatureNotChanged
		public int getLayoutRow(int) 	SignatureNotChanged
		public int getMaxViewportPosition() 	SignatureNotChanged
		public int getPosition(int) 	SignatureNotChanged
		public int getRealLayoutPosition(int) 	SignatureNotChanged
		public int getRealPosition(int, int) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.WindowResolution getResolution() 	SignatureNotChanged
		public int getRow(int) 	SignatureNotChanged
		public java.lang.String getTitle() 	SignatureNotChanged
		public org.bukkit.entity.Player getViewer() 	SignatureNotChanged
		public int getViewportHeight() 	SignatureNotChanged
		public int getViewportPosition() 	SignatureNotChanged
		public int getViewportSlots() 	SignatureNotChanged
		public boolean hasElement(int, int) 	SignatureNotChanged
		public boolean isVisible() 	SignatureNotChanged
		private synthetic void lambda$on$0(com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		private synthetic void lambda$on$1() 	SignatureNotChanged
		public void on(org.bukkit.event.inventory.InventoryClickEvent) 	SignatureNotChanged
		public void on(org.bukkit.event.inventory.InventoryCloseEvent) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow onClosed(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window onClosed(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow open() 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window open() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Window reopen() 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow scroll(int) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window scroll(int) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setDecorator(com.volmit.iris.util.inventory.WindowDecorator) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setDecorator(com.volmit.iris.util.inventory.WindowDecorator) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setElement(int, int, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setElement(int, int, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Window setResolution(com.volmit.iris.util.inventory.WindowResolution) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setTitle(java.lang.String) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setTitle(java.lang.String) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setViewportHeight(int) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setViewportHeight(int) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setViewportPosition(int) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setViewportPosition(int) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.UIWindow setVisible(boolean) 	SignatureNotChanged
		public bridge synthetic com.volmit.iris.util.inventory.Window setVisible(boolean) 	SignatureNotChanged
		public com.volmit.iris.util.inventory.Window updateInventory() 	SignatureNotChanged

Class: synthetic com.volmit.iris.util.inventory.UIWindow$1	=>	com.volmit.iris.util.inventory.UIWindow$a
	Source: "UIWindow.java"
	FieldsOf: com.volmit.iris.util.inventory.UIWindow$1
		static final synthetic int[] $SwitchMap$org$bukkit$event$inventory$ClickType	=>	b
		static final synthetic int[] $SwitchMap$org$bukkit$event$inventory$InventoryAction	=>	a
	MethodsOf: com.volmit.iris.util.inventory.UIWindow$1
		static void <clinit>() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.inventory.Window	NameNotChanged
	Source: "Window.java"
	FieldsOf: com.volmit.iris.util.inventory.Window
	MethodsOf: com.volmit.iris.util.inventory.Window
		public abstract com.volmit.iris.util.inventory.Window callClosed() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window clearElements() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window close() 	SignatureNotChanged
		public abstract org.bukkit.inventory.ItemStack computeItemStack(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.WindowDecorator getDecorator() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Element getElement(int, int) 	SignatureNotChanged
		public abstract int getLayoutPosition(int) 	SignatureNotChanged
		public abstract int getLayoutRow(int) 	SignatureNotChanged
		public abstract int getMaxViewportPosition() 	SignatureNotChanged
		public abstract int getPosition(int) 	SignatureNotChanged
		public abstract int getRealLayoutPosition(int) 	SignatureNotChanged
		public abstract int getRealPosition(int, int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.WindowResolution getResolution() 	SignatureNotChanged
		public abstract int getRow(int) 	SignatureNotChanged
		public abstract java.lang.String getTitle() 	SignatureNotChanged
		public abstract org.bukkit.entity.Player getViewer() 	SignatureNotChanged
		public abstract int getViewportHeight() 	SignatureNotChanged
		public abstract int getViewportPosition() 	SignatureNotChanged
		public abstract int getViewportSlots() 	SignatureNotChanged
		public abstract boolean hasElement(int, int) 	SignatureNotChanged
		public abstract boolean isVisible() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window onClosed(com.volmit.iris.util.inventory.Callback) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window open() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window reopen() 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window scroll(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setDecorator(com.volmit.iris.util.inventory.WindowDecorator) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setElement(int, int, com.volmit.iris.util.inventory.Element) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setResolution(com.volmit.iris.util.inventory.WindowResolution) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setTitle(java.lang.String) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setViewportHeight(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setViewportPosition(int) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window setVisible(boolean) 	SignatureNotChanged
		public abstract com.volmit.iris.util.inventory.Window updateInventory() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.inventory.WindowDecorator	NameNotChanged
	Source: "WindowDecorator.java"
	FieldsOf: com.volmit.iris.util.inventory.WindowDecorator
	MethodsOf: com.volmit.iris.util.inventory.WindowDecorator
		public abstract com.volmit.iris.util.inventory.Element onDecorateBackground(com.volmit.iris.util.inventory.Window, int, int) 	SignatureNotChanged

Class: public final enum com.volmit.iris.util.inventory.WindowResolution	NameNotChanged
	Source: "WindowResolution.java"
	FieldsOf: com.volmit.iris.util.inventory.WindowResolution
		private static final synthetic com.volmit.iris.util.inventory.WindowResolution[] $VALUES	=>	a
		public static final enum com.volmit.iris.util.inventory.WindowResolution W3_H3	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.WindowResolution W5_H1	NameNotChanged
		public static final enum com.volmit.iris.util.inventory.WindowResolution W9_H6	NameNotChanged
		private int maxHeight	=>	c
		private org.bukkit.event.inventory.InventoryType type	=>	b
		private int width	=>	d
	MethodsOf: com.volmit.iris.util.inventory.WindowResolution
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.lang.String, int, int, int, org.bukkit.event.inventory.InventoryType) 	SignatureNotChanged
		public int getMaxHeight() 	SignatureNotChanged
		public int getMaxWidthOffset() 	SignatureNotChanged
		public org.bukkit.event.inventory.InventoryType getType() 	SignatureNotChanged
		public int getWidth() 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.WindowResolution valueOf(java.lang.String) 	SignatureNotChanged
		public static com.volmit.iris.util.inventory.WindowResolution[] values() 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Point3d	NameNotChanged
	Source: "Point3d.java"
	FieldsOf: com.volmit.iris.util.vec.Point3d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Point3d
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public final double distance(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public final double distanceL1(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public final double distanceLinf(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public final double distanceSquared(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public final void project(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Point3f	NameNotChanged
	Source: "Point3f.java"
	FieldsOf: com.volmit.iris.util.vec.Point3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Point3f
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public final float distance(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public final float distanceL1(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public final float distanceLinf(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public final float distanceSquared(com.volmit.iris.util.vec.Point3f) 	SignatureNotChanged
		public final void project(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Point4d	NameNotChanged
	Source: "Point4d.java"
	FieldsOf: com.volmit.iris.util.vec.Point4d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Point4d
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public final double distance(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public final double distanceL1(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public final double distanceLinf(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public final double distanceSquared(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public final void project(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Point4f	NameNotChanged
	Source: "Point4f.java"
	FieldsOf: com.volmit.iris.util.vec.Point4f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Point4f
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public final float distance(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public final float distanceL1(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public final float distanceLinf(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public final float distanceSquared(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public final void project(com.volmit.iris.util.vec.Point4f) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple2d	NameNotChanged
	Source: "Tuple2d.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple2d
		static final long serialVersionUID	NameNotChanged
		public double x	NameNotChanged
		public double y	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple2d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public void <init>(double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple2d, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void clamp(double, double) 	SignatureNotChanged
		public final void clamp(double, double, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void clampMax(double) 	SignatureNotChanged
		public final void clampMax(double, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void clampMin(double) 	SignatureNotChanged
		public final void clampMin(double, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple2d, double) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(double[]) 	SignatureNotChanged
		public final double getX() 	SignatureNotChanged
		public final double getY() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple2d, com.volmit.iris.util.vec.Tuple2d, double) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple2d, double) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void scale(double) 	SignatureNotChanged
		public final void scale(double, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple2d, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void set(double, double) 	SignatureNotChanged
		public final void set(double[]) 	SignatureNotChanged
		public final void setX(double) 	SignatureNotChanged
		public final void setY(double) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple2d, com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple2f	NameNotChanged
	Source: "Tuple2f.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple2f
		static final long serialVersionUID	NameNotChanged
		public float x	NameNotChanged
		public float y	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple2f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple2f, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void clamp(float, float) 	SignatureNotChanged
		public final void clamp(float, float, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void clampMax(float) 	SignatureNotChanged
		public final void clampMax(float, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void clampMin(float) 	SignatureNotChanged
		public final void clampMin(float, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple2f, float) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(float[]) 	SignatureNotChanged
		public final float getX() 	SignatureNotChanged
		public final float getY() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple2f, com.volmit.iris.util.vec.Tuple2f, float) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple2f, float) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void scale(float) 	SignatureNotChanged
		public final void scale(float, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple2f, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void set(float, float) 	SignatureNotChanged
		public final void set(float[]) 	SignatureNotChanged
		public final void setX(float) 	SignatureNotChanged
		public final void setY(float) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple2f, com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple3d	NameNotChanged
	Source: "Tuple3d.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple3d
		static final long serialVersionUID	NameNotChanged
		public double x	NameNotChanged
		public double y	NameNotChanged
		public double z	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple3d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple3d, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clamp(double, double) 	SignatureNotChanged
		public final void clamp(double, double, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clamp(float, float) 	SignatureNotChanged
		public final void clamp(float, float, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clampMax(double) 	SignatureNotChanged
		public final void clampMax(double, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clampMax(float) 	SignatureNotChanged
		public final void clampMax(float, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clampMin(double) 	SignatureNotChanged
		public final void clampMin(double, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void clampMin(float) 	SignatureNotChanged
		public final void clampMin(float, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple3d, double) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void get(double[]) 	SignatureNotChanged
		public final double getX() 	SignatureNotChanged
		public final double getY() 	SignatureNotChanged
		public final double getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3d, com.volmit.iris.util.vec.Tuple3d, double) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3d, com.volmit.iris.util.vec.Tuple3d, float) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3d, double) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3d, float) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void scale(double) 	SignatureNotChanged
		public final void scale(double, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple3d, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void set(double, double, double) 	SignatureNotChanged
		public final void set(double[]) 	SignatureNotChanged
		public final void setX(double) 	SignatureNotChanged
		public final void setY(double) 	SignatureNotChanged
		public final void setZ(double) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple3d, com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple3f	NameNotChanged
	Source: "Tuple3f.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple3f
		private static java.lang.String[] a	=>	b
		static final long serialVersionUID	NameNotChanged
		public float x	NameNotChanged
		public float y	NameNotChanged
		public float z	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple3f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public static java.lang.String[] a()	=>	b()
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple3f, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void clamp(float, float) 	SignatureNotChanged
		public final void clamp(float, float, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void clampMax(float) 	SignatureNotChanged
		public final void clampMax(float, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void clampMin(float) 	SignatureNotChanged
		public final void clampMin(float, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple3f, float) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void get(float[]) 	SignatureNotChanged
		public final float getX() 	SignatureNotChanged
		public final float getY() 	SignatureNotChanged
		public final float getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3f, com.volmit.iris.util.vec.Tuple3f, float) 	SignatureNotChanged
		public final void interpolate(com.volmit.iris.util.vec.Tuple3f, float) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void scale(float) 	SignatureNotChanged
		public final void scale(float, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple3f, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void set(float, float, float) 	SignatureNotChanged
		public final void set(float[]) 	SignatureNotChanged
		public final void setX(float) 	SignatureNotChanged
		public final void setY(float) 	SignatureNotChanged
		public final void setZ(float) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple3f, com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple4d	NameNotChanged
	Source: "Tuple4d.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple4d
		static final long serialVersionUID	NameNotChanged
		public double w	NameNotChanged
		public double x	NameNotChanged
		public double y	NameNotChanged
		public double z	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple4d
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public void <init>(double, double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple4d, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clamp(double, double) 	SignatureNotChanged
		public final void clamp(double, double, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clamp(float, float) 	SignatureNotChanged
		public final void clamp(float, float, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clampMax(double) 	SignatureNotChanged
		public final void clampMax(double, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clampMax(float) 	SignatureNotChanged
		public final void clampMax(float, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clampMin(double) 	SignatureNotChanged
		public final void clampMin(double, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void clampMin(float) 	SignatureNotChanged
		public final void clampMin(float, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple4d, double) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void get(double[]) 	SignatureNotChanged
		public final double getW() 	SignatureNotChanged
		public final double getX() 	SignatureNotChanged
		public final double getY() 	SignatureNotChanged
		public final double getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4d, com.volmit.iris.util.vec.Tuple4d, double) 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4d, com.volmit.iris.util.vec.Tuple4d, float) 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4d, double) 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4d, float) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void scale(double) 	SignatureNotChanged
		public final void scale(double, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void scaleAdd(double, com.volmit.iris.util.vec.Tuple4d, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void set(double, double, double, double) 	SignatureNotChanged
		public final void set(double[]) 	SignatureNotChanged
		public final void setW(double) 	SignatureNotChanged
		public final void setX(double) 	SignatureNotChanged
		public final void setY(double) 	SignatureNotChanged
		public final void setZ(double) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple4d, com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public abstract com.volmit.iris.util.vec.Tuple4f	NameNotChanged
	Source: "Tuple4f.java"
	FieldsOf: com.volmit.iris.util.vec.Tuple4f
		static final long serialVersionUID	NameNotChanged
		public float w	NameNotChanged
		public float x	NameNotChanged
		public float y	NameNotChanged
		public float z	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Tuple4f
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public void <init>(float, float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		private static java.lang.NullPointerException a(java.lang.NullPointerException) 	SignatureNotChanged
		public final void absolute() 	SignatureNotChanged
		public final void absolute(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void add(com.volmit.iris.util.vec.Tuple4f, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void clamp(float, float) 	SignatureNotChanged
		public final void clamp(float, float, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void clampMax(float) 	SignatureNotChanged
		public final void clampMax(float, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void clampMin(float) 	SignatureNotChanged
		public final void clampMin(float, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean epsilonEquals(com.volmit.iris.util.vec.Tuple4f, float) 	SignatureNotChanged
		public boolean equals(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public final void get(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void get(float[]) 	SignatureNotChanged
		public final float getW() 	SignatureNotChanged
		public final float getX() 	SignatureNotChanged
		public final float getY() 	SignatureNotChanged
		public final float getZ() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4f, com.volmit.iris.util.vec.Tuple4f, float) 	SignatureNotChanged
		public void interpolate(com.volmit.iris.util.vec.Tuple4f, float) 	SignatureNotChanged
		public final void negate() 	SignatureNotChanged
		public final void negate(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void scale(float) 	SignatureNotChanged
		public final void scale(float, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void scaleAdd(float, com.volmit.iris.util.vec.Tuple4f, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple4d) 	SignatureNotChanged
		public final void set(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void set(float, float, float, float) 	SignatureNotChanged
		public final void set(float[]) 	SignatureNotChanged
		public final void setW(float) 	SignatureNotChanged
		public final void setX(float) 	SignatureNotChanged
		public final void setY(float) 	SignatureNotChanged
		public final void setZ(float) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public final void sub(com.volmit.iris.util.vec.Tuple4f, com.volmit.iris.util.vec.Tuple4f) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: com.volmit.iris.util.vec.VecMathUtil	=>	com.volmit.iris.util.vec.a
	Source: "VecMathUtil.java"
	FieldsOf: com.volmit.iris.util.vec.VecMathUtil
	MethodsOf: com.volmit.iris.util.vec.VecMathUtil
		private void <init>() 	SignatureNotChanged
		static long doubleToLongBits(double)	=>	a(double)
		static int floatToIntBits(float)	=>	a(float)

Class: public com.volmit.iris.util.vec.Vector2d	NameNotChanged
	Source: "Vector2d.java"
	FieldsOf: com.volmit.iris.util.vec.Vector2d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Vector2d
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public void <init>(double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public final double angle(com.volmit.iris.util.vec.Vector2d) 	SignatureNotChanged
		public final double dot(com.volmit.iris.util.vec.Vector2d) 	SignatureNotChanged
		public final double length() 	SignatureNotChanged
		public final double lengthSquared() 	SignatureNotChanged
		public final void normalize() 	SignatureNotChanged
		public final void normalize(com.volmit.iris.util.vec.Vector2d) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Vector2f	NameNotChanged
	Source: "Vector2f.java"
	FieldsOf: com.volmit.iris.util.vec.Vector2f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Vector2f
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple2f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector2d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public void <init>(float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public final float angle(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public final float dot(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged
		public final float length() 	SignatureNotChanged
		public final float lengthSquared() 	SignatureNotChanged
		public final void normalize() 	SignatureNotChanged
		public final void normalize(com.volmit.iris.util.vec.Vector2f) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Vector3d	NameNotChanged
	Source: "Vector3d.java"
	FieldsOf: com.volmit.iris.util.vec.Vector3d
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Vector3d
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public void <init>(double, double, double) 	SignatureNotChanged
		public void <init>(double[]) 	SignatureNotChanged
		public final double angle(com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged
		public final void cross(com.volmit.iris.util.vec.Vector3d, com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged
		public final double dot(com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged
		public final double length() 	SignatureNotChanged
		public final double lengthSquared() 	SignatureNotChanged
		public final void normalize() 	SignatureNotChanged
		public final void normalize(com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged

Class: public com.volmit.iris.util.vec.Vector3f	NameNotChanged
	Source: "Vector3f.java"
	FieldsOf: com.volmit.iris.util.vec.Vector3f
		static final long serialVersionUID	NameNotChanged
	MethodsOf: com.volmit.iris.util.vec.Vector3f
		public void <init>() 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Tuple3f) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector3d) 	SignatureNotChanged
		public void <init>(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public void <init>(float, float, float) 	SignatureNotChanged
		public void <init>(float[]) 	SignatureNotChanged
		public final float angle(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public final void cross(com.volmit.iris.util.vec.Vector3f, com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public final float dot(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged
		public final float length() 	SignatureNotChanged
		public final float lengthSquared() 	SignatureNotChanged
		public final void normalize() 	SignatureNotChanged
		public final void normalize(com.volmit.iris.util.vec.Vector3f) 	SignatureNotChanged

Class: public abstract org.slf4j.ILoggerFactory	NameNotChanged
	Source: "ILoggerFactory.java"
	FieldsOf: org.slf4j.ILoggerFactory
	MethodsOf: org.slf4j.ILoggerFactory
		public abstract org.slf4j.Logger getLogger(java.lang.String) 	SignatureNotChanged

Class: public abstract org.slf4j.IMarkerFactory	NameNotChanged
	Source: "IMarkerFactory.java"
	FieldsOf: org.slf4j.IMarkerFactory
	MethodsOf: org.slf4j.IMarkerFactory
		public abstract boolean detachMarker(java.lang.String) 	SignatureNotChanged
		public abstract boolean exists(java.lang.String) 	SignatureNotChanged
		public abstract org.slf4j.Marker getDetachedMarker(java.lang.String) 	SignatureNotChanged
		public abstract org.slf4j.Marker getMarker(java.lang.String) 	SignatureNotChanged

Class: public abstract org.slf4j.Logger	NameNotChanged
	Source: "Logger.java"
	FieldsOf: org.slf4j.Logger
		public static final java.lang.String ROOT_LOGGER_NAME	NameNotChanged
	MethodsOf: org.slf4j.Logger
		static void <clinit>() 	SignatureNotChanged
		public abstract void debug(java.lang.String) 	SignatureNotChanged
		public abstract void debug(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void debug(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void debug(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void debug(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void debug(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void error(java.lang.String) 	SignatureNotChanged
		public abstract void error(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void error(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void error(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void error(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void error(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract java.lang.String getName() 	SignatureNotChanged
		public abstract void info(java.lang.String) 	SignatureNotChanged
		public abstract void info(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void info(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void info(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void info(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void info(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract boolean isDebugEnabled() 	SignatureNotChanged
		public abstract boolean isDebugEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean isErrorEnabled() 	SignatureNotChanged
		public abstract boolean isErrorEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean isInfoEnabled() 	SignatureNotChanged
		public abstract boolean isInfoEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean isTraceEnabled() 	SignatureNotChanged
		public abstract boolean isTraceEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean isWarnEnabled() 	SignatureNotChanged
		public abstract boolean isWarnEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public abstract void trace(java.lang.String) 	SignatureNotChanged
		public abstract void trace(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void trace(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void trace(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void trace(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void trace(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void warn(java.lang.String) 	SignatureNotChanged
		public abstract void warn(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void warn(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void warn(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void warn(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public abstract void warn(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public abstract void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged

Class: public final org.slf4j.LoggerFactory	NameNotChanged
	Source: "LoggerFactory.java"
	FieldsOf: org.slf4j.LoggerFactory
		private static final java.lang.String[] API_COMPATIBILITY_LIST	=>	e
		static int INITIALIZATION_STATE	=>	a
		static org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY	=>	d
		private static java.lang.String STATIC_LOGGER_BINDER_PATH	=>	g
		static org.slf4j.helpers.SubstituteLoggerFactory TEMP_FACTORY	=>	f
		private static java.lang.String[] a	=>	c
		static java.lang.Class class$org$slf4j$LoggerFactory	=>	b
	MethodsOf: org.slf4j.LoggerFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static java.lang.String[] a()	=>	c()
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		private static java.lang.Throwable b(java.lang.Throwable) 	SignatureNotChanged
		private static final void bind()	=>	b()
		static java.lang.Class class$(java.lang.String)	=>	a(java.lang.String)
		private static final void emitSubstituteLoggerWarning()	=>	e()
		static void failedBinding(java.lang.Throwable)	=>	a(java.lang.Throwable)
		private static java.util.Set findPossibleStaticLoggerBinderPathSet()	=>	d()
		public static org.slf4j.ILoggerFactory getILoggerFactory() 	SignatureNotChanged
		public static org.slf4j.Logger getLogger(java.lang.Class) 	SignatureNotChanged
		public static org.slf4j.Logger getLogger(java.lang.String) 	SignatureNotChanged
		private static boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)	=>	c(java.util.Set)
		private static boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)	=>	b(java.lang.String)
		private static final void performInitialization()	=>	f()
		private static void reportActualBinding(java.util.Set)	=>	b(java.util.Set)
		private static void reportMultipleBindingAmbiguity(java.util.Set)	=>	a(java.util.Set)
		private static final void versionSanityCheck()	=>	a()

Class: public org.slf4j.MDC	NameNotChanged
	Source: "MDC.java"
	FieldsOf: org.slf4j.MDC
		static org.slf4j.spi.MDCAdapter mdcAdapter	=>	a
	MethodsOf: org.slf4j.MDC
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.Throwable a(java.lang.Throwable) 	SignatureNotChanged
		public static void clear() 	SignatureNotChanged
		public static java.lang.String get(java.lang.String) 	SignatureNotChanged
		public static java.util.Map getCopyOfContextMap() 	SignatureNotChanged
		public static org.slf4j.spi.MDCAdapter getMDCAdapter() 	SignatureNotChanged
		public static void put(java.lang.String, java.lang.String) 	SignatureNotChanged
		public static void remove(java.lang.String) 	SignatureNotChanged
		public static void setContextMap(java.util.Map) 	SignatureNotChanged

Class: public abstract org.slf4j.Marker	NameNotChanged
	Source: "Marker.java"
	FieldsOf: org.slf4j.Marker
		public static final java.lang.String ANY_MARKER	NameNotChanged
		public static final java.lang.String ANY_NON_NULL_MARKER	NameNotChanged
	MethodsOf: org.slf4j.Marker
		public abstract void add(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean contains(java.lang.String) 	SignatureNotChanged
		public abstract boolean contains(org.slf4j.Marker) 	SignatureNotChanged
		public abstract boolean equals(java.lang.Object) 	SignatureNotChanged
		public abstract java.lang.String getName() 	SignatureNotChanged
		public abstract boolean hasChildren() 	SignatureNotChanged
		public abstract boolean hasReferences() 	SignatureNotChanged
		public abstract int hashCode() 	SignatureNotChanged
		public abstract java.util.Iterator iterator() 	SignatureNotChanged
		public abstract boolean remove(org.slf4j.Marker) 	SignatureNotChanged

Class: public org.slf4j.MarkerFactory	NameNotChanged
	Source: "MarkerFactory.java"
	FieldsOf: org.slf4j.MarkerFactory
		static org.slf4j.IMarkerFactory markerFactory	=>	a
	MethodsOf: org.slf4j.MarkerFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static org.slf4j.Marker getDetachedMarker(java.lang.String) 	SignatureNotChanged
		public static org.slf4j.IMarkerFactory getIMarkerFactory() 	SignatureNotChanged
		public static org.slf4j.Marker getMarker(java.lang.String) 	SignatureNotChanged

Class: public org.slf4j.helpers.BasicMDCAdapter	NameNotChanged
	Source: "BasicMDCAdapter.java"
	FieldsOf: org.slf4j.helpers.BasicMDCAdapter
		static boolean IS_JDK14	=>	b
		private java.lang.InheritableThreadLocal inheritableThreadLocal	=>	a
	MethodsOf: org.slf4j.helpers.BasicMDCAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.SecurityException a(java.lang.SecurityException) 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public java.lang.String get(java.lang.String) 	SignatureNotChanged
		public java.util.Map getCopyOfContextMap() 	SignatureNotChanged
		public java.util.Set getKeys() 	SignatureNotChanged
		static boolean isJDK14()	=>	a()
		public void put(java.lang.String, java.lang.String) 	SignatureNotChanged
		public void remove(java.lang.String) 	SignatureNotChanged
		public void setContextMap(java.util.Map) 	SignatureNotChanged

Class: public org.slf4j.helpers.BasicMarker	NameNotChanged
	Source: "BasicMarker.java"
	FieldsOf: org.slf4j.helpers.BasicMarker
		private static java.lang.String CLOSE	=>	e
		private static java.lang.String OPEN	=>	d
		private static java.lang.String SEP	=>	a
		private final java.lang.String name	=>	b
		private java.util.List refereceList	=>	c
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.BasicMarker
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.lang.String) 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public synchronized void add(org.slf4j.Marker) 	SignatureNotChanged
		public boolean contains(java.lang.String) 	SignatureNotChanged
		public boolean contains(org.slf4j.Marker) 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public boolean hasChildren() 	SignatureNotChanged
		public synchronized boolean hasReferences() 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public synchronized java.util.Iterator iterator() 	SignatureNotChanged
		public synchronized boolean remove(org.slf4j.Marker) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public org.slf4j.helpers.BasicMarkerFactory	NameNotChanged
	Source: "BasicMarkerFactory.java"
	FieldsOf: org.slf4j.helpers.BasicMarkerFactory
		java.util.Map markerMap	=>	a
	MethodsOf: org.slf4j.helpers.BasicMarkerFactory
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.IllegalArgumentException a(java.lang.IllegalArgumentException) 	SignatureNotChanged
		public boolean detachMarker(java.lang.String) 	SignatureNotChanged
		public synchronized boolean exists(java.lang.String) 	SignatureNotChanged
		public org.slf4j.Marker getDetachedMarker(java.lang.String) 	SignatureNotChanged
		public synchronized org.slf4j.Marker getMarker(java.lang.String) 	SignatureNotChanged

Class: public org.slf4j.helpers.FormattingTuple	NameNotChanged
	Source: "FormattingTuple.java"
	FieldsOf: org.slf4j.helpers.FormattingTuple
		public static org.slf4j.helpers.FormattingTuple NULL	NameNotChanged
		private java.lang.Object[] argArray	=>	a
		private java.lang.String message	=>	b
		private java.lang.Throwable throwable	=>	c
	MethodsOf: org.slf4j.helpers.FormattingTuple
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Object[], java.lang.Throwable) 	SignatureNotChanged
		private static java.lang.IllegalStateException a(java.lang.IllegalStateException) 	SignatureNotChanged
		public java.lang.Object[] getArgArray() 	SignatureNotChanged
		public java.lang.String getMessage() 	SignatureNotChanged
		public java.lang.Throwable getThrowable() 	SignatureNotChanged
		static java.lang.Object[] trimmedCopy(java.lang.Object[])	=>	a(java.lang.Object[])

Class: public abstract org.slf4j.helpers.MarkerIgnoringBase	NameNotChanged
	Source: "MarkerIgnoringBase.java"
	FieldsOf: org.slf4j.helpers.MarkerIgnoringBase
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.MarkerIgnoringBase
		public void <init>() 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void debug(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void error(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void error(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void info(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void info(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public boolean isDebugEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public boolean isErrorEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public boolean isInfoEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public boolean isTraceEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public boolean isWarnEnabled(org.slf4j.Marker) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void trace(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public void warn(org.slf4j.Marker, java.lang.String) 	SignatureNotChanged
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object) 	SignatureNotChanged
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public void warn(org.slf4j.Marker, java.lang.String, java.lang.Throwable) 	SignatureNotChanged

Class: public final org.slf4j.helpers.MessageFormatter	NameNotChanged
	Source: "MessageFormatter.java"
	FieldsOf: org.slf4j.helpers.MessageFormatter
	MethodsOf: org.slf4j.helpers.MessageFormatter
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static final org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		private static void booleanArrayAppend(java.lang.StringBuffer, boolean[])	=>	a(java.lang.StringBuffer, boolean[])
		private static void byteArrayAppend(java.lang.StringBuffer, byte[])	=>	a(java.lang.StringBuffer, byte[])
		private static void charArrayAppend(java.lang.StringBuffer, char[])	=>	a(java.lang.StringBuffer, char[])
		private static void deeplyAppendParameter(java.lang.StringBuffer, java.lang.Object, java.util.Map)	=>	a(java.lang.StringBuffer, java.lang.Object, java.util.Map)
		private static void doubleArrayAppend(java.lang.StringBuffer, double[])	=>	a(java.lang.StringBuffer, double[])
		private static void floatArrayAppend(java.lang.StringBuffer, float[])	=>	a(java.lang.StringBuffer, float[])
		public static final org.slf4j.helpers.FormattingTuple format(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public static final org.slf4j.helpers.FormattingTuple format(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		static final java.lang.Throwable getThrowableCandidate(java.lang.Object[])	=>	a(java.lang.Object[])
		private static void intArrayAppend(java.lang.StringBuffer, int[])	=>	a(java.lang.StringBuffer, int[])
		static final boolean isDoubleEscaped(java.lang.String, int)	=>	a(java.lang.String, int)
		static final boolean isEscapedDelimeter(java.lang.String, int)	=>	b(java.lang.String, int)
		private static void longArrayAppend(java.lang.StringBuffer, long[])	=>	a(java.lang.StringBuffer, long[])
		private static void objectArrayAppend(java.lang.StringBuffer, java.lang.Object[], java.util.Map)	=>	a(java.lang.StringBuffer, java.lang.Object[], java.util.Map)
		private static void safeObjectAppend(java.lang.StringBuffer, java.lang.Object)	=>	a(java.lang.StringBuffer, java.lang.Object)
		private static void shortArrayAppend(java.lang.StringBuffer, short[])	=>	a(java.lang.StringBuffer, short[])

Class: public org.slf4j.helpers.NOPLogger	NameNotChanged
	Source: "NOPLogger.java"
	FieldsOf: org.slf4j.helpers.NOPLogger
		public static final org.slf4j.helpers.NOPLogger NOP_LOGGER	NameNotChanged
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.NOPLogger
		static void <clinit>() 	SignatureNotChanged
		protected void <init>() 	SignatureNotChanged
		public final void debug(java.lang.String) 	SignatureNotChanged
		public final void debug(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public final void debug(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public final void debug(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public final void debug(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public final void error(java.lang.String) 	SignatureNotChanged
		public final void error(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public final void error(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public final void error(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public final void error(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		public final void info(java.lang.String) 	SignatureNotChanged
		public final void info(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public final void info(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public final void info(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public final void info(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public final boolean isDebugEnabled() 	SignatureNotChanged
		public final boolean isErrorEnabled() 	SignatureNotChanged
		public final boolean isInfoEnabled() 	SignatureNotChanged
		public final boolean isTraceEnabled() 	SignatureNotChanged
		public final boolean isWarnEnabled() 	SignatureNotChanged
		public final void trace(java.lang.String) 	SignatureNotChanged
		public final void trace(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public final void trace(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public final void trace(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public final void trace(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public final void warn(java.lang.String) 	SignatureNotChanged
		public final void warn(java.lang.String, java.lang.Object) 	SignatureNotChanged
		public final void warn(java.lang.String, java.lang.Object, java.lang.Object) 	SignatureNotChanged
		public final void warn(java.lang.String, java.lang.Object[]) 	SignatureNotChanged
		public final void warn(java.lang.String, java.lang.Throwable) 	SignatureNotChanged

Class: public org.slf4j.helpers.NOPLoggerFactory	NameNotChanged
	Source: "NOPLoggerFactory.java"
	FieldsOf: org.slf4j.helpers.NOPLoggerFactory
	MethodsOf: org.slf4j.helpers.NOPLoggerFactory
		public void <init>() 	SignatureNotChanged
		public org.slf4j.Logger getLogger(java.lang.String) 	SignatureNotChanged

Class: public org.slf4j.helpers.NOPMDCAdapter	NameNotChanged
	Source: "NOPMDCAdapter.java"
	FieldsOf: org.slf4j.helpers.NOPMDCAdapter
	MethodsOf: org.slf4j.helpers.NOPMDCAdapter
		public void <init>() 	SignatureNotChanged
		public void clear() 	SignatureNotChanged
		public java.lang.String get(java.lang.String) 	SignatureNotChanged
		public java.util.Map getCopyOfContextMap() 	SignatureNotChanged
		public void put(java.lang.String, java.lang.String) 	SignatureNotChanged
		public void remove(java.lang.String) 	SignatureNotChanged
		public void setContextMap(java.util.Map) 	SignatureNotChanged

Class: abstract org.slf4j.helpers.NamedLoggerBase	=>	org.slf4j.helpers.a
	Source: "NamedLoggerBase.java"
	FieldsOf: org.slf4j.helpers.NamedLoggerBase
		protected java.lang.String name	NameNotChanged
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.slf4j.helpers.NamedLoggerBase
		void <init>() 	SignatureNotChanged
		public java.lang.String getName() 	SignatureNotChanged
		protected java.lang.Object readResolve() 	SignatureNotChanged

Class: public org.slf4j.helpers.SubstituteLoggerFactory	NameNotChanged
	Source: "SubstituteLoggerFactory.java"
	FieldsOf: org.slf4j.helpers.SubstituteLoggerFactory
		final java.util.List loggerNameList	=>	a
	MethodsOf: org.slf4j.helpers.SubstituteLoggerFactory
		public void <init>() 	SignatureNotChanged
		public org.slf4j.Logger getLogger(java.lang.String) 	SignatureNotChanged
		public java.util.List getLoggerNameList() 	SignatureNotChanged

Class: public org.slf4j.helpers.Util	NameNotChanged
	Source: "Util.java"
	FieldsOf: org.slf4j.helpers.Util
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	b
	MethodsOf: org.slf4j.helpers.Util
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		public static final void report(java.lang.String) 	SignatureNotChanged
		public static final void report(java.lang.String, java.lang.Throwable) 	SignatureNotChanged

Class: public abstract org.slf4j.spi.LocationAwareLogger	NameNotChanged
	Source: "LocationAwareLogger.java"
	FieldsOf: org.slf4j.spi.LocationAwareLogger
		public static final int DEBUG_INT	NameNotChanged
		public static final int ERROR_INT	NameNotChanged
		public static final int INFO_INT	NameNotChanged
		public static final int TRACE_INT	NameNotChanged
		public static final int WARN_INT	NameNotChanged
	MethodsOf: org.slf4j.spi.LocationAwareLogger
		public abstract void log(org.slf4j.Marker, java.lang.String, int, java.lang.String, java.lang.Object[], java.lang.Throwable) 	SignatureNotChanged

Class: public abstract org.slf4j.spi.LoggerFactoryBinder	NameNotChanged
	Source: "LoggerFactoryBinder.java"
	FieldsOf: org.slf4j.spi.LoggerFactoryBinder
	MethodsOf: org.slf4j.spi.LoggerFactoryBinder
		public abstract org.slf4j.ILoggerFactory getLoggerFactory() 	SignatureNotChanged
		public abstract java.lang.String getLoggerFactoryClassStr() 	SignatureNotChanged

Class: public abstract org.slf4j.spi.MDCAdapter	NameNotChanged
	Source: "MDCAdapter.java"
	FieldsOf: org.slf4j.spi.MDCAdapter
	MethodsOf: org.slf4j.spi.MDCAdapter
		public abstract void clear() 	SignatureNotChanged
		public abstract java.lang.String get(java.lang.String) 	SignatureNotChanged
		public abstract java.util.Map getCopyOfContextMap() 	SignatureNotChanged
		public abstract void put(java.lang.String, java.lang.String) 	SignatureNotChanged
		public abstract void remove(java.lang.String) 	SignatureNotChanged
		public abstract void setContextMap(java.util.Map) 	SignatureNotChanged

Class: public abstract org.slf4j.spi.MarkerFactoryBinder	NameNotChanged
	Source: "MarkerFactoryBinder.java"
	FieldsOf: org.slf4j.spi.MarkerFactoryBinder
	MethodsOf: org.slf4j.spi.MarkerFactoryBinder
		public abstract org.slf4j.IMarkerFactory getMarkerFactory() 	SignatureNotChanged
		public abstract java.lang.String getMarkerFactoryClassStr() 	SignatureNotChanged

Class: public org.zeroturnaround.zip.ByteSource	NameNotChanged
	Source: "ByteSource.java"
	FieldsOf: org.zeroturnaround.zip.ByteSource
		private final byte[] bytes	=>	a
		private final int compressionMethod	=>	e
		private final long crc	=>	d
		private final java.lang.String path	=>	b
		private final long time	=>	c
	MethodsOf: org.zeroturnaround.zip.ByteSource
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, byte[]) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], int) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], long) 	SignatureNotChanged
		public void <init>(java.lang.String, byte[], long, int) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.util.zip.ZipEntry getEntry() 	SignatureNotChanged
		public java.io.InputStream getInputStream() 	SignatureNotChanged
		public java.lang.String getPath() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: org.zeroturnaround.zip.CloseShieldInputStream	=>	org.zeroturnaround.zip.f
	Source: "CloseShieldInputStream.java"
	FieldsOf: org.zeroturnaround.zip.CloseShieldInputStream
	MethodsOf: org.zeroturnaround.zip.CloseShieldInputStream
		public void <init>(java.io.InputStream) 	SignatureNotChanged
		public void close() 	SignatureNotChanged

Class: public org.zeroturnaround.zip.FileSource	NameNotChanged
	Source: "FileSource.java"
	FieldsOf: org.zeroturnaround.zip.FileSource
		private final java.io.File file	=>	b
		private final java.lang.String path	=>	a
	MethodsOf: org.zeroturnaround.zip.FileSource
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, java.io.File) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.util.zip.ZipEntry getEntry() 	SignatureNotChanged
		public java.io.InputStream getInputStream() 	SignatureNotChanged
		public java.lang.String getPath() 	SignatureNotChanged
		public static org.zeroturnaround.zip.FileSource[] pair(java.io.File[], java.lang.String[]) 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: final org.zeroturnaround.zip.IdentityNameMapper	=>	org.zeroturnaround.zip.a
	Source: "IdentityNameMapper.java"
	FieldsOf: org.zeroturnaround.zip.IdentityNameMapper
		public static final org.zeroturnaround.zip.NameMapper INSTANCE	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.IdentityNameMapper
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public java.lang.String map(java.lang.String) 	SignatureNotChanged

Class: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy	=>	org.zeroturnaround.zip.j
	Source: "Java6FileApiPermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy
		private final java.lang.reflect.Method canExecuteMethod	=>	c
		private final java.lang.reflect.Method setExecutableMethod	=>	a
		private final java.lang.reflect.Method setReadableMethod	=>	b
		private final java.lang.reflect.Method setWritableMethod	=>	d
	MethodsOf: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private boolean canExecute(java.io.File)	=>	a(java.io.File)
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File) 	SignatureNotChanged
		private boolean setExecutable(java.io.File, boolean, boolean)	=>	b(java.io.File, boolean, boolean)
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions) 	SignatureNotChanged
		private boolean setReadable(java.io.File, boolean, boolean)	=>	c(java.io.File, boolean, boolean)
		private boolean setWritable(java.io.File, boolean, boolean)	=>	a(java.io.File, boolean, boolean)

Class: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy	=>	org.zeroturnaround.zip.d
	Source: "Java7Nio2ApiPermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy
		private final java.lang.Object GROUP_EXECUTE	=>	l
		private final java.lang.Object GROUP_READ	=>	g
		private final java.lang.Object GROUP_WRITE	=>	f
		private final java.lang.Object OTHERS_EXECUTE	=>	o
		private final java.lang.Object OTHERS_READ	=>	k
		private final java.lang.Object OTHERS_WRITE	=>	q
		private final java.lang.Object OWNER_EXECUTE	=>	b
		private final java.lang.Object OWNER_READ	=>	h
		private final java.lang.Object OWNER_WRITE	=>	i
		private final java.lang.Class filesClass	=>	a
		private final java.lang.reflect.Method getPosixFilePermissionsMethod	=>	n
		private final java.lang.Class linkOptionClass	=>	p
		private final java.lang.Enum[] linkOptionsArray	=>	e
		private final java.lang.Class pathClass	=>	m
		private final java.lang.Class posixFilePermissionClass	=>	c
		private final java.lang.reflect.Method setPosixFilePermissionsMethod	=>	d
		private final java.lang.reflect.Method toPathMethod	=>	j
	MethodsOf: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private void addIf(boolean, java.util.Set, java.lang.Object)	=>	a(boolean, java.util.Set, java.lang.Object)
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File) 	SignatureNotChanged
		private java.util.Set getPosixFilePermissions(java.io.File)	=>	a(java.io.File)
		private static boolean isPosix()	=>	a()
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions) 	SignatureNotChanged
		private void setPosixFilePermissions(java.io.File, java.util.Set)	=>	a(java.io.File, java.util.Set)
		private java.lang.Object toPath(java.io.File)	=>	b(java.io.File)

Class: public org.zeroturnaround.zip.MaliciousZipException	NameNotChanged
	Source: "MaliciousZipException.java"
	FieldsOf: org.zeroturnaround.zip.MaliciousZipException
	MethodsOf: org.zeroturnaround.zip.MaliciousZipException
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, java.lang.String) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.NameMapper	NameNotChanged
	Source: "NameMapper.java"
	FieldsOf: org.zeroturnaround.zip.NameMapper
	MethodsOf: org.zeroturnaround.zip.NameMapper
		public abstract java.lang.String map(java.lang.String) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZTFilePermissions	=>	org.zeroturnaround.zip.g
	Source: "ZTFilePermissions.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissions
		private boolean groupCanExecute	=>	a
		private boolean groupCanRead	=>	h
		private boolean groupCanWrite	=>	e
		private boolean isDirectory	=>	i
		private boolean othersCanExecute	=>	d
		private boolean othersCanRead	=>	g
		private boolean othersCanWrite	=>	j
		private boolean ownerCanExecute	=>	c
		private boolean ownerCanRead	=>	b
		private boolean ownerCanWrite	=>	f
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissions
		void <init>() 	SignatureNotChanged
		boolean isGroupCanExecute()	=>	f()
		boolean isGroupCanRead()	=>	a()
		boolean isGroupCanWrite()	=>	c()
		boolean isOthersCanExecute()	=>	i()
		boolean isOthersCanRead()	=>	g()
		boolean isOthersCanWrite()	=>	h()
		boolean isOwnerCanExecute()	=>	d()
		boolean isOwnerCanRead()	=>	b()
		boolean isOwnerCanWrite()	=>	e()
		void setDirectory(boolean)	=>	c(boolean)
		void setGroupCanExecute(boolean)	=>	g(boolean)
		void setGroupCanRead(boolean)	=>	e(boolean)
		void setGroupCanWrite(boolean)	=>	i(boolean)
		void setOthersCanExecute(boolean)	=>	f(boolean)
		void setOthersCanRead(boolean)	=>	j(boolean)
		void setOthersCanWrite(boolean)	=>	d(boolean)
		void setOwnerCanExecute(boolean)	=>	b(boolean)
		void setOwnerCanRead(boolean)	=>	a(boolean)
		void setOwnerCanWrite(boolean)	=>	h(boolean)

Class: public abstract org.zeroturnaround.zip.ZTFilePermissionsStrategy	NameNotChanged
	Source: "ZTFilePermissionsStrategy.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsStrategy
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsStrategy
		public abstract org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File) 	SignatureNotChanged
		public abstract void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZTFilePermissionsUtil	=>	org.zeroturnaround.zip.h
	Source: "ZTFilePermissionsUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil
		private static final org.zeroturnaround.zip.ZTFilePermissionsStrategy DEFAULT_STRATEGY	=>	a
		private static final org.zeroturnaround.zip.ZTFilePermissionsStrategy NOP_STRATEGY	=>	b
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static int addFlag(boolean, int)	=>	a(boolean, int)
		private static org.zeroturnaround.zip.ZTFilePermissionsStrategy fetchDefaultStrategy()	=>	b()
		static org.zeroturnaround.zip.ZTFilePermissions fromPosixFileMode(int)	=>	a(int)
		static org.zeroturnaround.zip.ZTFilePermissionsStrategy getDefaultStategy()	=>	a()
		static int toPosixFileMode(org.zeroturnaround.zip.ZTFilePermissions)	=>	a(org.zeroturnaround.zip.g)
		private static org.zeroturnaround.zip.ZTFilePermissionsStrategy tryInstantiateStrategy(java.lang.Class)	=>	a(java.lang.Class)

Class: final org.zeroturnaround.zip.ZTFilePermissionsUtil$1	=>	org.zeroturnaround.zip.h$a
	Source: "ZTFilePermissionsUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil$1
	MethodsOf: org.zeroturnaround.zip.ZTFilePermissionsUtil$1
		void <init>() 	SignatureNotChanged
		public org.zeroturnaround.zip.ZTFilePermissions getPermissions(java.io.File) 	SignatureNotChanged
		public void setPermissions(java.io.File, org.zeroturnaround.zip.ZTFilePermissions) 	SignatureNotChanged

Class: public final org.zeroturnaround.zip.ZTFileUtil	NameNotChanged
	Source: "ZTFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFileUtil
	MethodsOf: org.zeroturnaround.zip.ZTFileUtil
		private void <init>() 	SignatureNotChanged
		private static org.zeroturnaround.zip.ZipException a(org.zeroturnaround.zip.ZipException) 	SignatureNotChanged
		private static void innerListFiles(java.io.File, java.util.Collection, java.io.FileFilter)	=>	a(java.io.File, java.util.Collection, java.io.FileFilter)
		public static java.util.Collection listFiles(java.io.File) 	SignatureNotChanged
		public static java.util.Collection listFiles(java.io.File, java.io.FileFilter) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZTFileUtil$1	=>	org.zeroturnaround.zip.ZTFileUtil$a
	Source: "ZTFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTFileUtil$1
	MethodsOf: org.zeroturnaround.zip.ZTFileUtil$1
		void <init>() 	SignatureNotChanged
		public boolean accept(java.io.File) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZTZipReflectionUtil	=>	org.zeroturnaround.zip.i
	Source: "ZTZipReflectionUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZTZipReflectionUtil
	MethodsOf: org.zeroturnaround.zip.ZTZipReflectionUtil
		private void <init>() 	SignatureNotChanged
		static java.lang.Class getClassForName(java.lang.String, java.lang.Class)	=>	a(java.lang.String, java.lang.Class)
		static java.lang.reflect.Method getDeclaredMethod(java.lang.Class, java.lang.String, java.lang.Class[])	=>	a(java.lang.Class, java.lang.String, java.lang.Class[])
		static java.lang.Object invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])	=>	a(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])

Class: public org.zeroturnaround.zip.ZipBreakException	NameNotChanged
	Source: "ZipBreakException.java"
	FieldsOf: org.zeroturnaround.zip.ZipBreakException
	MethodsOf: org.zeroturnaround.zip.ZipBreakException
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.Exception) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.ZipEntryCallback	NameNotChanged
	Source: "ZipEntryCallback.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryCallback
	MethodsOf: org.zeroturnaround.zip.ZipEntryCallback
		public abstract void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipEntryOrInfoAdapter	=>	org.zeroturnaround.zip.b
	Source: "ZipEntryOrInfoAdapter.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryOrInfoAdapter
		private final org.zeroturnaround.zip.ZipEntryCallback entryCallback	=>	b
		private final org.zeroturnaround.zip.ZipInfoCallback infoCallback	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipEntryOrInfoAdapter
		static void <clinit>() 	SignatureNotChanged
		public void <init>(org.zeroturnaround.zip.ZipEntryCallback, org.zeroturnaround.zip.ZipInfoCallback) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged
		public void process(java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.ZipEntrySource	NameNotChanged
	Source: "ZipEntrySource.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntrySource
	MethodsOf: org.zeroturnaround.zip.ZipEntrySource
		public abstract java.util.zip.ZipEntry getEntry() 	SignatureNotChanged
		public abstract java.io.InputStream getInputStream() 	SignatureNotChanged
		public abstract java.lang.String getPath() 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipEntryUtil	=>	org.zeroturnaround.zip.c
	Source: "ZipEntryUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipEntryUtil
	MethodsOf: org.zeroturnaround.zip.ZipEntryUtil
		private void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		static void addEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)	=>	b(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)
		static java.util.zip.ZipEntry copy(java.util.zip.ZipEntry)	=>	a(java.util.zip.ZipEntry)
		static java.util.zip.ZipEntry copy(java.util.zip.ZipEntry, java.lang.String)	=>	a(java.util.zip.ZipEntry, java.lang.String)
		static void copyEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)	=>	a(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream)
		static void copyEntry(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream, boolean)	=>	a(java.util.zip.ZipEntry, java.io.InputStream, java.util.zip.ZipOutputStream, boolean)
		static java.util.zip.ZipEntry fromFile(java.lang.String, java.io.File)	=>	a(java.lang.String, java.io.File)
		private static org.zeroturnaround.zip.extra.AsiExtraField getFirstAsiExtraField(java.util.List)	=>	a(java.util.List)
		static org.zeroturnaround.zip.ZTFilePermissions getZTFilePermissions(java.util.zip.ZipEntry)	=>	b(java.util.zip.ZipEntry)
		static boolean setZTFilePermissions(java.util.zip.ZipEntry, org.zeroturnaround.zip.ZTFilePermissions)	=>	a(java.util.zip.ZipEntry, org.zeroturnaround.zip.g)

Class: public org.zeroturnaround.zip.ZipException	NameNotChanged
	Source: "ZipException.java"
	FieldsOf: org.zeroturnaround.zip.ZipException
		private static java.lang.String a	=>	b
	MethodsOf: org.zeroturnaround.zip.ZipException
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.Exception) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		public void <init>(java.lang.String, java.lang.Throwable) 	SignatureNotChanged
		public static java.lang.String a()	=>	b()
		public static void a(java.lang.String)	=>	b(java.lang.String)

Class: org.zeroturnaround.zip.ZipExceptionUtil	=>	org.zeroturnaround.zip.k
	Source: "ZipExceptionUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipExceptionUtil
	MethodsOf: org.zeroturnaround.zip.ZipExceptionUtil
		void <init>() 	SignatureNotChanged
		static org.zeroturnaround.zip.ZipException rethrow(java.io.IOException)	=>	a(java.io.IOException)

Class: org.zeroturnaround.zip.ZipFileUtil	=>	org.zeroturnaround.zip.e
	Source: "ZipFileUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipFileUtil
	MethodsOf: org.zeroturnaround.zip.ZipFileUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.NoSuchMethodException a(java.lang.NoSuchMethodException) 	SignatureNotChanged
		static java.util.zip.ZipInputStream createZipInputStream(java.io.InputStream, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.nio.charset.Charset)
		static java.util.zip.ZipOutputStream createZipOutputStream(java.io.BufferedOutputStream, java.nio.charset.Charset)	=>	a(java.io.BufferedOutputStream, java.nio.charset.Charset)
		static java.util.zip.ZipFile getZipFile(java.io.File, java.nio.charset.Charset)	=>	a(java.io.File, java.nio.charset.Charset)

Class: public abstract org.zeroturnaround.zip.ZipInfoCallback	NameNotChanged
	Source: "ZipInfoCallback.java"
	FieldsOf: org.zeroturnaround.zip.ZipInfoCallback
	MethodsOf: org.zeroturnaround.zip.ZipInfoCallback
		public abstract void process(java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public final org.zeroturnaround.zip.ZipUtil	NameNotChanged
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil
		public static final int DEFAULT_COMPRESSION_LEVEL	NameNotChanged
		private static final org.slf4j.Logger log	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		static synthetic java.io.File access$100(java.io.File, java.lang.String) 	SignatureNotChanged
		static synthetic org.slf4j.Logger access$200() 	SignatureNotChanged
		static synthetic java.io.File access$300(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		static synthetic void access$700(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File) 	SignatureNotChanged
		public static void addEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream) 	SignatureNotChanged
		public static void addEntries(java.io.InputStream, org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, byte[], java.io.File) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, byte[], java.io.File, int) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public static void addEntry(java.io.File, java.lang.String, java.io.File, java.io.File) 	SignatureNotChanged
		public static void addEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public static void addEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource, java.io.File) 	SignatureNotChanged
		private static void addEntry(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)	=>	a(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)
		public static void addOrReplaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public static void addOrReplaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File) 	SignatureNotChanged
		public static boolean archiveEquals(java.io.File, java.io.File) 	SignatureNotChanged
		private static boolean archiveEqualsInternal(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		private static java.io.File checkDestinationFileForTraversal(java.io.File, java.lang.String, java.io.File)	=>	a(java.io.File, java.lang.String, java.io.File)
		public static void closeQuietly(java.util.zip.ZipFile) 	SignatureNotChanged
		public static boolean containsAnyEntry(java.io.File, java.lang.String[]) 	SignatureNotChanged
		public static boolean containsEntry(java.io.File, java.lang.String) 	SignatureNotChanged
		private static void copyEntries(java.io.File, java.util.zip.ZipOutputStream)	=>	a(java.io.File, java.util.zip.ZipOutputStream)
		private static void copyEntries(java.io.File, java.util.zip.ZipOutputStream, java.util.Set)	=>	a(java.io.File, java.util.zip.ZipOutputStream, java.util.Set)
		private static void copyEntries(java.io.InputStream, java.util.zip.ZipOutputStream)	=>	a(java.io.InputStream, java.util.zip.ZipOutputStream)
		public static void createEmpty(java.io.File) 	SignatureNotChanged
		private static boolean doEntryEquals(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)	=>	a(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String)
		private static byte[] doUnpackEntry(java.util.zip.ZipFile, java.lang.String)	=>	a(java.util.zip.ZipFile, java.lang.String)
		private static boolean doUnpackEntry(java.util.zip.ZipFile, java.lang.String, java.io.File)	=>	a(java.util.zip.ZipFile, java.lang.String, java.io.File)
		static java.util.Map entriesByPath(org.zeroturnaround.zip.ZipEntrySource[])	=>	a(org.zeroturnaround.zip.ZipEntrySource[])
		public static boolean entryEquals(java.io.File, java.io.File, java.lang.String) 	SignatureNotChanged
		public static boolean entryEquals(java.io.File, java.io.File, java.lang.String, java.lang.String) 	SignatureNotChanged
		public static boolean entryEquals(java.util.zip.ZipFile, java.util.zip.ZipFile, java.lang.String, java.lang.String) 	SignatureNotChanged
		public static void explode(java.io.File) 	SignatureNotChanged
		static java.util.Set filterDirEntries(java.io.File, java.util.Collection)	=>	a(java.io.File, java.util.Collection)
		public static int getCompressionLevelOfEntry(java.io.File, java.lang.String) 	SignatureNotChanged
		public static int getCompressionMethodOfEntry(java.io.File, java.lang.String) 	SignatureNotChanged
		public static boolean handle(java.io.File, java.lang.String, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static boolean handle(java.io.InputStream, java.lang.String, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset) 	SignatureNotChanged
		public static void iterate(java.io.File, java.lang.String[], org.zeroturnaround.zip.ZipInfoCallback) 	SignatureNotChanged
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset) 	SignatureNotChanged
		public static void iterate(java.io.File, org.zeroturnaround.zip.ZipInfoCallback) 	SignatureNotChanged
		public static void iterate(java.io.InputStream, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static void iterate(java.io.InputStream, java.lang.String[], org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset) 	SignatureNotChanged
		public static void iterate(java.io.InputStream, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public static void iterate(java.io.InputStream, org.zeroturnaround.zip.ZipEntryCallback, java.nio.charset.Charset) 	SignatureNotChanged
		private static java.io.File makeDestinationFile(java.io.File, java.lang.String)	=>	a(java.io.File, java.lang.String)
		private static boolean metaDataEquals(java.lang.String, java.util.zip.ZipEntry, java.util.zip.ZipEntry)	=>	a(java.lang.String, java.util.zip.ZipEntry, java.util.zip.ZipEntry)
		private static java.util.zip.ZipInputStream newCloseShieldZipInputStream(java.io.InputStream, java.nio.charset.Charset)	=>	a(java.io.InputStream, java.nio.charset.Charset)
		private static boolean operateInPlace(java.io.File, org.zeroturnaround.zip.ZipUtil$InPlaceAction)	=>	a(java.io.File, org.zeroturnaround.zip.ZipUtil$i)
		public static void pack(java.io.File, java.io.File) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.File, boolean) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.File, int) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper, int) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.OutputStream) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.OutputStream, int) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.OutputStream, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void pack(java.io.File, java.io.OutputStream, org.zeroturnaround.zip.NameMapper, int) 	SignatureNotChanged
		private static void pack(java.io.File, java.util.zip.ZipOutputStream, org.zeroturnaround.zip.NameMapper, java.lang.String, boolean)	=>	a(java.io.File, java.util.zip.ZipOutputStream, org.zeroturnaround.zip.NameMapper, java.lang.String, boolean)
		public static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.File) 	SignatureNotChanged
		public static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream) 	SignatureNotChanged
		private static void pack(org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream, boolean)	=>	a(org.zeroturnaround.zip.ZipEntrySource[], java.io.OutputStream, boolean)
		public static void packEntries(java.io.File[], java.io.File) 	SignatureNotChanged
		public static void packEntries(java.io.File[], java.io.File, int) 	SignatureNotChanged
		public static void packEntries(java.io.File[], java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void packEntries(java.io.File[], java.io.File, org.zeroturnaround.zip.NameMapper, int) 	SignatureNotChanged
		public static byte[] packEntry(java.io.File) 	SignatureNotChanged
		public static void packEntry(java.io.File, java.io.File) 	SignatureNotChanged
		public static void packEntry(java.io.File, java.io.File, java.lang.String) 	SignatureNotChanged
		public static void packEntry(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void removeEntries(java.io.File, java.lang.String[]) 	SignatureNotChanged
		public static void removeEntries(java.io.File, java.lang.String[], java.io.File) 	SignatureNotChanged
		public static void removeEntries(java.io.File, java.lang.String[], java.io.OutputStream) 	SignatureNotChanged
		public static void removeEntry(java.io.File, java.lang.String) 	SignatureNotChanged
		public static void removeEntry(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public static void repack(java.io.File, int) 	SignatureNotChanged
		public static void repack(java.io.File, java.io.File, int) 	SignatureNotChanged
		public static void repack(java.io.InputStream, java.io.File, int) 	SignatureNotChanged
		public static boolean replaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public static boolean replaceEntries(java.io.File, org.zeroturnaround.zip.ZipEntrySource[], java.io.File) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, java.lang.String, byte[], java.io.File) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, java.lang.String, java.io.File, java.io.File) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public static boolean replaceEntry(java.io.File, org.zeroturnaround.zip.ZipEntrySource, java.io.File) 	SignatureNotChanged
		public static boolean transformEntries(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[]) 	SignatureNotChanged
		public static boolean transformEntries(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[], java.io.File) 	SignatureNotChanged
		public static boolean transformEntries(java.io.InputStream, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[], java.io.OutputStream) 	SignatureNotChanged
		public static boolean transformEntry(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public static boolean transformEntry(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.File) 	SignatureNotChanged
		public static boolean transformEntry(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry) 	SignatureNotChanged
		public static boolean transformEntry(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry, java.io.File) 	SignatureNotChanged
		public static boolean transformEntry(java.io.InputStream, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.OutputStream) 	SignatureNotChanged
		public static boolean transformEntry(java.io.InputStream, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry, java.io.OutputStream) 	SignatureNotChanged
		static java.util.Map transformersByPath(java.util.List)	=>	a(java.util.List)
		public static void unexplode(java.io.File) 	SignatureNotChanged
		public static void unexplode(java.io.File, int) 	SignatureNotChanged
		public static void unpack(java.io.File, java.io.File) 	SignatureNotChanged
		public static void unpack(java.io.File, java.io.File, java.nio.charset.Charset) 	SignatureNotChanged
		public static void unpack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void unpack(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper, java.nio.charset.Charset) 	SignatureNotChanged
		public static void unpack(java.io.InputStream, java.io.File) 	SignatureNotChanged
		public static void unpack(java.io.InputStream, java.io.File, java.nio.charset.Charset) 	SignatureNotChanged
		public static void unpack(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void unpack(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper, java.nio.charset.Charset) 	SignatureNotChanged
		public static byte[] unpackEntry(java.io.File, java.lang.String) 	SignatureNotChanged
		public static boolean unpackEntry(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public static boolean unpackEntry(java.io.File, java.lang.String, java.io.File, java.nio.charset.Charset) 	SignatureNotChanged
		public static byte[] unpackEntry(java.io.File, java.lang.String, java.nio.charset.Charset) 	SignatureNotChanged
		public static byte[] unpackEntry(java.io.InputStream, java.lang.String) 	SignatureNotChanged
		public static boolean unpackEntry(java.io.InputStream, java.lang.String, java.io.File) 	SignatureNotChanged
		public static byte[] unpackEntry(java.util.zip.ZipFile, java.lang.String) 	SignatureNotChanged
		public static boolean unpackEntry(java.util.zip.ZipFile, java.lang.String, java.io.File) 	SignatureNotChanged
		public static void unwrap(java.io.File, java.io.File) 	SignatureNotChanged
		public static void unwrap(java.io.File, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public static void unwrap(java.io.InputStream, java.io.File) 	SignatureNotChanged
		public static void unwrap(java.io.InputStream, java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$1	=>	org.zeroturnaround.zip.ZipUtil$a0
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$1
		final synthetic java.lang.String val$parentName	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$1
		void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String map(java.lang.String) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$10	=>	org.zeroturnaround.zip.ZipUtil$e
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$10
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$10
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$11	=>	org.zeroturnaround.zip.ZipUtil$az
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$11
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$11
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$12	=>	org.zeroturnaround.zip.ZipUtil$h
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$12
		final synthetic java.util.Set val$dirNames	NameNotChanged
		final synthetic java.util.Set val$ignoredEntries	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$12
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Set, java.util.Set, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$13	=>	org.zeroturnaround.zip.ZipUtil$j
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$13
		final synthetic java.io.File val$file	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$13
		void <init>(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$14	=>	org.zeroturnaround.zip.ZipUtil$k
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$14
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$14
		void <init>(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$15	=>	org.zeroturnaround.zip.ZipUtil$l
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$15
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic int val$compressionMethod	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$15
		void <init>(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$16	=>	org.zeroturnaround.zip.ZipUtil$m
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$16
		final synthetic org.zeroturnaround.zip.ZipEntrySource val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$16
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$17	=>	org.zeroturnaround.zip.ZipUtil$ak
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$17
		final synthetic java.util.Map val$entryByPath	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$17
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Map, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$18	=>	org.zeroturnaround.zip.ZipUtil$n
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$18
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$18
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$19	=>	org.zeroturnaround.zip.ZipUtil$a
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$19
		final synthetic java.util.Map val$entryByPath	NameNotChanged
		final synthetic java.util.Set val$names	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$out	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$19
		static void <clinit>() 	SignatureNotChanged
		void <init>(java.util.Set, java.util.Map, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$2	=>	org.zeroturnaround.zip.ZipUtil$f
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$2
		final synthetic java.lang.String val$fileName	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$2
		void <init>(java.lang.String) 	SignatureNotChanged
		public java.lang.String map(java.lang.String) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$20	=>	org.zeroturnaround.zip.ZipUtil$o
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$20
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$20
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$21	=>	org.zeroturnaround.zip.ZipUtil$p
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$21
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformer val$transformer	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$21
		void <init>(java.io.File, java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$22	=>	org.zeroturnaround.zip.ZipUtil$q
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$22
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformerEntry val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$22
		void <init>(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$23	=>	org.zeroturnaround.zip.ZipUtil$r
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$23
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$23
		void <init>(java.io.File, org.zeroturnaround.zip.transform.ZipEntryTransformerEntry[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$3	=>	org.zeroturnaround.zip.ZipUtil$s
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$3
		final synthetic java.io.File val$file	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$3
		void <init>(java.io.File, java.lang.String, java.io.File) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$4	=>	org.zeroturnaround.zip.ZipUtil$t
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$4
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$4
		void <init>(java.io.File, java.lang.String, byte[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$5	=>	org.zeroturnaround.zip.ZipUtil$u
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$5
		final synthetic byte[] val$bytes	NameNotChanged
		final synthetic int val$compressionMethod	NameNotChanged
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$5
		void <init>(java.io.File, java.lang.String, byte[], int) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$6	=>	org.zeroturnaround.zip.ZipUtil$v
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$6
		final synthetic org.zeroturnaround.zip.ZipEntrySource val$entry	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$6
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$7	=>	org.zeroturnaround.zip.ZipUtil$w
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$7
		final synthetic org.zeroturnaround.zip.ZipEntrySource[] val$entries	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$7
		void <init>(java.io.File, org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$8	=>	org.zeroturnaround.zip.ZipUtil$x
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$8
		final synthetic java.lang.String val$path	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$8
		void <init>(java.io.File, java.lang.String) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$9	=>	org.zeroturnaround.zip.ZipUtil$y
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$9
		final synthetic java.lang.String[] val$paths	NameNotChanged
		final synthetic java.io.File val$zip	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.ZipUtil$9
		void <init>(java.io.File, java.lang.String[]) 	SignatureNotChanged
		public boolean act(java.io.File) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.ZipUtil$BackslashUnpacker	NameNotChanged
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker
		private final org.zeroturnaround.zip.NameMapper mapper	=>	a
		private final java.io.File outputDir	=>	b
	MethodsOf: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker	=>	org.zeroturnaround.zip.ZipUtil$c
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker
		private byte[] bytes	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		public byte[] getBytes() 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$FileUnpacker	=>	org.zeroturnaround.zip.ZipUtil$g
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$FileUnpacker
		private final java.io.File file	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$FileUnpacker
		public void <init>(java.io.File) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: abstract org.zeroturnaround.zip.ZipUtil$InPlaceAction	=>	org.zeroturnaround.zip.ZipUtil$i
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$InPlaceAction
	MethodsOf: org.zeroturnaround.zip.ZipUtil$InPlaceAction
		private void <init>() 	SignatureNotChanged
		synthetic void <init>(org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		abstract boolean act(java.io.File) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback	=>	org.zeroturnaround.zip.ZipUtil$b
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback
		private java.util.zip.ZipOutputStream out	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback
		private void <init>(java.io.File, int) 	SignatureNotChanged
		synthetic void <init>(java.io.File, int, org.zeroturnaround.zip.ZipUtil$1) 	SignatureNotChanged
		static synthetic void access$500(org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback) 	SignatureNotChanged
		private void closeStream()	=>	a()
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback	=>	org.zeroturnaround.zip.ZipUtil$a6
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback
		private final org.zeroturnaround.zip.ZipEntryCallback action	=>	a
		private boolean found	=>	b
		private final java.lang.String name	=>	c
	MethodsOf: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback
		public void <init>(java.lang.String, org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public boolean found() 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback	=>	org.zeroturnaround.zip.ZipUtil$d
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback
		private final java.util.Map entryByPath	=>	a
		private final int entryCount	=>	b
		private final java.util.Set names	=>	c
		private final java.util.zip.ZipOutputStream out	=>	d
	MethodsOf: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.util.List, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public boolean found() 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$Unpacker	=>	org.zeroturnaround.zip.ZipUtil$z
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$Unpacker
		private final org.zeroturnaround.zip.NameMapper mapper	=>	b
		private final java.io.File outputDir	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$Unpacker
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.ZipUtil$Unwrapper	=>	org.zeroturnaround.zip.ZipUtil$aw
	Source: "ZipUtil.java"
	FieldsOf: org.zeroturnaround.zip.ZipUtil$Unwrapper
		private final org.zeroturnaround.zip.NameMapper mapper	=>	b
		private final java.io.File outputDir	=>	c
		private java.lang.String rootDir	=>	a
	MethodsOf: org.zeroturnaround.zip.ZipUtil$Unwrapper
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.io.File, org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		private java.lang.String getRootName(java.lang.String)	=>	a(java.lang.String)
		private java.lang.String getUnrootedName(java.lang.String, java.lang.String)	=>	a(java.lang.String, java.lang.String)
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.Zips	NameNotChanged
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips
		private java.util.List changedEntries	=>	g
		private java.nio.charset.Charset charset	=>	a
		private java.io.File dest	=>	c
		private org.zeroturnaround.zip.NameMapper nameMapper	=>	e
		private boolean preserveTimestamps	=>	f
		private java.util.Set removedEntries	=>	h
		private final java.io.File src	=>	d
		private java.util.List transformers	=>	i
		private boolean unpackedResult	=>	b
	MethodsOf: org.zeroturnaround.zip.Zips
		static void <clinit>() 	SignatureNotChanged
		private void <init>(java.io.File) 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addEntries(org.zeroturnaround.zip.ZipEntrySource[]) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addEntry(org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addFile(java.io.File) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addFile(java.io.File, boolean) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addFile(java.io.File, boolean, java.io.FileFilter) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addFile(java.io.File, java.io.FileFilter) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips addTransformer(java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips charset(java.nio.charset.Charset) 	SignatureNotChanged
		public boolean containsEntry(java.lang.String) 	SignatureNotChanged
		public static org.zeroturnaround.zip.Zips create() 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips destination(java.io.File) 	SignatureNotChanged
		public static org.zeroturnaround.zip.Zips get(java.io.File) 	SignatureNotChanged
		private java.io.File getDestinationFile()	=>	a()
		public byte[] getEntry(java.lang.String) 	SignatureNotChanged
		private java.lang.String getRelativePath(java.io.File, java.io.File)	=>	a(java.io.File, java.io.File)
		private java.util.zip.ZipFile getZipFile()	=>	b()
		private void handleInPlaceActions(java.io.File)	=>	a(java.io.File)
		private boolean isEntryInDir(java.util.Set, java.lang.String)	=>	a(java.util.Set, java.lang.String)
		private boolean isInPlace()	=>	c()
		private boolean isUnpack()	=>	d()
		public void iterate(org.zeroturnaround.zip.ZipEntryCallback) 	SignatureNotChanged
		public void iterate(org.zeroturnaround.zip.ZipInfoCallback) 	SignatureNotChanged
		private void iterateChangedAndAdded(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	a(org.zeroturnaround.zip.b)
		private void iterateExistingExceptRemoved(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	b(org.zeroturnaround.zip.b)
		public org.zeroturnaround.zip.Zips nameMapper(org.zeroturnaround.zip.NameMapper) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips preserveTimestamps() 	SignatureNotChanged
		public void process() 	SignatureNotChanged
		private void processAllEntries(org.zeroturnaround.zip.ZipEntryOrInfoAdapter)	=>	c(org.zeroturnaround.zip.b)
		public org.zeroturnaround.zip.Zips removeEntries(java.lang.String[]) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips removeEntry(java.lang.String) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips setPreserveTimestamps(boolean) 	SignatureNotChanged
		public org.zeroturnaround.zip.Zips unpack() 	SignatureNotChanged

Class: synthetic org.zeroturnaround.zip.Zips$1	=>	org.zeroturnaround.zip.Zips$b
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$1
	MethodsOf: org.zeroturnaround.zip.Zips$1

Class: org.zeroturnaround.zip.Zips$CopyingCallback	=>	org.zeroturnaround.zip.Zips$c
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$CopyingCallback
		private final java.util.Map entryByPath	=>	c
		private final java.util.zip.ZipOutputStream out	=>	d
		private final boolean preserveTimestapms	=>	a
		private final java.util.Set visitedNames	=>	b
	MethodsOf: org.zeroturnaround.zip.Zips$CopyingCallback
		private void <init>(java.util.List, java.util.zip.ZipOutputStream, boolean) 	SignatureNotChanged
		synthetic void <init>(java.util.List, java.util.zip.ZipOutputStream, boolean, org.zeroturnaround.zip.Zips$1) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: org.zeroturnaround.zip.Zips$UnpackingCallback	=>	org.zeroturnaround.zip.Zips$a
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$UnpackingCallback
		private final java.io.File destination	=>	c
		private final java.util.Map entryByPath	=>	a
		private final java.util.Set visitedNames	=>	b
	MethodsOf: org.zeroturnaround.zip.Zips$UnpackingCallback
		private void <init>(java.util.List, java.io.File) 	SignatureNotChanged
		synthetic void <init>(java.util.List, java.io.File, org.zeroturnaround.zip.Zips$1) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void process(java.io.InputStream, java.util.zip.ZipEntry) 	SignatureNotChanged
		private void transformIntoFile(org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.InputStream, java.util.zip.ZipEntry, java.io.File)	=>	a(org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.InputStream, java.util.zip.ZipEntry, java.io.File)

Class: org.zeroturnaround.zip.Zips$UnpackingCallback$1	=>	org.zeroturnaround.zip.Zips$a$b
	Source: "Zips.java"
	FieldsOf: org.zeroturnaround.zip.Zips$UnpackingCallback$1
		final synthetic org.zeroturnaround.zip.Zips$UnpackingCallback this$0	NameNotChanged
		final synthetic java.io.InputStream val$entryIn	NameNotChanged
		final synthetic org.zeroturnaround.zip.transform.ZipEntryTransformer val$transformer	NameNotChanged
		final synthetic java.util.zip.ZipEntry val$zipEntry	NameNotChanged
		final synthetic java.util.zip.ZipOutputStream val$zipOut	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.Zips$UnpackingCallback$1
		void <init>(org.zeroturnaround.zip.Zips$UnpackingCallback, org.zeroturnaround.zip.transform.ZipEntryTransformer, java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		public void run() 	SignatureNotChanged

Class: public org.zeroturnaround.zip.commons.FileExistsException	NameNotChanged
	Source: "FileExistsException.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileExistsException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.commons.FileExistsException
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public void <init>(java.io.File) 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.commons.FileUtils	NameNotChanged
	Source: "FileUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileUtils
	MethodsOf: org.zeroturnaround.zip.commons.FileUtils
		public void <init>() 	SignatureNotChanged
		public static void copy(java.io.File, java.io.OutputStream) 	SignatureNotChanged
		public static void copy(java.io.InputStream, java.io.File) 	SignatureNotChanged
		public static java.io.File getTempFileFor(java.io.File) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.commons.FileUtilsV2_2	NameNotChanged
	Source: "FileUtilsV2_2.java"
	FieldsOf: org.zeroturnaround.zip.commons.FileUtilsV2_2
		public static final java.io.File[] EMPTY_FILE_ARRAY	NameNotChanged
		public static final long ONE_EB	NameNotChanged
		public static final long ONE_GB	NameNotChanged
		public static final long ONE_KB	NameNotChanged
		public static final long ONE_MB	NameNotChanged
		public static final long ONE_PB	NameNotChanged
		public static final long ONE_TB	NameNotChanged
		public static final java.math.BigInteger ONE_YB	NameNotChanged
		public static final java.math.BigInteger ONE_ZB	NameNotChanged
	MethodsOf: org.zeroturnaround.zip.commons.FileUtilsV2_2
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public static void cleanDirectory(java.io.File) 	SignatureNotChanged
		private static void cleanDirectoryOnExit(java.io.File)	=>	a(java.io.File)
		public static boolean contentEquals(java.io.File, java.io.File) 	SignatureNotChanged
		public static void copyDirectory(java.io.File, java.io.File) 	SignatureNotChanged
		public static void copyDirectory(java.io.File, java.io.File, boolean) 	SignatureNotChanged
		public static void copyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean) 	SignatureNotChanged
		public static void copyFile(java.io.File, java.io.File) 	SignatureNotChanged
		public static void copyFile(java.io.File, java.io.File, boolean) 	SignatureNotChanged
		public static void copyFileToDirectory(java.io.File, java.io.File) 	SignatureNotChanged
		public static void copyFileToDirectory(java.io.File, java.io.File, boolean) 	SignatureNotChanged
		public static void deleteDirectory(java.io.File) 	SignatureNotChanged
		private static void deleteDirectoryOnExit(java.io.File)	=>	b(java.io.File)
		public static boolean deleteQuietly(java.io.File) 	SignatureNotChanged
		private static void doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean, java.util.List)	=>	a(java.io.File, java.io.File, java.io.FileFilter, boolean, java.util.List)
		private static void doCopyFile(java.io.File, java.io.File, boolean)	=>	a(java.io.File, java.io.File, boolean)
		public static void forceDelete(java.io.File) 	SignatureNotChanged
		public static void forceDeleteOnExit(java.io.File) 	SignatureNotChanged
		public static void forceMkdir(java.io.File) 	SignatureNotChanged
		public static boolean isSymlink(java.io.File) 	SignatureNotChanged
		public static void moveDirectory(java.io.File, java.io.File) 	SignatureNotChanged
		public static void moveFile(java.io.File, java.io.File) 	SignatureNotChanged
		public static java.io.FileInputStream openInputStream(java.io.File) 	SignatureNotChanged
		public static java.io.FileOutputStream openOutputStream(java.io.File) 	SignatureNotChanged
		public static java.io.FileOutputStream openOutputStream(java.io.File, boolean) 	SignatureNotChanged
		public static java.lang.String readFileToString(java.io.File) 	SignatureNotChanged
		public static java.lang.String readFileToString(java.io.File, java.lang.String) 	SignatureNotChanged
		public static long sizeOf(java.io.File) 	SignatureNotChanged
		public static long sizeOfDirectory(java.io.File) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.commons.FilenameUtils	NameNotChanged
	Source: "FilenameUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.FilenameUtils
		public static final char EXTENSION_SEPARATOR	NameNotChanged
		public static final java.lang.String EXTENSION_SEPARATOR_STR	NameNotChanged
		private static final char SYSTEM_SEPARATOR	=>	a
	MethodsOf: org.zeroturnaround.zip.commons.FilenameUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static int getPrefixLength(java.lang.String) 	SignatureNotChanged
		private static boolean isSeparator(char)	=>	a(char)
		static boolean isSystemWindows()	=>	a()

Class: public org.zeroturnaround.zip.commons.IOUtils	NameNotChanged
	Source: "IOUtils.java"
	FieldsOf: org.zeroturnaround.zip.commons.IOUtils
		public static final char DIR_SEPARATOR	NameNotChanged
		public static final char DIR_SEPARATOR_UNIX	NameNotChanged
		public static final char DIR_SEPARATOR_WINDOWS	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_UNIX	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	NameNotChanged
		private static java.lang.String a	=>	b
	MethodsOf: org.zeroturnaround.zip.commons.IOUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		public static java.lang.String a()	=>	b()
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public static void a(java.lang.String)	=>	b(java.lang.String)
		public static void closeQuietly(java.io.Closeable) 	SignatureNotChanged
		public static void closeQuietly(java.io.InputStream) 	SignatureNotChanged
		public static void closeQuietly(java.io.OutputStream) 	SignatureNotChanged
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream) 	SignatureNotChanged
		public static int copy(java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged
		public static void copy(java.io.InputStream, java.io.Writer) 	SignatureNotChanged
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) 	SignatureNotChanged
		public static int copy(java.io.Reader, java.io.Writer) 	SignatureNotChanged
		public static long copyLarge(java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged
		public static long copyLarge(java.io.InputStream, java.io.OutputStream, byte[]) 	SignatureNotChanged
		public static long copyLarge(java.io.Reader, java.io.Writer) 	SignatureNotChanged
		public static long copyLarge(java.io.Reader, java.io.Writer, char[]) 	SignatureNotChanged
		public static byte[] toByteArray(java.io.InputStream) 	SignatureNotChanged
		public static java.lang.String toString(java.io.InputStream, java.lang.String) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.commons.StringBuilderWriter	NameNotChanged
	Source: "StringBuilderWriter.java"
	FieldsOf: org.zeroturnaround.zip.commons.StringBuilderWriter
		private final java.lang.StringBuilder builder	=>	a
	MethodsOf: org.zeroturnaround.zip.commons.StringBuilderWriter
		public void <init>() 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public void <init>(java.lang.StringBuilder) 	SignatureNotChanged
		public java.io.Writer append(char) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(char) 	SignatureNotChanged
		public java.io.Writer append(java.lang.CharSequence) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(java.lang.CharSequence) 	SignatureNotChanged
		public java.io.Writer append(java.lang.CharSequence, int, int) 	SignatureNotChanged
		public bridge synthetic java.lang.Appendable append(java.lang.CharSequence, int, int) 	SignatureNotChanged
		public void close() 	SignatureNotChanged
		public void flush() 	SignatureNotChanged
		public java.lang.StringBuilder getBuilder() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged
		public void write(char[], int, int) 	SignatureNotChanged
		public void write(java.lang.String) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.extra.AsiExtraField	NameNotChanged
	Source: "AsiExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.AsiExtraField
		final int DEFAULT_DIR_PERM	=>	b
		final int DEFAULT_FILE_PERM	=>	e
		final int DEFAULT_LINK_PERM	=>	g
		final int DIR_FLAG	=>	m
		final int FILE_FLAG	=>	h
		private static final org.zeroturnaround.zip.extra.ZipShort HEADER_ID	=>	a
		final int LINK_FLAG	=>	l
		final int PERM_MASK	=>	c
		private java.util.zip.CRC32 crc	=>	j
		private boolean dirFlag	=>	i
		private int gid	=>	k
		private java.lang.String link	=>	f
		private int mode	=>	d
		private int uid	=>	n
	MethodsOf: org.zeroturnaround.zip.extra.AsiExtraField
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.Exception a(java.lang.Exception) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public byte[] getCentralDirectoryData() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength() 	SignatureNotChanged
		public int getGroupId() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getHeaderId() 	SignatureNotChanged
		public java.lang.String getLinkedFile() 	SignatureNotChanged
		public byte[] getLocalFileDataData() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength() 	SignatureNotChanged
		public int getMode() 	SignatureNotChanged
		protected int getMode(int) 	SignatureNotChanged
		public int getUserId() 	SignatureNotChanged
		public boolean isDirectory() 	SignatureNotChanged
		public boolean isLink() 	SignatureNotChanged
		public void parseFromLocalFileData(byte[], int, int) 	SignatureNotChanged
		public void setDirectory(boolean) 	SignatureNotChanged
		public void setGroupId(int) 	SignatureNotChanged
		public void setLinkedFile(java.lang.String) 	SignatureNotChanged
		public void setMode(int) 	SignatureNotChanged
		public void setUserId(int) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.extra.ExtraFieldUtils	NameNotChanged
	Source: "ExtraFieldUtils.java"
	FieldsOf: org.zeroturnaround.zip.extra.ExtraFieldUtils
		private static final java.util.Map implementations	=>	a
	MethodsOf: org.zeroturnaround.zip.extra.ExtraFieldUtils
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.lang.InstantiationException a(java.lang.InstantiationException) 	SignatureNotChanged
		public static org.zeroturnaround.zip.extra.ZipExtraField createExtraField(org.zeroturnaround.zip.extra.ZipShort) 	SignatureNotChanged
		public static byte[] mergeLocalFileDataData(java.util.List) 	SignatureNotChanged
		public static java.util.List parse(byte[]) 	SignatureNotChanged
		public static org.zeroturnaround.zip.extra.ZipExtraField[] parseA(byte[]) 	SignatureNotChanged
		public static void register(java.lang.Class) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.extra.UnrecognizedExtraField	NameNotChanged
	Source: "UnrecognizedExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.UnrecognizedExtraField
		private byte[] centralData	=>	b
		private org.zeroturnaround.zip.extra.ZipShort headerId	=>	a
		private byte[] localData	=>	c
	MethodsOf: org.zeroturnaround.zip.extra.UnrecognizedExtraField
		public void <init>() 	SignatureNotChanged
		private static byte[] copy(byte[])	=>	a(byte[])
		public byte[] getCentralDirectoryData() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getHeaderId() 	SignatureNotChanged
		public byte[] getLocalFileDataData() 	SignatureNotChanged
		public org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength() 	SignatureNotChanged
		public void parseFromCentralDirectoryData(byte[], int, int) 	SignatureNotChanged
		public void parseFromLocalFileData(byte[], int, int) 	SignatureNotChanged
		public void setCentralDirectoryData(byte[]) 	SignatureNotChanged
		public void setHeaderId(org.zeroturnaround.zip.extra.ZipShort) 	SignatureNotChanged
		public void setLocalFileDataData(byte[]) 	SignatureNotChanged

Class: final org.zeroturnaround.zip.extra.ZipConstants	=>	org.zeroturnaround.zip.extra.a
	Source: "ZipConstants.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipConstants
	MethodsOf: org.zeroturnaround.zip.extra.ZipConstants
		private void <init>() 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.extra.ZipExtraField	NameNotChanged
	Source: "ZipExtraField.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipExtraField
	MethodsOf: org.zeroturnaround.zip.extra.ZipExtraField
		public abstract byte[] getCentralDirectoryData() 	SignatureNotChanged
		public abstract org.zeroturnaround.zip.extra.ZipShort getCentralDirectoryLength() 	SignatureNotChanged
		public abstract org.zeroturnaround.zip.extra.ZipShort getHeaderId() 	SignatureNotChanged
		public abstract byte[] getLocalFileDataData() 	SignatureNotChanged
		public abstract org.zeroturnaround.zip.extra.ZipShort getLocalFileDataLength() 	SignatureNotChanged
		public abstract void parseFromLocalFileData(byte[], int, int) 	SignatureNotChanged

Class: public final org.zeroturnaround.zip.extra.ZipLong	NameNotChanged
	Source: "ZipLong.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipLong
		public static final org.zeroturnaround.zip.extra.ZipLong CFH_SIG	NameNotChanged
		public static final org.zeroturnaround.zip.extra.ZipLong DD_SIG	NameNotChanged
		public static final org.zeroturnaround.zip.extra.ZipLong LFH_SIG	NameNotChanged
		static final org.zeroturnaround.zip.extra.ZipLong ZIP64_MAGIC	=>	b
		private final long value	=>	a
	MethodsOf: org.zeroturnaround.zip.extra.ZipLong
		static void <clinit>() 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(byte[], int) 	SignatureNotChanged
		public void <init>(long) 	SignatureNotChanged
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public byte[] getBytes() 	SignatureNotChanged
		public static byte[] getBytes(long) 	SignatureNotChanged
		public long getValue() 	SignatureNotChanged
		public static long getValue(byte[]) 	SignatureNotChanged
		public static long getValue(byte[], int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public final org.zeroturnaround.zip.extra.ZipShort	NameNotChanged
	Source: "ZipShort.java"
	FieldsOf: org.zeroturnaround.zip.extra.ZipShort
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	b
		private final int value	=>	c
	MethodsOf: org.zeroturnaround.zip.extra.ZipShort
		static void <clinit>() 	SignatureNotChanged
		public void <init>(byte[]) 	SignatureNotChanged
		public void <init>(byte[], int) 	SignatureNotChanged
		public void <init>(int) 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		private static java.lang.RuntimeException a(java.lang.RuntimeException) 	SignatureNotChanged
		public java.lang.Object clone() 	SignatureNotChanged
		public boolean equals(java.lang.Object) 	SignatureNotChanged
		public byte[] getBytes() 	SignatureNotChanged
		public static byte[] getBytes(int) 	SignatureNotChanged
		public int getValue() 	SignatureNotChanged
		public static int getValue(byte[]) 	SignatureNotChanged
		public static int getValue(byte[], int) 	SignatureNotChanged
		public int hashCode() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged

Class: public org.zeroturnaround.zip.timestamps.Java8TimestampStrategy	NameNotChanged
	Source: "Java8TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy
		public void <init>() 	SignatureNotChanged
		public void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy	NameNotChanged
	Source: "PreJava8TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy
		public void <init>() 	SignatureNotChanged
		public void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.timestamps.TimestampStrategy	NameNotChanged
	Source: "TimestampStrategy.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.TimestampStrategy
	MethodsOf: org.zeroturnaround.zip.timestamps.TimestampStrategy
		public abstract void setTime(java.util.zip.ZipEntry, java.util.zip.ZipEntry) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.timestamps.TimestampStrategyFactory	NameNotChanged
	Source: "TimestampStrategyFactory.java"
	FieldsOf: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory
		public static boolean HAS_ZIP_ENTRY_FILE_TIME_METHODS	NameNotChanged
		private static org.zeroturnaround.zip.timestamps.TimestampStrategy INSTANCE	=>	c
		private static com.volmit.iris.object.IrisRegistrant[] a	=>	b
	MethodsOf: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory
		static void <clinit>() 	SignatureNotChanged
		private void <init>() 	SignatureNotChanged
		public static com.volmit.iris.object.IrisRegistrant[] a()	=>	b()
		public static void a(com.volmit.iris.object.IrisRegistrant[])	=>	b(com.volmit.iris.object.IrisRegistrant[])
		public static org.zeroturnaround.zip.timestamps.TimestampStrategy getInstance() 	SignatureNotChanged
		private static org.zeroturnaround.zip.timestamps.TimestampStrategy getStrategy()	=>	d()
		private static boolean hasZipEntryFileTimeMethods()	=>	c()

Class: public abstract org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer	NameNotChanged
	Source: "ByteArrayZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		protected boolean preserveTimestamps() 	SignatureNotChanged
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		protected abstract byte[] transform(java.util.zip.ZipEntry, byte[]) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.transform.FileZipEntryTransformer	NameNotChanged
	Source: "FileZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.FileZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.FileZipEntryTransformer
		static void <clinit>() 	SignatureNotChanged
		public void <init>() 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		private static void copy(java.io.InputStream, java.io.File)	=>	a(java.io.InputStream, java.io.File)
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		protected abstract void transform(java.util.zip.ZipEntry, java.io.File, java.io.File) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.transform.StreamZipEntryTransformer	NameNotChanged
	Source: "StreamZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.StreamZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.StreamZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		protected abstract void transform(java.util.zip.ZipEntry, java.io.InputStream, java.io.OutputStream) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.transform.StringZipEntryTransformer	NameNotChanged
	Source: "StringZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.StringZipEntryTransformer
		private final java.lang.String encoding	=>	a
	MethodsOf: org.zeroturnaround.zip.transform.StringZipEntryTransformer
		public void <init>() 	SignatureNotChanged
		public void <init>(java.lang.String) 	SignatureNotChanged
		private static java.io.IOException a(java.io.IOException) 	SignatureNotChanged
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged
		protected abstract java.lang.String transform(java.util.zip.ZipEntry, java.lang.String) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer	NameNotChanged
	Source: "ZipEntrySourceZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer
		private final org.zeroturnaround.zip.ZipEntrySource source	=>	a
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer
		public void <init>(org.zeroturnaround.zip.ZipEntrySource) 	SignatureNotChanged
		static void addEntry(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)	=>	a(org.zeroturnaround.zip.ZipEntrySource, java.util.zip.ZipOutputStream)
		public void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged

Class: public abstract org.zeroturnaround.zip.transform.ZipEntryTransformer	NameNotChanged
	Source: "ZipEntryTransformer.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntryTransformer
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntryTransformer
		public abstract void transform(java.io.InputStream, java.util.zip.ZipEntry, java.util.zip.ZipOutputStream) 	SignatureNotChanged

Class: public org.zeroturnaround.zip.transform.ZipEntryTransformerEntry	NameNotChanged
	Source: "ZipEntryTransformerEntry.java"
	FieldsOf: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry
		private static java.lang.String[] a	=>	c
		private final java.lang.String path	=>	b
		private final org.zeroturnaround.zip.transform.ZipEntryTransformer transformer	=>	a
	MethodsOf: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry
		static void <clinit>() 	SignatureNotChanged
		public void <init>(java.lang.String, org.zeroturnaround.zip.transform.ZipEntryTransformer) 	SignatureNotChanged
		public static java.lang.String[] a()	=>	b()
		public static void a(java.lang.String[])	=>	b(java.lang.String[])
		public java.lang.String getPath() 	SignatureNotChanged
		public org.zeroturnaround.zip.transform.ZipEntryTransformer getTransformer() 	SignatureNotChanged
		public java.lang.String toString() 	SignatureNotChanged


AutoReflectionClass: com.volmit.iris.util.c


TraceBackClass: com.volmit.iris.object.IrisRegistrant	Data: 53851 a3851 b3851 f
ForwardClass: com.volmit.iris.Iris Package: com.volmit.iris	Data: 52115 a2114 b2115 Q
ForwardClass: com.volmit.iris.command.PermissionIris Package: com.volmit.iris.command	Data: 13961 a3961 b3961 c3962 x
ForwardClass: com.volmit.iris.gen.ContextualChunkGenerator Package: com.volmit.iris.gen	Data: 24571 a4571 b4571 c4572 i
ForwardClass: com.volmit.iris.gen.atomics.AtomicCache Package: com.volmit.iris.gen.atomics	Data: 13941 a3940 b3940 c3941 d
ForwardClass: com.volmit.iris.gen.layer.GenLayerUpdate Package: com.volmit.iris.gen.layer	Data: 34058 a4058 b4058 Y
ForwardClass: com.volmit.iris.gen.parallax.ParallaxSection Package: com.volmit.iris.gen.parallax	Data: 24514 a4514 b4514 c4515 U
ForwardClass: com.volmit.iris.gen.post.PostWallPatcher Package: com.volmit.iris.gen.post	Data: M4102 a4102 b4102 z
ForwardClass: com.volmit.iris.gui.NoiseView Package: com.volmit.iris.gui	Data: M3000 a3000 b3000 u
ForwardClass: com.volmit.iris.noise.FastNoise Package: com.volmit.iris.noise	Data: 53204 a3204 b3204 W
ForwardClass: com.volmit.iris.object.IrisBiome Package: com.volmit.iris.object	Data: 53285 a3285 b3285 L
ForwardClass: com.volmit.iris.util.MortarPlugin Package: com.volmit.iris.util	Data: 33452 a3452 b3452 c
ForwardClass: com.volmit.iris.util.inventory.UIElement Package: com.volmit.iris.util.inventory	Data: M4125 a4125 b4125 o
ForwardClass: com.volmit.iris.util.vec.Tuple3f Package: com.volmit.iris.util.vec	Data: 53240 a3240 b3240 m
ForwardClass: org.slf4j.LoggerFactory Package: org.slf4j	Data: 52382 a2382 b2382 K
ForwardClass: org.slf4j.helpers.Util Package: org.slf4j.helpers	Data: M2262 a2262 b2262 i
ForwardClass: org.zeroturnaround.zip.ZipException Package: org.zeroturnaround.zip	Data: 33753 a3753 b3753 C
ForwardClass: org.zeroturnaround.zip.commons.IOUtils Package: org.zeroturnaround.zip.commons	Data: 33995 a3995 b3995 O
ForwardClass: org.zeroturnaround.zip.extra.ZipShort Package: org.zeroturnaround.zip.extra	Data: M3933 a3933 b3933 t
ForwardClass: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory Package: org.zeroturnaround.zip.timestamps	Data: M6172 a6172 b6172 l
ForwardClass: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry Package: org.zeroturnaround.zip.transform	Data: 56076 a6076 b6076 S
MemberClass: com.volmit.iris.GeneratedChunk	Data: 2983
MemberClass: com.volmit.iris.Iris	Data: 1974
MemberClass: com.volmit.iris.IrisContext	Data: 2715
MemberClass: com.volmit.iris.IrisDataManager	Data: 3051 h
MemberClass: com.volmit.iris.IrisHotloadManager	Data: 3388
MemberClass: com.volmit.iris.IrisMetrics	Data: 2701
MemberClass: com.volmit.iris.IrisSettings	Data: 2823
MemberClass: com.volmit.iris.ProjectManager	Data: 2993 Q
MemberClass: com.volmit.iris.StructureManager	Data: 3243
MemberClass: com.volmit.iris.WandManager	Data: 2660
MemberClass: com.volmit.iris.command.CommandIris	Data: 3460
MemberClass: com.volmit.iris.command.CommandIrisCreate	Data: 4056
MemberClass: com.volmit.iris.command.CommandIrisGoto	Data: 3869
MemberClass: com.volmit.iris.command.CommandIrisHotload	Data: 4175
MemberClass: com.volmit.iris.command.CommandIrisLoot	Data: 3874
MemberClass: com.volmit.iris.command.CommandIrisMap	Data: 3746
MemberClass: com.volmit.iris.command.CommandIrisMetrics	Data: 4187
MemberClass: com.volmit.iris.command.CommandIrisObject	Data: 4059
MemberClass: com.volmit.iris.command.CommandIrisObjectContract	Data: 4889
MemberClass: com.volmit.iris.command.CommandIrisObjectExpand	Data: 4667
MemberClass: com.volmit.iris.command.CommandIrisObjectP1	Data: 4188
MemberClass: com.volmit.iris.command.CommandIrisObjectP2	Data: 4189
MemberClass: com.volmit.iris.command.CommandIrisObjectPaste	Data: 4568
MemberClass: com.volmit.iris.command.CommandIrisObjectSave	Data: 4458
MemberClass: com.volmit.iris.command.CommandIrisObjectShift	Data: 4569
MemberClass: com.volmit.iris.command.CommandIrisObjectWand	Data: 4453
MemberClass: com.volmit.iris.command.CommandIrisObjectXAY	Data: 4301
MemberClass: com.volmit.iris.command.CommandIrisObjectXPY	Data: 4316
MemberClass: com.volmit.iris.command.CommandIrisPregen	Data: 4069
MemberClass: com.volmit.iris.command.CommandIrisRetry	Data: 3994
MemberClass: com.volmit.iris.command.CommandIrisStructure	Data: 4437
MemberClass: com.volmit.iris.command.CommandIrisStructureClose	Data: 4939
MemberClass: com.volmit.iris.command.CommandIrisStructureCreate	Data: 5033
MemberClass: com.volmit.iris.command.CommandIrisStructureExpand	Data: 5045
MemberClass: com.volmit.iris.command.CommandIrisStructureMore	Data: 4840
MemberClass: com.volmit.iris.command.CommandIrisStructureOpen	Data: 4839
MemberClass: com.volmit.iris.command.CommandIrisStructureSave	Data: 4836
MemberClass: com.volmit.iris.command.CommandIrisStructureVariants	Data: 5277
MemberClass: com.volmit.iris.command.CommandIrisStudio	Data: 4092
MemberClass: com.volmit.iris.command.CommandIrisStudioClose	Data: 4594
MemberClass: com.volmit.iris.command.CommandIrisStudioCreate	Data: 4688
MemberClass: com.volmit.iris.command.CommandIrisStudioList	Data: 4504 t
MemberClass: com.volmit.iris.command.CommandIrisStudioOpen	Data: 4494
MemberClass: com.volmit.iris.command.CommandIrisStudioPackage	Data: 4776
MemberClass: com.volmit.iris.command.CommandIrisStudioUpdate	Data: 4703
MemberClass: com.volmit.iris.command.CommandIrisStudioVerify	Data: 4721 Y
MemberClass: com.volmit.iris.command.CommandIrisTC	Data: 3611
MemberClass: com.volmit.iris.command.CommandIrisWhat	Data: 3864
MemberClass: com.volmit.iris.command.CommandIrisWhatBlock	Data: 4355
MemberClass: com.volmit.iris.command.CommandIrisWhatHand	Data: 4243
MemberClass: com.volmit.iris.command.CommandIrisWorld	Data: 3980
MemberClass: com.volmit.iris.command.PermissionIris	Data: 3822
MemberClass: com.volmit.iris.command.PermissionIrisStudio	Data: 4454
MemberClass: com.volmit.iris.gen.ContextualChunkGenerator	Data: 4433 X
MemberClass: com.volmit.iris.gen.DimensionChunkGenerator	Data: 4304
MemberClass: com.volmit.iris.gen.IrisChunkGenerator	Data: 3777
MemberClass: com.volmit.iris.gen.ParallaxChunkGenerator	Data: 4191
MemberClass: com.volmit.iris.gen.ParallelChunkGenerator	Data: 4183
MemberClass: com.volmit.iris.gen.PostBlockChunkGenerator	Data: 4283
MemberClass: com.volmit.iris.gen.TerrainChunkGenerator	Data: 4095 z
MemberClass: com.volmit.iris.gen.atomics.AtomicBiomeMap	Data: 4113
MemberClass: com.volmit.iris.gen.atomics.AtomicCache	Data: 3803
MemberClass: com.volmit.iris.gen.atomics.AtomicDoubleMap	Data: 4224
MemberClass: com.volmit.iris.gen.atomics.AtomicIntMap	Data: 3920
MemberClass: com.volmit.iris.gen.atomics.AtomicMulticache	Data: 4358
MemberClass: com.volmit.iris.gen.atomics.AtomicObjectMap	Data: 4220
MemberClass: com.volmit.iris.gen.atomics.AtomicRegionData	Data: 4325
MemberClass: com.volmit.iris.gen.atomics.AtomicRegionMap	Data: 4233
MemberClass: com.volmit.iris.gen.atomics.AtomicSliver	Data: 3964 z
MemberClass: com.volmit.iris.gen.atomics.AtomicSliverMap	Data: 4250 F
MemberClass: com.volmit.iris.gen.atomics.AtomicWorldData	Data: 4233
MemberClass: com.volmit.iris.gen.atomics.MasterLock	Data: 3743
MemberClass: com.volmit.iris.gen.layer.BiomeDataProvider	Data: 4233
MemberClass: com.volmit.iris.gen.layer.GenLayerBiome	Data: 3803 D
MemberClass: com.volmit.iris.gen.layer.GenLayerCarve	Data: 3808
MemberClass: com.volmit.iris.gen.layer.GenLayerCave	Data: 3694
MemberClass: com.volmit.iris.gen.layer.GenLayerText	Data: 3732
MemberClass: com.volmit.iris.gen.layer.GenLayerUpdate	Data: 3922 e
MemberClass: com.volmit.iris.gen.parallax.ParallaxChunk	Data: 4159
MemberClass: com.volmit.iris.gen.parallax.ParallaxRegion	Data: 4266 a
MemberClass: com.volmit.iris.gen.parallax.ParallaxSection	Data: 4379
MemberClass: com.volmit.iris.gen.parallax.ParallaxSection$1	Data: 4512
MemberClass: com.volmit.iris.gen.parallax.ParallaxWorld	Data: 4174 M
MemberClass: com.volmit.iris.gen.post.Post	Data: 2857
MemberClass: com.volmit.iris.gen.post.PostFloatingNibDeleter	Data: 4667
MemberClass: com.volmit.iris.gen.post.PostNibSmoother	Data: 3987 d
MemberClass: com.volmit.iris.gen.post.PostPotholeFiller	Data: 4194 Q
MemberClass: com.volmit.iris.gen.post.PostSlabber	Data: 3556
MemberClass: com.volmit.iris.gen.post.PostWallPatcher	Data: 3968
MemberClass: com.volmit.iris.gen.post.PostWaterlogger	Data: 4012
MemberClass: com.volmit.iris.gui.NoiseView	Data: 2869 Pw
MemberClass: com.volmit.iris.gui.NoiseView$1	Data: 3005
MemberClass: com.volmit.iris.gui.NoiseView$2	Data: 3003
MemberClass: com.volmit.iris.gui.NoiseView$3	Data: 3004
MemberClass: com.volmit.iris.gui.NoiseView$HandScrollListener	Data: 3002
MemberClass: com.volmit.iris.noise.BaseNoiseGenerator	Data: 3990
MemberClass: com.volmit.iris.noise.BasePerlinNoiseGenerator	Data: 4608 D
MemberClass: com.volmit.iris.noise.CNG	Data: 2382 n
MemberClass: com.volmit.iris.noise.CNGFactory	Data: 3110
MemberClass: com.volmit.iris.noise.CellGenerator	Data: 3485
MemberClass: com.volmit.iris.noise.CellHeightNoise	Data: 3661
MemberClass: com.volmit.iris.noise.CellularNoise	Data: 3496
MemberClass: com.volmit.iris.noise.CubicNoise	Data: 3162
MemberClass: com.volmit.iris.noise.FastNoise	Data: 3074
MemberClass: com.volmit.iris.noise.FastNoise$1	Data: 3209
MemberClass: com.volmit.iris.noise.FastNoise$CellularDistanceFunction	Data: 5579
MemberClass: com.volmit.iris.noise.FastNoise$CellularReturnType	Data: 4988
MemberClass: com.volmit.iris.noise.FastNoise$Float2	Data: 3208
MemberClass: com.volmit.iris.noise.FastNoise$Float3	Data: 3207
MemberClass: com.volmit.iris.noise.FastNoise$FractalType	Data: 4229
MemberClass: com.volmit.iris.noise.FastNoise$Interp	Data: 3736
MemberClass: com.volmit.iris.noise.FastNoise$NoiseType	Data: 4038
MemberClass: com.volmit.iris.noise.FlatNoise	Data: 3067
MemberClass: com.volmit.iris.noise.FractalBillowPerlinNoise	Data: 4612
MemberClass: com.volmit.iris.noise.FractalBillowSimplexNoise	Data: 4732
MemberClass: com.volmit.iris.noise.FractalCubicNoise	Data: 3863
MemberClass: com.volmit.iris.noise.FractalFBMSimplexNoise	Data: 4328
MemberClass: com.volmit.iris.noise.FractalRigidMultiSimplexNoise	Data: 5133
MemberClass: com.volmit.iris.noise.GlobNoise	Data: 3064
MemberClass: com.volmit.iris.noise.NoiseFactory	Data: 3404
MemberClass: com.volmit.iris.noise.NoiseGenerator	Data: 3611
MemberClass: com.volmit.iris.noise.NoiseType	Data: 3094
MemberClass: com.volmit.iris.noise.OctaveNoise	Data: 3286
MemberClass: com.volmit.iris.noise.PerlinNoise	Data: 3294
MemberClass: com.volmit.iris.noise.PolygonGenerator	Data: 3845
MemberClass: com.volmit.iris.noise.PolygonGenerator$EnumPolygonGenerator	Data: 5965
MemberClass: com.volmit.iris.noise.RarityCellGenerator	Data: 4120
MemberClass: com.volmit.iris.noise.SimplexNoise	Data: 3414
MemberClass: com.volmit.iris.noise.VascularNoise	Data: 3509
MemberClass: com.volmit.iris.noise.WhiteNoise	Data: 3189
MemberClass: com.volmit.iris.object.DecorationPart	Data: 3695
MemberClass: com.volmit.iris.object.Envelope	Data: 3086
MemberClass: com.volmit.iris.object.InferredType	Data: 3489
MemberClass: com.volmit.iris.object.InterpolationMethod	Data: 4249
MemberClass: com.volmit.iris.object.InventorySlotType	Data: 4066
MemberClass: com.volmit.iris.object.IrisAttributeModifier	Data: 4426
MemberClass: com.volmit.iris.object.IrisAxisRotationClamp	Data: 4409
MemberClass: com.volmit.iris.object.IrisBiome	Data: 3155 i
MemberClass: com.volmit.iris.object.IrisBiomeDecorator	Data: 4086
MemberClass: com.volmit.iris.object.IrisBiomeGeneratorLink	Data: 4488
MemberClass: com.volmit.iris.object.IrisBiomeMutation	Data: 4004
MemberClass: com.volmit.iris.object.IrisBiomePaletteLayer	Data: 4383
MemberClass: com.volmit.iris.object.IrisCaveLayer	Data: 3555
MemberClass: com.volmit.iris.object.IrisCompatabilityFilter	Data: 4639
MemberClass: com.volmit.iris.object.IrisDepositGenerator	Data: 4326
MemberClass: com.volmit.iris.object.IrisDimension	Data: 3597 K
MemberClass: com.volmit.iris.object.IrisDimension$1	Data: 3730
MemberClass: com.volmit.iris.object.IrisEffect	Data: 3252
MemberClass: com.volmit.iris.object.IrisEnchantment	Data: 3804
MemberClass: com.volmit.iris.object.IrisGenerator	Data: 3598
MemberClass: com.volmit.iris.object.IrisGeneratorStyle	Data: 4127
MemberClass: com.volmit.iris.object.IrisLoot	Data: 3077
MemberClass: com.volmit.iris.object.IrisLootReference	Data: 3988
MemberClass: com.volmit.iris.object.IrisLootTable	Data: 3565
MemberClass: com.volmit.iris.object.IrisNoiseGenerator	Data: 4108
MemberClass: com.volmit.iris.object.IrisObject	Data: 3262
MemberClass: com.volmit.iris.object.IrisObjectLimit	Data: 3773
MemberClass: com.volmit.iris.object.IrisObjectPlacement	Data: 4183
MemberClass: com.volmit.iris.object.IrisObjectReplace	Data: 3962
MemberClass: com.volmit.iris.object.IrisObjectRotation	Data: 4110
MemberClass: com.volmit.iris.object.IrisObjectTranslate	Data: 4204
MemberClass: com.volmit.iris.object.IrisPostProcessor	Data: 4045
MemberClass: com.volmit.iris.object.IrisRareObject	Data: 3656
MemberClass: com.volmit.iris.object.IrisRegion	Data: 3275
MemberClass: com.volmit.iris.object.IrisRegion$1	Data: 3408
MemberClass: com.volmit.iris.object.IrisRegionRidge	Data: 3766
MemberClass: com.volmit.iris.object.IrisRegionSpot	Data: 3697
MemberClass: com.volmit.iris.object.IrisRegistrant	Data: 3722
MemberClass: com.volmit.iris.object.IrisShapedGeneratorStyle	Data: 4724
MemberClass: com.volmit.iris.object.IrisStructure	Data: 3640
MemberClass: com.volmit.iris.object.IrisStructurePlacement	Data: 4561
MemberClass: com.volmit.iris.object.IrisStructureTile	Data: 4038
MemberClass: com.volmit.iris.object.LootMode	Data: 3059
MemberClass: com.volmit.iris.object.NoiseStyle	Data: 3295
MemberClass: com.volmit.iris.object.ObjectPlaceMode	Data: 3729
MemberClass: com.volmit.iris.object.StructureTileCondition	Data: 4566
MemberClass: com.volmit.iris.object.StructureTileFace	Data: 3998
MemberClass: com.volmit.iris.object.StructureTileFace$1	Data: 4131
MemberClass: com.volmit.iris.object.TileResult	Data: 3293
MemberClass: com.volmit.iris.util.A	Data: 2137
MemberClass: com.volmit.iris.util.AR	Data: 2219
MemberClass: com.volmit.iris.util.ArrayType	Data: 3001
MemberClass: com.volmit.iris.util.Average	Data: 2771
MemberClass: com.volmit.iris.util.Axis	Data: 2477
MemberClass: com.volmit.iris.util.B	Data: 2138
MemberClass: com.volmit.iris.util.BiomeDominance	Data: 3474
MemberClass: com.volmit.iris.util.BiomeMap	Data: 2850
MemberClass: com.volmit.iris.util.BiomeResult	Data: 3203
MemberClass: com.volmit.iris.util.BiomeStorage	Data: 3289
MemberClass: com.volmit.iris.util.BlockPosition	Data: 3416
MemberClass: com.volmit.iris.util.Board	Data: 2560
MemberClass: com.volmit.iris.util.Board$1	Data: 2693
MemberClass: com.volmit.iris.util.BoardEntry	Data: 3090
MemberClass: com.volmit.iris.util.BoardManager	Data: 3259
MemberClass: com.volmit.iris.util.BoardProvider	Data: 3403
MemberClass: com.volmit.iris.util.BoardSettings	Data: 3409
MemberClass: com.volmit.iris.util.BoardSettings$BoardSettingsBuilder	Data: 5493
MemberClass: com.volmit.iris.util.BoardUpdateTask	Data: 3574
MemberClass: com.volmit.iris.util.BorderCheck	Data: 3156
MemberClass: com.volmit.iris.util.Borders	Data: 2793
MemberClass: com.volmit.iris.util.ByteArrayTag	Data: 3271
MemberClass: com.volmit.iris.util.ByteTag	Data: 2760
MemberClass: com.volmit.iris.util.CDou	Data: 2435
MemberClass: com.volmit.iris.util.Callback	Data: 2853
MemberClass: com.volmit.iris.util.CallbackCV	Data: 3006
MemberClass: com.volmit.iris.util.CancellableTask	Data: 3569
MemberClass: com.volmit.iris.util.CaveResult	Data: 3094
MemberClass: com.volmit.iris.util.ChronoLatch	Data: 3181
MemberClass: com.volmit.iris.util.ChunkPosition	Data: 3430
MemberClass: com.volmit.iris.util.Chunker	Data: 2792
MemberClass: com.volmit.iris.util.Command	Data: 2775
MemberClass: com.volmit.iris.util.CompoundTag	Data: 3193
MemberClass: com.volmit.iris.util.Consumer2	Data: 2966
MemberClass: com.volmit.iris.util.Consumer3	Data: 2967
MemberClass: com.volmit.iris.util.Contained	Data: 2989
MemberClass: com.volmit.iris.util.Control	Data: 2809
MemberClass: com.volmit.iris.util.Controller	Data: 3132
MemberClass: com.volmit.iris.util.Cuboid	Data: 2670
MemberClass: com.volmit.iris.util.Cuboid$1	Data: 2803
MemberClass: com.volmit.iris.util.Cuboid$CuboidDirection	Data: 4233
MemberClass: com.volmit.iris.util.Cuboid$CuboidIterator	Data: 4146
MemberClass: com.volmit.iris.util.CuboidException	Data: 3613
MemberClass: com.volmit.iris.util.CustomOutputStream	Data: 3984
MemberClass: com.volmit.iris.util.DOP	Data: 2299
MemberClass: com.volmit.iris.util.DataPalette	Data: 3169
MemberClass: com.volmit.iris.util.Denv	Data: 2469
MemberClass: com.volmit.iris.util.DependsOn	Data: 2968
MemberClass: com.volmit.iris.util.Desc	Data: 2455
MemberClass: com.volmit.iris.util.Dimension	Data: 3006
MemberClass: com.volmit.iris.util.DimensionFace	Data: 3373
MemberClass: com.volmit.iris.util.Direction	Data: 3001
MemberClass: com.volmit.iris.util.Direction$1	Data: 3135
MemberClass: com.volmit.iris.util.Direction$10	Data: 3136
MemberClass: com.volmit.iris.util.Direction$11	Data: 3134
MemberClass: com.volmit.iris.util.Direction$2	Data: 3137
MemberClass: com.volmit.iris.util.Direction$3	Data: 3138
MemberClass: com.volmit.iris.util.Direction$4	Data: 3139
MemberClass: com.volmit.iris.util.Direction$5	Data: 3140
MemberClass: com.volmit.iris.util.Direction$6	Data: 3141
MemberClass: com.volmit.iris.util.Direction$7	Data: 3142
MemberClass: com.volmit.iris.util.Direction$8	Data: 3143
MemberClass: com.volmit.iris.util.Direction$9	Data: 3144
MemberClass: com.volmit.iris.util.DontObfuscate	Data: 3401
MemberClass: com.volmit.iris.util.DoubleArrayUtils	Data: 3715
MemberClass: com.volmit.iris.util.DoubleTag	Data: 2959
MemberClass: com.volmit.iris.util.Element	Data: 2786
MemberClass: com.volmit.iris.util.ElementEvent	Data: 3300
MemberClass: com.volmit.iris.util.EndTag	Data: 2635
MemberClass: com.volmit.iris.util.FastParticle	Data: 3290
MemberClass: com.volmit.iris.util.FastReflection	Data: 3505
MemberClass: com.volmit.iris.util.FileWatcher	Data: 3174
MemberClass: com.volmit.iris.util.FinalInteger	Data: 3280
MemberClass: com.volmit.iris.util.FloatTag	Data: 2858
MemberClass: com.volmit.iris.util.FolderWatcher	Data: 3394
MemberClass: com.volmit.iris.util.Form	Data: 2476
MemberClass: com.volmit.iris.util.Function2	Data: 2960
MemberClass: com.volmit.iris.util.Function3	Data: 2961
MemberClass: com.volmit.iris.util.Function4	Data: 2962
MemberClass: com.volmit.iris.util.GBiset	Data: 2646
MemberClass: com.volmit.iris.util.GListAdapter	Data: 3260
MemberClass: com.volmit.iris.util.GenLayer	Data: 2863
MemberClass: com.volmit.iris.util.GroupedExecutor	Data: 3645
MemberClass: com.volmit.iris.util.GroupedExecutor$1	Data: 3778
MemberClass: com.volmit.iris.util.HTTP	Data: 2392
MemberClass: com.volmit.iris.util.HTTPTokener	Data: 3120
MemberClass: com.volmit.iris.util.HeightMap	Data: 2959
MemberClass: com.volmit.iris.util.ICommand	Data: 2848
MemberClass: com.volmit.iris.util.IController	Data: 3205
MemberClass: com.volmit.iris.util.ING	Data: 2294
MemberClass: com.volmit.iris.util.IO	Data: 2224
MemberClass: com.volmit.iris.util.IObjectPlacer	Data: 3343
MemberClass: com.volmit.iris.util.IPostBlockAccess	Data: 3652
MemberClass: com.volmit.iris.util.IRare	Data: 2539
MemberClass: com.volmit.iris.util.Instance	Data: 2893
MemberClass: com.volmit.iris.util.IntArrayTag	Data: 3166
MemberClass: com.volmit.iris.util.IntTag	Data: 2655
MemberClass: com.volmit.iris.util.InterpolationType	Data: 3874
MemberClass: com.volmit.iris.util.InvertedBiomeGrid	Data: 3787
MemberClass: com.volmit.iris.util.IrisInterpolation	Data: 3863 Ar
MemberClass: com.volmit.iris.util.IrisLock	Data: 2872
MemberClass: com.volmit.iris.util.IrisPostBlockFilter	Data: 4006
MemberClass: com.volmit.iris.util.IrisStructureResult	Data: 4095
MemberClass: com.volmit.iris.util.J	Data: 2146
MemberClass: com.volmit.iris.util.J$1	Data: 2280
MemberClass: com.volmit.iris.util.J$2	Data: 2279
MemberClass: com.volmit.iris.util.J$3	Data: 2281
MemberClass: com.volmit.iris.util.JSONArray	Data: 2897
MemberClass: com.volmit.iris.util.JSONException	Data: 3329
MemberClass: com.volmit.iris.util.JSONML	Data: 2539
MemberClass: com.volmit.iris.util.JSONObject	Data: 2985
MemberClass: com.volmit.iris.util.JSONObject$1	Data: 3119
MemberClass: com.volmit.iris.util.JSONObject$Null	Data: 3118
MemberClass: com.volmit.iris.util.JSONString	Data: 3017
MemberClass: com.volmit.iris.util.JSONStringer	Data: 3232
MemberClass: com.volmit.iris.util.JSONTokener	Data: 3114
MemberClass: com.volmit.iris.util.JSONWriter	Data: 3023
MemberClass: com.volmit.iris.util.JarScanner	Data: 3071
MemberClass: com.volmit.iris.util.KList	Data: 2559
MemberClass: com.volmit.iris.util.KMap	Data: 2433
MemberClass: com.volmit.iris.util.KMap$1	Data: 2567
MemberClass: com.volmit.iris.util.KMap$2	Data: 2566
MemberClass: com.volmit.iris.util.KMap$3	Data: 2568
MemberClass: com.volmit.iris.util.KMap$4	Data: 2569
MemberClass: com.volmit.iris.util.KSet	Data: 2447
MemberClass: com.volmit.iris.util.KeyPair	Data: 2765
MemberClass: com.volmit.iris.util.ListTag	Data: 2768
MemberClass: com.volmit.iris.util.LongTag	Data: 2756
MemberClass: com.volmit.iris.util.Looper	Data: 2697
MemberClass: com.volmit.iris.util.M	Data: 2149
MemberClass: com.volmit.iris.util.MathHelper	Data: 3074
MemberClass: com.volmit.iris.util.MaxNumber	Data: 2983
MemberClass: com.volmit.iris.util.MinNumber	Data: 2981
MemberClass: com.volmit.iris.util.MortarCommand	Data: 3404
MemberClass: com.volmit.iris.util.MortarPermission	Data: 3766
MemberClass: com.volmit.iris.util.MortarPlugin	Data: 3324
MemberClass: com.volmit.iris.util.MortarSender	Data: 3310
MemberClass: com.volmit.iris.util.NBTConstants	Data: 3257
MemberClass: com.volmit.iris.util.NBTInputStream	Data: 3448
MemberClass: com.volmit.iris.util.NBTOutputStream	Data: 3577
MemberClass: com.volmit.iris.util.NBTUtils	Data: 2829
MemberClass: com.volmit.iris.util.NMSVersion	Data: 3052
MemberClass: com.volmit.iris.util.NastyFunction	Data: 3437
MemberClass: com.volmit.iris.util.NastyFuture	Data: 3234
MemberClass: com.volmit.iris.util.NastyRunnable	Data: 3422
MemberClass: com.volmit.iris.util.NibbleArray	Data: 3171
MemberClass: com.volmit.iris.util.NoiseInjector	Data: 3412
MemberClass: com.volmit.iris.util.NoiseProvider	Data: 3425
MemberClass: com.volmit.iris.util.O	Data: 2151
MemberClass: com.volmit.iris.util.ObjectResourceLoader	Data: 4110
MemberClass: com.volmit.iris.util.Observable	Data: 3101
MemberClass: com.volmit.iris.util.Observer	Data: 2912
MemberClass: com.volmit.iris.util.ParticleSender	Data: 3501
MemberClass: com.volmit.iris.util.ParticleSender$ParticleSender1_13	Data: 5210
MemberClass: com.volmit.iris.util.ParticleSender$ParticleSenderImpl	Data: 5368
MemberClass: com.volmit.iris.util.ParticleSenderLegacy	Data: 2169
MemberClass: com.volmit.iris.util.ParticleType	Data: 3310
MemberClass: com.volmit.iris.util.ParticleType$1	Data: 3443
MemberClass: com.volmit.iris.util.Permission	Data: 3137
MemberClass: com.volmit.iris.util.PhasicBiomeStorage	Data: 3889
MemberClass: com.volmit.iris.util.PrecisionStopwatch	Data: 3969
MemberClass: com.volmit.iris.util.PreemptiveChunk	Data: 3634
MemberClass: com.volmit.iris.util.PregenJob	Data: 2964
MemberClass: com.volmit.iris.util.Queue	Data: 2589
MemberClass: com.volmit.iris.util.QueueExecutor	Data: 3436
MemberClass: com.volmit.iris.util.RNG	Data: 2303
MemberClass: com.volmit.iris.util.RegistryListBiome	Data: 3833
MemberClass: com.volmit.iris.util.RegistryListDimension	Data: 4275
MemberClass: com.volmit.iris.util.RegistryListGenerator	Data: 4276
MemberClass: com.volmit.iris.util.RegistryListLoot	Data: 3755
MemberClass: com.volmit.iris.util.RegistryListObject	Data: 3940
MemberClass: com.volmit.iris.util.RegistryListRegion	Data: 3953
MemberClass: com.volmit.iris.util.RegistryListStructure	Data: 4318
MemberClass: com.volmit.iris.util.Required	Data: 2905
MemberClass: com.volmit.iris.util.ResourceLoader	Data: 3511
MemberClass: com.volmit.iris.util.RollingSequence	Data: 3624
MemberClass: com.volmit.iris.util.RouterCommand	Data: 3416
MemberClass: com.volmit.iris.util.S	Data: 2155
MemberClass: com.volmit.iris.util.SR	Data: 2237
MemberClass: com.volmit.iris.util.ScoreDirection	Data: 3509
MemberClass: com.volmit.iris.util.ShortTag	Data: 2884
MemberClass: com.volmit.iris.util.Shrinkwrap	Data: 3137
MemberClass: com.volmit.iris.util.ShurikenQueue	Data: 3430
MemberClass: com.volmit.iris.util.StringTag	Data: 2987
MemberClass: com.volmit.iris.util.StructureTemplate	Data: 3877
MemberClass: com.volmit.iris.util.Switch	Data: 2698
MemberClass: com.volmit.iris.util.Tag	Data: 2356
MemberClass: com.volmit.iris.util.TaskExecutor	Data: 3322
MemberClass: com.volmit.iris.util.TaskExecutor$1	Data: 3455
MemberClass: com.volmit.iris.util.TaskExecutor$AssignedTask	Data: 4575
MemberClass: com.volmit.iris.util.TaskExecutor$TaskGroup	Data: 4286
MemberClass: com.volmit.iris.util.TaskExecutor$TaskResult	Data: 4400
MemberClass: com.volmit.iris.util.TaskExecutor$TaskState	Data: 4274
MemberClass: com.volmit.iris.util.ThreadMonitor	Data: 3416
MemberClass: com.volmit.iris.util.V	Data: 2158
MemberClass: com.volmit.iris.util.VectorMath	Data: 3093
MemberClass: com.volmit.iris.util.VectorMath$1	Data: 3226
MemberClass: com.volmit.iris.util.VectorMath$2	Data: 3227
MemberClass: com.volmit.iris.util.Violator	Data: 2920
MemberClass: com.volmit.iris.util.VirtualCommand	Data: 3518
MemberClass: com.volmit.iris.util.VoidOutputStream	Data: 3751
MemberClass: com.volmit.iris.util.WeightMap	Data: 2974
MemberClass: com.volmit.iris.util.Wrapper	Data: 2809
MemberClass: com.volmit.iris.util.Writable	Data: 2898
MemberClass: com.volmit.iris.util.XML	Data: 2313
MemberClass: com.volmit.iris.util.XMLTokener	Data: 3041
MemberClass: com.volmit.iris.util.inventory.C	Data: 3193 h
MemberClass: com.volmit.iris.util.inventory.C$1	Data: 3326
MemberClass: com.volmit.iris.util.inventory.C$10	Data: 3327
MemberClass: com.volmit.iris.util.inventory.C$11	Data: 3328
MemberClass: com.volmit.iris.util.inventory.C$12	Data: 3329
MemberClass: com.volmit.iris.util.inventory.C$13	Data: 3330
MemberClass: com.volmit.iris.util.inventory.C$14	Data: 3331
MemberClass: com.volmit.iris.util.inventory.C$15	Data: 3332
MemberClass: com.volmit.iris.util.inventory.C$16	Data: 3333
MemberClass: com.volmit.iris.util.inventory.C$17	Data: 3334
MemberClass: com.volmit.iris.util.inventory.C$18	Data: 3335
MemberClass: com.volmit.iris.util.inventory.C$19	Data: 3336
MemberClass: com.volmit.iris.util.inventory.C$2	Data: 3337
MemberClass: com.volmit.iris.util.inventory.C$20	Data: 3338
MemberClass: com.volmit.iris.util.inventory.C$21	Data: 3339
MemberClass: com.volmit.iris.util.inventory.C$22	Data: 3340
MemberClass: com.volmit.iris.util.inventory.C$23	Data: 3348
MemberClass: com.volmit.iris.util.inventory.C$3	Data: 3341
MemberClass: com.volmit.iris.util.inventory.C$4	Data: 3342
MemberClass: com.volmit.iris.util.inventory.C$5	Data: 3343
MemberClass: com.volmit.iris.util.inventory.C$6	Data: 3344
MemberClass: com.volmit.iris.util.inventory.C$7	Data: 3345
MemberClass: com.volmit.iris.util.inventory.C$8	Data: 3346
MemberClass: com.volmit.iris.util.inventory.C$9	Data: 3347
MemberClass: com.volmit.iris.util.inventory.Callback	Data: 3907
MemberClass: com.volmit.iris.util.inventory.Element	Data: 3840
MemberClass: com.volmit.iris.util.inventory.ElementEvent	Data: 4354
MemberClass: com.volmit.iris.util.inventory.MaterialBlock	Data: 4432
MemberClass: com.volmit.iris.util.inventory.UIElement	Data: 3998
MemberClass: com.volmit.iris.util.inventory.UIElement$1	Data: 4131
MemberClass: com.volmit.iris.util.inventory.UIStaticDecorator	Data: 4831
MemberClass: com.volmit.iris.util.inventory.UIVoidDecorator	Data: 4617
MemberClass: com.volmit.iris.util.inventory.UIWindow	Data: 3916 O
MemberClass: com.volmit.iris.util.inventory.UIWindow$1	Data: 4049
MemberClass: com.volmit.iris.util.inventory.Window	Data: 3758
MemberClass: com.volmit.iris.util.inventory.WindowDecorator	Data: 4689
MemberClass: com.volmit.iris.util.inventory.WindowResolution	Data: 4834
MemberClass: com.volmit.iris.util.vec.Point3d	Data: 3112
MemberClass: com.volmit.iris.util.vec.Point3f	Data: 3114
MemberClass: com.volmit.iris.util.vec.Point4d	Data: 3113
MemberClass: com.volmit.iris.util.vec.Point4f	Data: 3115
MemberClass: com.volmit.iris.util.vec.Tuple2d	Data: 3111
MemberClass: com.volmit.iris.util.vec.Tuple2f	Data: 3113
MemberClass: com.volmit.iris.util.vec.Tuple3d	Data: 3112
MemberClass: com.volmit.iris.util.vec.Tuple3f	Data: 3114
MemberClass: com.volmit.iris.util.vec.Tuple4d	Data: 3113
MemberClass: com.volmit.iris.util.vec.Tuple4f	Data: 3115 Ds
MemberClass: com.volmit.iris.util.vec.VecMathUtil	Data: 2536
MemberClass: com.volmit.iris.util.vec.Vector2d	Data: 3216
MemberClass: com.volmit.iris.util.vec.Vector2f	Data: 3218
MemberClass: com.volmit.iris.util.vec.Vector3d	Data: 3217
MemberClass: com.volmit.iris.util.vec.Vector3f	Data: 3219
MemberClass: org.slf4j.LoggerFactory	Data: 2257
MemberClass: org.slf4j.MDC	Data: 1133 Kv
MemberClass: org.slf4j.MarkerFactory	Data: 2259
MemberClass: org.slf4j.helpers.BasicMDCAdapter	Data: 3123 U
MemberClass: org.slf4j.helpers.BasicMarker	Data: 2816
MemberClass: org.slf4j.helpers.BasicMarkerFactory	Data: 3544
MemberClass: org.slf4j.helpers.FormattingTuple	Data: 3297
MemberClass: org.slf4j.helpers.MarkerIgnoringBase	Data: 3542
MemberClass: org.slf4j.helpers.MessageFormatter	Data: 3381
MemberClass: org.slf4j.helpers.NOPLogger	Data: 2569
MemberClass: org.slf4j.helpers.NOPLoggerFactory	Data: 3297
MemberClass: org.slf4j.helpers.NOPMDCAdapter	Data: 2878
MemberClass: org.slf4j.helpers.NamedLoggerBase	Data: 1821
MemberClass: org.slf4j.helpers.SubstituteLoggerFactory	Data: 4144 f
MemberClass: org.slf4j.helpers.Util	Data: 2138
MemberClass: org.zeroturnaround.zip.ByteSource	Data: 3411
MemberClass: org.zeroturnaround.zip.CloseShieldInputStream	Data: 2484
MemberClass: org.zeroturnaround.zip.FileSource	Data: 3391
MemberClass: org.zeroturnaround.zip.IdentityNameMapper	Data: 2479
MemberClass: org.zeroturnaround.zip.Java6FileApiPermissionsStrategy	Data: 2488
MemberClass: org.zeroturnaround.zip.Java7Nio2ApiPermissionsStrategy	Data: 2482 P
MemberClass: org.zeroturnaround.zip.MaliciousZipException	Data: 4566
MemberClass: org.zeroturnaround.zip.ZTFilePermissions	Data: 2485
MemberClass: org.zeroturnaround.zip.ZTFilePermissionsUtil	Data: 2486
MemberClass: org.zeroturnaround.zip.ZTFilePermissionsUtil$1	Data: 2619
MemberClass: org.zeroturnaround.zip.ZTFileUtil	Data: 3354
MemberClass: org.zeroturnaround.zip.ZTFileUtil$1	Data: 3487
MemberClass: org.zeroturnaround.zip.ZTZipReflectionUtil	Data: 2487
MemberClass: org.zeroturnaround.zip.ZipBreakException	Data: 4117
MemberClass: org.zeroturnaround.zip.ZipEntryOrInfoAdapter	Data: 2480
MemberClass: org.zeroturnaround.zip.ZipEntryUtil	Data: 2481
MemberClass: org.zeroturnaround.zip.ZipException	Data: 3632
MemberClass: org.zeroturnaround.zip.ZipExceptionUtil	Data: 2489
MemberClass: org.zeroturnaround.zip.ZipFileUtil	Data: 2483
MemberClass: org.zeroturnaround.zip.ZipUtil	Data: 3103 i
MemberClass: org.zeroturnaround.zip.ZipUtil$1	Data: 3284
MemberClass: org.zeroturnaround.zip.ZipUtil$10	Data: 3240
MemberClass: org.zeroturnaround.zip.ZipUtil$11	Data: 3358
MemberClass: org.zeroturnaround.zip.ZipUtil$12	Data: 3243
MemberClass: org.zeroturnaround.zip.ZipUtil$13	Data: 3245
MemberClass: org.zeroturnaround.zip.ZipUtil$14	Data: 3246
MemberClass: org.zeroturnaround.zip.ZipUtil$15	Data: 3247
MemberClass: org.zeroturnaround.zip.ZipUtil$16	Data: 3248
MemberClass: org.zeroturnaround.zip.ZipUtil$17	Data: 3343
MemberClass: org.zeroturnaround.zip.ZipUtil$18	Data: 3249
MemberClass: org.zeroturnaround.zip.ZipUtil$19	Data: 3236
MemberClass: org.zeroturnaround.zip.ZipUtil$2	Data: 3241
MemberClass: org.zeroturnaround.zip.ZipUtil$20	Data: 3250
MemberClass: org.zeroturnaround.zip.ZipUtil$21	Data: 3251
MemberClass: org.zeroturnaround.zip.ZipUtil$22	Data: 3252
MemberClass: org.zeroturnaround.zip.ZipUtil$23	Data: 3253
MemberClass: org.zeroturnaround.zip.ZipUtil$3	Data: 3254
MemberClass: org.zeroturnaround.zip.ZipUtil$4	Data: 3255
MemberClass: org.zeroturnaround.zip.ZipUtil$5	Data: 3256
MemberClass: org.zeroturnaround.zip.ZipUtil$6	Data: 3257
MemberClass: org.zeroturnaround.zip.ZipUtil$7	Data: 3258
MemberClass: org.zeroturnaround.zip.ZipUtil$8	Data: 3259
MemberClass: org.zeroturnaround.zip.ZipUtil$9	Data: 3260
MemberClass: org.zeroturnaround.zip.ZipUtil$BackslashUnpacker	Data: 4872
MemberClass: org.zeroturnaround.zip.ZipUtil$ByteArrayUnpacker	Data: 3238
MemberClass: org.zeroturnaround.zip.ZipUtil$FileUnpacker	Data: 3242
MemberClass: org.zeroturnaround.zip.ZipUtil$InPlaceAction	Data: 3244
MemberClass: org.zeroturnaround.zip.ZipUtil$RepackZipEntryCallback	Data: 3237
MemberClass: org.zeroturnaround.zip.ZipUtil$SingleZipEntryCallback	Data: 3290
MemberClass: org.zeroturnaround.zip.ZipUtil$TransformerZipEntryCallback	Data: 3239
MemberClass: org.zeroturnaround.zip.ZipUtil$Unpacker	Data: 3261
MemberClass: org.zeroturnaround.zip.ZipUtil$Unwrapper	Data: 3355
MemberClass: org.zeroturnaround.zip.Zips	Data: 2804
MemberClass: org.zeroturnaround.zip.Zips$1	Data: 2938
MemberClass: org.zeroturnaround.zip.Zips$CopyingCallback	Data: 2939
MemberClass: org.zeroturnaround.zip.Zips$UnpackingCallback	Data: 2937
MemberClass: org.zeroturnaround.zip.Zips$UnpackingCallback$1	Data: 3071
MemberClass: org.zeroturnaround.zip.commons.FileExistsException	Data: 5161
MemberClass: org.zeroturnaround.zip.commons.FileUtils	Data: 4107
MemberClass: org.zeroturnaround.zip.commons.FileUtilsV2_2	Data: 4388 Kx
MemberClass: org.zeroturnaround.zip.commons.FilenameUtils	Data: 4524
MemberClass: org.zeroturnaround.zip.commons.IOUtils	Data: 3875
MemberClass: org.zeroturnaround.zip.commons.StringBuilderWriter	Data: 5173
MemberClass: org.zeroturnaround.zip.extra.AsiExtraField	Data: 4264 Or
MemberClass: org.zeroturnaround.zip.extra.ExtraFieldUtils	Data: 4508
MemberClass: org.zeroturnaround.zip.extra.UnrecognizedExtraField	Data: 5240
MemberClass: org.zeroturnaround.zip.extra.ZipConstants	Data: 3076
MemberClass: org.zeroturnaround.zip.extra.ZipLong	Data: 3686
MemberClass: org.zeroturnaround.zip.extra.ZipShort	Data: 3814
MemberClass: org.zeroturnaround.zip.timestamps.Java8TimestampStrategy	Data: 5768 L
MemberClass: org.zeroturnaround.zip.timestamps.PreJava8TimestampStrategy	Data: 6063 s
MemberClass: org.zeroturnaround.zip.timestamps.TimestampStrategyFactory	Data: 6054
MemberClass: org.zeroturnaround.zip.transform.ByteArrayZipEntryTransformer	Data: 6344
MemberClass: org.zeroturnaround.zip.transform.FileZipEntryTransformer	Data: 5813 C
MemberClass: org.zeroturnaround.zip.transform.StreamZipEntryTransformer	Data: 6049
MemberClass: org.zeroturnaround.zip.transform.StringZipEntryTransformer	Data: 6060 i
MemberClass: org.zeroturnaround.zip.transform.ZipEntrySourceZipEntryTransformer	Data: 6891
MemberClass: org.zeroturnaround.zip.transform.ZipEntryTransformerEntry	Data: 5959
